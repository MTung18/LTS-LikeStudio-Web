@import '../../variables';

// Splitters are part of the flexbox layout and sit between the child widgets
.b-grid-splitter {
    z-index    : $grid-splitter-zindex;
    position   : relative;
    background : $grid-region-resize-splitter-narrow-color;

    // When not a draggable splitter, it's just a narrow line.
    flex       : 0 0 $grid-splitter-width;

    .b-grid-splitter-inner {
        // When not a draggable splitter, it's just a narrow line with no internal structure.
        display        : none;
    }
}

.b-grid-splitter-buttons {
    display    : none;
    position   : absolute;
    margin-top : -1em;
    height     : 2em;

    .b-icon {
        position        : absolute;
        top             : 0;
        width           : 0.55em;
        background      : $grid-region-resize-splitter-color;
        display         : flex;
        justify-content : center;

        &.b-icon-collapse-gridregion {
            left          : -0.55em;
            border-radius : 1em 0 0 1em;
        }

        &.b-icon-expand-gridregion {
            right         : -0.55em;
            border-radius : 0 1em 1em 0;
        }
    }
}

.b-gridbase.b-rtl .b-grid-splitter-buttons {
    .b-icon-collapse-gridregion {
        left          : auto;
        right         : -0.55em;
        border-radius : 0 1em 1em 0;

        &::before {
            transform : scaleX(-1);
        }
    }

    .b-icon-expand-gridregion {
        right         : auto;
        left          : -0.55em;
        border-radius : 1em 0 0 1em;

        &::before {
            transform : scaleX(-1);
        }
    }
}

.b-grid-splitter-collapsed {
    .b-grid-splitter-buttons {
        display : block;
    }
}


.b-gridbase.b-split {
    .b-grid-splitter:not(.b-disabled) {
        flex       : 0 0 $grid-region-resize-splitter-width;
        background : $grid-region-resize-splitter-color;

        // There's internal structure when it's a draggable splitter
        .b-grid-splitter-inner {
            display : flex;
        }

        &.b-grid-splitter-collapsed {
            cursor : initial;
            flex   : 0 0 $grid-region-resize-splitter-collapsed-width;

            .b-grid-splitter-inner {
                background : $grid-region-resize-splitter-color;
                width      : $grid-region-resize-splitter-collapsed-width;
            }

            &:not(.b-grid-splitter-allow-collapse) .b-icon-collapse-gridregion,
            &.b-grid-splitter-allow-collapse .b-icon-expand-gridregion {
                display : none;
            }
        }

        // Hide right arrow for first splitter in a multi region grid
        &.b-left-only:not(.b-grid-splitter-collapsed) {
            .b-icon.b-icon-expand-gridregion {
                display : none;
            }
        }

        // Hide left arrow for last splitter in a multi region grid
        &.b-right-only:not(.b-grid-splitter-collapsed) {
            .b-icon.b-icon-collapse-gridregion {
                display : none;
            }
        }

        .b-icon {
            cursor    : pointer;
            color     : darken($grid-header-icon-color, 20);
            font-size : 2em;
            padding   : .05em;

            &:hover {
                color : $grid-highlight-color;
            }
        }

        // When hovered or being moved, the inner pops out to cover a larger area.
        // How much it does that by depends on whether the pointer capability is coarse or fine.
        &:hover,
        &.b-moving {
            overflow : visible;

            .b-grid-splitter-inner {
                background : $grid-region-resize-splitter-color;
                left       : calc((#{$grid-region-resize-splitter-width-hover} - #{$grid-region-resize-splitter-width}) / -2);
                width      : #{$grid-region-resize-splitter-width-hover};

            }

            .b-grid-splitter-buttons {
                display : block;
            }
        }

        // When the first splitter is collapsed, and hovered, but not moving
        // Don't move the inner leftwards - it will move it off the left side of the grid.
        &.b-grid-splitter-collapsed:nth-child(2):hover:not(.b-moving) {
            .b-grid-splitter-inner {
                left : 0;
            }
        }

        .b-grid-splitter-inner {
            width          : $grid-region-resize-splitter-width;
            position       : absolute;
            top            : 0;
            left           : 0;
            bottom         : 0;
            flex-direction : column;
            align-items    : center;
        }

        &:not(.b-grid-splitter-collapsed) .b-grid-splitter-inner {
            cursor : col-resize;
        }

        // Make the inner spill out both sides so that it's easier to grab on touch devices
        @media (pointer:coarse) {
            .b-grid-splitter-inner {
                left  : calc((#{$grid-region-resize-splitter-width-touch} - #{$grid-region-resize-splitter-width}) / -2);
                width : $grid-region-resize-splitter-width-touch;
            }
        }
    }
}

// Collapsing means drop to zero width whether in a .b-split grid or not.
.b-grid-header-scroller.b-collapsed,
.b-grid-footer-scroller.b-collapsed,
.b-virtual-scroller.b-collapsed {
    width : 0;
}

// Touch device styling
.b-touch {
    .b-splitter-scroller,
    .b-icon-expand-gridregion,
    .b-icon-collapse-gridregion {
        display : none;
    }

    .b-moving {
        .b-grid-splitter-inner {
            width : $grid-region-resize-splitter-width-touch;
        }

        .b-grid-splitter-buttons,
        .b-icon-expand-gridregion,
        .b-icon-collapse-gridregion {
            display   : flex;
        }

        .b-icon {
            display : block !important;
        }
    }
}

// No hover, or moving behaviour during DragHelper activity
.b-draghelper-active {
    .b-gridbase.b-split {
        .b-grid-splitter {
            cursor    : initial;

            .b-icon {
                display : none !important;
            }

            flex      : 0 0 $grid-region-resize-splitter-width;

            .b-grid-splitter-inner {
                width : $grid-region-resize-splitter-width;
            }

            transform : none !important;
        }
    }
}
