{"version":3,"file":"Slider.js","sources":["../../../../Core/lib/Core/widget/Slider.js"],"sourcesContent":["import Widget from './Widget.js';\nimport Tooltip from './Tooltip.js';\nimport Rectangle from '../helper/util/Rectangle.js';\nimport ObjectHelper from '../helper/ObjectHelper.js';\n\n/**\n * @module Core/widget/Slider\n */\nconst arrowKeys = {\n    ArrowUp    : 1,\n    ArrowDown  : 1,\n    ArrowLeft  : 1,\n    ArrowRight : 1\n};\n\n/**\n * Wraps native &lt;input type=\"range\"&gt;\n *\n * @extends Core/widget/Widget\n *\n * @example\n * let slider = new Slider({\n *   text: 'Choose value'\n * });\n *\n * @classType slider\n * @inlineexample Core/widget/Slider.js\n * @widget\n */\nexport default class Slider extends Widget {\n    //region Config\n\n    static get $name() {\n        return 'Slider';\n    }\n\n    // Factoryable type name\n    static get type() {\n        return 'slider';\n    }\n\n    static get configurable() {\n        return {\n            /**\n             * Get/set text. Appends value if Slider.showValue is true\n             * @member {String} text\n             */\n            /**\n             * Slider label text\n             * @config {String}\n             */\n            text : null,\n\n            /**\n             * Show value in label (appends in () if text is set)\n             * @config {Boolean}\n             * @default\n             */\n            showValue : true,\n\n            /**\n             * Show the slider value in a tooltip\n             * @config {Boolean}\n             * @default\n             */\n            showTooltip : false,\n\n            /**\n             * Get/set min value\n             * @member {Number} min\n             */\n            /**\n             * Minimum value\n             * @config {Number}\n             * @default\n             */\n            min : 0,\n\n            /**\n             * Get/set max value\n             * @member {Number} max\n             */\n            /**\n             * Maximum value\n             * @config {Number}\n             * @default\n             */\n            max : 100,\n\n            /**\n             * Get/set step size\n             * @member {Number} step\n             */\n            /**\n             * Step size\n             * @config {Number}\n             * @default\n             */\n            step : 1,\n\n            /**\n             * Get/set value\n             * @member {Number} value\n             */\n            /**\n             * Initial value\n             * @config {Number}\n             */\n            value : 50,\n\n            /**\n             * Unit to display next to the value, when configured with `showValue : true`\n             * @config {String}\n             * @default\n             */\n            unit : null,\n\n            // The value is set in the Light theme. The Material theme will have different value.\n            thumbSize : 20,\n\n            tooltip : {\n                $config : ['lazy', 'nullify'],\n                value   : {\n                    type     : 'tooltip',\n                    align    : 'b-t',\n                    anchor   : false, // No anchor displayed since thumbSize is different for different themes\n                    axisLock : true\n                }\n            },\n\n            localizableProperties : ['text'],\n\n            /**\n             * By default, the {@link #event-change} event is fired when a change gesture is completed, ie: on\n             * the mouse up gesture of a drag.\n             *\n             * Configure this as `true` to fire the {@link #event-change} event as the value changes *during* a drag.\n             * @prp {Boolean}\n             */\n            triggerChangeOnInput : null,\n\n            defaultBindProperty : 'value'\n        };\n    }\n\n    //endregion\n\n    //region Init\n\n    compose() {\n        const\n            { id, min, max, showValue, step, text, value, unit = '', disabled } = this,\n            inputId = `${id}-input`,\n            hasText = Boolean(text || showValue);\n\n        return {\n            class : {\n                'b-has-label' : hasText,\n                'b-text'      : hasText,\n                'b-disabled'  : disabled\n            },\n\n            children : {\n                input : {\n                    tag       : 'input',\n                    type      : 'range',\n                    id        : inputId,\n                    reference : 'input',\n                    disabled  : disabled,\n\n                    min,\n                    max,\n                    step,\n                    value,\n                    listeners : {\n                        input     : 'onInternalInput',\n                        change    : 'onInternalChange',\n                        mouseover : 'onInternalMouseOver',\n                        mouseout  : 'onInternalMouseOut'\n                    }\n                },\n\n                label : {\n                    tag  : 'label',\n                    for  : inputId,\n                    html : showValue ? (text ? `${text} (${value}${unit})` : value + unit) : text\n                }\n            }\n        };\n    }\n\n    get focusElement() {\n        return this.input;\n    }\n\n    get percentProgress() {\n        return (this.value - this.min) / (this.max - this.min) * 100;\n    }\n\n    //endregion\n\n    //region Events\n\n    /**\n     * Fired while slider thumb is being dragged.\n     * @event input\n     * @param {Core.widget.Slider} source The slider\n     * @param {String} value The value\n     */\n\n    /**\n     * Fired after the slider value changes (on mouse up following slider interaction).\n     * @event change\n     * @param {String} value The value\n     * @param {Boolean} userAction Triggered by user taking an action (`true`) or by setting a value (`false`)\n     * @param {Core.widget.Slider} source The slider\n     */\n\n    /* break from doc comment */\n\n    onInternalKeyDown(e) {\n        // Contain arrow keys to be processed by the <input type=\"range\">, do not allow them to bubble\n        // up to by any owning container.\n        if (!this.readOnly && arrowKeys[e.key]) {\n            e.stopImmediatePropagation();\n        }\n    }\n\n    onInternalChange() {\n        this.updateUI();\n        this.triggerChange(true);\n        this.trigger('action', { value : this.value });\n    }\n\n    onInternalInput() {\n        const me = this;\n\n        if (me.readOnly) {\n            // Undo the change if we are readOnly.\n            // readOnly input attribute will not work for non-text fields: https://github.com/w3c/html/issues/89\n            me.input.value = me.value;\n            return;\n        }\n\n        me.value = parseInt(me.input.value, 10);\n\n        me.trigger('input', { value : me.value });\n        if (me.triggerChangeOnInput) {\n            me.triggerChange(me);\n        }\n    }\n\n    onInternalMouseOver() {\n        const\n            me            = this,\n            thumbPosition = me.rtl ? 100 - me.percentProgress : me.percentProgress;\n\n        me.tooltip?.showBy({\n            target : Rectangle.from(me.input).inflate(me.thumbSize / 2, -me.thumbSize / 2),\n            align  : `b-t${Math.round(thumbPosition)}`\n        });\n    }\n\n    onInternalMouseOut() {\n        this.tooltip?.hide();\n    }\n\n    triggerChange(userAction) {\n        this.triggerFieldChange({\n            value : this.value,\n            valid : true,\n            userAction\n        });\n    }\n\n    //endregion\n\n    //region Config Handling\n\n    // max\n    updateMax(max) {\n        const me = this;\n\n        if (me.input && me._value > max) {\n            me.value = max;\n            me.trigger('input', { value : me.value });\n        }\n    }\n\n    // min\n    updateMin(min) {\n        const me = this;\n\n        if (me.input && me._value < min) {\n            me.value = min;\n            me.trigger('input', { value : me.value });\n        }\n    }\n\n    // tooltip\n    changeTooltip(config, existingTooltip) {\n        if (config) {\n            config.owner = this;\n        }\n\n        return this.showTooltip ? Tooltip.reconfigure(existingTooltip, config, {\n            owner    : this,\n            defaults : {\n                forElement : this.input,\n                html       : String(this.value) + (this.unit ?? '')\n            }\n        }) : null;\n    }\n\n    changeValue(value) {\n        const\n            me            = this,\n            { min, step } = me;\n\n        value = Math.min(Math.max(value, min), me.max);\n\n        // Round the passed value so that it is in sync with our steps.\n        // For example, if our min is 10, and our step is 3, then\n        // passing 12 should get 13. Rounding the value directly to the closest\n        // step would fail this requirement.\n        if (value > min) {\n            return min + ObjectHelper.roundTo(value - min, step);\n        }\n        return ObjectHelper.roundTo(value, step);\n    }\n\n    updateValue(value) {\n        const\n            me = this,\n            { input, _tooltip } = me;\n\n        if (_tooltip) {\n            _tooltip.html = me.value + (me.unit ?? '');\n        }\n\n        if (input && input.value !== String(value)) {\n            input.value = value;\n            me.triggerChange(false);\n        }\n\n        me.updateUI();\n    }\n\n    //endregion\n\n    //region Util\n\n    updateUI() {\n        const me = this;\n\n        // Don't measure the UI unless we need to\n        me._tooltip?.isVisible && me._tooltip?.alignTo({\n            target : Rectangle.from(me.input).inflate(me.thumbSize / 2, -me.thumbSize / 2),\n            align  : `b-t${Math.round(me.percentProgress)}`\n        });\n    }\n\n    //endregion\n}\n\n// Register this widget type with its Factory\nSlider.initClass();\n"],"names":["arrowKeys","ArrowUp","ArrowDown","ArrowLeft","ArrowRight","Slider","Widget","$name","type","configurable","text","showValue","showTooltip","min","max","step","value","unit","thumbSize","tooltip","$config","align","anchor","axisLock","localizableProperties","triggerChangeOnInput","defaultBindProperty","compose","id","disabled","inputId","hasText","Boolean","class","children","input","tag","reference","listeners","change","mouseover","mouseout","label","for","html","focusElement","percentProgress","onInternalKeyDown","e","readOnly","key","stopImmediatePropagation","onInternalChange","updateUI","triggerChange","trigger","onInternalInput","me","parseInt","onInternalMouseOver","_me$tooltip","thumbPosition","rtl","showBy","target","Rectangle","from","inflate","Math","round","onInternalMouseOut","_this$tooltip","hide","userAction","triggerFieldChange","valid","updateMax","_value","updateMin","changeTooltip","config","existingTooltip","_this$unit","owner","Tooltip","reconfigure","defaults","forElement","String","changeValue","ObjectHelper","roundTo","updateValue","_tooltip","_me$unit","_me$_tooltip","_me$_tooltip2","isVisible","alignTo","initClass","_$name"],"mappings":"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"}