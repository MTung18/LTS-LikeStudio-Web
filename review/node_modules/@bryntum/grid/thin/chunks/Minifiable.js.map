{"version":3,"file":"Minifiable.js","sources":["../../../../Core/lib/Core/mixin/Hoverable.js","../../../../Core/lib/Core/util/drag/DragTipProxy.js","../../../../Core/lib/Core/widget/panel/PanelCollapserOverlay.js","../../../../Core/lib/Core/widget/mixin/Minifiable.js"],"sourcesContent":["import Delayable from './Delayable.js';\nimport DomClassList from '../helper/util/DomClassList.js';\nimport EventHelper from '../helper/EventHelper.js';\n\n/**\n * @module Core/mixin/Hoverable\n */\n\nconst\n    EDGES = {\n        e : 'b-hover-edge',\n        t : 'b-hover-top',\n        r : 'b-hover-right',\n        b : 'b-hover-bottom',\n        l : 'b-hover-left'\n    },\n    EDGE_CLASSES = {\n        [EDGES.e] : 1,\n        [EDGES.t] : 1,\n        [EDGES.r] : 1,\n        [EDGES.b] : 1,\n        [EDGES.l] : 1\n    },\n    ZONES = {\n        t  : [EDGES.e, EDGES.t],\n        r  : [EDGES.e, EDGES.r],\n        b  : [EDGES.e, EDGES.b],\n        l  : [EDGES.e, EDGES.l],\n        tr : [EDGES.e, EDGES.t, EDGES.r],\n        bl : [EDGES.e, EDGES.b, EDGES.l],\n        tl : [EDGES.e, EDGES.t, EDGES.l],\n        br : [EDGES.e, EDGES.b, EDGES.r]\n    };\n\n/**\n * This mixin provides mouse hover tracking.\n * ```\n *  class Tracker extends Base.mixin(Hoverable) {\n *      hoverEnter(leaving) {\n *          // this.hoverTarget has been entered from \"leaving\"\n *          // this.hoverTarget will never be null, but leaving may be null\n *      }\n *\n *      hoverLeave(leaving) {\n *          // this.hoverTarget has been entered from \"leaving\"\n *          // this.hoverTarget may be null, but leaving will never be null\n *      }\n *\n *      hoverMove(event) {\n *          // called when a mousemove is made within a hover target\n *          // this.hoverTarget will never be null\n *      }\n *  }\n *\n *  let tracker = new Tracker({\n *      hoverRootElement : document.body,\n *      hoverSelector    : '.hoverable'\n *  });\n * ```\n * @mixin\n * @internal\n */\nexport default Target => class Hoverable extends Target.mixin(Delayable) {\n    static get $name() {\n        return 'Hoverable';\n    }\n\n    //region Configs\n\n    static get configurable() {\n        return {\n            /**\n             * A CSS class to add to the {@link #config-hoverTarget target} element.\n             * @config {String}\n             */\n            hoverCls : null,\n\n            /**\n             * A CSS class to add to the {@link #config-hoverTarget target} element to enable CSS animations. This class\n             * is added after calling {@link #function-hoverEnter}.\n             * @config {String}\n             */\n            hoverAnimationCls : null,\n\n            /**\n             * A CSS class to add to the {@link #config-hoverRootElement root} element.\n             * @config {String}\n             */\n            hoverRootCls : null,\n\n            /**\n             * A CSS class to add to the {@link #config-hoverRootElement root} element when there is an active\n             * {@link #config-hoverTarget target}.\n             * @config {String}\n             */\n            hoverRootActiveCls : null,\n\n            /**\n             * The number of milliseconds to delay notification of changes in the {@link #config-hoverTarget}.\n             * @config {Number}\n             */\n            hoverDelay : null,\n\n            /**\n             * The current element that the cursor is inside as determined by `mouseover` and `mouseout`. Changes in\n             * this config trigger re-evaluation of the {@link #config-hoverSelector} to determine if there is a\n             * {@link #config-hoverTarget}.\n             * @config {HTMLElement}\n             * @private\n             */\n            hoverElement : null,\n\n            /**\n             * An element to ignore. Mouse entry into this element will not trigger a change in either of the\n             * {@link #config-hoverElement} or {@link #config-hoverTarget} values.\n             * @config {HTMLElement}\n             */\n            hoverIgnoreElement : null,\n\n            /**\n             * This property is a string containing one character for each edge that is hoverable. For example, a\n             * value of \"tb\" indicates that the top and bottom edges are hoverable.\n             * @config {String}\n             */\n            hoverEdges : null,\n\n            /**\n             * When {@link #config-hoverEdges} is used, this value determines the size (in pixels) of the edge. When\n             * the cursor is within this number of pixels of an edge listed in `hoverEdges`, the appropriate CSS class\n             * is added to the {@link #config-hoverTarget}:\n             *\n             *  - `b-hover-top`\n             *  - `b-hover-right`\n             *  - `b-hover-bottom`\n             *  - `b-hover-left`\n             *\n             * Depending on the values of `hoverEdges`, it is possible to have at most two of these classes present at\n             * any one time (when the cursor is in a corner).\n             * @config {Number}\n             * @default\n             */\n            hoverEdgeSize : 10,\n\n            /**\n             * The outer element where hover tracking will operate (attach events to it and use as root limit when\n             * looking for ancestors).\n             *\n             * A common choice for this will be `document.body`.\n             * @config {HTMLElement}\n             */\n            hoverRootElement : {\n                $config : 'nullify',\n\n                value : null\n            },\n\n            /**\n             * A selector for the [closest](https://developer.mozilla.org/en-US/docs/Web/API/Element/closest) API to\n             * determine the actual element of interest. This selector is used to process changes to the\n             * {@link #config-hoverElement} to determine the {@link #config-hoverTarget}.\n             * @config {String}\n             */\n            hoverSelector : null,\n\n            /**\n             * The currently active hover target. This will be the same as {@link #config-hoverElement} unless there is\n             * a {@link #config-hoverSelector}.\n             * @config {HTMLElement}\n             */\n            hoverTarget : {\n                $config : 'nullify',\n\n                value : null\n            },\n\n            /**\n             * Set to `true` to include tracking of `mousemove` events for the active {@link #config-hoverTarget}. This\n             * is required for the {@link #function-hoverMove} method to be called.\n             * @config {Boolean}\n             * @default false\n             */\n            hoverTrack : null,\n\n            /**\n             * A string value containing one character per active edge (e.g., \"tr\").\n             * @config {String}\n             * @private\n             */\n            hoverZone : null\n        };\n    }\n\n    static get delayable() {\n        return {\n            setHoverTarget : 0\n        };\n    }\n\n    //endregion\n    //region State Handling\n\n    /**\n     * This method is called when the cursor enters the {@link #config-hoverTarget}. The `hoverTarget` will not be\n     * `null`.\n     * @param {HTMLElement} leaving The element that was previously the `hoverTarget`. This value may be null.\n     */\n    hoverEnter(leaving) {\n        // template\n    }\n\n    /**\n     * This method should return true if the given `element` should be ignored. By default, this is `true` if the\n     * `element` is contained inside the {@link #config-hoverIgnoreElement}.\n     * @param {HTMLElement} element\n     * @returns {Boolean}\n     * @protected\n     */\n    hoverIgnore(element) {\n        return this.hoverIgnoreElement?.contains(element);\n    }\n\n    /**\n     * This method is called when the cursor leaves the {@link #config-hoverTarget}. The `hoverTarget` may be `null`\n     * or refer to the new `hoverTarget`\n     * @param {HTMLElement} leaving The element that was previously the `hoverTarget`. This value will not be null.\n     */\n    hoverLeave(leaving) {\n        // template\n    }\n\n    /**\n     * This method is called when the mouse moves within a {@link #config-hoverTarget}, but only if enabled by the\n     * {@link #config-hoverTrack} config.\n     * @param {Event} event\n     */\n    hoverMove(event) {\n        // template\n    }\n\n    //endregion\n    //region Events\n\n    onHoverMouseMove(event) {\n        const\n            me = this,\n            { hoverEdges, hoverEdgeSize, hoverTarget } = me;\n\n        if (hoverTarget) {\n            if (hoverEdges) {\n                const\n                    { top, left, width, height, right, bottom } = hoverTarget.getBoundingClientRect(),\n                    { clientX, clientY } = event,\n                    centerX = left + width / 2,\n                    centerY = top + height / 2,\n                    t = clientY <  (hoverEdgeSize ? top    + hoverEdgeSize : centerY),\n                    r = clientX >= (hoverEdgeSize ? right  - hoverEdgeSize : centerX),\n                    b = clientY >= (hoverEdgeSize ? bottom - hoverEdgeSize : centerY),\n                    l = clientX <  (hoverEdgeSize ? left   + hoverEdgeSize : centerX),\n                    tb = ((t || b) ? (t ? 't' : 'b') : ''),\n                    rl = ((r || l) ? (r ? 'r' : 'l') : '');\n\n                me.hoverZone = (hoverEdges.includes(tb) ? tb : '') + (hoverEdges.includes(rl) ? rl : '');\n            }\n\n            me.hoverEvent = event;\n            me.hoverTrack && me.hoverMove(event);\n        }\n    }\n\n    onHoverMouseOver(event) {\n        this.hoverEvent = event;\n        this.hoverElement = event.target;\n    }\n\n    onHoverMouseOut(event) {\n        this.hoverEvent = event;\n        this.hoverElement = event.relatedTarget;\n    }\n\n    //endregion\n    //region Configs\n\n    // hoverDelay\n\n    updateHoverDelay(delay) {\n        this.setHoverTarget.delay = delay;\n    }\n\n    // hoverEdges\n\n    changeHoverEdges(edges) {\n        return (edges === true) ? 'trbl' : (edges || '').replace('v', 'tb').replace('h', 'lr');\n    }\n\n    updateHoverEdges() {\n        this.syncHoverListeners();\n    }\n\n    // hoverElement\n\n    changeHoverElement(element) {\n        if (!this.hoverIgnore(element)) {\n            return element;\n        }\n    }\n\n    updateHoverElement(hoverEl) {\n        const { hoverSelector } = this;\n\n        if (hoverSelector) {\n            hoverEl = hoverEl?.closest(hoverSelector);\n        }\n\n        this.setHoverTarget(hoverEl);  // this may be delayed\n    }\n\n    // hoverRootElement\n\n    updateHoverRootElement(rootEl, was) {\n        const { hoverRootCls } = this;\n\n        if (hoverRootCls) {\n            was?.classList.remove(hoverRootCls);\n            rootEl?.classList.add(hoverRootCls);\n        }\n\n        this.syncHoverListeners();\n    }\n\n    // hoverTarget\n\n    changeHoverTarget(hoverEl, was) {\n        if (was) {\n            this.hoverZone = null;\n        }\n\n        return hoverEl;\n    }\n\n    updateHoverTarget(hoverEl, was) {\n        const\n            me = this,\n            { hoverCls, hoverAnimationCls, hoverRootActiveCls, hoverRootElement } = me;\n\n        if (hoverRootActiveCls) {\n            hoverRootElement?.classList[hoverEl ? 'add' : 'remove'](hoverRootActiveCls);\n        }\n\n        if (was) {\n            hoverCls && was.classList.remove(hoverCls);\n            hoverAnimationCls && was.classList.remove(hoverAnimationCls);\n\n            me.hoverLeave(was);\n        }\n\n        if (hoverEl) {\n            hoverCls && hoverEl.classList.add(hoverCls);\n\n            me.hoverEnter(was);\n\n            if (me.hoverTrack) {\n                me.hoverMove(me.hoverEvent);\n            }\n\n            if (hoverAnimationCls) {\n                hoverEl.getBoundingClientRect();   // force layout so next change starts animation\n                hoverEl.classList.add(hoverAnimationCls);\n            }\n        }\n    }\n\n    // hoverTrack\n\n    updateHoverTrack() {\n        this.syncHoverListeners();\n    }\n\n    // hoverZone\n\n    updateHoverZone(zone) {\n        const { hoverAnimationCls, hoverTarget } = this;\n\n        if (hoverTarget) {\n            const\n                { className } = hoverTarget,\n                cls = DomClassList.change(className, /* add= */zone ? ZONES[zone] : null, /* remove= */EDGE_CLASSES);\n\n            if (className !== cls) {\n                hoverTarget.className = cls;\n\n                if (zone && hoverAnimationCls) {\n                    hoverTarget.classList.remove(hoverAnimationCls);\n                    hoverTarget.getBoundingClientRect();   // force layout so next change starts animation\n                    hoverTarget.classList.add(hoverAnimationCls);\n                }\n            }\n        }\n    }\n\n    //endregion\n\n    //region Misc\n\n    setHoverTarget(target) {\n        // this method runs later based on the hoverDelay\n        this.hoverTarget = target;\n    }\n\n    syncHoverListeners() {\n        const\n            me = this,\n            element = me.hoverRootElement,\n            listeners = {\n                element,\n                thisObj   : me,\n                mouseover : 'onHoverMouseOver',\n                mouseout  : 'onHoverMouseOut'\n            };\n\n        if (me.hoverTrack || me.hoverEdges) {\n            listeners.mousemove = 'onHoverMouseMove';\n        }\n\n        me._hoverRootDetacher?.();\n        me._hoverRootDetacher = element && EventHelper.on(listeners);\n    }\n\n    //endregion\n};\n","import DragProxy from './DragProxy.js';\nimport Widget from '../../widget/Widget.js';\nimport Rectangle from '../../helper/util/Rectangle.js';\n\nimport '../../widget/Tooltip.js';\n\n/**\n * @module Core/util/drag/DragTipProxy\n */\n\n/**\n * This drag proxy manages a {@link #config-tooltip} (or derived class) and aligns the tooltip to the current drag\n * position adjusted by the {@link #config-align} config.\n * @extends Core/util/drag/DragProxy\n * @classtype tip\n * @internal\n */\nexport default class DragTipProxy extends DragProxy {\n    static get type() {\n        return 'tip';\n    }\n\n    static get configurable() {\n        return {\n            /**\n             * Controls how the tooltip will be aligned to the current drag position.\n             *\n             * See {@link Core.helper.util.Rectangle#function-alignTo} for details.\n             * @config {String}\n             * @default\n             */\n            align : 't10-b50',\n\n            /**\n             * The number of pixels to offset from the drag position.\n             * @config {Number}\n             * @default\n             */\n            offset : 20,\n\n            /**\n             * The tooltip to be shown, hidden and repositioned to track the drag position.\n             * @config {Core.widget.Tooltip}\n             */\n            tooltip : {\n                $config : ['lazy', 'nullify'],\n\n                value : {\n                    type : 'tooltip'\n                }\n            }\n        };\n    }\n\n    open() {\n        this.getConfig('tooltip');  // trigger creation\n    }\n\n    close() {\n        this.tooltip?.hide();\n    }\n\n    dragMove(drag) {\n        const\n            { offset, tooltip } = this,\n            { event } = drag;\n\n        if (tooltip) {\n            if (!tooltip.isVisible) {\n                tooltip.show();\n            }\n\n            tooltip.alignTo({\n                align  : this.align,\n                target : new Rectangle(event.clientX - offset, event.clientY - offset, offset * 2, offset * 2)\n            });\n        }\n    }\n\n    changeTooltip(config, existing) {\n        return Widget.reconfigure(existing, config, /* owner = */ this);\n    }\n}\n\nDragTipProxy.initClass();\n","import Animator from '../../util/Animator.js';\nimport PanelCollapser from './PanelCollapser.js';\nimport Delayable from '../../mixin/Delayable.js';\nimport ObjectHelper from '../../helper/ObjectHelper.js';\nimport EventHelper from '../../helper/EventHelper.js';\nimport DomHelper from '../../helper/DomHelper.js';\nimport DomClassList from '../../helper/util/DomClassList.js';\n\n/**\n * @module Core/widget/panel/PanelCollapserOverlay\n */\n\nconst\n    { dockIsHorz } = PanelCollapser.maps,\n    collapseExposeEdge = {\n        top    : 0,\n        down   : 0,\n        left   : 1,\n        bottom : 2,\n        up     : 2,\n        right  : 3\n    },\n    emptyObject = {},\n    translateByDir = {\n        up : {\n            from : `translate(0,0)`,\n            to   : 'translate(0,-100%)'\n        },\n        down : {\n            from : `translate(0,0)`,\n            to   : 'translate(0,100%)'\n        },\n        left : {\n            from : `translate(0,0)`,\n            to   : 'translate(-100%,0)'\n        },\n        right : {\n            from : `translate(0,0)`,\n            to   : 'translate(100%,0)'\n        }\n    };\n\n/**\n * A panel collapse implementation that adds the ability to reveal the collapsed panel as a floating overlay.\n * @extends Core/widget/panel/PanelCollapser\n * @classtype overlay\n */\nexport default class PanelCollapserOverlay extends PanelCollapser.mixin(Delayable) {\n    static get $name() {\n        return 'PanelCollapserOverlay';\n    }\n\n    static get type() {\n        return 'overlay';\n    }\n\n    static get configurable() {\n        return {\n            /**\n             * The number of milliseconds to wait once the mouse leaves a {@link Core.widget.Panel#config-revealed}\n             * panel before returning to an unrevealed state. Clicking outside the revealed panel will immediately\n             * return the panel to its collapsed state.\n             *\n             * This may be disabled by configuring {@link #config-autoClose} as `null`.\n             *\n             * If this value is negative, the panel will not automatically recollapse due to the mouse leaving, however,\n             * clicks outside the panel will still recollapse it.\n             *\n             * If this value is `null`, the panel will not automatically recollapse for either outside clicks or if\n             * the mouse leaves the panel.\n             * @config {Number}\n             * @default\n             */\n            autoCloseDelay : 1000,\n\n            /**\n             * By default, clicking outside the revealed overlay hides the revealed overlay.\n             *\n             * If the revealed overlay was shown using the {@link #property-recollapseTool}\n             * then moving the mouse outside of the revealed overlay hides the revealed overlay.\n             *\n             * Configure this as `false` to disable auto hiding, making overlayed\n             * state permanent, and changeable using the {@link #function-toggleReveal} method.\n             * @config {Boolean}\n             * @default\n             */\n            autoClose : true,\n\n            revealing : {\n                value   : null,\n                $config : null,\n                default : false\n            },\n\n            /**\n             * The reveal/hide tool which slides the collapsed panel over the top of the UI.\n             * @member {Core.widget.Tool} recollapseTool\n             */\n            /**\n             * The reveal/hide tool which slides the collapsed panel over the top of the UI.\n             *\n             * The `type` of this instance should not be changed but the tool instance can be\n             * configured in other ways via this config property.\n             * @config {ToolConfig|Core.widget.Tool}\n             */\n            recollapseTool : {\n                type       : 'collapsetool',\n                cls        : 'b-recollapse',\n                collapsify : 'overlay',\n\n                handler() {\n                    // NOTE: As a tool, our this pointer is the Panel so we use it to access the current collapser\n                    this.collapsible?.toggleReveal();\n                }\n            }\n        };\n    }\n\n    static get delayable() {\n        return {\n            doAutoClose : 0\n        };\n    }\n\n    doAutoClose() {\n        this.toggleReveal(false);\n    }\n\n    updateAutoCloseDelay(delay) {\n        const { doAutoClose } = this;\n\n        if (!(doAutoClose.suspended = delay == null || delay < 0)) {\n            doAutoClose.delay = delay;\n            doAutoClose.immediate = !delay;\n        }\n    }\n\n    changeRecollapseTool(tool) {\n        const\n            me = this,\n            { panel } = me;\n\n        if (me.isConfiguring || me.isDestroying || !panel || panel.isDestroying) {\n            return tool;\n        }\n\n        panel.tools = {\n            recollapse : tool\n        };\n    }\n\n    beforeCollapse(operation) {\n        if (super.beforeCollapse(operation) === false) {\n            return false;\n        }\n\n        if (this.panel.revealed) {\n            operation.animation = null;\n        }\n    }\n\n    applyHeaderDock(collapsed, flush = true) {\n        this.panel?.recompose();\n\n        super.applyHeaderDock(collapsed, flush);\n    }\n\n    collapseBegin(operation) {\n        const\n            me = this,\n            { collapseDir, innerElement } = me,\n            { animation } = operation,\n            { collapseTool, panel } = me;\n\n        me.configuredWidth = panel._lastWidth;\n        me.configuredHeight = panel._lastHeight;\n\n        me.applyHeaderDock(true);\n\n        // const innerElementRect = me.lockInnerSize();\n        me.lockInnerSize();\n\n        collapseTool?.element.classList.add('b-collapsed');\n\n        if (animation) {\n            panel.element.classList.add('b-collapsing');\n\n            animation.element = innerElement;\n            animation.transform = translateByDir[collapseDir];\n            operation.animation = Animator.run(animation);\n        }\n    }\n\n    onComplete(action) {\n        super.onComplete(action);\n\n        const\n            me          = this,\n            { panel }   = me,\n            { element } = panel;\n\n        me.autoCloseLeaveDetacher = me.autoCloseLeaveDetacher?.();\n        me.autoCloseClickDetacher = me.autoCloseClickDetacher?.();\n\n        // The act of hiding the revealed panel (\"unrevealing\") causes a mouseleave event (once the panel slides out\n        // from under the cursor) and that starts the autoClose timer. If the user then reveals the panel again within\n        // the 1sec delay (by default), the autoClose timer will still fire and unreveal the panel.\n        me.doAutoClose.cancel();\n\n        if (action === 'reveal' && me.autoClose) {\n            // Only listen for mouseleave to close if we contain focus.\n            // If we do not, then we have been revealed using the API from some other\n            // part of the UI, so mouseleave closing would not be appropriate.\n            if (panel.containsFocus) {\n                me.autoCloseLeaveDetacher = EventHelper.on({\n                    element,\n\n                    mouseenter : ev => {\n                        me.doAutoClose.cancel();\n                    },\n\n                    mouseleave : ev => {\n                        me.doAutoClose();\n                    }\n                });\n            }\n\n            me.autoCloseClickDetacher = EventHelper.on({\n                element   : document.body,\n                thisObj   : panel,\n                mousedown : ev => {\n                    if (ev.target !== element && !element.contains(ev.target) && me.autoCloseDelay != null) {\n                        // Detect the UI element which invoked the reveal.\n                        // If the panel contains focus, use the \"from\" element.\n                        // If not, then the focus is still on the invoking element.\n                        const el = panel.containsFocus && panel.focusInEvent?.relatedTarget ||\n                            DomHelper.getActiveElement(element);\n\n                        if (!el?.contains(ev.target)) {\n                            me.doAutoClose.now();\n                        }\n                    }\n                }\n            });\n        }\n    }\n\n    expandBegin(operation) {\n        const\n            me = this,\n            { animation } = operation,\n            { collapseDir, collapseTool, innerElement, panel } = me,\n            { element } = panel;\n\n        element.classList.remove('b-collapsed', 'b-collapsing');\n        me.restoreConfiguredSize();\n        me.lockInnerSize(false);\n        me.lockInnerSize();\n\n        collapseTool?.element.classList.remove('b-collapsed');\n\n        if (animation) {\n            element.classList.add('b-collapsed', 'b-expanding');\n\n            animation.element = innerElement;\n            animation.transform = {\n                from : translateByDir[collapseDir].to,\n                to   : translateByDir[collapseDir].from\n            };\n\n            operation.animation = Animator.run(animation);\n        }\n    }\n\n    expandEnd(operation) {\n        super.expandEnd(operation);\n\n        const { panel } = this;\n\n        if (operation.completed) {\n            panel.revealed = false;\n        }\n\n        panel.element.classList.remove('b-expanding');\n    }\n\n    expandRevert(operation) {\n        super.expandRevert(operation);\n\n        this.panel.element.classList.add('b-expanding');\n    }\n\n    get innerElement() {\n        return this.panel.overlayElement;\n    }\n\n    get innerSizeElement() {\n        return this.panel.element;\n    }\n\n    get toolsConfig() {\n        const\n            me = this,\n            { direction } = me,\n            config = super.toolsConfig,\n            tool = me.recollapseTool;\n\n        if (tool) {\n            return {\n                ...config,\n\n                recollapse : tool && ObjectHelper.assign({\n                    direction : direction.toLowerCase()\n                }, tool)\n            };\n        }\n\n        return config;\n    }\n\n    lockInnerSize(lock = true) {\n        const\n            me = this,\n            { panel } = me,\n            panelRect = lock && panel.rectangle(),  // must read this before we call super\n            inset = lock ? [0, 0, 0, 0] : '',\n            // now we can call super:\n            innerRect = super.lockInnerSize(lock);\n\n        // The panel overlay is visible because we switch to \"overflow:visible\" in collapsed state. By doing this,\n        // however, the header animation undesirably escapes as well. Fortunately, we can use the clip-path to hide\n        // this by only allowing the desired side to escape while all other sides remain clipped. Even more fortunate\n        // for us is that clip-path is expressed as an inset from the normal rectangle of the element (so we don't\n        // need to adjust it if the collapsed panel is resized), and further, unlike CSS path style, clip-path works\n        // for all elements not only absolutely positioned ones.\n        if (lock) {\n            // TODO see if there's a way to read the box-shadow style to pick up the right value (10 is the default)\n            inset[collapseExposeEdge[me.collapseDir]] = `-${panelRect[me.collapseDim] + 10}px`;\n        }\n\n        panel.element.style.clipPath = lock ? `inset(${inset.join(' ')})` : '';\n\n        return innerRect;\n    }\n\n    onOverlayTransitionDone(ev) {\n        const\n            me = this,\n            { panel } = me;\n\n        if (ev.srcElement === panel.overlayElement && me.revealing) {\n            me.revealing = false;\n\n            me.onComplete(panel.revealed ? 'reveal' : 'unreveal');\n        }\n    }\n\n    onRevealerClick() {\n        this.toggleReveal();\n    }\n\n    splitHeaderItems({ as, dock } = emptyObject) {\n        return this.panel?.splitHeaderItems({ as, dock, overlay : true });\n    }\n\n    /**\n     * Toggles the revealed state of the Panel to match the passed boolean flag.\n     * @param {Boolean} [state]  If not specified, this method toggles current state. Otherwise, pass `true` to reveal\n     * the overlay, or `false` to hide it.\n     */\n    toggleReveal(state) {\n        const\n            { panel }   = this,\n            { element } = panel;\n\n        if (panel.collapsed) {\n            if (state == null) {\n                state = !panel.revealed;\n            }\n\n            if (panel.revealed !== state && panel.trigger('beforeToggleReveal', { reveal : state }) !== false) {\n                // This is essentially a hide, so move focus back to whence it came\n                if (!state && element.contains(DomHelper.getActiveElement(element))) {\n                    panel.revertFocus(true);\n                }\n                this.revealing = true;\n                panel.revealed = state;\n            }\n        }\n    }\n\n    updateRevealing(value) {\n        const\n            me = this,\n            horzDirRe = /left|right/i,\n            { panel } = me,\n            dim = horzDirRe.test(me.collapseDir) ? 'height' : 'width';\n\n        if (panel) {\n            me.innerElement.style[dim] = '0px';\n            me.innerElement.style[`min-${dim}`] = '100%';\n\n            panel.element.classList[value ? 'add' : 'remove']('b-panel-overlay-revealing');\n        }\n    }\n\n    wrapCollapser(key, body) {\n        const\n            me = this,\n            { collapseDir, panel } = me,\n            { expandedHeaderDock, header, uiClassList } = panel,\n            recollapse = panel.tools?.recollapse,\n            [before, after] = me.splitHeaderItems({ dock : me.collapseDock, as : 'element' }),\n            horz = dockIsHorz[expandedHeaderDock],\n            title = panel.hasHeader ? (panel.title || header?.title || '\\xA0') : null;\n\n        if (recollapse) {\n            recollapse.direction = collapseDir;\n        }\n\n        return [\n            'overlayElement',\n            {\n                class : {\n                    ...uiClassList,\n                    [`b-panel-overlay-header-${expandedHeaderDock}`] : 1,\n                    [`b-panel-overlay-${collapseDir}`]               : 1,\n                    [`b-${horz ? 'h' : 'v'}box`]                     : 1,\n                    'b-panel-overlay'                                : 1,\n                    'b-box-center'                                   : 1\n                },\n\n                listeners : {\n                    transitionend : ev => me.onOverlayTransitionDone(ev)\n                },\n\n                children : {\n                    overlayHeaderElement : title && {\n                        tag   : 'header',\n                        class : new DomClassList({\n                            ...uiClassList,\n                            [`b-dock-${expandedHeaderDock}`] : 1,\n                            'b-panel-header'                 : 1,\n                            'b-panel-overlay-header'         : 1\n                        }, header?.cls),\n\n                        children : [\n                            ...before,\n                            {\n                                reference : 'overlayTitleElement',\n                                html      : title,\n                                class     : {\n                                    ...uiClassList,\n                                    [`b-align-${header?.titleAlign || 'start'}`] : 1,\n                                    'b-header-title'                             : 1\n                                }\n                            },\n                            ...after\n                        ]\n                    },\n\n                    [key] : body\n                }\n            }\n        ];\n    }\n}\n\n// Register this widget type with its Factory\nPanelCollapserOverlay.initClass();\n","import Base from '../../Base.js';\n\n/**\n * @module Core/widget/mixin/Minifiable\n */\n\n/**\n * Mixin for widgets that can present in a full and minified form. This behavior is used in\n * {@link Core.widget.Toolbar#config-overflow} handling.\n *\n * @mixin\n * @internal\n */\nexport default Target => class Minifiable extends (Target || Base) {\n    static $name = 'Minifiable';\n\n    static configurable = {\n        /**\n         * Set to `false` to prevent this widget from assuming its {@link #config-minified} form automatically (for\n         * example, due to {@link Core.widget.Toolbar#config-overflow} handling.\n         *\n         * When this value is `true` (the default), the minifiable widget's {@link #config-minified} config may be\n         * set to `true` to reduce toolbar overflow.\n         *\n         * @config {Boolean}\n         * @default\n         */\n        minifiable : true,\n\n        /**\n         * Set to `true` to present this widget in its minimal form.\n         * @config {Boolean}\n         * @default false\n         */\n        minified : null\n    };\n\n    compose() {\n        const { minified } = this;\n\n        return {\n            class : {\n                'b-minified' : minified\n            }\n        };\n    }\n\n    get widgetClass() {}\n};\n"],"names":["EDGES","e","t","r","b","l","EDGE_CLASSES","ZONES","tr","bl","tl","br","Target","Hoverable","mixin","Delayable","$name","configurable","hoverCls","hoverAnimationCls","hoverRootCls","hoverRootActiveCls","hoverDelay","hoverElement","hoverIgnoreElement","hoverEdges","hoverEdgeSize","hoverRootElement","$config","value","hoverSelector","hoverTarget","hoverTrack","hoverZone","delayable","setHoverTarget","hoverEnter","leaving","hoverIgnore","element","_this$hoverIgnoreElem","contains","hoverLeave","hoverMove","event","onHoverMouseMove","me","top","left","width","height","right","bottom","getBoundingClientRect","clientX","clientY","centerX","centerY","tb","rl","includes","hoverEvent","onHoverMouseOver","target","onHoverMouseOut","relatedTarget","updateHoverDelay","delay","changeHoverEdges","edges","replace","updateHoverEdges","syncHoverListeners","changeHoverElement","updateHoverElement","hoverEl","_hoverEl","closest","updateHoverRootElement","rootEl","was","classList","remove","add","changeHoverTarget","updateHoverTarget","updateHoverTrack","updateHoverZone","zone","className","cls","DomClassList","change","_me$_hoverRootDetache","listeners","thisObj","mouseover","mouseout","mousemove","_hoverRootDetacher","call","EventHelper","on","DragTipProxy","DragProxy","type","align","offset","tooltip","open","getConfig","close","_this$tooltip","hide","dragMove","drag","isVisible","show","alignTo","Rectangle","changeTooltip","config","existing","Widget","reconfigure","initClass","_$name","dockIsHorz","PanelCollapser","maps","collapseExposeEdge","down","up","emptyObject","translateByDir","from","to","PanelCollapserOverlay","autoCloseDelay","autoClose","revealing","default","recollapseTool","collapsify","handler","_this$collapsible","collapsible","toggleReveal","doAutoClose","updateAutoCloseDelay","suspended","immediate","changeRecollapseTool","tool","panel","isConfiguring","isDestroying","tools","recollapse","beforeCollapse","operation","revealed","animation","applyHeaderDock","collapsed","flush","_this$panel","recompose","collapseBegin","collapseDir","innerElement","collapseTool","configuredWidth","_lastWidth","configuredHeight","_lastHeight","lockInnerSize","transform","Animator","run","onComplete","action","_me$autoCloseLeaveDet","_me$autoCloseClickDet","autoCloseLeaveDetacher","autoCloseClickDetacher","cancel","containsFocus","mouseenter","ev","mouseleave","document","body","mousedown","_panel$focusInEvent","el","focusInEvent","DomHelper","getActiveElement","now","expandBegin","restoreConfiguredSize","expandEnd","completed","expandRevert","overlayElement","innerSizeElement","toolsConfig","direction","_objectSpread","ObjectHelper","assign","toLowerCase","lock","panelRect","rectangle","inset","innerRect","collapseDim","style","clipPath","join","onOverlayTransitionDone","srcElement","onRevealerClick","splitHeaderItems","as","dock","_this$panel2","overlay","state","trigger","reveal","revertFocus","updateRevealing","horzDirRe","dim","test","wrapCollapser","key","_panel$tools","expandedHeaderDock","header","uiClassList","before","after","collapseDock","horz","title","hasHeader","class","transitionend","children","overlayHeaderElement","tag","reference","html","titleAlign","_class","Minifiable","Base","compose","minified","widgetClass","_defineProperty","minifiable"],"mappings":"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"}