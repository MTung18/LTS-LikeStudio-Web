{"version":3,"file":"TextAreaField.js","sources":["../../../../Core/lib/Core/widget/TextAreaField.js"],"sourcesContent":["import Field from './Field.js';\n\n/**\n * @module Core/widget/TextAreaField\n */\n\n/**\n * TextAreaField widget for multiline text input. Wraps a native &lt;textarea&gt; HTML element.\n *\n * ```javascript\n * const textAreaField = new TextAreaField({\n *   placeholder: 'Enter some text'\n * });\n *```\n *\n * @extends Core/widget/Field\n * @classType textareafield\n * @inlineexample Core/widget/TextAreaField.js\n * @inputfield\n */\nexport default class TextAreaField extends Field {\n    static get $name() {\n        return 'TextAreaField';\n    }\n\n    // Factoryable type name\n    static get type() {\n        return 'textareafield';\n    }\n\n    // Factoryable type alias\n    static get alias() {\n        return 'textarea';\n    }\n\n    static get configurable() {\n        return {\n            /**\n             * The resize style to apply to the `<textarea>` element.\n             * @config {'none'|'both'|'horizontal'|'vertical'}\n             * @default\n             */\n            resize : 'none',\n\n            inputAttributes : {\n                tag : 'textarea'\n            }\n        };\n    }\n\n    updateResize(resize) {\n        this.input.style.resize = resize;\n    }\n}\n\n// Register this widget type with its Factory\nTextAreaField.initClass();\n"],"names":["TextAreaField","Field","$name","type","alias","configurable","resize","inputAttributes","tag","updateResize","this","input","style","initClass","_$name"],"mappings":"oCAkBe,MAAMA,UAAsBC,EACvCC,mBACI,MAAO,gBAGXC,kBACI,MAAO,gBAGXC,mBACI,MAAO,WAEXC,0BACI,MAAO,CAMHC,OAAS,OACTC,gBAAkB,CACdC,IAAM,aAIlBC,aAAaH,GACTI,KAAKC,MAAMC,MAAMN,OAASA,GAIlCN,EAAca,YACdb,EAAcc,OAAS"}