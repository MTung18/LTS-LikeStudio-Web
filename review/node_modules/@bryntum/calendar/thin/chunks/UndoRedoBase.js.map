{"version":3,"file":"UndoRedoBase.js","sources":["../../../../Core/lib/Core/widget/base/UndoRedoBase.js"],"sourcesContent":["import Container from '../Container.js';\nimport '../Combo.js';\n\n/**\n * @module Core/widget/base/UndoRedoBase\n */\n\n/**\n * Abstract base class used by UndoRedo widgets in Scheduler and TaskBoard.\n *\n * @extends Core/widget/Container\n * @abstract\n */\nexport default class UndoRedoBase extends Container {\n    static get $name() {\n        return 'UndoRedoBase';\n    }\n\n    static get type() {\n        return 'undoredobase';\n    }\n\n    static get configurable() {\n        return {\n            // Documented on subclasses\n            project : null,\n\n            stm : null,\n\n            /**\n             * Configure as `true` to show \"Undo\" and \"Redo\" as button texts. The buttons always have a tooltip\n             * as a hint to the user as to their purpose.\n             * @config {Boolean}\n             */\n            text : null,\n\n            /**\n             * Button color for the undo and redo buttons. See {@link Core.widget.Button#config-color}.\n             * @config {String}\n             */\n            color : null,\n\n            /**\n             * Configure as `true` to show \"0\" badge on the undo and redo buttons when they have no actions\n             * left to perform. By default when there are no actions, no badge is displayed.\n             * @config {Boolean}\n             */\n            showZeroActionBadge : null,\n\n            cls : 'b-undo-controls b-toolbar',\n\n            layoutStyle : {\n                alignItems : 'stretch',\n                flexFlow   : 'row nowrap',\n                overflow   : 'visible'\n            },\n\n            items : {\n                undoBtn : {\n                    type     : 'button',\n                    icon     : 'b-icon-undo',\n                    tooltip  : 'L{UndoRedo.UndoLastAction}',\n                    onAction : 'up.onUndo'     // 'up.' means method is on a parent Widget.\n                },\n                transactionsCombo : {\n                    type                 : 'combo',\n                    valueField           : 'idx',\n                    editable             : false,\n                    store                : {},\n                    emptyText            : 'L{UndoRedo.NoActions}',\n                    onAction             : 'up.onTransactionSelected',\n                    displayValueRenderer : 'up.transactionsDisplayValueRenderer'\n                },\n                redoBtn : {\n                    type     : 'button',\n                    icon     : 'b-icon-redo',\n                    tooltip  : 'L{UndoRedo.RedoLastAction}',\n                    onAction : 'up.onRedo'\n                }\n            }\n        };\n    }\n\n    afterConstruct() {\n        this.updateUndoRedoControls();\n    }\n\n    updateStm(stm) {\n        this.detachListeners('undoredo');\n\n        stm?.ion({\n            name          : 'undoredo',\n            recordingstop : 'updateUndoRedoControls',\n            restoringstop : 'updateUndoRedoControls',\n            queueReset    : 'updateUndoRedoControls',\n            disabled      : 'updateUndoRedoControls',\n            thisObj       : this\n        });\n    }\n\n    changeItems(items) {\n        const { undoBtn, redoBtn } = items;\n\n        if (this.color) {\n            undoBtn && (undoBtn.color = this.color);\n            redoBtn && (redoBtn.color = this.color);\n        }\n        if (this.text) {\n            undoBtn && (undoBtn.text = 'L{UndoRedo.Undo}');\n            redoBtn && (redoBtn.text = 'L{UndoRedo.Redo}');\n        }\n\n        return super.changeItems(items);\n    }\n\n    updateProject(project) {\n        this.stm = project.stm;\n    }\n\n    fillUndoRedoCombo() {\n        const { transactionsCombo } = this.widgetMap;\n        // The transactionsCombo may be configured away if only undo and redo buttons are wanted\n        transactionsCombo && (transactionsCombo.items = this.stm.queue.map((title, idx) => [idx, title || `Transaction ${idx}`]));\n    }\n\n    updateUndoRedoControls() {\n        const\n            {\n                stm,\n                showZeroActionBadge\n            } = this,\n            {\n                undoBtn,\n                redoBtn\n            } = this.widgetMap;\n\n        undoBtn.badge = stm.position || (showZeroActionBadge ? '0' : '');\n        redoBtn.badge = (stm.length - stm.position) || (showZeroActionBadge ? '0' : '');\n\n        undoBtn.disabled = !stm.canUndo;\n        redoBtn.disabled = !stm.canRedo;\n\n        this.fillUndoRedoCombo();\n    }\n\n    transactionsDisplayValueRenderer(record, combo) {\n        const stmPos = this.stm?.position || 0;\n\n        return `${stmPos} undo actions / ${combo.store.count - stmPos} redo actions`;\n    }\n\n    onUndo() {\n        this.stm.canUndo && this.stm.undo();\n    }\n\n    onRedo() {\n        this.stm.canRedo && this.stm.redo();\n    }\n\n    onTransactionSelected(combo) {\n        const\n            stm   = this.stm,\n            value = combo.value;\n\n        if (value >= 0) {\n            if (stm.canUndo && value < stm.position) {\n                stm.undo(stm.position - value);\n            }\n            else if (stm.canRedo && value >= stm.position) {\n                stm.redo(value - stm.position + 1);\n            }\n        }\n    }\n}\n"],"names":["UndoRedoBase","Container","$name","type","configurable","project","stm","text","color","showZeroActionBadge","cls","layoutStyle","alignItems","flexFlow","overflow","items","undoBtn","icon","tooltip","onAction","transactionsCombo","valueField","editable","store","emptyText","displayValueRenderer","redoBtn","afterConstruct","updateUndoRedoControls","updateStm","detachListeners","ion","name","recordingstop","restoringstop","queueReset","disabled","thisObj","changeItems","updateProject","fillUndoRedoCombo","widgetMap","queue","map","title","idx","badge","position","length","canUndo","canRedo","transactionsDisplayValueRenderer","record","combo","_this$stm","stmPos","count","onUndo","undo","onRedo","redo","onTransactionSelected","value","_$name"],"mappings":"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"}