{"version":3,"file":"EventNavigation.js","sources":["../../../../Scheduler/lib/Scheduler/localization/En.js","../../../../Scheduler/lib/Scheduler/data/mixin/AttachToProjectMixin.js","../../../../Scheduler/lib/Scheduler/data/mixin/ProjectConsumer.js","../../../../Scheduler/lib/Scheduler/tooltip/ClockTemplate.js","../../../../Scheduler/lib/Scheduler/feature/base/TimeSpanMenuBase.js","../../../../Scheduler/lib/Scheduler/view/recurrence/RecurrenceConfirmationPopup.js","../../../../Scheduler/lib/Scheduler/view/recurrence/field/RecurrenceFrequencyCombo.js","../../../../Scheduler/lib/Scheduler/view/recurrence/field/RecurrenceDaysCombo.js","../../../../Scheduler/lib/Scheduler/view/recurrence/field/RecurrenceDaysButtonGroup.js","../../../../Scheduler/lib/Scheduler/view/recurrence/field/RecurrenceMonthDaysButtonGroup.js","../../../../Scheduler/lib/Scheduler/view/recurrence/field/RecurrenceMonthsButtonGroup.js","../../../../Scheduler/lib/Scheduler/view/recurrence/field/RecurrenceStopConditionCombo.js","../../../../Scheduler/lib/Scheduler/view/recurrence/field/RecurrencePositionsCombo.js","../../../../Scheduler/lib/Scheduler/view/recurrence/RecurrenceEditorPanel.js","../../../../Scheduler/lib/Scheduler/feature/EventMenu.js","../../../../Scheduler/lib/Scheduler/feature/ScheduleMenu.js","../../../../Scheduler/lib/Scheduler/view/mixin/RecurringEvents.js","../../../../Scheduler/lib/Scheduler/view/mixin/CurrentConfig.js","../../../../Scheduler/lib/Scheduler/view/mixin/EventNavigation.js"],"sourcesContent":["import LocaleHelper from '../../Core/localization/LocaleHelper.js';\nimport '../../Grid/localization/En.js';\n\nconst locale = {\n\n    localeName : 'En',\n    localeDesc : 'English (US)',\n    localeCode : 'en-US',\n\n    Object : {\n        newEvent : 'New event'\n    },\n\n    ResourceInfoColumn : {\n        eventCountText : data => data + ' event' + (data !== 1 ? 's' : '')\n    },\n\n    Dependencies : {\n        from    : 'From',\n        to      : 'To',\n        valid   : 'Valid',\n        invalid : 'Invalid'\n    },\n\n    DependencyType : {\n        SS           : 'SS',\n        SF           : 'SF',\n        FS           : 'FS',\n        FF           : 'FF',\n        StartToStart : 'Start-to-Start',\n        StartToEnd   : 'Start-to-Finish',\n        EndToStart   : 'Finish-to-Start',\n        EndToEnd     : 'Finish-to-Finish',\n        short        : [\n            'SS',\n            'SF',\n            'FS',\n            'FF'\n        ],\n        long : [\n            'Start-to-Start',\n            'Start-to-Finish',\n            'Finish-to-Start',\n            'Finish-to-Finish'\n        ]\n    },\n\n    DependencyEdit : {\n        From              : 'From',\n        To                : 'To',\n        Type              : 'Type',\n        Lag               : 'Lag',\n        'Edit dependency' : 'Edit dependency',\n        Save              : 'Save',\n        Delete            : 'Delete',\n        Cancel            : 'Cancel',\n        StartToStart      : 'Start to Start',\n        StartToEnd        : 'Start to End',\n        EndToStart        : 'End to Start',\n        EndToEnd          : 'End to End'\n    },\n\n    EventEdit : {\n        Name         : 'Name',\n        Resource     : 'Resource',\n        Start        : 'Start',\n        End          : 'End',\n        Save         : 'Save',\n        Delete       : 'Delete',\n        Cancel       : 'Cancel',\n        'Edit event' : 'Edit event',\n        Repeat       : 'Repeat'\n    },\n\n    EventDrag : {\n        eventOverlapsExisting : 'Event overlaps existing event for this resource',\n        noDropOutsideTimeline : 'Event may not be dropped completely outside the timeline'\n    },\n\n    SchedulerBase : {\n        'Add event'      : 'Add event',\n        'Delete event'   : 'Delete event',\n        'Unassign event' : 'Unassign event'\n    },\n\n    TimeAxisHeaderMenu : {\n        pickZoomLevel   : 'Zoom',\n        activeDateRange : 'Date range',\n        startText       : 'Start date',\n        endText         : 'End date',\n        todayText       : 'Today'\n    },\n\n    EventCopyPaste : {\n        copyEvent  : 'Copy event',\n        cutEvent   : 'Cut event',\n        pasteEvent : 'Paste event'\n    },\n\n    EventFilter : {\n        filterEvents : 'Filter tasks',\n        byName       : 'By name'\n    },\n\n    TimeRanges : {\n        showCurrentTimeLine : 'Show current timeline'\n    },\n\n    PresetManager : {\n        secondAndMinute : {\n            displayDateFormat : 'll LTS',\n            name              : 'Seconds'\n        },\n        minuteAndHour : {\n            topDateFormat     : 'ddd MM/DD, hA',\n            displayDateFormat : 'll LST'\n        },\n        hourAndDay : {\n            topDateFormat     : 'ddd MM/DD',\n            middleDateFormat  : 'LST',\n            displayDateFormat : 'll LST',\n            name              : 'Day'\n        },\n        day : {\n            name : 'Day/hours'\n        },\n        week : {\n            name : 'Week/hours'\n        },\n        dayAndWeek : {\n            displayDateFormat : 'll LST',\n            name              : 'Week/days'\n        },\n        dayAndMonth : {\n            name : 'Month'\n        },\n        weekAndDay : {\n            displayDateFormat : 'll LST',\n            name              : 'Week'\n        },\n        weekAndMonth : {\n            name : 'Weeks'\n        },\n        weekAndDayLetter : {\n            name : 'Weeks/weekdays'\n        },\n        weekDateAndMonth : {\n            name : 'Months/weeks'\n        },\n        monthAndYear : {\n            name : 'Months'\n        },\n        year : {\n            name : 'Years'\n        },\n        manyYears : {\n            name : 'Multiple years'\n        }\n    },\n\n    RecurrenceConfirmationPopup : {\n        'delete-title'              : 'You are deleting an event',\n        'delete-all-message'        : 'Do you want to delete all occurrences of this event?',\n        'delete-further-message'    : 'Do you want to delete this and all future occurrences of this event, or only the selected occurrence?',\n        'delete-further-btn-text'   : 'Delete All Future Events',\n        'delete-only-this-btn-text' : 'Delete Only This Event',\n        'update-title'              : 'You are changing a repeating event',\n        'update-all-message'        : 'Do you want to change all occurrences of this event?',\n        'update-further-message'    : 'Do you want to change only this occurrence of the event, or this and all future occurrences?',\n        'update-further-btn-text'   : 'All Future Events',\n        'update-only-this-btn-text' : 'Only This Event',\n        Yes                         : 'Yes',\n        Cancel                      : 'Cancel',\n        width                       : 600\n    },\n\n    RecurrenceLegend : {\n        ' and '                         : ' and ',\n        Daily                           : 'Daily',\n        'Weekly on {1}'                 : ({ days }) => `Weekly on ${days}`,\n        'Monthly on {1}'                : ({ days }) => `Monthly on ${days}`,\n        'Yearly on {1} of {2}'          : ({ days, months }) => `Yearly on ${days} of ${months}`,\n        'Every {0} days'                : ({ interval }) => `Every ${interval} days`,\n        'Every {0} weeks on {1}'        : ({ interval, days }) => `Every ${interval} weeks on ${days}`,\n        'Every {0} months on {1}'       : ({ interval, days }) => `Every ${interval} months on ${days}`,\n        'Every {0} years on {1} of {2}' : ({ interval, days, months }) => `Every ${interval} years on ${days} of ${months}`,\n        position1                       : 'the first',\n        position2                       : 'the second',\n        position3                       : 'the third',\n        position4                       : 'the fourth',\n        position5                       : 'the fifth',\n        'position-1'                    : 'the last',\n        day                             : 'day',\n        weekday                         : 'weekday',\n        'weekend day'                   : 'weekend day',\n        daysFormat                      : ({ position, days }) => `${position} ${days}`\n    },\n\n    RecurrenceEditor : {\n        'Repeat event'      : 'Repeat event',\n        Cancel              : 'Cancel',\n        Save                : 'Save',\n        Frequency           : 'Frequency',\n        Every               : 'Every',\n        DAILYintervalUnit   : 'day(s)',\n        WEEKLYintervalUnit  : 'week(s)',\n        MONTHLYintervalUnit : 'month(s)',\n        YEARLYintervalUnit  : 'year(s)',\n        Each                : 'Each',\n        'On the'            : 'On the',\n        'End repeat'        : 'End repeat',\n        'time(s)'           : 'time(s)'\n    },\n\n    RecurrenceDaysCombo : {\n        day           : 'day',\n        weekday       : 'weekday',\n        'weekend day' : 'weekend day'\n    },\n\n    RecurrencePositionsCombo : {\n        position1    : 'first',\n        position2    : 'second',\n        position3    : 'third',\n        position4    : 'fourth',\n        position5    : 'fifth',\n        'position-1' : 'last'\n    },\n\n    RecurrenceStopConditionCombo : {\n        Never     : 'Never',\n        After     : 'After',\n        'On date' : 'On date'\n    },\n\n    RecurrenceFrequencyCombo : {\n        None    : 'No repeat',\n        Daily   : 'Daily',\n        Weekly  : 'Weekly',\n        Monthly : 'Monthly',\n        Yearly  : 'Yearly'\n    },\n\n    RecurrenceCombo : {\n        None   : 'None',\n        Custom : 'Custom...'\n    },\n\n    Summary : {\n        'Summary for' : date => `Summary for ${date}`\n    },\n\n    ScheduleRangeCombo : {\n        completeview : 'Complete schedule',\n        currentview  : 'Visible schedule',\n        daterange    : 'Date range',\n        completedata : 'Complete schedule (for all events)'\n    },\n\n    SchedulerExportDialog : {\n        'Schedule range' : 'Schedule range',\n        'Export from'    : 'From',\n        'Export to'      : 'To'\n    },\n\n    ExcelExporter : {\n        'No resource assigned' : 'No resource assigned'\n    },\n\n    CrudManagerView : {\n        serverResponseLabel : 'Server response:'\n    },\n\n    DurationColumn : {\n        Duration : 'Duration'\n    }\n};\n\nexport default LocaleHelper.publishLocale(locale);\n","/**\n * @module Scheduler/data/mixin/AttachToProjectMixin\n */\n\n/**\n * Mixin that calls the target class `attachToProject()` function when a new project is assigned to Scheduler/Gantt.\n *\n * @mixin\n */\nexport default Target => class AttachToProjectMixin extends Target {\n    static get $name() {\n        return 'AttachToProjectMixin';\n    }\n\n    async afterConstruct() {\n        super.afterConstruct();\n\n        const\n            me            = this,\n            projectHolder = (me.client || me.grid),\n            { project }   = projectHolder;\n\n        projectHolder.projectSubscribers.push(me);\n\n        // Attach to already existing stores\n        if (project) {\n            me.attachToProject(project);\n            me.attachToResourceStore(project.resourceStore);\n            me.attachToEventStore(project.eventStore);\n            me.attachToAssignmentStore(project.assignmentStore);\n            me.attachToDependencyStore(project.dependencyStore);\n            me.attachToCalendarManagerStore(project.calendarManagerStore);\n        }\n    }\n\n    /**\n     * Override to take action when the project instance is replaced.\n     *\n     * @param {Scheduler.model.ProjectModel} project\n     */\n    attachToProject(project) {\n        this.detachListeners('project');\n\n        this._project = project;\n    }\n\n    /**\n     * Override to take action when the EventStore instance is replaced, either from being replaced on the project or\n     * from assigning a new project.\n     *\n     * @param {Scheduler.data.EventStore} store\n     */\n    attachToEventStore(store) {\n        this.detachListeners('eventStore');\n    }\n\n    /**\n     * Override to take action when the ResourceStore instance is replaced, either from being replaced on the project\n     * or from assigning a new project.\n     *\n     * @param {Scheduler.data.ResourceStore} store\n     */\n    attachToResourceStore(store) {\n        this.detachListeners('resourceStore');\n    }\n\n    /**\n     * Override to take action when the AssignmentStore instance is replaced, either from being replaced on the project\n     * or from assigning a new project.\n     *\n     * @param {Scheduler.data.AssignmentStore} store\n     */\n    attachToAssignmentStore(store) {\n        this.detachListeners('assignmentStore');\n    }\n\n    /**\n     * Override to take action when the DependencyStore instance is replaced, either from being replaced on the project\n     * or from assigning a new project.\n     *\n     * @param {Scheduler.data.DependencyStore} store\n     */\n    attachToDependencyStore(store) {\n        this.detachListeners('dependencyStore');\n    }\n\n    // TODO: Move attachToCalendarMangerStore to Pro somehow\n\n    /**\n     * Override to take action when the CalendarManagerStore instance is replaced, either from being replaced on the\n     * project or from assigning a new project.\n     *\n     * @param {Core.data.Store} store\n     */\n    attachToCalendarManagerStore(store) {\n        this.detachListeners('calendarManagerStore');\n    }\n\n    get project() {\n        return this._project;\n    }\n\n    get calendarManagerStore() {\n        return this.project.calendarManagerStore;\n    }\n\n    get assignmentStore() {\n        return this.project.assignmentStore;\n    }\n\n    get resourceStore() {\n        return this.project.resourceStore;\n    }\n\n    get eventStore() {\n        return this.project.eventStore;\n    }\n\n    get dependencyStore() {\n        return this.project.dependencyStore;\n    }\n};\n","import Base from '../../../Core/Base.js';\nimport ProjectModel from '../../model/ProjectModel.js';\nimport StringHelper from '../../../Core/helper/StringHelper.js';\nimport TimeZoneHelper from '../../../Core/helper/TimeZoneHelper.js';\n\n/**\n * @module Scheduler/data/mixin/ProjectConsumer\n */\n\nconst engineStoreNames = [\n    'assignmentStore',\n    'dependencyStore',\n    'eventStore',\n    'resourceStore'\n];\n\n/**\n * Creates a Project using any configured stores, and sets the stores configured into the project into\n * the host object.\n *\n * @mixin\n */\nexport default Target => class ProjectConsumer extends (Target || Base) {\n    static get $name() {\n        return 'ProjectConsumer';\n    }\n\n    //region Default config\n\n    static get declarable() {\n        return ['projectStores'];\n    }\n\n    static get configurable() {\n        return {\n            projectModelClass : ProjectModel,\n\n            // TODO: move to SchedulerProBase and SchedulerBase to specify different types\n            /**\n             * The {@link Scheduler.model.ProjectModel} instance, containing the data visualized by the Scheduler.\n             *\n             * **Note:** In SchedulerPro the project is instance of SchedulerPro.model.ProjectModel class.\n             * @member {Scheduler.model.ProjectModel} project\n             * @typings {ProjectModel}\n             * @category Data\n             */\n            /**\n             * A {@link Scheduler.model.ProjectModel} instance or a config object. The project holds all Scheduler data.\n             * Can be omitted in favor of individual store configs or {@link Scheduler.view.mixin.SchedulerStores#config-crudManager} config.\n             *\n             * **Note:** This config is **mandatory** in SchedulerPro. See SchedulerPro.model.ProjectModel class.\n             * @config {Scheduler.model.ProjectModel|ProjectModelConfig} project\n             * @category Data\n             */\n            project : {},\n\n            /**\n             * Configure as `true` to destroy the Project and stores when `this` is destroyed.\n             * @config {Boolean}\n             * @category Data\n             */\n            destroyStores : null,\n\n            // Will be populated by AttachToProjectMixin which features mix in\n            projectSubscribers : []\n        };\n    }\n\n    //endregion\n\n    startConfigure(config) {\n        // process the project first which ingests any configured data sources,\n        this.getConfig('project');\n\n        super.startConfigure(config);\n    }\n\n    //region Project\n\n    // This is where all the ingestion happens.\n    // At config time, the changers inject incoming values into the project config object\n    // that we are building. At the end we instantiate the project with all incoming\n    // config values filled in.\n    changeProject(project, oldProject) {\n        const\n            me = this,\n            {\n                projectStoreNames,\n                projectDataNames\n            }  = me.constructor;\n\n        me.projectCallbacks = new Set();\n\n        if (project) {\n            // Flag for changes to know what stage we are at\n            me.buildingProjectConfig = true;\n\n            if (!project.isModel) {\n                // When configuring, prio order:\n                // 1. If using an already existing CrudManager, it is assumed to already have the stores we should use,\n                //    adopt them as ours.\n                // 2. If a supplied store already has a project, it is assumed to be shared with another scheduler and\n                //    that project is adopted as ours. Unless we are given some store not part of that project,\n                //    in which case we create a new project.\n                // 3. Use stores from a supplied project config.\n                // 4. Use stores configured on scheduler.\n                // + Pass on inline data (events, resources, dependencies, assignments -> xxData on the project config)\n                //\n                // What happens during project initialization is this:\n                // this._project is the project *config* object.\n                // changeXxxx methods put incoming values directly into it through this.project\n                // to be used as its configuration.\n                // So when it is instantiated, it has had all configs injected.\n                if (me.isConfiguring) {\n                    // Set property for changers to put incoming values into\n                    me._project = project;\n\n                    // crudManager will be a clone of the raw config if it is a raw config.\n                    const { crudManager } = me;\n\n                    // Pull in stores from the crudManager config first\n                    if (crudManager) {\n                        const { isCrudManager } = crudManager;\n\n                        for (const storeName of projectStoreNames) {\n                            if (crudManager[storeName]) {\n\n                                // We configure the project with the stores, and *not* the CrudManager.\n                                // The CrudManager ends up having its project set and thereby adopting ours.\n                                me[storeName] = crudManager[storeName];\n\n                                // If it's just a config, take the stores out.\n                                // We will *configure* it with this project and it will ingest\n                                // its stores from there.\n                                if (!isCrudManager) {\n                                    delete crudManager[storeName];\n                                }\n                            }\n                        }\n                    }\n\n                    // Pull in all our configured stores into the project config object.\n                    // That also extracts any project into this._sharedProject\n                    me.getConfig('projectStores');\n\n                    // Referencing these data configs causes them to be pulled into\n                    // the _project.xxxData config property if they are present.\n                    for (const dataName of projectDataNames) {\n                        me.getConfig(dataName);\n                    }\n                }\n\n                const { eventStore } = project;\n                let { _sharedProject : sharedProject } = me;\n\n                // Delay autoLoading until listeners are set up, to be able to inject params\n                if (eventStore && !eventStore.isEventStoreMixin && eventStore.autoLoad && !eventStore.count) {\n                    eventStore.autoLoad = false;\n                    me.delayAutoLoad = true;\n                }\n\n                // We should not adopt a project from a store if we are given any store not part of that project\n                if (sharedProject && engineStoreNames.some(store => project[store] && project[store] !== sharedProject[store])) {\n                    // We have to chain any store used by the other project, they can only belong to one\n                    for (const store of engineStoreNames) {\n                        if (project[store] && project[store] === sharedProject[store]) {\n                            project[store] = project[store].chain();\n                        }\n                    }\n\n                    sharedProject = null;\n                }\n\n                // Use sharedProject if found, else instantiate our config.\n                project = sharedProject || new me.projectModelClass(project);\n\n                // Clear the property so that the updater is called.\n                delete me._project;\n            }\n\n            // In the updater, configs are live\n            me.buildingProjectConfig = false;\n        }\n\n        return project;\n    }\n\n    /**\n     * Implement in subclass to take action when project is replaced.\n     *\n     * __`super.updateProject(...arguments)` must be called first.__\n     *\n     * @param {Scheduler.model.ProjectModel} project\n     * @category Data\n     */\n    updateProject(project, oldProject) {\n        const\n            me = this,\n            {\n                projectListeners,\n                crudManager\n            }  = me;\n\n        me.detachListeners('projectConsumer');\n\n        // When we set the crudManager now, it will go through to the CrudManagerVIew\n        delete me._crudManager;\n\n        if (project) {\n            projectListeners.thisObj = me;\n            project.ion(projectListeners);\n\n            // If the project is a CrudManager, use it as such.\n            if (project.isCrudManager) {\n                me.crudManager = project;\n            }\n            // Apply the project to CrudManager, making sure the same stores are used there and here\n            else if (crudManager) {\n                crudManager.project = project;\n\n                // CrudManager goes through the changer as usual and is initialized\n                // from the Project, not any stores it was originally configured with.\n                me.crudManager = crudManager;\n            }\n\n            // Notifies classes that mix AttachToProjectMixin that we have a new project\n            me.projectSubscribers.forEach(subscriber => subscriber.attachToProject(project));\n\n            // Sets the project's stores into the host object\n            for (const storeName of me.constructor.projectStoreNames) {\n                me[storeName] = project[storeName];\n            }\n\n            // Listeners are set up, if EventStore was configured with autoLoad now is the time to load\n            if (me.delayAutoLoad) {\n                // Restore the flag, not needed but to look good on inspection\n                project.eventStore.autoLoad = true;\n                project.eventStore.load();\n            }\n\n        }\n\n        me.trigger('projectChange', { project });\n    }\n\n    // Implementation here because we need to get first look at it to adopt its stores\n    changeCrudManager(crudManager) {\n        // Set the property to be scanned for incoming stores.\n        // If it's a config, it will be stripped of those stores prior to construction.\n        if (this.buildingProjectConfig) {\n            this._crudManager = crudManager.isCrudManager ? crudManager : Object.assign({}, crudManager);\n        }\n        else {\n            return super.changeCrudManager(crudManager);\n        }\n    }\n\n    // Called when project changes are committed, after data is written back to records\n    onProjectDataReady() {\n        const me = this;\n\n        // Only update the UI when we are visible\n        me.whenVisible(() => {\n            if (me.projectCallbacks.size) {\n                me.projectCallbacks.forEach(callback => callback());\n                me.projectCallbacks.clear();\n            }\n        }, null, null, 'onProjectDataReady');\n    }\n\n    // When project changes time zone, change start and end dates\n    onTimeZoneChange({ timeZone, oldTimeZone }) {\n        const me = this;\n\n        if (me.startDate) {\n            const startDate = oldTimeZone ? TimeZoneHelper.fromTimeZone(me.startDate, oldTimeZone) : me.startDate;\n            me.startDate = timeZone ? TimeZoneHelper.toTimeZone(startDate, timeZone) : startDate;\n        }\n    }\n\n    /**\n     * Accepts a callback that will be called when the underlying project is ready (no commit pending and current commit\n     * finalized)\n     * @param {Function} callback\n     * @category Data\n     */\n    whenProjectReady(callback) {\n        // Might already be ready, call directly\n        if (this.isEngineReady) {\n            callback();\n        }\n        else {\n            this.projectCallbacks.add(callback);\n        }\n    }\n\n    /**\n     * Returns `true` if engine is in a stable calculated state, `false` otherwise.\n     * @property {Boolean}\n     */\n    get isEngineReady() {\n        // NonWorkingTime calls this during destruction, hence the ?.\n        return Boolean(this.project.isEngineReady?.());\n    }\n\n    //endregion\n\n    //region Destroy\n\n    // Cleanup, destroys stores if this.destroyStores is true.\n    doDestroy() {\n        super.doDestroy();\n\n        if (this.destroyStores) {\n            // Shared project might already be destroyed\n            !this.project.isDestroyed && this.project.destroy();\n        }\n    }\n\n    //endregion\n\n    get projectStores() {\n        const { projectStoreNames } = this.constructor;\n\n        return projectStoreNames.map(storeName => this[storeName]);\n    }\n\n    static get projectStoreNames() {\n        return Object.keys(this.projectStores);\n    }\n\n    static get projectDataNames() {\n        return this.projectStoreNames.reduce((result, storeName) => {\n            const { dataName } = this.projectStores[storeName];\n\n            if (dataName) {\n                result.push(dataName);\n            }\n            return result;\n        }, []);\n    }\n\n    static setupProjectStores(cls, meta) {\n        const { projectStores } = cls;\n\n        if (projectStores) {\n            const\n                projectListeners  = {\n                    name           : 'projectConsumer',\n                    dataReady      : 'onProjectDataReady',\n                    change         : 'relayProjectDataChange',\n                    timeZoneChange : 'onTimeZoneChange'\n                },\n                storeConfigs      = {\n                    projectListeners\n                };\n\n            let previousDataName;\n\n            // Create a property and updater for each dataName and a changer for each store\n            for (const storeName in projectStores) {\n                const { dataName } = projectStores[storeName];\n\n                // Define \"eventStore\" and \"events\" configs\n                storeConfigs[storeName] = storeConfigs[dataName] = null;\n\n                // Define up the \"events\" property\n                if (dataName) {\n                    // Getter to return store data\n                    Object.defineProperty(meta.class.prototype, dataName, {\n                        configurable : true, // So that Config can add its setter.\n                        get() {\n                            // get events() { return this.project.eventStore.records; }\n                            return this.project[storeName]?.records;\n                        }\n                    });\n\n                    // Create an updater for the data name;\n                    this.createDataUpdater(storeName, dataName, previousDataName, meta);\n                }\n\n                this.createStoreDescriptor(meta, storeName, projectStores[storeName], projectListeners);\n\n                // The next data updater must reference this data name\n                previousDataName = dataName;\n            }\n\n            // Create the projectListeners config.\n            this.setupConfigs(meta, storeConfigs);\n        }\n    }\n\n    static createDataUpdater(storeName, dataName, previousDataName, meta) {\n        // Create eg \"updateEvents(data)\".\n        // We need it to call this.getConfig('resources') so that ordering of\n        // data ingestion is corrected.\n        meta.class.prototype[`update${StringHelper.capitalize(dataName)}`] = function(data) {\n            const { project } = this;\n\n            // Ensure a dataName that we depend on is called in.\n            // For example dependencies must load in order after the events.\n            previousDataName && this.getConfig(previousDataName);\n\n            if (this.buildingProjectConfig) {\n                // Set the property in the project config object.\n                // eg project.eventsData = [...]\n                project[`${dataName}Data`] = data;\n            }\n            else {\n                // Live update the project when in use.\n                project[storeName].data = data;\n            }\n        };\n    }\n\n    static createStoreDescriptor(meta, storeName, { listeners }, projectListeners) {\n        const\n            { prototype : clsProto } = meta.class,\n            storeNameCap             = StringHelper.capitalize(storeName);\n\n        // Set up onProjectEventStoreChange to set this.eventStore\n        projectListeners[`${storeName}Change`] = function({ store }) {\n            this[storeName] = store;\n        };\n\n        // create changeEventStore\n        clsProto[`change${storeNameCap}`] = function(store, oldStore) {\n            const\n                me           = this,\n                { project }  = me,\n                storeProject = store?.project;\n\n            if (me.buildingProjectConfig) {\n                // Capture any project found at project config time\n                // to use as our shared project\n                if (storeProject?.isProjectModel) {\n                    me._sharedProject = storeProject;\n                }\n\n                // Set the property in the project config object.\n                // Must not go through the updater. It's too early to\n                // inform host of store change.\n                project[storeName] = store;\n                return;\n            }\n\n            // Live update the project when in use.\n            if (!me.initializingProject) {\n                if (project[storeName] !== store) {\n                    project[`set${storeNameCap}`](store);\n                    store = project[storeName];\n                }\n            }\n\n            // Implement processing here instead of creating a separate updater.\n            // Subclasses can implement updaters.\n            if (store !== oldStore) {\n                if (listeners) {\n                    listeners.thisObj = me;\n                    listeners.name = `${storeName}Listeners`;\n\n                    me.detachListeners(listeners.name);\n\n                    store.ion(listeners);\n                }\n\n                // Set backing var temporarily, so it can be accessed from AttachToProjectMixin subscribers\n                me[`_${storeName}`] = store;\n\n                // Notifies classes that mix AttachToProjectMixin that we have a new XxxxxStore\n                me.projectSubscribers.forEach(subscriber => {\n                    subscriber[`attachTo${storeNameCap}`]?.(store);\n                });\n\n                me[`_${storeName}`] = null;\n            }\n            return store;\n        };\n    }\n\n    relayProjectDataChange(event) {\n        /**\n         * Fired when data in any of the projects stores changes.\n         *\n         * Basically a relayed version of each stores own change event, decorated with which store it originates from.\n         * See the {@link Core.data.Store#event-change store change event} documentation for more information.\n         *\n         * @event dataChange\n         * @param {Scheduler.data.mixin.ProjectConsumer} source Owning component\n         * @param {Scheduler.model.mixin.ProjectModelMixin} project Project model\n         * @param {Core.data.Store} store Affected store\n         * @param {'remove'|'removeAll'|'add'|'updatemultiple'|'clearchanges'|'filter'|'update'|'dataset'|'replace'} action\n         * Name of action which triggered the change. May be one of:\n         * * `'remove'`\n         * * `'removeAll'`\n         * * `'add'`\n         * * `'updatemultiple'`\n         * * `'clearchanges'`\n         * * `'filter'`\n         * * `'update'`\n         * * `'dataset'`\n         * * `'replace'`\n         * @param {Core.data.Model} record Changed record, for actions that affects exactly one record (`'update'`)\n         * @param {Core.data.Model[]} records Changed records, passed for all actions except `'removeAll'`\n         * @param {Object} changes Passed for the `'update'` action, info on which record fields changed\n         */\n        return this.trigger('dataChange', { project : event.source, ...event, source : this });\n    }\n\n    //region WidgetClass\n\n    // This does not need a className on Widgets.\n    // Each *Class* which doesn't need 'b-' + constructor.name.toLowerCase() automatically adding\n    // to the Widget it's mixed in to should implement thus.\n    get widgetClass() {}\n\n    //endregion\n};\n","import Base from '../../Core/Base.js';\nimport DateHelper from '../../Core/helper/DateHelper.js';\nimport StringHelper from '../../Core/helper/StringHelper.js';\nimport BrowserHelper from '../../Core/helper/BrowserHelper.js';\n\n/**\n * @module Scheduler/tooltip/ClockTemplate\n */\n\n/**\n * A template showing a clock, it consumes an object containing a date and a text\n * @private\n */\nexport default class ClockTemplate extends Base {\n    static get defaultConfig() {\n        return {\n            minuteHeight : 8,\n            minuteTop    : 2,\n            hourHeight   : 8,\n            hourTop      : 2,\n            handLeft     : 10,\n            div          : document.createElement('div'),\n            scheduler    : null, // may be passed to the constructor if needed\n            // `b-sch-clock-day` for calendar icon\n            // `b-sch-clock-hour` for clock icon\n            template(data) {\n                return `<div class=\"b-sch-clockwrap b-sch-clock-${data.mode || this.mode} ${data.cls || ''}\">\n                    <div class=\"b-sch-clock\">\n                        <div class=\"b-sch-hour-indicator\">${DateHelper.format(data.date, 'MMM')}</div>\n                        <div class=\"b-sch-minute-indicator\">${DateHelper.format(data.date, 'D')}</div>\n                        <div class=\"b-sch-clock-dot\"></div>\n                    </div>\n                    <span class=\"b-sch-clock-text\">${StringHelper.encodeHtml(data.text)}</span>\n                </div>`;\n            }\n        };\n    }\n\n    generateContent(data) {\n        return this.div.innerHTML = this.template(data);\n    }\n\n    updateDateIndicator(el, date) {\n        const\n            hourIndicatorEl   = el?.querySelector('.b-sch-hour-indicator'),\n            minuteIndicatorEl = el?.querySelector('.b-sch-minute-indicator');\n\n        if (date && hourIndicatorEl && minuteIndicatorEl && BrowserHelper.isBrowserEnv) {\n            if (this.mode === 'hour') {\n                hourIndicatorEl.style.transform   = `rotate(${(date.getHours() % 12) * 30}deg)`;\n                minuteIndicatorEl.style.transform = `rotate(${date.getMinutes() * 6}deg)`;\n            }\n            else {\n                hourIndicatorEl.style.transform   = 'none';\n                minuteIndicatorEl.style.transform = 'none';\n            }\n        }\n    }\n\n    set mode(mode) {\n        this._mode = mode;\n    }\n\n    // `day` mode for calendar icon\n    // `hour` mode for clock icon\n    get mode() {\n        if (this._mode) {\n            return this._mode;\n        }\n\n        //<debug>\n        if (!this.scheduler) {\n            throw new Error('`scheduler` config has to be specified for the clock template');\n        }\n        //</debug>\n\n        const\n            unitLessThanDay        = DateHelper.compareUnits(this.scheduler.timeAxisViewModel.timeResolution.unit, 'day') < 0,\n            formatContainsHourInfo = DateHelper.formatContainsHourInfo(this.scheduler.displayDateFormat);\n\n        return unitLessThanDay && formatContainsHourInfo ? 'hour' : 'day';\n    }\n\n    set template(template) {\n        this._template = template;\n    }\n\n    /**\n     * Get the clock template, which accepts an object of format { date, text }\n     * @property {function(*): string}\n     */\n    get template() {\n        return this._template;\n    }\n}\n","import ContextMenuBase from '../../../Core/feature/base/ContextMenuBase.js';\n\n/**\n * @module Scheduler/feature/base/TimeSpanMenuBase\n */\n\n/**\n * Abstract base class used by other context menu features which show the context menu for TimeAxis.\n * Using this class you can make sure the menu expects the target to disappear,\n * since it can be scroll out of the scheduling zone.\n *\n * Features that extend this class are:\n *  * {@link Scheduler/feature/EventMenu};\n *  * {@link Scheduler/feature/ScheduleMenu};\n *  * {@link Scheduler/feature/TimeAxisHeaderMenu};\n *\n * @extends Core/feature/base/ContextMenuBase\n * @abstract\n */\nexport default class TimeSpanMenuBase extends ContextMenuBase {\n}\n","import Popup from '../../../Core/widget/Popup.js';\n\n/**\n * @module Scheduler/view/recurrence/RecurrenceConfirmationPopup\n */\n\n/**\n * Confirmation dialog showing up before modifying a recurring event or some of its occurrences.\n * For recurring events the dialog notifies user that the event change/removal will cause all its occurrences\n * change/removal and asks to confirm the action.\n *\n * And for occurrences the dialog allows to choose if user wants to affect all further occurrences, this occurrence only or cancel the change.\n *\n * Usage example:\n *\n * ```javascript\n * const confirmation = new RecurrenceConfirmationPopup();\n *\n * confirmation.confirm({\n *     eventRecord : recurringEvent,\n *     actionType  : \"delete\",\n *     changerFn   : () => recurringEvent.remove(event)\n * });\n * ```\n *\n * @classType recurrenceconfirmation\n * @extends Core/widget/Popup\n */\nexport default class RecurrenceConfirmationPopup extends Popup {\n\n    static get $name() {\n        return 'RecurrenceConfirmationPopup';\n    }\n\n    // Factoryable type name\n    static get type() {\n        return 'recurrenceconfirmation';\n    }\n\n    static get defaultConfig() {\n        return {\n            localizableProperties : [],\n            align                 : 'b-t',\n            autoShow              : false,\n            autoClose             : false,\n            closeAction           : 'onRecurrenceClose',\n            modal                 : true,\n            centered              : true,\n            scrollAction          : 'realign',\n            constrainTo           : globalThis,\n            draggable             : true,\n            closable              : true,\n            floating              : true,\n            eventRecord           : null,\n            cls                   : 'b-sch-recurrenceconfirmation',\n            bbar                  : {\n                defaults : {\n                    localeClass : this\n                },\n                items : {\n                    changeSingleButton : {\n                        weight  : 100,\n                        cls     : 'b-raised',\n                        color   : 'b-blue',\n                        text    : 'L{update-only-this-btn-text}',\n                        onClick : 'up.onChangeSingleButtonClick'\n                    },\n                    changeMultipleButton : {\n                        weight  : 200,\n                        color   : 'b-green',\n                        text    : 'L{Object.Yes}',\n                        onClick : 'up.onChangeMultipleButtonClick'\n                    },\n                    cancelButton : {\n                        weight  : 300,\n                        color   : 'b-gray',\n                        text    : 'L{Object.Cancel}',\n                        onClick : 'up.onCancelButtonClick'\n                    }\n                }\n            }\n        };\n    }\n\n    /**\n     * Reference to the \"Apply changes to multiple occurrences\" button, if used\n     * @property {Core.widget.Button}\n     * @readonly\n     */\n    get changeMultipleButton() {\n        return this.widgetMap.changeMultipleButton;\n    }\n\n    /**\n     * Reference to the button that causes changing of the event itself only, if used\n     * @property {Core.widget.Button}\n     * @readonly\n     */\n    get changeSingleButton() {\n        return this.widgetMap.changeSingleButton;\n    }\n\n    /**\n     * Reference to the cancel button, if used\n     * @property {Core.widget.Button}\n     * @readonly\n     */\n    get cancelButton() {\n        return this.widgetMap.cancelButton;\n    }\n\n    /**\n     * Handler for \"Apply changes to multiple occurrences\" {@link #property-changeMultipleButton button}.\n     * It calls {@link #function-processMultipleRecords} and then hides the dialog.\n     */\n    onChangeMultipleButtonClick() {\n        this.processMultipleRecords();\n        this.hide();\n    }\n\n    /**\n     * Handler for the {@link #property-changeSingleButton button} that causes changing of the event itself only.\n     * It calls {@link #function-processSingleRecord} and then hides the dialog.\n     */\n    onChangeSingleButtonClick() {\n        this.processSingleRecord();\n        this.hide();\n    }\n\n    /**\n     * Handler for {@link #property-cancelButton cancel button}.\n     * It calls `cancelFn` provided to {@link #function-confirm} call and then hides the dialog.\n     */\n    onCancelButtonClick() {\n        this.cancelFn && this.cancelFn.call(this.thisObj);\n        this.hide();\n    }\n\n    onRecurrenceClose() {\n        if (this.cancelFn) {\n            this.cancelFn.call(this.thisObj);\n        }\n        this.hide();\n    }\n\n    /**\n     * Displays the confirmation.\n     * Usage example:\n     *\n     * ```javascript\n     * const popup = new RecurrenceConfirmationPopup();\n     *\n     * popup.confirm({\n     *     eventRecord,\n     *     actionType : \"delete\",\n     *     changerFn  : () => eventStore.remove(record)\n     * });\n     * ```\n     *\n     * @param {Object} config The following config options are supported:\n     * @param {Scheduler.model.EventModel} config.eventRecord   Event being modified.\n     * @param {'update'|'delete'} config.actionType Type of modification to be applied to the event. Can be\n     * either \"update\" or \"delete\".\n     * @param {Function} config.changerFn A function that should be called to apply the change to the event upon user\n     * choice.\n     * @param {Function} [config.thisObj] `changerFn` and `cancelFn` functions scope.\n     * @param {Function} [config.cancelFn] Function called on `Cancel` button click.\n     */\n    confirm(config = {}) {\n        const me = this;\n\n        //<debug>\n        if (!config || !config.actionType || !config.eventRecord) {\n            throw new Error('actionType and eventRecord must be specified for Scheduler.view.recurrence.RecurrenceConfirmationPopup');\n        }\n        //</debug>\n\n        [\n            'actionType',\n            'eventRecord',\n            'title',\n            'html',\n            'changerFn',\n            'cancelFn',\n            'finalizerFn',\n            'thisObj'\n        ].forEach(prop => {\n            if (prop in config) me[prop] = config[prop];\n        });\n\n        me.updatePopupContent();\n\n        return super.show(config);\n    }\n\n    updatePopupContent() {\n        const\n            me                                                         = this,\n            { changeMultipleButton, changeSingleButton, cancelButton } = me.widgetMap,\n            { eventRecord, actionType = 'update' }                     = me,\n            isMaster                                                   = eventRecord?.isRecurring;\n\n        // Do not remove. Assertion strings for Localization sanity check.\n        // 'L{delete-further-message}'\n        // 'L{update-further-message}'\n        // 'L{delete-all-message}'\n        // 'L{update-all-message}'\n        // 'L{delete-further-btn-text}'\n        // 'L{update-further-btn-text}'\n        // 'L{delete-only-this-btn-text}'\n        // 'L{update-only-this-btn-text}'\n\n        if (isMaster) {\n            changeMultipleButton.text = me.L('L{Object.Yes}');\n            me.html = me.L(`${actionType}-all-message`);\n        }\n        else {\n            changeMultipleButton.text = me.L(`${actionType}-further-btn-text`);\n            me.html = me.L(`${actionType}-further-message`);\n        }\n\n        changeSingleButton.text = me.L(`${actionType}-only-this-btn-text`);\n        cancelButton.text = me.L('L{Object.Cancel}');\n\n        me.width = me.L('L{width}');\n\n        // the following lines are added to satisfy the 904_unused localization test\n        // to let it know that these locales are used:\n        // this.L('L{delete-title}') not found\n        // this.L('L{update-title}') not found\n\n        me.title = me.L(`${actionType}-title`);\n    }\n\n    /**\n     * Applies changes to multiple occurrences as reaction on \"Apply changes to multiple occurrences\"\n     * {@link #property-changeMultipleButton button} click.\n     */\n    processMultipleRecords() {\n        const { eventRecord, changerFn, thisObj, finalizerFn } = this;\n\n        eventRecord.beginBatch();\n        // Apply changes to the occurrence.\n        // It is not joined to any stores, so this has no consequence.\n        changerFn && this.callback(changerFn, thisObj, [eventRecord]);\n\n        // afterChange will promote it to being an new recurring base because there's still recurrence\n        eventRecord.endBatch();\n\n        finalizerFn && this.callback(finalizerFn, thisObj, [eventRecord]);\n    }\n\n    /**\n     * Applies changes to a single record by making it a \"real\" event and adding an exception to the recurrence.\n     * The method is called as reaction on clicking the {@link #property-changeSingleButton button} that causes changing of the event itself only.\n     */\n    processSingleRecord() {\n        const { eventRecord, changerFn, thisObj, finalizerFn } = this;\n\n        eventRecord.beginBatch();\n\n        let firstOccurrence;\n\n        // If that's a master event get its very first occurrence\n        if (eventRecord?.isRecurring) {\n            eventRecord.recurrence.forEachOccurrence(eventRecord.startDate, null, (occurrence, isFirst, index) => {\n                // index 1 is used by to the event itself, > 1 since there might be exceptions\n                if (index > 1) {\n                    firstOccurrence = occurrence;\n                    return false;\n                }\n            });\n        }\n\n        // turn the 1st occurrence into a new \"master\" event\n        firstOccurrence?.convertToRealEvent();\n\n        // When the changes apply, because there's no recurrence, it will become an exception\n        eventRecord.recurrence = null;\n\n        // Apply changes to the occurrence.\n        // It is not joined to any stores, so this has no consequence.\n        changerFn && this.callback(changerFn, thisObj, [eventRecord]);\n\n        // Must also change after the callback in case the callback sets the rule.\n        // This will update the batch update data block to prevent it being set back to recurring.\n        eventRecord.recurrenceRule = null;\n\n        // afterChange will promote it to being an exception because there's no recurrence\n        eventRecord.endBatch();\n\n        finalizerFn && this.callback(finalizerFn, thisObj, [eventRecord]);\n    }\n\n    updateLocalization() {\n        this.updatePopupContent();\n        super.updateLocalization();\n    }\n\n};\n\n// Register this widget type with its Factory\nRecurrenceConfirmationPopup.initClass();\n","import Combo from '../../../../Core/widget/Combo.js';\n\n/**\n * @module Scheduler/view/recurrence/field/RecurrenceFrequencyCombo\n */\n\n/**\n * A combobox field allowing to pick frequency in the {@link Scheduler.view.recurrence.RecurrenceEditor recurrence dialog}.\n *\n * @extends Core/widget/Combo\n * @classType recurrencefrequencycombo\n */\nexport default class RecurrenceFrequencyCombo extends Combo {\n\n    static $name = 'RecurrenceFrequencyCombo';\n\n    // Factoryable type name\n    static type = 'recurrencefrequencycombo';\n\n    static configurable = {\n        editable              : false,\n        displayField          : 'text',\n        valueField            : 'value',\n        localizeDisplayFields : true,\n        addNone               : false\n    };\n\n    buildItems() {\n        return [\n            ...(this.addNone ? [{ text : 'L{None}', value : 'NONE' }] : []),\n            { value : 'DAILY',   text : 'L{Daily}' },\n            { value : 'WEEKLY',  text : 'L{Weekly}' },\n            { value : 'MONTHLY', text : 'L{Monthly}' },\n            { value : 'YEARLY',  text : 'L{Yearly}' }\n        ];\n    }\n};\n\n// Register this widget type with its Factory\nRecurrenceFrequencyCombo.initClass();\n","import DateHelper from '../../../../Core/helper/DateHelper.js';\nimport Combo from '../../../../Core/widget/Combo.js';\nimport RecurrenceDayRuleEncoder from '../../../data/util/recurrence/RecurrenceDayRuleEncoder.js';\n\n/**\n * @module Scheduler/view/recurrence/field/RecurrenceDaysCombo\n */\n\n/**\n * A combobox field allowing to pick days for the `Monthly` and `Yearly` mode in the {@link Scheduler.view.recurrence.RecurrenceEditor recurrence dialog}.\n *\n * @extends Core/widget/Combo\n * @classType recurrencedayscombo\n */\nexport default class RecurrenceDaysCombo extends Combo {\n\n    static get $name() {\n        return 'RecurrenceDaysCombo';\n    }\n\n    // Factoryable type name\n    static get type() {\n        return 'recurrencedayscombo';\n    }\n\n    static get defaultConfig() {\n        const\n            allDaysValueAsArray = ['SU', 'MO', 'TU', 'WE', 'TH', 'FR', 'SA'],\n            allDaysValue        = allDaysValueAsArray.join(',');\n\n        return {\n            allDaysValue,\n            editable            : false,\n            defaultValue        : allDaysValue,\n            workingDaysValue    : allDaysValueAsArray.filter((day, index) => !DateHelper.nonWorkingDays[index]).join(','),\n            nonWorkingDaysValue : allDaysValueAsArray.filter((day, index) => DateHelper.nonWorkingDays[index]).join(','),\n            splitCls            : 'b-recurrencedays-split',\n            displayField        : 'text',\n            valueField          : 'value'\n        };\n    }\n\n    buildItems() {\n        const me = this;\n\n        me._weekDays = null;\n\n        return me.weekDays.concat([\n            { value : me.allDaysValue,        text : me.L('L{day}'), cls : me.splitCls },\n            { value : me.workingDaysValue,    text : me.L('L{weekday}') },\n            { value : me.nonWorkingDaysValue, text : me.L('L{weekend day}') }\n        ]);\n    }\n\n    get weekDays() {\n        const me = this;\n\n        if (!me._weekDays) {\n            const weekStartDay = DateHelper.weekStartDay;\n\n            const dayNames = DateHelper.getDayNames().map((text, index) => ({ text, value : RecurrenceDayRuleEncoder.encodeDay(index) }));\n\n            // we should start week w/ weekStartDay\n            me._weekDays = dayNames.slice(weekStartDay).concat(dayNames.slice(0, weekStartDay));\n        }\n\n        return me._weekDays;\n    }\n\n    set value(value) {\n        const me = this;\n\n        if (value && Array.isArray(value)) {\n            value = value.join(',');\n        }\n\n        // if the value has no matching option in the store we need to use default value\n        if (!value || !me.store.findRecord('value', value)) {\n            value = me.defaultValue;\n        }\n\n        super.value = value;\n    }\n\n    get value() {\n        let value = super.value;\n\n        if (value && Array.isArray(value)) {\n            value = value.join(',');\n        }\n\n        return value;\n    }\n}\n\n// Register this widget type with its Factory\nRecurrenceDaysCombo.initClass();\n","import DateHelper from '../../../../Core/helper/DateHelper.js';\nimport ButtonGroup from '../../../../Core/widget/ButtonGroup.js';\nimport RecurrenceDayRuleEncoder from '../../../data/util/recurrence/RecurrenceDayRuleEncoder.js';\n\n/**\n * @module Scheduler/view/recurrence/field/RecurrenceDaysButtonGroup\n */\n\n/**\n * A segmented button field allowing to pick days for the \"Weekly\" mode in the {@link Scheduler.view.recurrence.RecurrenceEditor recurrence dialog}.\n *\n * @extends Core/widget/ButtonGroup\n */\nexport default class RecurrenceDaysButtonGroup extends ButtonGroup {\n\n    static get $name() {\n        return 'RecurrenceDaysButtonGroup';\n    }\n\n    // Factoryable type name\n    static get type() {\n        return 'recurrencedaysbuttongroup';\n    }\n\n    static get defaultConfig() {\n        return {\n            defaults : {\n                cls        : 'b-raised',\n                toggleable : true\n            }\n        };\n    }\n\n    construct(config = {}) {\n        const me = this;\n\n        config.columns = 7;\n        config.items   = me.buildItems();\n\n        super.construct(config);\n    }\n\n    updateItemText(item) {\n        const day = RecurrenceDayRuleEncoder.decodeDay(item.value)[0];\n\n        item.text = DateHelper.getDayName(day).substring(0, 3);\n    }\n\n    buildItems() {\n        const me = this;\n\n        if (!me.__items) {\n            const weekStartDay = DateHelper.weekStartDay;\n\n            const dayNames = DateHelper.getDayNames().map((text, index) => ({\n                text  : text.substring(0, 3),\n                value : RecurrenceDayRuleEncoder.encodeDay(index)\n            }));\n\n            // we should start week w/ weekStartDay\n            me.__items = dayNames.slice(weekStartDay).concat(dayNames.slice(0, weekStartDay));\n        }\n\n        return me.__items;\n    }\n\n    set value(value) {\n        if (value && Array.isArray(value)) {\n            value = value.join(',');\n        }\n\n        super.value = value;\n    }\n\n    get value() {\n        let value = super.value;\n\n        if (value && Array.isArray(value)) {\n            value = value.join(',');\n        }\n\n        return value;\n        // return value ? value.split(',') : [];\n    }\n\n    onLocaleChange() {\n        // update button texts on locale switch\n        this.items.forEach(this.updateItemText, this);\n    }\n\n    updateLocalization() {\n        this.onLocaleChange();\n        super.updateLocalization();\n    }\n\n    get widgetClassList() {\n        const classList = super.widgetClassList;\n        // to look more like a real field\n        classList.push('b-field');\n        return classList;\n    }\n};\n\n// Register this widget type with its Factory\nRecurrenceDaysButtonGroup.initClass();\n","import ButtonGroup from '../../../../Core/widget/ButtonGroup.js';\n\n/**\n * A segmented button field allowing to pick month days for the `Monthly` mode in the {@link Scheduler.view.recurrence.RecurrenceEditor recurrence dialog}.\n *\n * @extends Core/widget/ButtonGroup\n */\nexport default class RecurrenceMonthDaysButtonGroup extends ButtonGroup {\n\n    static get $name() {\n        return 'RecurrenceMonthDaysButtonGroup';\n    }\n\n    // Factoryable type name\n    static get type() {\n        return 'recurrencemonthdaysbuttongroup';\n    }\n\n    static get defaultConfig() {\n        return {\n            defaults : {\n                toggleable : true,\n                cls        : 'b-raised'\n            }\n        };\n    }\n\n    get minValue() {\n        return 1;\n    }\n\n    get maxValue() {\n        return 31;\n    }\n\n    construct(config = {}) {\n        const me = this;\n\n        config.columns = 7;\n        config.items   = me.buildItems();\n\n        super.construct(config);\n    }\n\n    buildItems() {\n        const\n            me    = this,\n            items = [];\n\n        for (let value = me.minValue; value <= me.maxValue; value++) {\n            // button config\n            items.push({\n                text : value + '',\n                value\n            });\n        }\n\n        return items;\n    }\n\n    get widgetClassList() {\n        const classList = super.widgetClassList;\n        // to look more like a real field\n        classList.push('b-field');\n        return classList;\n    }\n\n};\n\n// Register this widget type with its Factory\nRecurrenceMonthDaysButtonGroup.initClass();\n","import DateHelper from '../../../../Core/helper/DateHelper.js';\nimport ButtonGroup from '../../../../Core/widget/ButtonGroup.js';\n\n/**\n * A segmented button field allowing to pick months for the `Yearly` mode in the {@link Scheduler.view.recurrence.RecurrenceEditor recurrence dialog}.\n *\n * @extends Core/widget/ButtonGroup\n */\nexport default class RecurrenceMonthsButtonGroup extends ButtonGroup {\n\n    static get $name() {\n        return 'RecurrenceMonthsButtonGroup';\n    }\n\n    // Factoryable type name\n    static get type() {\n        return 'recurrencemonthsbuttongroup';\n    }\n\n    static get defaultConfig() {\n        return {\n            defaults : {\n                toggleable : true,\n                cls        : 'b-raised'\n            }\n        };\n    }\n\n    construct(config = {}) {\n        const me = this;\n\n        config.columns = 4;\n        config.items   = me.buildItems();\n\n        super.construct(config);\n    }\n\n    buildItems() {\n        return DateHelper.getMonthNames().map((item, index) => ({\n            text  : item.substring(0, 3),\n            value : index + 1 // 1-based\n        }));\n    }\n\n    updateItemText(item) {\n        item.text = DateHelper.getMonthName(item.value - 1).substring(0, 3);\n    }\n\n    onLocaleChange() {\n        // update button texts on locale switch\n        this.items.forEach(this.updateItemText, this);\n    }\n\n    updateLocalization() {\n        this.onLocaleChange();\n        super.updateLocalization();\n    }\n\n    get widgetClassList() {\n        const classList = super.widgetClassList;\n        // to look more like a real field\n        classList.push('b-field');\n        return classList;\n    }\n\n};\n\n// Register this widget type with its Factory\nRecurrenceMonthsButtonGroup.initClass();\n","import Combo from '../../../../Core/widget/Combo.js';\n\n/**\n * @module Scheduler/view/recurrence/field/RecurrenceStopConditionCombo\n */\n\n/**\n * A combobox field allowing to choose stop condition for the recurrence in the {@link Scheduler.view.recurrence.RecurrenceEditor recurrence dialog}.\n *\n * @extends Core/widget/Combo\n * @classType recurrencestopconditioncombo\n */\nexport default class RecurrenceStopConditionCombo extends Combo {\n\n    static get $name() {\n        return 'RecurrenceStopConditionCombo';\n    }\n\n    // Factoryable type name\n    static get type() {\n        return 'recurrencestopconditioncombo';\n    }\n\n    static get defaultConfig() {\n        return {\n            editable     : false,\n            placeholder  : 'Never',\n            displayField : 'text',\n            valueField   : 'value'\n        };\n    }\n\n    buildItems() {\n        return [\n            { value : 'never', text : this.L('L{Never}') },\n            { value : 'count', text : this.L('L{After}') },\n            { value : 'date',  text : this.L('L{On date}') }\n        ];\n    }\n\n    set value(value) {\n        // Use 'never' instead of falsy value\n        value = value || 'never';\n\n        super.value = value;\n    }\n\n    get value() {\n        return super.value;\n    }\n\n    get recurrence() {\n        return this._recurrence;\n    }\n\n    set recurrence(recurrence) {\n        let value = null;\n\n        if (recurrence.endDate) {\n            value = 'date';\n        }\n        else if (recurrence.count) {\n            value = 'count';\n        }\n\n        this._recurrence = recurrence;\n\n        this.value = value;\n    }\n};\n\n// Register this widget type with its Factory\nRecurrenceStopConditionCombo.initClass();\n","import ArrayHelper from '../../../../Core/helper/ArrayHelper.js';\nimport Combo from '../../../../Core/widget/Combo.js';\n\n/**\n * @module Scheduler/view/recurrence/field/RecurrencePositionsCombo\n */\n\n/**\n * A combobox field allowing to specify day positions in the {@link Scheduler.view.recurrence.RecurrenceEditor recurrence editor}.\n *\n * @extends Core/widget/Combo\n * @classType recurrencepositionscombo\n */\nexport default class RecurrencePositionsCombo extends Combo {\n\n    static get $name() {\n        return 'RecurrencePositionsCombo';\n    }\n\n    // Factoryable type name\n    static get type() {\n        return 'recurrencepositionscombo';\n    }\n\n    static get defaultConfig() {\n        return {\n            editable     : false,\n            splitCls     : 'b-sch-recurrencepositions-split',\n            displayField : 'text',\n            valueField   : 'value',\n            defaultValue : 1,\n            maxPosition  : 5\n        };\n    }\n\n    buildItems() {\n        const me = this;\n\n        return me.buildDayNumbers().concat([\n            // the following lines are added to satisfy the 904_unused localization test\n            // to let it know that these locales are used:\n            // this.L('L{position-1}')\n            { value : '-1', text : me.L('L{position-1}'), cls : me.splitCls }\n        ]);\n    }\n\n    buildDayNumbers() {\n        const me = this;\n\n        // the following lines are added to satisfy the 904_unused localization test\n        // to let it know that these locales are used:\n        // this.L('L{position1}')\n        // this.L('L{position2}')\n        // this.L('L{position3}')\n        // this.L('L{position4}')\n        // this.L('L{position5}')\n\n        return ArrayHelper.populate(me.maxPosition, i => (\n            { value : i + 1, text : me.L(`position${i + 1}`) }\n        ));\n    }\n\n    set value(value) {\n        const me = this;\n\n        if (value && Array.isArray(value)) {\n            value = value.join(',');\n        }\n\n        // if the value has no matching option in the store we need to use default value\n        if (!value || !me.store.findRecord('value', value)) {\n            value = me.defaultValue;\n        }\n\n        super.value = value;\n    }\n\n    get value() {\n        const value = super.value;\n\n        return value ? `${value}`.split(',').map(item => parseInt(item, 10)) : [];\n    }\n\n};\n\n// Register this widget type with its Factory\nRecurrencePositionsCombo.initClass();\n","import RecurrenceDayRuleEncoder from '../../data/util/recurrence/RecurrenceDayRuleEncoder.js';\nimport Panel from '../../../Core/widget/Panel.js';\nimport '../../../Core/widget/Widget.js';\nimport '../../../Core/widget/Button.js';\nimport '../../../Core/widget/Checkbox.js';\nimport '../../../Core/widget/DateField.js';\nimport '../../../Core/widget/NumberField.js';\nimport './field/RecurrenceFrequencyCombo.js';\nimport './field/RecurrenceDaysCombo.js';\nimport './field/RecurrenceDaysButtonGroup.js';\nimport './field/RecurrenceMonthDaysButtonGroup.js';\nimport './field/RecurrenceMonthsButtonGroup.js';\nimport './field/RecurrenceStopConditionCombo.js';\nimport './field/RecurrencePositionsCombo.js';\n\n/**\n * @module Scheduler/view/recurrence/RecurrenceEditorPanel\n */\n\n/**\n * Panel containing fields used to edit a {@link Scheduler.model.RecurrenceModel recurrence model}. Used by\n * {@link Scheduler/view/recurrence/RecurrenceEditor}, and by the recurrence tab in Scheduler Pro's event editor.\n *\n * Not intended to be used separately.\n *\n * @extends Core/widget/Panel\n * @classType recurrenceeditorpanel\n * @private\n */\nexport default class RecurrenceEditorPanel extends Panel {\n\n    static $name = 'RecurrenceEditorPanel';\n\n    static type = 'recurrenceeditorpanel';\n\n    static configurable = {\n        cls     : 'b-recurrenceeditor',\n        record  : false,\n        addNone : false,\n        items   : {\n            frequencyField : {\n                type     : 'recurrencefrequencycombo',\n                name     : 'frequency',\n                label    : 'L{RecurrenceEditor.Frequency}',\n                weight   : 10,\n                onChange : 'up.onFrequencyFieldChange',\n                addNone  : 'up.addNone'\n            },\n            intervalField : {\n                type     : 'numberfield',\n                weight   : 15,\n                name     : 'interval',\n                label    : 'L{RecurrenceEditor.Every}',\n                min      : 1,\n                required : true\n            },\n            daysButtonField : {\n                type         : 'recurrencedaysbuttongroup',\n                weight       : 20,\n                name         : 'days',\n                forFrequency : 'WEEKLY'\n            },\n            // the radio button enabling \"monthDaysButtonField\" in MONTHLY mode\n            monthDaysRadioField : {\n                type         : 'checkbox',\n                weight       : 30,\n                toggleGroup  : 'radio',\n                forFrequency : 'MONTHLY',\n                label        : 'L{RecurrenceEditor.Each}',\n                checked      : true,\n                onChange     : 'up.onMonthDaysRadioFieldChange'\n            },\n            monthDaysButtonField : {\n                type         : 'recurrencemonthdaysbuttongroup',\n                weight       : 40,\n                name         : 'monthDays',\n                forFrequency : 'MONTHLY'\n            },\n            monthsButtonField : {\n                type         : 'recurrencemonthsbuttongroup',\n                weight       : 50,\n                name         : 'months',\n                forFrequency : 'YEARLY'\n            },\n            // the radio button enabling positions & days combos in MONTHLY & YEARLY modes\n            positionAndDayRadioField : {\n                type         : 'checkbox',\n                weight       : 60,\n                toggleGroup  : 'radio',\n                forFrequency : 'MONTHLY|YEARLY',\n                label        : 'L{RecurrenceEditor.On the}',\n                onChange     : 'up.onPositionAndDayRadioFieldChange'\n            },\n            positionsCombo : {\n                type         : 'recurrencepositionscombo',\n                weight       : 80,\n                name         : 'positions',\n                forFrequency : 'MONTHLY|YEARLY'\n            },\n            daysCombo : {\n                type         : 'recurrencedayscombo',\n                weight       : 90,\n                name         : 'days',\n                forFrequency : 'MONTHLY|YEARLY',\n                flex         : 1\n            },\n            stopRecurrenceField : {\n                type     : 'recurrencestopconditioncombo',\n                weight   : 100,\n                label    : 'L{RecurrenceEditor.End repeat}',\n                onChange : 'up.onStopRecurrenceFieldChange'\n            },\n            countField : {\n                type     : 'numberfield',\n                weight   : 110,\n                name     : 'count',\n                min      : 2,\n                required : true,\n                disabled : true,\n                label    : ' '\n            },\n            endDateField : {\n                type     : 'datefield',\n                weight   : 120,\n                name     : 'endDate',\n                hidden   : true,\n                disabled : true,\n                label    : ' ',\n                required : true\n            }\n        }\n    }\n\n    updateRecord(record) {\n        super.updateRecord(record);\n\n        const\n            me = this,\n            {\n                frequencyField,\n                daysButtonField,\n                monthDaysButtonField,\n                monthsButtonField,\n                monthDaysRadioField,\n                positionAndDayRadioField,\n                stopRecurrenceField\n            }  = me.widgetMap;\n\n        if (record) {\n            const\n                event     = record.timeSpan,\n                startDate = event?.startDate;\n\n            // some fields default values are calculated based on event \"startDate\" value\n            if (startDate) {\n                // if no \"days\" value provided\n                if (!record.days || !record.days.length) {\n                    daysButtonField.value = [RecurrenceDayRuleEncoder.encodeDay(startDate.getDay())];\n                }\n\n                // if no \"monthDays\" value provided\n                if (!record.monthDays || !record.monthDays.length) {\n                    monthDaysButtonField.value = startDate.getDate();\n                }\n\n                // if no \"months\" value provided\n                if (!record.months || !record.months.length) {\n                    monthsButtonField.value = startDate.getMonth() + 1;\n                }\n            }\n\n            // if the record has both \"days\" & \"positions\" fields set check \"On the\" checkbox\n            if (record.days && record.positions) {\n                positionAndDayRadioField.check();\n                // TODO: if toggleGroup members are not painted automatic unchecking doesn't work\n                if (!me.isPainted) {\n                    monthDaysRadioField.uncheck();\n                }\n            }\n            else {\n                monthDaysRadioField.check();\n                // TODO: if toggleGroup members are not painted automatic unchecking doesn't work\n                if (!me.isPainted) {\n                    positionAndDayRadioField.uncheck();\n                }\n            }\n\n            stopRecurrenceField.recurrence = record;\n        }\n        else {\n            frequencyField.value = 'NONE';\n        }\n    }\n\n    /**\n     * Updates the provided recurrence model with the contained form data.\n     * If recurrence model is not provided updates the last loaded recurrence model.\n     * @internal\n     */\n    syncEventRecord(recurrence) {\n        // get values relevant to the RecurrenceModel (from enabled fields only)\n        const values = this.getValues((w) => w.name in recurrence && !w.disabled);\n\n        // Disabled field does not contribute to values, clear manually\n        if (!('endDate' in values)) {\n            values.endDate = null;\n        }\n        if (!('count' in values)) {\n            values.count = null;\n        }\n\n        recurrence.set(values);\n    }\n\n    toggleStopFields() {\n        const\n            me                           = this,\n            { countField, endDateField } = me.widgetMap;\n\n        switch (me.widgetMap.stopRecurrenceField.value) {\n\n            case 'count' :\n                countField.show();\n                countField.enable();\n                endDateField.hide();\n                endDateField.disable();\n                break;\n\n            case 'date' :\n                countField.hide();\n                countField.disable();\n                endDateField.show();\n                endDateField.enable();\n                break;\n\n            default :\n                countField.hide();\n                endDateField.hide();\n                countField.disable();\n                endDateField.disable();\n        }\n    }\n\n    onMonthDaysRadioFieldChange({ checked }) {\n        const { monthDaysButtonField } = this.widgetMap;\n\n        monthDaysButtonField.disabled = !checked || !this.isWidgetAvailableForFrequency(monthDaysButtonField);\n    }\n\n    onPositionAndDayRadioFieldChange({ checked }) {\n        const { daysCombo, positionsCombo } = this.widgetMap;\n\n        // toggle day & positions combos\n        daysCombo.disabled = positionsCombo.disabled = !checked || !this.isWidgetAvailableForFrequency(daysCombo);\n    }\n\n    onStopRecurrenceFieldChange() {\n        this.toggleStopFields();\n    }\n\n    isWidgetAvailableForFrequency(widget, frequency = this.widgetMap.frequencyField.value) {\n        return !widget.forFrequency || widget.forFrequency.includes(frequency);\n    }\n\n    onFrequencyFieldChange({ value, oldValue, valid }) {\n        const\n            me    = this,\n            items = me.queryAll(w => 'forFrequency' in w),\n            {\n                intervalField,\n                stopRecurrenceField\n            }     = me.widgetMap;\n\n        if (valid && value) {\n            for (let i = 0; i < items.length; i++) {\n                const item = items[i];\n\n                if (me.isWidgetAvailableForFrequency(item, value)) {\n                    item.show();\n                    item.enable();\n                }\n                else {\n                    item.hide();\n                    item.disable();\n                }\n            }\n\n            // Special handling of NONE\n            intervalField.hidden = stopRecurrenceField.hidden = value === 'NONE';\n\n            if (value !== 'NONE') {\n                intervalField.hint = me.L(`L{RecurrenceEditor.${value}intervalUnit}`);\n            }\n\n            // When a non-recurring record is loaded, intervalField is set to empty. We want it to default to 1 here\n            // to not look weird (defaults to 1 on the data layer)\n            if (oldValue === 'NONE' && intervalField.value == null) {\n                intervalField.value = 1;\n            }\n\n            me.toggleFieldsState();\n        }\n    }\n\n    toggleFieldsState() {\n        const\n            me            = this,\n            { widgetMap } = me;\n\n        me.onMonthDaysRadioFieldChange({ checked : widgetMap.monthDaysRadioField.checked });\n        me.onPositionAndDayRadioFieldChange({ checked : widgetMap.positionAndDayRadioField.checked });\n        me.onStopRecurrenceFieldChange();\n    }\n\n    updateLocalization() {\n        // do extra labels translation (not auto-translated yet)\n        const { countField, intervalField, frequencyField } = this.widgetMap;\n\n        countField.hint = this.L('L{RecurrenceEditor.time(s)}');\n\n        if (frequencyField.value && frequencyField.value !== 'NONE') {\n            intervalField.hint = this.L(`L{RecurrenceEditor.${frequencyField.value}intervalUnit}`);\n        }\n\n        super.updateLocalization();\n    }\n\n}\n\n// Register this widget type with its Factory\nRecurrenceEditorPanel.initClass();\n","import GridFeatureManager from '../../Grid/feature/GridFeatureManager.js';\nimport TimeSpanMenuBase from './base/TimeSpanMenuBase.js';\nimport DomHelper from '../../Core/helper/DomHelper.js';\nimport Objects from '../../Core/helper/util/Objects.js';\n\n/**\n * @module Scheduler/feature/EventMenu\n */\n\n/**\n * Displays a context menu for events. Items are populated by other features and/or application code.\n *\n * ### Default event menu items\n *\n * Here is the list of menu items provided by the feature and populated by the other features:\n *\n * | Reference       | Text           | Weight | Feature                                  | Description                                                       |\n * |-----------------|----------------|--------|------------------------------------------|-------------------------------------------------------------------|\n * | `editEvent`     | Edit event     | 100    | {@link Scheduler/feature/EventEdit}      | Edit in the event editor. Hidden when read-only                   |\n * | `copyEvent`     | Copy event     | 110    | {@link Scheduler/feature/EventCopyPaste} | Copy event or assignment. Hidden when read-only                   |\n * | `cutEvent `     | Cut event      | 120    | {@link Scheduler/feature/EventCopyPaste} | Cut event or assignment. Hidden when read-only                    |\n * | `deleteEvent`   | Delete event   | 200    | *This feature*                           | Remove event. Hidden when read-only                               |\n * | `unassignEvent` | Unassign event | 300    | *This feature*                           | Unassign event. Hidden when read-only, shown for multi-assignment |\n * | `splitEvent`    | Split event    | 650    | *Scheduler Pro only*                     | Split an event into two segments at the mouse position            |\n * | `renameSegment` | Rename segment | 660    | *Scheduler Pro only*                     | Show an inline editor to rename the segment                       |\n *\n * ### Customizing the menu items\n *\n * The menu items in the Event menu can be customized, existing items can be changed or removed,\n * and new items can be added. This is handled using the `items` config of the feature.\n *\n * Add extra items for all events:\n *\n * ```javascript\n * const scheduler = new Scheduler({\n *     features : {\n *         eventMenu : {\n *             items : {\n *                 extraItem : {\n *                     text : 'Extra',\n *                     icon : 'b-fa b-fa-fw b-fa-flag',\n *                     onItem({eventRecord}) {\n *                         eventRecord.flagged = true;\n *                     }\n *                 }\n *             }\n *         }\n *     }\n * });\n * ```\n *\n * Remove existing items:\n *\n * ```javascript\n * const scheduler = new Scheduler({\n *     features : {\n *         eventMenu : {\n *             items : {\n *                 deleteEvent   : false,\n *                 unassignEvent : false\n *             }\n *         }\n *     }\n * });\n * ```\n *\n * Customize existing item:\n *\n * ```javascript\n * const scheduler = new Scheduler({\n *     features : {\n *         eventMenu : {\n *             items : {\n *                 deleteEvent : {\n *                     text : 'Delete booking'\n *                 }\n *             }\n *         }\n *     }\n * });\n * ```\n *\n * Manipulate existing items for all events or specific events:\n *\n * ```javascript\n * const scheduler = new Scheduler({\n *     features : {\n *         eventMenu : {\n *             // Process items before menu is shown\n *             processItems({eventRecord, items}) {\n *                  // Push an extra item for conferences\n *                  if (eventRecord.type === 'conference') {\n *                      items.showSessionItem = {\n *                          text : 'Show sessions',\n *                          onItem({eventRecord}) {\n *                              // ...\n *                          }\n *                      };\n *                  }\n *\n *                  // Do not show menu for secret events\n *                  if (eventRecord.type === 'secret') {\n *                      return false;\n *                  }\n *             }\n *         }\n *     }\n * });\n * ```\n *\n * Note that the {@link #property-menuContext} is applied to the Menu's `item` event, so your `onItem`\n * handler's single event parameter also contains the following properties:\n *\n * - **source** The {@link Scheduler.view.Scheduler} who's UI was right clicked.\n * - **targetElement** The element right clicked on.\n * - **eventRecord** The {@link Scheduler.model.EventModel event record} clicked on.\n * - **resourceRecord** The {@link Scheduler.model.ResourceModel resource record} clicked on.\n * - **assignmentRecord** The {@link Scheduler.model.AssignmentModel assignment record} clicked on.\n *\n * Full information of the menu customization can be found in the \"Customizing the Event menu, the Schedule menu, and the TimeAxisHeader menu\" guide.\n *\n * This feature is **enabled** by default\n *\n * @extends Scheduler/feature/base/TimeSpanMenuBase\n * @demo Scheduler/eventmenu\n * @classtype eventMenu\n * @feature\n */\nexport default class EventMenu extends TimeSpanMenuBase {\n    //region Config\n\n    static get $name() {\n        return 'EventMenu';\n    }\n\n    /**\n     * @member {Object} menuContext\n     * An informational object containing contextual information about the last activation\n     * of the context menu. The base properties are listed below.\n     * @property {Event} menuContext.domEvent The initiating event.\n     * @property {Event} menuContext.event DEPRECATED: The initiating event.\n     * @property {Number[]} menuContext.point The client `X` and `Y` position of the initiating event.\n     * @property {HTMLElement} menuContext.targetElement The target to which the menu is being applied.\n     * @property {Object<String,MenuItemConfig>} menuContext.items The context menu **configuration** items.\n     * @property {Core.data.Model[]} menuContext.selection The record selection in the client (Grid, Scheduler, Gantt or Calendar).\n     * @property {Scheduler.model.EventModel} menuContext.eventRecord The event record clicked on.\n     * @property {Scheduler.model.ResourceModel} menuContext.resourceRecord The resource record clicked on.\n     * @property {Scheduler.model.AssignmentModel} menuContext.assignmentRecord The assignment record clicked on.\n     * @readonly\n     */\n\n    static get configurable() {\n        return {\n            /**\n             * A function called before displaying the menu that allows manipulations of its items.\n             * Returning `false` from this function prevents the menu being shown.\n             *\n             * ```javascript\n             * features         : {\n             *    eventMenu : {\n             *         processItems({ items, eventRecord, assignmentRecord, resourceRecord }) {\n             *             // Add or hide existing items here as needed\n             *             items.myAction = {\n             *                 text   : 'Cool action',\n             *                 icon   : 'b-fa b-fa-fw b-fa-ban',\n             *                 onItem : () => console.log(`Clicked ${eventRecord.name}`),\n             *                 weight : 1000 // Move to end\n             *             };\n             *\n             *            if (!eventRecord.allowDelete) {\n             *                 items.deleteEvent.hidden = true;\n             *             }\n             *         }\n             *     }\n             * },\n             * ```\n             * @param {Object} context An object with information about the menu being shown\n             * @param {Scheduler.model.EventModel} context.eventRecord The record representing the current event\n             * @param {Scheduler.model.ResourceModel} context.resourceRecord The record representing the current resource\n             * @param {Scheduler.model.AssignmentModel} context.assignmentRecord The assignment record\n             * @param {Object<String,MenuItemConfig>} context.items An object containing the {@link Core.widget.MenuItem menu item} configs keyed by their id\n             * @param {Event} context.event The DOM event object that triggered the show\n             * @config {Function}\n             * @preventable\n             */\n            processItems : null,\n\n            type : 'event'\n\n            /**\n             * This is a preconfigured set of items used to create the default context menu.\n             *\n             * The `items` provided by this feature are listed below. These are the property names which you may\n             * configure:\n             *\n             * - `deleteEvent` Deletes the context event.\n             * - `unassignEvent` Unassigns the context event from the current resource (only added when multi assignment is used).\n             *\n             * To remove existing items, set corresponding keys `null`:\n             *\n             * ```javascript\n             * const scheduler = new Scheduler({\n             *     features : {\n             *         eventMenu : {\n             *             items : {\n             *                 deleteEvent   : null,\n             *                 unassignEvent : null\n             *             }\n             *         }\n             *     }\n             * });\n             * ```\n             *\n             * See the feature config in the above example for details.\n             *\n             * @config {Object<String,MenuItemConfig|Boolean|null>} items\n             */\n        };\n    }\n\n    static get pluginConfig() {\n        const config = super.pluginConfig;\n\n        config.chain.push('populateEventMenu');\n\n        return config;\n    }\n\n    //endregion\n\n    //region Events\n\n    /**\n     * This event fires on the owning Scheduler before the context menu is shown for an event. Allows manipulation of the items\n     * to show in the same way as in `processItems`. Returning `false` from a listener prevents the menu from\n     * being shown.\n     * @event eventMenuBeforeShow\n     * @on-owner\n     * @preventable\n     * @param {Scheduler.view.Scheduler} source\n     * @param {Object<String,MenuItemConfig>} items Menu item configs\n     * @param {Scheduler.model.EventModel} eventRecord Event record for which the menu was triggered\n     * @param {Scheduler.model.ResourceModel} resourceRecord Resource record\n     * @param {Scheduler.model.AssignmentModel} assignmentRecord Assignment record, if assignments are used\n     * @param {HTMLElement} eventElement\n     * @param {MouseEvent} [event] Pointer event which triggered the context menu (if any)\n     */\n\n    /**\n     * This event fires on the owning Scheduler when an item is selected in the context menu.\n     * @event eventMenuItem\n     * @on-owner\n     * @param {Scheduler.view.Scheduler} source\n     * @param {Core.widget.MenuItem} item\n     * @param {Scheduler.model.EventModel} eventRecord\n     * @param {Scheduler.model.ResourceModel} resourceRecord\n     * @param {Scheduler.model.AssignmentModel} assignmentRecord Assignment record, if assignments are used\n     * @param {HTMLElement} eventElement\n     */\n\n    /**\n     * This event fires on the owning Scheduler after showing the context menu for an event\n     * @event eventMenuShow\n     * @on-owner\n     * @param {Scheduler.view.Scheduler} source\n     * @param {Core.widget.Menu} menu The menu\n     * @param {Scheduler.model.EventModel} eventRecord Event record for which the menu was triggered\n     * @param {Scheduler.model.ResourceModel} resourceRecord Resource record\n     * @param {Scheduler.model.AssignmentModel} assignmentRecord Assignment record, if assignments are used\n     * @param {HTMLElement} eventElement\n     */\n\n    //endregion\n\n    get resourceStore() {\n        // In horizontal mode, we use store (might be a display store), in vertical & calendar we use resourceStore\n        return this.client.isHorizontal ? this.client.store : this.client.resourceStore;\n    }\n\n    getDataFromEvent(event) {\n        const\n            data             = super.getDataFromEvent(event),\n            eventElement     = data.targetElement,\n            { client }       = this,\n            eventRecord      = client.resolveEventRecord(eventElement),\n            // For vertical mode the resource must be resolved from the event\n            resourceRecord   = eventRecord && (client.resolveResourceRecord(eventElement) || this.resourceStore.last)?.$original,\n            assignmentRecord = eventRecord && client.resolveAssignmentRecord(eventElement);\n\n        return Object.assign(data, {\n            eventElement,\n            eventRecord,\n            resourceRecord,\n            assignmentRecord\n        });\n    }\n\n    getTargetElementFromEvent({ target }) {\n        return target.closest(this.client.eventSelector) || target;\n    }\n\n    shouldShowMenu(eventParams) {\n        return eventParams.eventRecord;\n    }\n\n    /**\n     * Shows context menu for the provided event. If record is not rendered (outside of time span/filtered)\n     * menu won't appear.\n     * @param {Scheduler.model.EventModel} eventRecord Event record to show menu for.\n     * @param {Object} [options]\n     * @param {HTMLElement} options.targetElement Element to align context menu to.\n     * @param {MouseEvent} options.event Browser event.\n     * If provided menu will be aligned according to clientX/clientY coordinates.\n     * If omitted, context menu will be centered to event element.\n     */\n    showContextMenuFor(eventRecord, { targetElement, event } = {}) {\n        if (this.disabled) {\n            return;\n        }\n\n        if (!targetElement) {\n            targetElement = this.getElementFromRecord(eventRecord);\n\n            // If record is not rendered, do nothing\n            if (!targetElement) {\n                return;\n            }\n        }\n\n        DomHelper.triggerMouseEvent(targetElement, this.tiggerEvent);\n    }\n\n    getElementFromRecord(record) {\n        return this.client.getElementsFromEventRecord(record)[0];\n    }\n\n    populateEventMenu({ items, eventRecord, assignmentRecord }) {\n        const { client } = this;\n\n        items.deleteEvent = {\n            disabled : eventRecord.readOnly || assignmentRecord?.readOnly,\n            hidden   : client.readOnly\n        };\n        items.unassignEvent = {\n            disabled : eventRecord.readOnly || assignmentRecord?.readOnly,\n            hidden   : client.readOnly || client.eventStore.usesSingleAssignment\n        };\n    }\n\n    // This generates the fixed, unchanging part of the items and is only called once\n    // to generate the baseItems of the feature.\n    // The dynamic parts which are set by populateEventMenu have this merged into them.\n    changeItems(items) {\n        const { client } = this;\n\n        return Objects.merge({\n            deleteEvent : {\n                text   : 'L{SchedulerBase.Delete event}',\n                icon   : 'b-icon b-icon-trash',\n                weight : 200,\n                onItem({ menu, eventRecord }) {\n                    // We must synchronously push focus back into the menu's triggering\n                    // event so that the our beforeRemove handlers can move focus onwards\n                    // to the closest remaining event.\n                    // Otherwise, the menu's default hide processing on hide will attempt\n                    // to move focus back to the menu's triggering event which will\n                    // by then have been deleted.\n                    const revertTarget = menu.focusInEvent?.relatedTarget;\n                    if (revertTarget) {\n                        revertTarget.focus();\n                        client.navigator.activeItem = revertTarget;\n                    }\n                    client.removeEvents(client.isEventSelected(eventRecord) ? client.selectedEvents : [eventRecord]);\n                }\n            },\n            unassignEvent : {\n                text   : 'L{SchedulerBase.Unassign event}',\n                icon   : 'b-icon b-icon-unassign',\n                weight : 300,\n                onItem({ menu, eventRecord, resourceRecord }) {\n                    // We must synchronously push focus back into the menu's triggering\n                    // event so that the our beforeRemove handlers can move focus onwards\n                    // to the closest remaining event.\n                    // Otherwise, the menu's default hide processing on hide will attempt\n                    // to move focus back to the menu's triggering event which will\n                    // by then have been deleted.\n                    const revertTarget = menu.focusInEvent?.relatedTarget;\n                    if (revertTarget) {\n                        revertTarget.focus();\n                        client.navigator.activeItem = revertTarget;\n                    }\n                    eventRecord.unassign(resourceRecord);\n                }\n            }\n        }, items);\n    }\n}\n\nEventMenu.featureClass = '';\n\nGridFeatureManager.registerFeature(EventMenu, true, 'Scheduler');\nGridFeatureManager.registerFeature(EventMenu, false, 'ResourceHistogram');\n","import TimeSpanMenuBase from '../../Scheduler/feature/base/TimeSpanMenuBase.js';\nimport GridFeatureManager from '../../Grid/feature/GridFeatureManager.js';\nimport ObjectHelper from '../../Core/helper/ObjectHelper.js';\nimport DomHelper from '../../Core/helper/DomHelper.js';\n\n/**\n * @module Scheduler/feature/ScheduleMenu\n */\n\n/**\n * Displays a context menu for empty parts of the schedule. Items are populated in the first place\n * by configurations of this Feature, then by other features and/or application code.\n *\n * ### Default scheduler zone menu items\n *\n * The Scheduler menu feature provides only one item:\n *\n * | Reference      | Text        | Weight | Feature                                  | Description                                                           |\n * |----------------|-------------|--------|------------------------------------------|-----------------------------------------------------------------------|\n * | `addEvent`     | Add event   | 100    | *This feature*                           | Add new event at the target time and resource. Hidden when read-only  |\n * | `pasteEvent`   | Paste event | 110    | {@link Scheduler/feature/EventCopyPaste} | Paste event at the target time and resource. Hidden when is read-only |\n *\n * ### Customizing the menu items\n *\n * The menu items in the Scheduler menu can be customized, existing items can be changed or removed,\n * and new items can be added. This is handled using the `items` config of the feature.\n *\n * Add extra item:\n *\n * ```javascript\n * const scheduler = new Scheduler({\n *     features : {\n *         scheduleMenu : {\n *             items : {\n *                 extraItem : {\n *                     text : 'Extra',\n *                     icon : 'b-fa b-fa-fw b-fa-flag',\n *                     onItem({date, resourceRecord, items}) {\n *                         // Custom date based action\n *                     }\n *                 }\n *             }\n *         }\n *     }\n * });\n * ```\n *\n * Remove existing item:\n *\n * ```javascript\n * const scheduler = new Scheduler({\n *     features : {\n *         scheduleMenu : {\n *             items : {\n *                 addEvent : false\n *             }\n *         }\n *     }\n * });\n * ```\n *\n * Customize existing item:\n *\n * ```javascript\n * const scheduler = new Scheduler({\n *     features : {\n *         scheduleMenu : {\n *             items : {\n *                 addEvent : {\n *                     text : 'Create new booking'\n *                 }\n *             }\n *         }\n *     }\n * });\n * ```\n *\n * Manipulate existing items:\n *\n * ```javascript\n * const scheduler = new Scheduler({\n *     features : {\n *         scheduleMenu : {\n *             // Process items before menu is shown\n *             processItems({date, resourceRecord, items}) {\n *                  // Add an extra item for ancient times\n *                  if (date < new Date(2018, 11, 17)) {\n *                      items.modernize = {\n *                          text : 'Modernize',\n *                          ontItem({date}) {\n *                              // Custom date based action\n *                          }\n *                      };\n *                  }\n *\n *                  // Do not show menu for Sundays\n *                  if (date.getDay() === 0) {\n *                      return false;\n *                  }\n *             }\n *         }\n *     }\n * });\n * ```\n *\n * Full information of the menu customization can be found in the \"Customizing the Event menu, the Schedule menu, and the TimeAxisHeader menu\" guide.\n *\n * This feature is **enabled** by default\n *\n * @demo Scheduler/basic\n * @extends Scheduler/feature/base/TimeSpanMenuBase\n * @classtype scheduleMenu\n * @feature\n */\nexport default class ScheduleMenu extends TimeSpanMenuBase {\n    //region Config\n\n    static get $name() {\n        return 'ScheduleMenu';\n    }\n\n    static get defaultConfig() {\n        return {\n            type : 'schedule',\n\n            /**\n             * This is a preconfigured set of items used to create the default context menu.\n             *\n             * The `items` provided by this feature are listed below. These are the predefined property names which you may\n             * configure:\n             *\n             * - `addEvent` Add an event for at the resource and time indicated by the `contextmenu` event.\n             *\n             * To remove existing items, set corresponding keys `null`:\n             *\n             * ```javascript\n             * const scheduler = new Scheduler({\n             *     features : {\n             *         scheduleMenu : {\n             *             items : {\n             *                 addEvent : null\n             *             }\n             *         }\n             *     }\n             * });\n             * ```\n             *\n             * @config {Object<String,MenuItemConfig|Boolean|null>} items\n             */\n            items : null,\n\n            /**\n             * A function called before displaying the menu that allows manipulations of its items.\n             * Returning `false` from this function prevents the menu being shown.\n             *\n             * ```javascript\n             * features         : {\n             *    scheduleMenu : {\n             *         processItems({ items, date, resourceRecord }) {\n             *            // Add or hide existing items here as needed\n             *            items.myAction = {\n             *                text   : 'Cool action',\n             *                icon   : 'b-fa b-fa-cat',\n             *                onItem : () => console.log(`Clicked on ${resourceRecord.name} at ${date}`),\n             *                weight : 1000 // Move to end\n             *            };\n             *\n             *            if (!resourceRecord.allowAdd) {\n             *                items.addEvent.hidden = true;\n             *            }\n             *        }\n             *    }\n             * },\n             * ```\n             * @param {Object} context An object with information about the menu being shown\n             * @param {Scheduler.model.ResourceModel} context.resourceRecord The record representing the current resource\n             * @param {Date} context.date The clicked date\n             * @param {Object<String,MenuItemConfig>} context.items An object containing the\n             * {@link Core.widget.MenuItem menu item} configs keyed by their id\n             * @param {Event} context.event The DOM event object that triggered the show\n             * @config {Function}\n             * @preventable\n             */\n            processItems : null\n        };\n    }\n\n    static get pluginConfig() {\n        const config = super.pluginConfig;\n\n        config.chain.push('populateScheduleMenu');\n\n        return config;\n    }\n\n    //endregion\n\n    //region Events\n\n    /**\n     * This event fires on the owning Scheduler before the context menu is shown for an event. Allows manipulation of the items\n     * to show in the same way as in `processItems`. Returning `false` from a listener prevents the menu from\n     * being shown.\n     * @event scheduleMenuBeforeShow\n     * @on-owner\n     * @preventable\n     * @param {Scheduler.view.Scheduler} source\n     * @param {Object<String,MenuItemConfig>} items Menu item configs\n     * @param {Scheduler.model.EventModel} eventRecord Event record for which the menu was triggered\n     * @param {Scheduler.model.ResourceModel} resourceRecord Resource record\n     * @param {Scheduler.model.AssignmentModel} assignmentRecord Assignment record, if assignments are used\n     * @param {HTMLElement} eventElement\n     */\n\n    /**\n     * This event fires on the owning Scheduler when an item is selected in the context menu.\n     * @event scheduleMenuItem\n     * @on-owner\n     * @param {Scheduler.view.Scheduler} source\n     * @param {Core.widget.MenuItem} item\n     * @param {Scheduler.model.EventModel} eventRecord\n     * @param {Scheduler.model.ResourceModel} resourceRecord\n     * @param {Scheduler.model.AssignmentModel} assignmentRecord Assignment record, if assignments are used\n     * @param {HTMLElement} eventElement\n     */\n\n    /**\n     * This event fires on the owning Scheduler after showing the context menu for an event\n     * @event scheduleMenuShow\n     * @on-owner\n     * @param {Scheduler.view.Scheduler} source\n     * @param {Core.widget.Menu} menu The menu\n     * @param {Scheduler.model.EventModel} eventRecord Event record for which the menu was triggered\n     * @param {Scheduler.model.ResourceModel} resourceRecord Resource record\n     * @param {Scheduler.model.AssignmentModel} assignmentRecord Assignment record, if assignments are used\n     * @param {HTMLElement} eventElement\n     */\n\n    //endregion\n\n    shouldShowMenu(eventParams) {\n        const\n            { client } = this,\n            {\n                targetElement,\n                resourceRecord\n            } = eventParams,\n            isTimeAxisColumn = client.timeAxisSubGridElement.contains(targetElement);\n\n        return !targetElement.closest(client.eventSelector) && isTimeAxisColumn && !(resourceRecord && resourceRecord.isSpecialRow);\n    }\n\n    getDataFromEvent(event) {\n        // Process event if it wasn't yet processed\n        if (DomHelper.isDOMEvent(event)) {\n            const\n                { client }     = this,\n                cellData       = client.getCellDataFromEvent?.(event),\n                date           = client.getDateFromDomEvent?.(event, 'floor'),\n                // For vertical mode the resource must be resolved from the event\n                resourceRecord = client.resolveResourceRecord(event) || client.isVertical && client.resourceStore.last;\n\n            return ObjectHelper.assign(super.getDataFromEvent(event), cellData, { date, resourceRecord });\n        }\n\n        return event;\n    }\n\n    populateScheduleMenu({ items, resourceRecord, date }) {\n        const { client } = this;\n\n        // Menu can work for ResourceHistogram which doesn't have event store\n        if (!client.readOnly && client.eventStore) {\n            items.addEvent = {\n                text     : 'L{SchedulerBase.Add event}',\n                icon     : 'b-icon b-icon-add',\n                disabled : !resourceRecord || resourceRecord.readOnly || !resourceRecord.isWorkingTime(date),\n                weight   : 100,\n                onItem() {\n                    client.createEvent(date, resourceRecord, client.getRowFor(resourceRecord));\n                }\n            };\n        }\n    }\n}\n\nScheduleMenu.featureClass = '';\n\nGridFeatureManager.registerFeature(ScheduleMenu, true, 'Scheduler');\n","import Base from '../../../Core/Base.js';\nimport '../recurrence/RecurrenceConfirmationPopup.js';\n\n/**\n * @module Scheduler/view/mixin/RecurringEvents\n */\n\n/**\n * A mixin that adds recurring events functionality to the Scheduler.\n *\n * The main purpose of the code in here is displaying a {@link Scheduler.view.recurrence.RecurrenceConfirmationPopup special confirmation}\n * on user mouse dragging/resizing/deleting recurring events and their occurrences.\n *\n * @mixin\n */\nexport default Target => class RecurringEvents extends (Target || Base) {\n    static $name = 'RecurringEvents';\n\n    static configurable = {\n        /**\n         * Enables showing occurrences of recurring events across the scheduler's time axis.\n         *\n         * Enables extra recurrence UI fields in the system-provided event editor (not in Scheduler Pro's task editor).\n         * @config {Boolean}\n         * @default\n         * @category Scheduled events\n         */\n        enableRecurringEvents : false,\n\n        recurrenceConfirmationPopup : {\n            $config : ['lazy'],\n            value   : {\n                type : 'recurrenceconfirmation'\n            }\n        }\n    };\n\n    construct(config) {\n        super.construct(config);\n\n        this.ion({\n            beforeEventDropFinalize   : 'onRecurrableBeforeEventDropFinalize',\n            beforeEventResizeFinalize : 'onRecurrableBeforeEventResizeFinalize',\n            beforeAssignmentDelete    : 'onRecurrableAssignmentBeforeDelete'\n        });\n    }\n\n    changeRecurrenceConfirmationPopup(recurrenceConfirmationPopup, oldRecurrenceConfirmationPopup) {\n        // Widget.reconfigure reither reconfigures an existing instance, or creates a new one, or,\n        // if the configuration is null, destroys the existing instance.\n        const result = this.constructor.reconfigure(oldRecurrenceConfirmationPopup, recurrenceConfirmationPopup, 'recurrenceconfirmation');\n        result.owner = this;\n        return result;\n    }\n\n    findRecurringEventToConfirmDelete(eventRecords) {\n        // show confirmation if we deal with at least one recurring event (or its occurrence)\n        // and if the record is not being edited by event editor (since event editor has its own confirmation)\n        return eventRecords.find(eventRecord => eventRecord.supportsRecurring && (eventRecord.isRecurring || eventRecord.isOccurrence));\n    }\n\n    onRecurrableAssignmentBeforeDelete({ assignmentRecords, context }) {\n        const\n            eventRecords = assignmentRecords.map(as => as.event),\n            eventRecord  = this.findRecurringEventToConfirmDelete(eventRecords);\n\n        if (this.enableRecurringEvents && eventRecord) {\n            this.recurrenceConfirmationPopup.confirm({\n                actionType : 'delete',\n                eventRecord,\n                changerFn() {\n                    context.finalize(true);\n                },\n                cancelFn() {\n                    context.finalize(false);\n                }\n            });\n\n            return false;\n        }\n    }\n\n    onRecurrableBeforeEventDropFinalize({ context }) {\n        if (this.enableRecurringEvents) {\n            const\n                { eventRecords } = context,\n                recurringEvents = eventRecords.filter(eventRecord => eventRecord.supportsRecurring && (eventRecord.isRecurring || eventRecord.isOccurrence));\n\n            if (recurringEvents.length) {\n                context.async = true;\n\n                this.recurrenceConfirmationPopup.confirm({\n                    actionType  : 'update',\n                    eventRecord : recurringEvents[0],\n                    changerFn() {\n                        context.finalize(true);\n                    },\n                    cancelFn() {\n                        context.finalize(false);\n                    }\n                });\n            }\n        }\n    }\n\n    onRecurrableBeforeEventResizeFinalize({ context }) {\n        if (this.enableRecurringEvents) {\n            const\n                { eventRecord } = context,\n                isRecurring     = eventRecord.supportsRecurring && (eventRecord.isRecurring || eventRecord.isOccurrence);\n\n            if (isRecurring) {\n                context.async = true;\n\n                this.recurrenceConfirmationPopup.confirm({\n                    actionType : 'update',\n                    eventRecord,\n                    changerFn() {\n                        context.finalize(true);\n                    },\n                    cancelFn() {\n                        context.finalize(false);\n                    }\n                });\n            }\n        }\n    }\n\n    // Make sure occurrence cache is up-to-date when reassigning events\n    onAssignmentChange({ action, records : assignments }) {\n        if (action !== 'dataset' && Array.isArray(assignments)) {\n            for (const assignment of assignments) {\n                if (assignment.event?.isRecurring && !assignment.event.isBatchUpdating) {\n                    assignment.event.removeOccurrences();\n                }\n            }\n        }\n    }\n\n    /**\n     * Returns occurrences of the provided recurring event across the date range of this Scheduler.\n     * @param  {Scheduler.model.TimeSpan} recurringEvent Recurring event for which occurrences should be retrieved.\n     * @returns {Scheduler.model.TimeSpan[]} Array of the provided timespans occurrences.\n     *\n     * __Empty if the passed event is not recurring, or has no occurrences in the date range.__\n     *\n     * __If the date range encompasses the start point, the recurring event itself will be the first entry.__\n     * @category Data\n     */\n    getOccurrencesFor(recurringEvent) {\n        return this.eventStore.getOccurrencesForTimeSpan(recurringEvent, this.timeAxis.startDate, this.timeAxis.endDate);\n    }\n\n    /**\n     * Internal utility function to remove events. Used when pressing [DELETE] or [BACKSPACE] or when clicking the\n     * delete button in the event editor. Triggers a preventable `beforeEventDelete` or `beforeAssignmentDelete` event.\n     * @param {Scheduler.model.EventModel[]|Scheduler.model.AssignmentModel[]} eventRecords Records to remove\n     * @param {Function} [callback] Optional callback executed after triggering the event but before deletion\n     * @returns {Boolean} Returns `false` if the operation was prevented, otherwise `true`\n     * @internal\n     * @fires beforeEventDelete\n     * @fires beforeAssignmentDelete\n     */\n    async removeEvents(eventRecords, callback = null, popupOwner = this) {\n        const me = this;\n\n        if (!me.readOnly && eventRecords.length) {\n            const context = {\n                finalize(removeRecord = true) {\n                    if (callback) {\n                        callback(removeRecord);\n                    }\n\n                    if (removeRecord !== false) {\n                        if (eventRecords.some(record => record.isOccurrence || record.event?.isOccurrence)) {\n                            eventRecords.forEach(record => record.isOccurrenceAssignment ? record.event.remove() : record.remove());\n                        }\n                        else {\n                            const store = eventRecords[0].isAssignment ? me.assignmentStore : me.eventStore;\n\n                            store.remove(eventRecords);\n                        }\n                    }\n                }\n            };\n\n            let shouldFinalize;\n\n            if (eventRecords[0].isAssignment) {\n                /**\n                 * Fires before an assignment is removed. Can be triggered by user pressing [DELETE] or [BACKSPACE] or\n                 * by the event editor. Can for example be used to display a custom dialog to confirm deletion, in which\n                 * case records should be \"manually\" removed after confirmation:\n                 *\n                 * ```javascript\n                 * scheduler.on({\n                 *    beforeAssignmentDelete({ assignmentRecords, context }) {\n                 *        // Show custom confirmation dialog (pseudo code)\n                 *        confirm.show({\n                 *            listeners : {\n                 *                onOk() {\n                 *                    // Remove the assignments on confirmation\n                 *                    context.finalize(true);\n                 *                },\n                 *                onCancel() {\n                 *                    // do not remove the assignments if \"Cancel\" clicked\n                 *                    context.finalize(false);\n                 *                }\n                 *            }\n                 *        });\n                 *\n                 *        // Prevent default behaviour\n                 *        return false;\n                 *    }\n                 * });\n                 * ```\n                 *\n                 * @event beforeAssignmentDelete\n                 * @param {Scheduler.view.Scheduler} source  The Scheduler instance\n                 * @param {Scheduler.model.EventModel[]} eventRecords  The records about to be deleted\n                 * @param {Object} context  Additional removal context:\n                 * @param {Function} context.finalize  Function to call to finalize the removal.\n                 *      Used to asynchronously decide to remove the records or not. Provide `false` to the function to\n                 *      prevent the removal.\n                 * @param {Boolean} [context.finalize.removeRecords = true]   Provide `false` to the function to prevent\n                 *      the removal.\n                 * @preventable\n                 */\n                shouldFinalize = me.trigger('beforeAssignmentDelete', { assignmentRecords : eventRecords, context });\n            }\n            else {\n                /**\n                 * Fires before an event is removed. Can be triggered by user pressing [DELETE] or [BACKSPACE] or by the\n                 * event editor. Can for example be used to display a custom dialog to confirm deletion, in which case\n                 * records should be \"manually\" removed after confirmation:\n                 *\n                 * ```javascript\n                 * scheduler.on({\n                 *    beforeEventDelete({ eventRecords, context }) {\n                 *        // Show custom confirmation dialog (pseudo code)\n                 *        confirm.show({\n                 *            listeners : {\n                 *                onOk() {\n                 *                    // Remove the events on confirmation\n                 *                    context.finalize(true);\n                 *                },\n                 *                onCancel() {\n                 *                    // do not remove the events if \"Cancel\" clicked\n                 *                    context.finalize(false);\n                 *                }\n                 *            }\n                 *        });\n                 *\n                 *        // Prevent default behaviour\n                 *        return false;\n                 *    }\n                 * });\n                 * ```\n                 *\n                 * @event beforeEventDelete\n                 * @param {Scheduler.view.Scheduler} source  The Scheduler instance\n                 * @param {Scheduler.model.EventModel[]} eventRecords  The records about to be deleted\n                 * @param {Object} context  Additional removal context:\n                 * @param {Function} context.finalize  Function to call to finalize the removal.\n                 *      Used to asynchronously decide to remove the records or not. Provide `false` to the function to\n                 *      prevent the removal.\n                 * @param {Boolean} [context.finalize.removeRecords = true]  Provide `false` to the function to prevent\n                 *      the removal.\n                 * @preventable\n                 */\n                shouldFinalize = me.trigger('beforeEventDelete', { eventRecords, context });\n            }\n\n            if (shouldFinalize !== false) {\n                const recurringEventRecord = eventRecords.find(eventRecord => eventRecord.isRecurring || eventRecord.isOccurrence);\n\n                if (recurringEventRecord) {\n                    me.recurrenceConfirmationPopup.owner = popupOwner;\n                    me.recurrenceConfirmationPopup.confirm({\n                        actionType  : 'delete',\n                        eventRecord : recurringEventRecord,\n                        changerFn() {\n                            context.finalize(true);\n                        },\n                        cancelFn() {\n                            context.finalize(false);\n                        }\n                    });\n                }\n                else {\n                    context.finalize(true);\n                }\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    // This does not need a className on Widgets.\n    // Each *Class* which doesn't need 'b-' + constructor.name.toLowerCase() automatically adding\n    // to the Widget it's mixed in to should implement thus.\n    get widgetClass() {}\n};\n","/**\n * @module Scheduler/view/mixin/CurrentConfig\n */\n\nconst\n    stores = [\n        'eventStore',\n        'taskStore',\n        'assignmentStore',\n        'resourceStore',\n        'dependencyStore',\n        'timeRangeStore',\n        'resourceTimeRangeStore'\n    ],\n    inlineProperties = [\n        'events',\n        'tasks',\n        'resources',\n        'assignments',\n        'dependencies',\n        'timeRanges',\n        'resourceTimeRanges'\n    ];\n\n/**\n * Mixin that makes sure inline data & crud manager data are removed from current config for products using a project.\n * The data is instead inlined in the project (by ProjectModel.js)\n *\n * @mixin\n * @private\n */\nexport default Target => class CurrentConfig extends Target {\n\n    static get $name() {\n        return 'CurrentConfig';\n    }\n\n    preProcessCurrentConfigs(configs) {\n        // Remove inline data on the component\n        for (const prop of inlineProperties) {\n            delete configs[prop];\n        }\n\n        super.preProcessCurrentConfigs(configs);\n    }\n\n    // This function is not meant to be called by any code other than Base#getCurrentConfig().\n    getCurrentConfig(options) {\n        const\n            project = this.project.getCurrentConfig(options),\n            result = super.getCurrentConfig(options);\n\n        // Force project with inline data\n        if (project) {\n            result.project = project;\n\n            const { crudManager } = result;\n\n            // Transfer crud store configs to project (mainly fields)\n            if (crudManager) {\n                for (const store of stores) {\n                    if (crudManager[store]) {\n                        project[store] = crudManager[store];\n                    }\n                }\n            }\n\n            if (Object.keys(project).length === 0) {\n                delete result.project;\n            }\n        }\n\n        // Store (resource store) data is included in project\n        delete result.data;\n\n        // Remove CrudManager, since data will be placed inline\n        delete result.crudManager;\n\n        return result;\n    }\n\n    get widgetClass() {}\n};\n","import Base from '../../../Core/Base.js';\nimport Navigator from '../../../Core/helper/util/Navigator.js';\nimport Delayable from '../../../Core/mixin/Delayable.js';\nimport Location from '../../../Grid/util/Location.js';\n\n/**\n * @module Scheduler/view/mixin/EventNavigation\n */\n\nconst\n    preventDefault  = e => e.preventDefault(),\n    isArrowKey = {\n        ArrowRight : 1,\n        ArrowLeft  : 1,\n        ArrowUp    : 1,\n        ArrowDown  : 1\n    },\n    animate100 = {\n        animate : 100\n    },\n    emptyObject = Object.freeze({});\n\n/**\n * Mixin that tracks event or assignment selection by clicking on one or more events in the scheduler.\n * @mixin\n */\nexport default Target => class EventNavigation extends Delayable(Target || Base) {\n    static get $name() {\n        return 'EventNavigation';\n    }\n\n    //region Default config\n\n    static get configurable() {\n        return {\n            /**\n             * A config object to use when creating the {@link Core.helper.util.Navigator}\n             * to use to perform keyboard navigation in the timeline.\n             * @config {NavigatorConfig}\n             * @default\n             * @category Misc\n             * @internal\n             */\n            navigator : {\n                allowCtrlKey   : true,\n                scrollSilently : true,\n                keys           : {\n                    Space     : 'onEventSpaceKey',\n                    Enter     : 'onEventEnterKey',\n                    Delete    : 'onDeleteKey',\n                    Backspace : 'onDeleteKey',\n                    ArrowUp   : 'onArrowUpKey',\n                    ArrowDown : 'onArrowDownKey',\n                    Escape    : 'onEscapeKey',\n\n                    // These are processed by GridNavigation's handlers\n                    Tab         : 'onTab',\n                    'SHIFT+Tab' : 'onShiftTab'\n                }\n            },\n\n            isNavigationKey : {\n                ArrowDown  : 1,\n                ArrowUp    : 1,\n                ArrowLeft  : 1,\n                ArrowRight : 1\n            }\n        };\n    }\n\n    static get defaultConfig() {\n        return {\n            /**\n             * A CSS class name to add to focused events.\n             * @config {String}\n             * @default\n             * @category CSS\n             * @private\n             */\n            focusCls : 'b-active',\n\n            /**\n             * Allow using [Delete] and [Backspace] to remove events/assignments\n             * @config {Boolean}\n             * @default\n             * @category Misc\n             */\n            enableDeleteKey : true,\n\n            // Number in milliseconds to buffer handlers execution. See `Delayable.throttle` function docs.\n            onDeleteKeyBuffer      : 500,\n            navigatePreviousBuffer : 200,\n            navigateNextBuffer     : 200,\n\n            testConfig : {\n                onDeleteKeyBuffer : 1\n            }\n        };\n    }\n\n    //endregion\n\n    //region Events\n\n    /**\n     * Fired when a user gesture causes the active item to change.\n     * @event navigate\n     * @param {Event} event The browser event which instigated navigation. May be a click or key or focus event.\n     * @param {HTMLElement|null} item The newly active item, or `null` if focus moved out.\n     * @param {HTMLElement|null} oldItem The previously active item, or `null` if focus is moving in.\n     */\n\n    //endregion\n\n    construct(config) {\n        const me = this;\n\n        me.isInTimeAxis = me.isInTimeAxis.bind(me);\n        me.onDeleteKey = me.throttle(me.onDeleteKey, me.onDeleteKeyBuffer, me);\n\n        super.construct(config);\n    }\n\n    changeNavigator(navigator) {\n        const me = this;\n\n        me.getConfig('subGridConfigs');\n\n        return new Navigator(me.constructor.mergeConfigs({\n            ownerCmp         : me,\n            target           : me.timeAxisSubGridElement,\n            processEvent     : me.processEvent,\n            itemSelector     : `.${me.eventCls}-wrap`,\n            focusCls         : me.focusCls,\n            navigatePrevious : me.throttle(me.navigatePrevious, { delay : me.navigatePreviousBuffer, throttled : preventDefault }),\n            navigateNext     : me.throttle(me.navigateNext, { delay : me.navigateNextBuffer, throttled : preventDefault })\n        }, navigator));\n    }\n\n    doDestroy() {\n        this.navigator.destroy();\n        super.doDestroy();\n    }\n\n    isInTimeAxis(record) {\n        // If event is hidden by workingTime configs, horizontal mapper would raise a flag on instance meta\n        // We still need to check if time span is included in axis\n        return !record.instanceMeta(this).excluded && this.timeAxis.isTimeSpanInAxis(record);\n    }\n\n    onElementKeyDown(keyEvent) {\n        const\n            me              = this,\n            { navigator }   = me;\n\n        // If we're focused in the time axis, and *not* on an event, then ENTER means\n        // jump down into the first visible assignment in the cell.\n        if (me.focusedCell?.rowIndex !== -1 && me.focusedCell?.column === me.timeAxisColumn && !keyEvent.target.closest(navigator.itemSelector) && keyEvent.key === 'Enter') {\n            const firstAssignment = me.getFirstVisibleAssignment();\n            if (firstAssignment) {\n                me.navigateTo(firstAssignment, {\n                    uiEvent : keyEvent\n                });\n                return false;\n            }\n        }\n        else {\n            super.onElementKeyDown?.(keyEvent);\n        }\n    }\n\n    getFirstVisibleAssignment(location = this.focusedCell) {\n        const\n            me = this,\n            {\n                currentOrientation,\n                rowManager,\n                eventStore\n            } = me;\n\n        if (me.isHorizontal) {\n            let renderedEvents = currentOrientation.rowMap.get(rowManager.getRow(location.rowIndex));\n\n            if (renderedEvents?.length) {\n                return renderedEvents[0]?.elementData.assignmentRecord;\n            }\n            else {\n                renderedEvents = currentOrientation.resourceMap.get(location.id)?.eventsData;\n                if (renderedEvents?.length) {\n                    // When events are gathered from resource, we need to check they're available\n                    return renderedEvents.filter(e => eventStore.isAvailable(e.eventRecord))[0]?.assignmentRecord;\n                }\n            }\n        }\n        else {\n            const\n                firstResource = [...currentOrientation.resourceMap.values()][0],\n                renderedEvents = firstResource && Object.values(firstResource);\n\n            if (renderedEvents?.length) {\n                return renderedEvents.filter(e => eventStore.isAvailable(e.renderData.eventRecord))[0].renderData.assignmentRecord;\n            }\n        }\n    }\n\n    onGridBodyFocusIn(focusEvent) {\n        const isGridCellFocus = focusEvent.target.closest(this.focusableSelector);\n\n        // Event navigation only has a say when navigation is inside the TimeAxisSubGrid\n        if (this.timeAxisSubGridElement.contains(focusEvent.target)) {\n            const\n                me                  = this,\n                { navigationEvent } = me,\n                { target }          = focusEvent,\n                eventFocus          = target.closest(me.navigator.itemSelector),\n                destinationCell     = eventFocus ? me.normalizeCellContext({\n                    rowIndex : me.isVertical ? 0\n                        : me.resourceStore.indexOf(me.resolveResourceRecord(target)),\n                    column : me.timeAxisColumn,\n                    target\n                }) : new Location(target);\n\n            // Don't take over what the event navigator does if it's doing event navigation.\n            // Just silently cache our actionable location.\n            if (eventFocus) {\n                const { _focusedCell } = me;\n\n                me._focusedCell = destinationCell;\n                me.onCellNavigate?.(me, _focusedCell, destinationCell, navigationEvent, true);\n                return;\n            }\n\n            // Depending on how we got here, try to focus the first event in the cell *if we're in a cell*.\n            if (isGridCellFocus && (!navigationEvent || isArrowKey[navigationEvent.key])) {\n                const firstAssignment = me.getFirstVisibleAssignment(destinationCell);\n                if (firstAssignment) {\n                    me.navigateTo(firstAssignment, {\n                        // Only change scroll if focus came from key press\n                        scrollIntoView : Boolean(navigationEvent && navigationEvent.type !== 'mousedown'),\n                        uiEvent        : navigationEvent || focusEvent\n                    });\n                    return;\n                }\n            }\n        }\n\n        // Grid-level focus movement, let superclass handle it.\n        if (isGridCellFocus) {\n            super.onGridBodyFocusIn(focusEvent);\n        }\n    }\n\n    /*\n     * Override of GridNavigation#focusCell method to handle the TimeAxisColumn.\n     * Not needed until we implement full keyboard accessibility.\n     */\n    accessibleFocusCell(cellSelector, options) {\n        const me                     = this;\n\n        cellSelector = me.normalizeCellContext(cellSelector);\n\n        if (cellSelector.columnId === me.timeAxisColumn.id) {\n            // const lastFocusedCell        = me.lastFocusedCell = me._focusedCell,\n            //     lastFocusedCellElement = lastFocusedCell && me.getCell(lastFocusedCell),\n            //     newCell = me.getCell(cellSelector),\n            //     // Flag if the lastFocusedCellElement is DOCUMENT_POSITION_FOLLOWING newCell\n            //     backwards = !!(lastFocusedCellElement && (newCell.compareDocumentPosition(lastFocusedCellElement) & 4));\n\n            // // Navigating into the Scheduler, need to enable this back (for situations where we know focus was requested as a result of a keyboard input)...\n            // let newEvent = me.getRecordFromElement(newCell);\n\n            // me._focusedCell = cellSelector;\n\n            // // Scheduler where row is a Resource which might have many events\n            // // TODO: https://app.assembla.com/spaces/bryntum/tickets/6526 this class should\n            // // not know about Gantt.\n            // if (!newEvent.isTask) {\n            //     const resourceEvents = newEvent.getEvents().filter(me.isInTimeAxis).sort(sortByStartDate);\n            //     newEvent = resourceEvents[backwards ? resourceEvents.length - 1 : 0];\n            // }\n\n            // options.event.eventRecord = newEvent;\n\n            // if (newEvent && me.activeEvent !== newEvent) {\n            //     lastFocusedCellElement && lastFocusedCellElement.classList.remove('b-focused');\n            //     me.scrollResourceEventIntoView(me.store.getById(cellSelector.id), newEvent, {\n            //         animate : 100\n            //     }).then(() => {\n            //         me.activeEvent = newEvent;\n            //     });\n            // }\n        }\n        else {\n            return super.focusCell(cellSelector, options);\n        }\n    }\n\n    // Interface method to extract the navigated to record from a populated 'navigate' event.\n    // Gantt, Scheduler and Calendar handle event differently, adding different properties to it.\n    // This method is meant to be overridden to return correct target from event\n    normalizeTarget(event) {\n        return event.assignmentRecord;\n    }\n\n    getPrevious(assignmentRecord, isDelete) {\n        const\n            me                     = this,\n            { resourceStore }      = me,\n            { eventSorter }        = me.currentOrientation,\n            // start/end dates are required to limit time span to look at in case recurrence feature is enabled\n            { startDate, endDate } = me.timeAxis,\n            eventRecord            = assignmentRecord.event,\n            resourceEvents         = me.eventStore\n                .getEvents({\n                    resourceRecord : assignmentRecord.resource,\n                    startDate,\n                    endDate\n                })\n                .filter(this.isInTimeAxis)\n                .sort(eventSorter);\n\n        let resourceRecord = assignmentRecord.resource,\n            previousEvent  = resourceEvents[resourceEvents.indexOf(eventRecord) - 1];\n\n        // At first event for resource, traverse up the resource store.\n        if (!previousEvent) {\n            // If we are deleting an event, skip other instances of the event which we may encounter\n            // due to multi-assignment.\n            for (\n                let rowIdx = resourceStore.indexOf(resourceRecord) - 1;\n                (!previousEvent || (isDelete && previousEvent === eventRecord)) && rowIdx >= 0;\n                rowIdx--\n            ) {\n                resourceRecord = resourceStore.getAt(rowIdx);\n                const events = me.eventStore\n                    .getEvents({\n                        resourceRecord,\n                        startDate,\n                        endDate\n                    })\n                    .filter(me.isInTimeAxis)\n                    .sort(eventSorter);\n\n                previousEvent = events.length && events[events.length - 1];\n            }\n        }\n\n        return me.assignmentStore.getAssignmentForEventAndResource(previousEvent, resourceRecord);\n    }\n\n    navigatePrevious(keyEvent) {\n        const\n            me                 = this,\n            previousAssignment = me.getPrevious(me.normalizeTarget(keyEvent));\n\n        keyEvent.preventDefault();\n        if (previousAssignment) {\n            if (!keyEvent.ctrlKey) {\n                me.clearEventSelection();\n            }\n            return me.navigateTo(previousAssignment, {\n                uiEvent : keyEvent\n            });\n        }\n\n        // No previous event/task, fall back to Grid's handling of this gesture\n        return me.doGridNavigation(keyEvent);\n    }\n\n    getNext(assignmentRecord, isDelete) {\n        const\n            me                     = this,\n            { resourceStore }      = me,\n            { eventSorter }        = me.currentOrientation,\n            // start/end dates are required to limit time span to look at in case recurrence feature is enabled\n            { startDate, endDate } = me.timeAxis,\n            eventRecord            = assignmentRecord.event,\n            resourceEvents         = me.eventStore\n                .getEvents({\n                    resourceRecord : assignmentRecord.resource,\n                    // start/end are required to limit time\n                    startDate,\n                    endDate\n                })\n                .filter(this.isInTimeAxis)\n                .sort(eventSorter);\n\n        let resourceRecord = assignmentRecord.resource,\n            nextEvent      = resourceEvents[resourceEvents.indexOf(eventRecord) + 1];\n\n        // At last event for resource, traverse down the resource store\n        if (!nextEvent) {\n            // If we are deleting an event, skip other instances of the event which we may encounter\n            // due to multi-assignment.\n            for (let rowIdx = resourceStore.indexOf(resourceRecord) + 1; (!nextEvent || (isDelete && nextEvent === eventRecord)) && rowIdx < resourceStore.count; rowIdx++) {\n                resourceRecord = resourceStore.getAt(rowIdx);\n                const events = me.eventStore\n                    .getEvents({\n                        resourceRecord,\n                        startDate,\n                        endDate\n                    })\n                    .filter(me.isInTimeAxis)\n                    .sort(eventSorter);\n\n                nextEvent = events[0];\n            }\n        }\n\n        return me.assignmentStore.getAssignmentForEventAndResource(nextEvent, resourceRecord);\n    }\n\n    navigateNext(keyEvent) {\n        const\n            me             = this,\n            nextAssignment = me.getNext(me.normalizeTarget(keyEvent));\n\n        keyEvent.preventDefault();\n        if (nextAssignment) {\n            if (!keyEvent.ctrlKey) {\n                me.clearEventSelection();\n            }\n            return me.navigateTo(nextAssignment, {\n                uiEvent : keyEvent\n            });\n        }\n\n        // No next event/task, fall back to Grid's handling of this gesture\n        return me.doGridNavigation(keyEvent);\n    }\n\n    doGridNavigation(keyEvent) {\n        if (!keyEvent.handled && keyEvent.key.indexOf('Arrow') === 0) {\n            this[`navigate${keyEvent.key.substring(5)}ByKey`](keyEvent);\n        }\n    }\n\n    async navigateTo(targetAssignment, {\n        scrollIntoView = true,\n        uiEvent        = {}\n    } = emptyObject) {\n        const\n            me                      = this,\n            { navigator }           = me,\n            { skipScrollIntoView }  = navigator;\n\n        if (targetAssignment) {\n            if (scrollIntoView) {\n                // No key processing during scroll\n                navigator.disabled = true;\n                await me.scrollAssignmentIntoView(targetAssignment, animate100);\n                navigator.disabled = false;\n            }\n            else {\n                navigator.skipScrollIntoView = true;\n            }\n\n            // Panel can be destroyed before promise is resolved\n            // Perform a sanity check to make sure element is still in the DOM (syncIdMap actually).\n            if (!me.isDestroyed && this.getElementFromAssignmentRecord(targetAssignment)) {\n                me.activeAssignment = targetAssignment;\n                navigator.skipScrollIntoView = skipScrollIntoView;\n                navigator.trigger('navigate', {\n                    event : uiEvent,\n                    item  : me.getElementFromAssignmentRecord(targetAssignment).closest(navigator.itemSelector)\n                });\n            }\n        }\n    }\n\n    set activeAssignment(assignmentRecord) {\n        const assignmentEl = this.getElementFromAssignmentRecord(assignmentRecord, true);\n\n        if (assignmentEl) {\n            this.navigator.activeItem = assignmentEl;\n        }\n    }\n\n    get activeAssignment() {\n        const { activeItem } = this.navigator;\n\n        if (activeItem) {\n            return this.resolveAssignmentRecord(activeItem);\n        }\n    }\n\n    get previousActiveEvent() {\n        const { previousActiveItem } = this.navigator;\n\n        if (previousActiveItem) {\n            return this.resolveEventRecord(previousActiveItem);\n        }\n    }\n\n    processEvent(keyEvent) {\n        const\n            me           = this,\n            eventElement = keyEvent.target.closest(me.eventSelector);\n\n        if (!me.navigator.disabled && eventElement) {\n            keyEvent.assignmentRecord = me.resolveAssignmentRecord(eventElement);\n            keyEvent.eventRecord = me.resolveEventRecord(eventElement);\n            keyEvent.resourceRecord = me.resolveResourceRecord(eventElement);\n        }\n\n        return keyEvent;\n    }\n\n    onDeleteKey(keyEvent) {\n        const me = this;\n        if (!me.readOnly && me.enableDeleteKey) {\n            const records = me.eventStore.usesSingleAssignment ? me.selectedEvents : me.selectedAssignments;\n\n            me.removeEvents(records.filter(r => !r.readOnly));\n        }\n    }\n\n    onArrowUpKey(keyEvent) {\n        this.focusCell({\n            rowIndex : this.focusedCell.rowIndex - 1,\n            column   : this.timeAxisColumn\n        });\n        keyEvent.handled = true;\n    }\n\n    onArrowDownKey(keyEvent) {\n        if (this.focusedCell.rowIndex < this.resourceStore.count - 1) {\n            this.focusCell({\n                rowIndex : this.focusedCell.rowIndex + 1,\n                column   : this.timeAxisColumn\n            });\n            keyEvent.handled = true;\n        }\n    }\n\n    onEscapeKey(keyEvent) {\n        if (!keyEvent.target.closest('.b-dragging')) {\n            this.focusCell({\n                rowIndex : this.focusedCell.rowIndex,\n                column   : this.timeAxisColumn\n            });\n            keyEvent.handled = true;\n        }\n    }\n\n    onEventSpaceKey(keyEvent) {\n        // Empty, to be chained by features\n    }\n\n    onEventEnterKey(keyEvent) {\n        // Empty, to be chained by features\n    }\n\n    get isActionableLocation() {\n        // Override from grid if the Navigator's location is an event (or task if we're in Gantt)\n        // Being focused on a task/event means that it's *not* actionable. It's not valid to report\n        // that we're \"inside\" the cell in a TimeLine, so ESC must not attempt to focus the cell.\n        if (!this.navigator.activeItem) {\n            return super.isActionableLocation;\n        }\n    }\n\n    // This does not need a className on Widgets.\n    // Each *Class* which doesn't need 'b-' + constructor.name.toLowerCase() automatically adding\n    // to the Widget it's mixed in to should implement thus.\n    get widgetClass() {}\n};\n"],"names":["locale","localeName","localeDesc","localeCode","Object","newEvent","ResourceInfoColumn","eventCountText","data","Dependencies","from","to","valid","invalid","DependencyType","SS","SF","FS","FF","StartToStart","StartToEnd","EndToStart","EndToEnd","short","long","DependencyEdit","From","To","Type","Lag","Save","Delete","Cancel","EventEdit","Name","Resource","Start","End","Repeat","EventDrag","eventOverlapsExisting","noDropOutsideTimeline","SchedulerBase","TimeAxisHeaderMenu","pickZoomLevel","activeDateRange","startText","endText","todayText","EventCopyPaste","copyEvent","cutEvent","pasteEvent","EventFilter","filterEvents","byName","TimeRanges","showCurrentTimeLine","PresetManager","secondAndMinute","displayDateFormat","name","minuteAndHour","topDateFormat","hourAndDay","middleDateFormat","day","week","dayAndWeek","dayAndMonth","weekAndDay","weekAndMonth","weekAndDayLetter","weekDateAndMonth","monthAndYear","year","manyYears","RecurrenceConfirmationPopup","Yes","width","RecurrenceLegend","Daily","Weekly on {1}","days","Monthly on {1}","Yearly on {1} of {2}","months","Every {0} days","interval","Every {0} weeks on {1}","Every {0} months on {1}","Every {0} years on {1} of {2}","position1","position2","position3","position4","position5","weekday","daysFormat","position","RecurrenceEditor","Frequency","Every","DAILYintervalUnit","WEEKLYintervalUnit","MONTHLYintervalUnit","YEARLYintervalUnit","Each","RecurrenceDaysCombo","RecurrencePositionsCombo","RecurrenceStopConditionCombo","Never","After","RecurrenceFrequencyCombo","None","Weekly","Monthly","Yearly","RecurrenceCombo","Custom","Summary","date","ScheduleRangeCombo","completeview","currentview","daterange","completedata","SchedulerExportDialog","ExcelExporter","CrudManagerView","serverResponseLabel","DurationColumn","Duration","LocaleHelper","publishLocale","Target","AttachToProjectMixin","$name","afterConstruct","me","projectHolder","client","grid","project","projectSubscribers","push","attachToProject","attachToResourceStore","resourceStore","attachToEventStore","eventStore","attachToAssignmentStore","assignmentStore","attachToDependencyStore","dependencyStore","attachToCalendarManagerStore","calendarManagerStore","detachListeners","_project","store","engineStoreNames","ProjectConsumer","Base","declarable","configurable","projectModelClass","ProjectModel","destroyStores","startConfigure","config","getConfig","changeProject","oldProject","projectStoreNames","projectDataNames","constructor","projectCallbacks","Set","buildingProjectConfig","isModel","isConfiguring","crudManager","isCrudManager","storeName","dataName","_sharedProject","sharedProject","isEventStoreMixin","autoLoad","count","delayAutoLoad","some","chain","updateProject","projectListeners","_crudManager","thisObj","ion","forEach","subscriber","load","trigger","changeCrudManager","assign","onProjectDataReady","whenVisible","size","callback","clear","onTimeZoneChange","timeZone","oldTimeZone","startDate","TimeZoneHelper","fromTimeZone","toTimeZone","whenProjectReady","isEngineReady","add","_this$project$isEngin","_this$project","Boolean","call","doDestroy","isDestroyed","destroy","projectStores","map","keys","reduce","result","setupProjectStores","cls","meta","dataReady","change","timeZoneChange","storeConfigs","previousDataName","defineProperty","class","prototype","get","_this$project$storeNa","records","createDataUpdater","createStoreDescriptor","setupConfigs","StringHelper","capitalize","listeners","clsProto","storeNameCap","oldStore","_store","storeProject","isProjectModel","initializingProject","_subscriber","relayProjectDataChange","event","_objectSpread","source","widgetClass","ClockTemplate","defaultConfig","minuteHeight","minuteTop","hourHeight","hourTop","handLeft","div","document","createElement","scheduler","template","mode","DateHelper","format","encodeHtml","text","generateContent","innerHTML","updateDateIndicator","el","hourIndicatorEl","querySelector","minuteIndicatorEl","BrowserHelper","isBrowserEnv","style","transform","getHours","getMinutes","_mode","unitLessThanDay","compareUnits","timeAxisViewModel","timeResolution","unit","formatContainsHourInfo","_template","_$name","TimeSpanMenuBase","ContextMenuBase","Popup","type","localizableProperties","align","autoShow","autoClose","closeAction","modal","centered","scrollAction","constrainTo","globalThis","draggable","closable","floating","eventRecord","bbar","defaults","localeClass","items","changeSingleButton","weight","color","onClick","changeMultipleButton","cancelButton","widgetMap","onChangeMultipleButtonClick","processMultipleRecords","hide","onChangeSingleButtonClick","processSingleRecord","onCancelButtonClick","cancelFn","onRecurrenceClose","confirm","prop","updatePopupContent","show","actionType","isMaster","isRecurring","L","html","title","changerFn","finalizerFn","beginBatch","endBatch","_firstOccurrence","firstOccurrence","recurrence","forEachOccurrence","occurrence","isFirst","index","convertToRealEvent","recurrenceRule","updateLocalization","initClass","Combo","buildItems","addNone","value","_defineProperty","editable","displayField","valueField","localizeDisplayFields","allDaysValueAsArray","allDaysValue","join","defaultValue","workingDaysValue","filter","nonWorkingDays","nonWorkingDaysValue","splitCls","_weekDays","weekDays","concat","weekStartDay","dayNames","getDayNames","RecurrenceDayRuleEncoder","encodeDay","slice","Array","isArray","findRecord","RecurrenceDaysButtonGroup","ButtonGroup","toggleable","construct","columns","updateItemText","item","decodeDay","getDayName","substring","__items","onLocaleChange","widgetClassList","classList","RecurrenceMonthDaysButtonGroup","minValue","maxValue","RecurrenceMonthsButtonGroup","getMonthNames","getMonthName","placeholder","_recurrence","endDate","maxPosition","buildDayNumbers","ArrayHelper","populate","i","split","parseInt","RecurrenceEditorPanel","Panel","updateRecord","record","frequencyField","daysButtonField","monthDaysButtonField","monthsButtonField","monthDaysRadioField","positionAndDayRadioField","stopRecurrenceField","timeSpan","length","getDay","monthDays","getDate","getMonth","positions","check","isPainted","uncheck","syncEventRecord","values","getValues","w","disabled","set","toggleStopFields","countField","endDateField","enable","disable","onMonthDaysRadioFieldChange","checked","isWidgetAvailableForFrequency","onPositionAndDayRadioFieldChange","daysCombo","positionsCombo","onStopRecurrenceFieldChange","widget","frequency","forFrequency","includes","onFrequencyFieldChange","oldValue","queryAll","intervalField","hidden","hint","toggleFieldsState","label","onChange","min","required","toggleGroup","flex","EventMenu","processItems","pluginConfig","isHorizontal","getDataFromEvent","_ref","eventElement","targetElement","resolveEventRecord","resourceRecord","resolveResourceRecord","last","$original","assignmentRecord","resolveAssignmentRecord","getTargetElementFromEvent","target","closest","eventSelector","shouldShowMenu","eventParams","showContextMenuFor","getElementFromRecord","DomHelper","triggerMouseEvent","tiggerEvent","getElementsFromEventRecord","populateEventMenu","deleteEvent","readOnly","unassignEvent","usesSingleAssignment","changeItems","Objects","merge","icon","onItem","menu","_menu$focusInEvent","revertTarget","focusInEvent","relatedTarget","focus","navigator","activeItem","removeEvents","isEventSelected","selectedEvents","_menu$focusInEvent2","unassign","featureClass","GridFeatureManager","registerFeature","ScheduleMenu","isTimeAxisColumn","timeAxisSubGridElement","contains","isSpecialRow","isDOMEvent","_client$getCellDataFr","_client$getDateFromDo","cellData","getCellDataFromEvent","getDateFromDomEvent","isVertical","ObjectHelper","populateScheduleMenu","addEvent","isWorkingTime","createEvent","getRowFor","_class","RecurringEvents","beforeEventDropFinalize","beforeEventResizeFinalize","beforeAssignmentDelete","changeRecurrenceConfirmationPopup","recurrenceConfirmationPopup","oldRecurrenceConfirmationPopup","reconfigure","owner","findRecurringEventToConfirmDelete","eventRecords","find","supportsRecurring","isOccurrence","onRecurrableAssignmentBeforeDelete","assignmentRecords","context","as","enableRecurringEvents","finalize","onRecurrableBeforeEventDropFinalize","recurringEvents","async","onRecurrableBeforeEventResizeFinalize","onAssignmentChange","action","assignments","assignment","_assignment$event","isBatchUpdating","removeOccurrences","getOccurrencesFor","recurringEvent","getOccurrencesForTimeSpan","timeAxis","popupOwner","removeRecord","_record$event","isOccurrenceAssignment","remove","isAssignment","shouldFinalize","recurringEventRecord","$config","stores","inlineProperties","CurrentConfig","preProcessCurrentConfigs","configs","getCurrentConfig","options","preventDefault","e","isArrowKey","ArrowRight","ArrowLeft","ArrowUp","ArrowDown","animate100","animate","emptyObject","freeze","EventNavigation","Delayable","allowCtrlKey","scrollSilently","Space","Enter","Backspace","Escape","Tab","isNavigationKey","focusCls","enableDeleteKey","onDeleteKeyBuffer","navigatePreviousBuffer","navigateNextBuffer","testConfig","isInTimeAxis","bind","onDeleteKey","throttle","changeNavigator","Navigator","mergeConfigs","ownerCmp","processEvent","itemSelector","eventCls","navigatePrevious","delay","throttled","navigateNext","instanceMeta","excluded","isTimeSpanInAxis","onElementKeyDown","keyEvent","_me$focusedCell","_me$focusedCell2","focusedCell","rowIndex","column","timeAxisColumn","key","firstAssignment","getFirstVisibleAssignment","navigateTo","uiEvent","_super$onElementKeyDo","location","currentOrientation","rowManager","_renderedEvents","renderedEvents","rowMap","getRow","_renderedEvents$","elementData","_currentOrientation$r","_renderedEvents2","resourceMap","id","eventsData","_renderedEvents$filte","isAvailable","firstResource","renderData","onGridBodyFocusIn","focusEvent","isGridCellFocus","focusableSelector","navigationEvent","eventFocus","destinationCell","normalizeCellContext","indexOf","Location","_me$onCellNavigate","_focusedCell","onCellNavigate","scrollIntoView","accessibleFocusCell","cellSelector","columnId","focusCell","normalizeTarget","getPrevious","isDelete","eventSorter","resourceEvents","getEvents","resource","sort","previousEvent","rowIdx","getAt","events","getAssignmentForEventAndResource","previousAssignment","ctrlKey","clearEventSelection","doGridNavigation","getNext","nextEvent","nextAssignment","handled","targetAssignment","skipScrollIntoView","scrollAssignmentIntoView","getElementFromAssignmentRecord","activeAssignment","assignmentEl","previousActiveEvent","previousActiveItem","selectedAssignments","r","onArrowUpKey","onArrowDownKey","onEscapeKey","onEventSpaceKey","onEventEnterKey","isActionableLocation"],"mappings":";;;;;;AAEA,MAAMA,MAAM,GAAG;EACXC,UAAU,EAAG,IAAI;EACjBC,UAAU,EAAG,cAAc;EAC3BC,UAAU,EAAG,OAAO;EACpBC,MAAM,EAAG;IACLC,QAAQ,EAAG;GACd;EACDC,kBAAkB,EAAG;IACjBC,cAAc,EAAGC,IAAI,IAAIA,IAAI,GAAG,QAAQ,IAAIA,IAAI,KAAK,CAAC,GAAG,GAAG,GAAG,EAAE;GACpE;EACDC,YAAY,EAAG;IACXC,IAAI,EAAM,MAAM;IAChBC,EAAE,EAAQ,IAAI;IACdC,KAAK,EAAK,OAAO;IACjBC,OAAO,EAAG;GACb;EACDC,cAAc,EAAG;IACbC,EAAE,EAAa,IAAI;IACnBC,EAAE,EAAa,IAAI;IACnBC,EAAE,EAAa,IAAI;IACnBC,EAAE,EAAa,IAAI;IACnBC,YAAY,EAAG,gBAAgB;IAC/BC,UAAU,EAAK,iBAAiB;IAChCC,UAAU,EAAK,iBAAiB;IAChCC,QAAQ,EAAO,kBAAkB;IACjCC,KAAK,EAAU,CACX,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,IAAI,CACP;IACDC,IAAI,EAAG,CACH,gBAAgB,EAChB,iBAAiB,EACjB,iBAAiB,EACjB,kBAAkB;GAEzB;EACDC,cAAc,EAAG;IACbC,IAAI,EAAgB,MAAM;IAC1BC,EAAE,EAAkB,IAAI;IACxBC,IAAI,EAAgB,MAAM;IAC1BC,GAAG,EAAiB,KAAK;IACzB,iBAAiB,EAAG,iBAAiB;IACrCC,IAAI,EAAgB,MAAM;IAC1BC,MAAM,EAAc,QAAQ;IAC5BC,MAAM,EAAc,QAAQ;IAC5Bb,YAAY,EAAQ,gBAAgB;IACpCC,UAAU,EAAU,cAAc;IAClCC,UAAU,EAAU,cAAc;IAClCC,QAAQ,EAAY;GACvB;EACDW,SAAS,EAAG;IACRC,IAAI,EAAW,MAAM;IACrBC,QAAQ,EAAO,UAAU;IACzBC,KAAK,EAAU,OAAO;IACtBC,GAAG,EAAY,KAAK;IACpBP,IAAI,EAAW,MAAM;IACrBC,MAAM,EAAS,QAAQ;IACvBC,MAAM,EAAS,QAAQ;IACvB,YAAY,EAAG,YAAY;IAC3BM,MAAM,EAAS;GAClB;EACDC,SAAS,EAAG;IACRC,qBAAqB,EAAG,iDAAiD;IACzEC,qBAAqB,EAAG;GAC3B;EACDC,aAAa,EAAG;IACZ,WAAW,EAAQ,WAAW;IAC9B,cAAc,EAAK,cAAc;IACjC,gBAAgB,EAAG;GACtB;EACDC,kBAAkB,EAAG;IACjBC,aAAa,EAAK,MAAM;IACxBC,eAAe,EAAG,YAAY;IAC9BC,SAAS,EAAS,YAAY;IAC9BC,OAAO,EAAW,UAAU;IAC5BC,SAAS,EAAS;GACrB;EACDC,cAAc,EAAG;IACbC,SAAS,EAAI,YAAY;IACzBC,QAAQ,EAAK,WAAW;IACxBC,UAAU,EAAG;GAChB;EACDC,WAAW,EAAG;IACVC,YAAY,EAAG,cAAc;IAC7BC,MAAM,EAAS;GAClB;EACDC,UAAU,EAAG;IACTC,mBAAmB,EAAG;GACzB;EACDC,aAAa,EAAG;IACZC,eAAe,EAAG;MACdC,iBAAiB,EAAG,QAAQ;MAC5BC,IAAI,EAAgB;KACvB;IACDC,aAAa,EAAG;MACZC,aAAa,EAAO,eAAe;MACnCH,iBAAiB,EAAG;KACvB;IACDI,UAAU,EAAG;MACTD,aAAa,EAAO,WAAW;MAC/BE,gBAAgB,EAAI,KAAK;MACzBL,iBAAiB,EAAG,QAAQ;MAC5BC,IAAI,EAAgB;KACvB;IACDK,GAAG,EAAG;MACFL,IAAI,EAAG;KACV;IACDM,IAAI,EAAG;MACHN,IAAI,EAAG;KACV;IACDO,UAAU,EAAG;MACTR,iBAAiB,EAAG,QAAQ;MAC5BC,IAAI,EAAgB;KACvB;IACDQ,WAAW,EAAG;MACVR,IAAI,EAAG;KACV;IACDS,UAAU,EAAG;MACTV,iBAAiB,EAAG,QAAQ;MAC5BC,IAAI,EAAgB;KACvB;IACDU,YAAY,EAAG;MACXV,IAAI,EAAG;KACV;IACDW,gBAAgB,EAAG;MACfX,IAAI,EAAG;KACV;IACDY,gBAAgB,EAAG;MACfZ,IAAI,EAAG;KACV;IACDa,YAAY,EAAG;MACXb,IAAI,EAAG;KACV;IACDc,IAAI,EAAG;MACHd,IAAI,EAAG;KACV;IACDe,SAAS,EAAG;MACRf,IAAI,EAAG;;GAEd;EACDgB,2BAA2B,EAAG;IAC1B,cAAc,EAAgB,2BAA2B;IACzD,oBAAoB,EAAU,sDAAsD;IACpF,wBAAwB,EAAM,uGAAuG;IACrI,yBAAyB,EAAK,0BAA0B;IACxD,2BAA2B,EAAG,wBAAwB;IACtD,cAAc,EAAgB,oCAAoC;IAClE,oBAAoB,EAAU,sDAAsD;IACpF,wBAAwB,EAAM,8FAA8F;IAC5H,yBAAyB,EAAK,mBAAmB;IACjD,2BAA2B,EAAG,iBAAiB;IAC/CC,GAAG,EAA2B,KAAK;IACnC9C,MAAM,EAAwB,QAAQ;IACtC+C,KAAK,EAAyB;GACjC;EACDC,gBAAgB,EAAG;IACf,OAAO,EAA2B,OAAO;IACzCC,KAAK,EAA6B,OAAO;IACzC,eAAe,EAAmBC,CAAC;MAAEC;KAAM,KAAM,aAAYA,IAAK,EAAC;IACnE,gBAAgB,EAAkBC,CAAC;MAAED;KAAM,KAAM,cAAaA,IAAK,EAAC;IACpE,sBAAsB,EAAYE,CAAC;MAAEF,IAAI;MAAEG;KAAQ,KAAM,aAAYH,IAAK,OAAMG,MAAO,EAAC;IACxF,gBAAgB,EAAkBC,CAAC;MAAEC;KAAU,KAAM,SAAQA,QAAS,OAAM;IAC5E,wBAAwB,EAAUC,CAAC;MAAED,QAAQ;MAAEL;KAAM,KAAM,SAAQK,QAAS,aAAYL,IAAK,EAAC;IAC9F,yBAAyB,EAASO,CAAC;MAAEF,QAAQ;MAAEL;KAAM,KAAM,SAAQK,QAAS,cAAaL,IAAK,EAAC;IAC/F,+BAA+B,EAAGQ,CAAC;MAAEH,QAAQ;MAAEL,IAAI;MAAEG;KAAQ,KAAM,SAAQE,QAAS,aAAYL,IAAK,OAAMG,MAAO,EAAC;IACnHM,SAAS,EAAyB,WAAW;IAC7CC,SAAS,EAAyB,YAAY;IAC9CC,SAAS,EAAyB,WAAW;IAC7CC,SAAS,EAAyB,YAAY;IAC9CC,SAAS,EAAyB,WAAW;IAC7C,YAAY,EAAsB,UAAU;IAC5C9B,GAAG,EAA+B,KAAK;IACvC+B,OAAO,EAA2B,SAAS;IAC3C,aAAa,EAAqB,aAAa;IAC/CC,UAAU,EAAwBA,CAAC;MAAEC,QAAQ;MAAEhB;KAAM,KAAM,GAAEgB,QAAS,IAAGhB,IAAK;GACjF;EACDiB,gBAAgB,EAAG;IACf,cAAc,EAAQ,cAAc;IACpCpE,MAAM,EAAgB,QAAQ;IAC9BF,IAAI,EAAkB,MAAM;IAC5BuE,SAAS,EAAa,WAAW;IACjCC,KAAK,EAAiB,OAAO;IAC7BC,iBAAiB,EAAK,QAAQ;IAC9BC,kBAAkB,EAAI,SAAS;IAC/BC,mBAAmB,EAAG,UAAU;IAChCC,kBAAkB,EAAI,SAAS;IAC/BC,IAAI,EAAkB,MAAM;IAC5B,QAAQ,EAAc,QAAQ;IAC9B,YAAY,EAAU,YAAY;IAClC,SAAS,EAAa;GACzB;EACDC,mBAAmB,EAAG;IAClB1C,GAAG,EAAa,KAAK;IACrB+B,OAAO,EAAS,SAAS;IACzB,aAAa,EAAG;GACnB;EACDY,wBAAwB,EAAG;IACvBjB,SAAS,EAAM,OAAO;IACtBC,SAAS,EAAM,QAAQ;IACvBC,SAAS,EAAM,OAAO;IACtBC,SAAS,EAAM,QAAQ;IACvBC,SAAS,EAAM,OAAO;IACtB,YAAY,EAAG;GAClB;EACDc,4BAA4B,EAAG;IAC3BC,KAAK,EAAO,OAAO;IACnBC,KAAK,EAAO,OAAO;IACnB,SAAS,EAAG;GACf;EACDC,wBAAwB,EAAG;IACvBC,IAAI,EAAM,WAAW;IACrBjC,KAAK,EAAK,OAAO;IACjBkC,MAAM,EAAI,QAAQ;IAClBC,OAAO,EAAG,SAAS;IACnBC,MAAM,EAAI;GACb;EACDC,eAAe,EAAG;IACdJ,IAAI,EAAK,MAAM;IACfK,MAAM,EAAG;GACZ;EACDC,OAAO,EAAG;IACN,aAAa,EAAGC,IAAI,IAAK,eAAcA,IAAK;GAC/C;EACDC,kBAAkB,EAAG;IACjBC,YAAY,EAAG,mBAAmB;IAClCC,WAAW,EAAI,kBAAkB;IACjCC,SAAS,EAAM,YAAY;IAC3BC,YAAY,EAAG;GAClB;EACDC,qBAAqB,EAAG;IACpB,gBAAgB,EAAG,gBAAgB;IACnC,aAAa,EAAM,MAAM;IACzB,WAAW,EAAQ;GACtB;EACDC,aAAa,EAAG;IACZ,sBAAsB,EAAG;GAC5B;EACDC,eAAe,EAAG;IACdC,mBAAmB,EAAG;GACzB;EACDC,cAAc,EAAG;IACbC,QAAQ,EAAG;;AAEnB,CAAC;AACcC,YAAY,CAACC,aAAa,CAACtI,MAAM,CAAC;;ACxPjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAAeuI,MAAM,IAAI,MAAMC,oBAAoB,SAASD,MAAM,CAAC;EAC/D,WAAWE,KAAKA,GAAG;IACf,OAAO,sBAAsB;;EAEjC,MAAMC,cAAcA,GAAG;IACnB,KAAK,CAACA,cAAc,EAAE;IACtB,MACIC,EAAE,GAAc,IAAI;MACpBC,aAAa,GAAID,EAAE,CAACE,MAAM,IAAIF,EAAE,CAACG,IAAK;MACtC;QAAEC;OAAS,GAAKH,aAAa;IACjCA,aAAa,CAACI,kBAAkB,CAACC,IAAI,CAACN,EAAE,CAAC;;IAEzC,IAAII,OAAO,EAAE;MACTJ,EAAE,CAACO,eAAe,CAACH,OAAO,CAAC;MAC3BJ,EAAE,CAACQ,qBAAqB,CAACJ,OAAO,CAACK,aAAa,CAAC;MAC/CT,EAAE,CAACU,kBAAkB,CAACN,OAAO,CAACO,UAAU,CAAC;MACzCX,EAAE,CAACY,uBAAuB,CAACR,OAAO,CAACS,eAAe,CAAC;MACnDb,EAAE,CAACc,uBAAuB,CAACV,OAAO,CAACW,eAAe,CAAC;MACnDf,EAAE,CAACgB,4BAA4B,CAACZ,OAAO,CAACa,oBAAoB,CAAC;;;;AAIzE;AACA;AACA;AACA;EACIV,eAAeA,CAACH,OAAO,EAAE;IACrB,IAAI,CAACc,eAAe,CAAC,SAAS,CAAC;IAC/B,IAAI,CAACC,QAAQ,GAAGf,OAAO;;;AAG/B;AACA;AACA;AACA;AACA;EACIM,kBAAkBA,CAACU,KAAK,EAAE;IACtB,IAAI,CAACF,eAAe,CAAC,YAAY,CAAC;;;AAG1C;AACA;AACA;AACA;AACA;EACIV,qBAAqBA,CAACY,KAAK,EAAE;IACzB,IAAI,CAACF,eAAe,CAAC,eAAe,CAAC;;;AAG7C;AACA;AACA;AACA;AACA;EACIN,uBAAuBA,CAACQ,KAAK,EAAE;IAC3B,IAAI,CAACF,eAAe,CAAC,iBAAiB,CAAC;;;AAG/C;AACA;AACA;AACA;AACA;EACIJ,uBAAuBA,CAACM,KAAK,EAAE;IAC3B,IAAI,CAACF,eAAe,CAAC,iBAAiB,CAAC;;;;AAI/C;AACA;AACA;AACA;AACA;EACIF,4BAA4BA,CAACI,KAAK,EAAE;IAChC,IAAI,CAACF,eAAe,CAAC,sBAAsB,CAAC;;EAEhD,IAAId,OAAOA,GAAG;IACV,OAAO,IAAI,CAACe,QAAQ;;EAExB,IAAIF,oBAAoBA,GAAG;IACvB,OAAO,IAAI,CAACb,OAAO,CAACa,oBAAoB;;EAE5C,IAAIJ,eAAeA,GAAG;IAClB,OAAO,IAAI,CAACT,OAAO,CAACS,eAAe;;EAEvC,IAAIJ,aAAaA,GAAG;IAChB,OAAO,IAAI,CAACL,OAAO,CAACK,aAAa;;EAErC,IAAIE,UAAUA,GAAG;IACb,OAAO,IAAI,CAACP,OAAO,CAACO,UAAU;;EAElC,IAAII,eAAeA,GAAG;IAClB,OAAO,IAAI,CAACX,OAAO,CAACW,eAAe;;AAE3C,CAAC;;AClGD;AACA;AACA;AACA,MAAMM,gBAAgB,GAAG,CACrB,iBAAiB,EACjB,iBAAiB,EACjB,YAAY,EACZ,eAAe,CAClB;AACD;AACA;AACA;AACA;AACA;AACA;AACA,uBAAezB,MAAM,IAAI,MAAM0B,eAAe,UAAU1B,MAAM,IAAI2B,IAAI,EAAE;EACpE,WAAWzB,KAAKA,GAAG;IACf,OAAO,iBAAiB;;;EAG5B,WAAW0B,UAAUA,GAAG;IACpB,OAAO,CAAC,eAAe,CAAC;;EAE5B,WAAWC,YAAYA,GAAG;IACtB,OAAO;MACHC,iBAAiB,EAAGC,YAAY;;;AAG5C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;MACYvB,OAAO,EAAG,EAAE;;AAExB;AACA;AACA;AACA;MACYwB,aAAa,EAAG,IAAI;;MAEpBvB,kBAAkB,EAAG;KACxB;;;EAGLwB,cAAcA,CAACC,MAAM,EAAE;;IAEnB,IAAI,CAACC,SAAS,CAAC,SAAS,CAAC;IACzB,KAAK,CAACF,cAAc,CAACC,MAAM,CAAC;;;;;;;EAOhCE,aAAaA,CAAC5B,OAAO,EAAE6B,UAAU,EAAE;IAC/B,MACIjC,EAAE,GAAG,IAAI;MACT;QACIkC,iBAAiB;QACjBC;OACH,GAAInC,EAAE,CAACoC,WAAW;IACvBpC,EAAE,CAACqC,gBAAgB,GAAG,IAAIC,GAAG,EAAE;IAC/B,IAAIlC,OAAO,EAAE;;MAETJ,EAAE,CAACuC,qBAAqB,GAAG,IAAI;MAC/B,IAAI,CAACnC,OAAO,CAACoC,OAAO,EAAE;;;;;;;;;;;;;;;;QAgBlB,IAAIxC,EAAE,CAACyC,aAAa,EAAE;;UAElBzC,EAAE,CAACmB,QAAQ,GAAGf,OAAO;;UAErB,MAAM;YAAEsC;WAAa,GAAG1C,EAAE;;UAE1B,IAAI0C,WAAW,EAAE;YACb,MAAM;cAAEC;aAAe,GAAGD,WAAW;YACrC,KAAK,MAAME,SAAS,IAAIV,iBAAiB,EAAE;cACvC,IAAIQ,WAAW,CAACE,SAAS,CAAC,EAAE;;;gBAGxB5C,EAAE,CAAC4C,SAAS,CAAC,GAAGF,WAAW,CAACE,SAAS,CAAC;;;;gBAItC,IAAI,CAACD,aAAa,EAAE;kBAChB,OAAOD,WAAW,CAACE,SAAS,CAAC;;;;;;;UAO7C5C,EAAE,CAAC+B,SAAS,CAAC,eAAe,CAAC;;;UAG7B,KAAK,MAAMc,QAAQ,IAAIV,gBAAgB,EAAE;YACrCnC,EAAE,CAAC+B,SAAS,CAACc,QAAQ,CAAC;;;QAG9B,MAAM;UAAElC;SAAY,GAAGP,OAAO;QAC9B,IAAI;UAAE0C,cAAc,EAAGC;SAAe,GAAG/C,EAAE;;QAE3C,IAAIW,UAAU,IAAI,CAACA,UAAU,CAACqC,iBAAiB,IAAIrC,UAAU,CAACsC,QAAQ,IAAI,CAACtC,UAAU,CAACuC,KAAK,EAAE;UACzFvC,UAAU,CAACsC,QAAQ,GAAG,KAAK;UAC3BjD,EAAE,CAACmD,aAAa,GAAG,IAAI;;;QAG3B,IAAIJ,aAAa,IAAI1B,gBAAgB,CAAC+B,IAAI,CAAChC,KAAK,IAAIhB,OAAO,CAACgB,KAAK,CAAC,IAAIhB,OAAO,CAACgB,KAAK,CAAC,KAAK2B,aAAa,CAAC3B,KAAK,CAAC,CAAC,EAAE;;UAE5G,KAAK,MAAMA,KAAK,IAAIC,gBAAgB,EAAE;YAClC,IAAIjB,OAAO,CAACgB,KAAK,CAAC,IAAIhB,OAAO,CAACgB,KAAK,CAAC,KAAK2B,aAAa,CAAC3B,KAAK,CAAC,EAAE;cAC3DhB,OAAO,CAACgB,KAAK,CAAC,GAAGhB,OAAO,CAACgB,KAAK,CAAC,CAACiC,KAAK,EAAE;;;UAG/CN,aAAa,GAAG,IAAI;;;QAGxB3C,OAAO,GAAG2C,aAAa,IAAI,IAAI/C,EAAE,CAAC0B,iBAAiB,CAACtB,OAAO,CAAC;;QAE5D,OAAOJ,EAAE,CAACmB,QAAQ;;;MAGtBnB,EAAE,CAACuC,qBAAqB,GAAG,KAAK;;IAEpC,OAAOnC,OAAO;;;AAGtB;AACA;AACA;AACA;AACA;AACA;AACA;EACIkD,aAAaA,CAAClD,OAAO,EAAE6B,UAAU,EAAE;IAC/B,MACIjC,EAAE,GAAG,IAAI;MACT;QACIuD,gBAAgB;QAChBb;OACH,GAAI1C,EAAE;IACXA,EAAE,CAACkB,eAAe,CAAC,iBAAiB,CAAC;;IAErC,OAAOlB,EAAE,CAACwD,YAAY;IACtB,IAAIpD,OAAO,EAAE;MACTmD,gBAAgB,CAACE,OAAO,GAAGzD,EAAE;MAC7BI,OAAO,CAACsD,GAAG,CAACH,gBAAgB,CAAC;;MAE7B,IAAInD,OAAO,CAACuC,aAAa,EAAE;QACvB3C,EAAE,CAAC0C,WAAW,GAAGtC,OAAO;;;WAGvB,IAAIsC,WAAW,EAAE;QAClBA,WAAW,CAACtC,OAAO,GAAGA,OAAO;;;QAG7BJ,EAAE,CAAC0C,WAAW,GAAGA,WAAW;;;MAGhC1C,EAAE,CAACK,kBAAkB,CAACsD,OAAO,CAACC,UAAU,IAAIA,UAAU,CAACrD,eAAe,CAACH,OAAO,CAAC,CAAC;;MAEhF,KAAK,MAAMwC,SAAS,IAAI5C,EAAE,CAACoC,WAAW,CAACF,iBAAiB,EAAE;QACtDlC,EAAE,CAAC4C,SAAS,CAAC,GAAGxC,OAAO,CAACwC,SAAS,CAAC;;;MAGtC,IAAI5C,EAAE,CAACmD,aAAa,EAAE;;QAElB/C,OAAO,CAACO,UAAU,CAACsC,QAAQ,GAAG,IAAI;QAClC7C,OAAO,CAACO,UAAU,CAACkD,IAAI,EAAE;;;IAGjC7D,EAAE,CAAC8D,OAAO,CAAC,eAAe,EAAE;MAAE1D;KAAS,CAAC;;;EAG5C2D,iBAAiBA,CAACrB,WAAW,EAAE;;;IAG3B,IAAI,IAAI,CAACH,qBAAqB,EAAE;MAC5B,IAAI,CAACiB,YAAY,GAAGd,WAAW,CAACC,aAAa,GAAGD,WAAW,GAAGjL,MAAM,CAACuM,MAAM,CAAC,EAAE,EAAEtB,WAAW,CAAC;KAC/F,MACI;MACD,OAAO,KAAK,CAACqB,iBAAiB,CAACrB,WAAW,CAAC;;;;EAInDuB,kBAAkBA,GAAG;IACjB,MAAMjE,EAAE,GAAG,IAAI;;IAEfA,EAAE,CAACkE,WAAW,CAAC,MAAM;MACjB,IAAIlE,EAAE,CAACqC,gBAAgB,CAAC8B,IAAI,EAAE;QAC1BnE,EAAE,CAACqC,gBAAgB,CAACsB,OAAO,CAACS,QAAQ,IAAIA,QAAQ,EAAE,CAAC;QACnDpE,EAAE,CAACqC,gBAAgB,CAACgC,KAAK,EAAE;;KAElC,EAAE,IAAI,EAAE,IAAI,EAAE,oBAAoB,CAAC;;;EAGxCC,gBAAgBA,CAAC;IAAEC,QAAQ;IAAEC;GAAa,EAAE;IACxC,MAAMxE,EAAE,GAAG,IAAI;IACf,IAAIA,EAAE,CAACyE,SAAS,EAAE;MACd,MAAMA,SAAS,GAAGD,WAAW,GAAGE,cAAc,CAACC,YAAY,CAAC3E,EAAE,CAACyE,SAAS,EAAED,WAAW,CAAC,GAAGxE,EAAE,CAACyE,SAAS;MACrGzE,EAAE,CAACyE,SAAS,GAAGF,QAAQ,GAAGG,cAAc,CAACE,UAAU,CAACH,SAAS,EAAEF,QAAQ,CAAC,GAAGE,SAAS;;;;AAIhG;AACA;AACA;AACA;AACA;EACII,gBAAgBA,CAACT,QAAQ,EAAE;;IAEvB,IAAI,IAAI,CAACU,aAAa,EAAE;MACpBV,QAAQ,EAAE;KACb,MACI;MACD,IAAI,CAAC/B,gBAAgB,CAAC0C,GAAG,CAACX,QAAQ,CAAC;;;;AAI/C;AACA;AACA;EACI,IAAIU,aAAaA,GAAG;IAAA,IAAAE,qBAAA,EAAAC,aAAA;;IAEhB,OAAOC,OAAO,EAAAF,qBAAA,GAAC,CAAAC,aAAA,OAAI,CAAC7E,OAAO,EAAC0E,aAAa,cAAAE,qBAAA,uBAA1BA,qBAAA,CAAAG,IAAA,CAAAF,aAAA,CAA8B,CAAC;;;;;EAKlDG,SAASA,GAAG;IACR,KAAK,CAACA,SAAS,EAAE;IACjB,IAAI,IAAI,CAACxD,aAAa,EAAE;;MAEpB,CAAC,IAAI,CAACxB,OAAO,CAACiF,WAAW,IAAI,IAAI,CAACjF,OAAO,CAACkF,OAAO,EAAE;;;;EAI3D,IAAIC,aAAaA,GAAG;IAChB,MAAM;MAAErD;KAAmB,GAAG,IAAI,CAACE,WAAW;IAC9C,OAAOF,iBAAiB,CAACsD,GAAG,CAAC5C,SAAS,IAAI,IAAI,CAACA,SAAS,CAAC,CAAC;;EAE9D,WAAWV,iBAAiBA,GAAG;IAC3B,OAAOzK,MAAM,CAACgO,IAAI,CAAC,IAAI,CAACF,aAAa,CAAC;;EAE1C,WAAWpD,gBAAgBA,GAAG;IAC1B,OAAO,IAAI,CAACD,iBAAiB,CAACwD,MAAM,CAAC,CAACC,MAAM,EAAE/C,SAAS,KAAK;MACxD,MAAM;QAAEC;OAAU,GAAG,IAAI,CAAC0C,aAAa,CAAC3C,SAAS,CAAC;MAClD,IAAIC,QAAQ,EAAE;QACV8C,MAAM,CAACrF,IAAI,CAACuC,QAAQ,CAAC;;MAEzB,OAAO8C,MAAM;KAChB,EAAE,EAAE,CAAC;;EAEV,OAAOC,kBAAkBA,CAACC,GAAG,EAAEC,IAAI,EAAE;IACjC,MAAM;MAAEP;KAAe,GAAGM,GAAG;IAC7B,IAAIN,aAAa,EAAE;MACf,MACIhC,gBAAgB,GAAI;UAChBrI,IAAI,EAAa,iBAAiB;UAClC6K,SAAS,EAAQ,oBAAoB;UACrCC,MAAM,EAAW,wBAAwB;UACzCC,cAAc,EAAG;SACpB;QACDC,YAAY,GAAQ;UAChB3C;SACH;MACL,IAAI4C,gBAAgB;;MAEpB,KAAK,MAAMvD,SAAS,IAAI2C,aAAa,EAAE;QACnC,MAAM;UAAE1C;SAAU,GAAG0C,aAAa,CAAC3C,SAAS,CAAC;;QAE7CsD,YAAY,CAACtD,SAAS,CAAC,GAAGsD,YAAY,CAACrD,QAAQ,CAAC,GAAG,IAAI;;QAEvD,IAAIA,QAAQ,EAAE;;UAEVpL,MAAM,CAAC2O,cAAc,CAACN,IAAI,CAACO,KAAK,CAACC,SAAS,EAAEzD,QAAQ,EAAE;YAClDpB,YAAY,EAAG,IAAI;;YACnB8E,GAAGA,GAAG;cAAA,IAAAC,qBAAA;;cAEF,QAAAA,qBAAA,GAAO,IAAI,CAACpG,OAAO,CAACwC,SAAS,CAAC,cAAA4D,qBAAA,uBAAvBA,qBAAA,CAAyBC,OAAO;;WAE9C,CAAC;;UAEF,IAAI,CAACC,iBAAiB,CAAC9D,SAAS,EAAEC,QAAQ,EAAEsD,gBAAgB,EAAEL,IAAI,CAAC;;QAEvE,IAAI,CAACa,qBAAqB,CAACb,IAAI,EAAElD,SAAS,EAAE2C,aAAa,CAAC3C,SAAS,CAAC,EAAEW,gBAAgB,CAAC;;QAEvF4C,gBAAgB,GAAGtD,QAAQ;;;MAG/B,IAAI,CAAC+D,YAAY,CAACd,IAAI,EAAEI,YAAY,CAAC;;;EAG7C,OAAOQ,iBAAiBA,CAAC9D,SAAS,EAAEC,QAAQ,EAAEsD,gBAAgB,EAAEL,IAAI,EAAE;;;;IAIlEA,IAAI,CAACO,KAAK,CAACC,SAAS,CAAE,SAAQO,YAAY,CAACC,UAAU,CAACjE,QAAQ,CAAE,EAAC,CAAC,GAAG,UAAShL,IAAI,EAAE;MAChF,MAAM;QAAEuI;OAAS,GAAG,IAAI;;;MAGxB+F,gBAAgB,IAAI,IAAI,CAACpE,SAAS,CAACoE,gBAAgB,CAAC;MACpD,IAAI,IAAI,CAAC5D,qBAAqB,EAAE;;;QAG5BnC,OAAO,CAAE,GAAEyC,QAAS,MAAK,CAAC,GAAGhL,IAAI;OACpC,MACI;;QAEDuI,OAAO,CAACwC,SAAS,CAAC,CAAC/K,IAAI,GAAGA,IAAI;;KAErC;;EAEL,OAAO8O,qBAAqBA,CAACb,IAAI,EAAElD,SAAS,EAAE;IAAEmE;GAAW,EAAExD,gBAAgB,EAAE;IAC3E,MACI;QAAE+C,SAAS,EAAGU;OAAU,GAAGlB,IAAI,CAACO,KAAK;MACrCY,YAAY,GAAeJ,YAAY,CAACC,UAAU,CAAClE,SAAS,CAAC;;IAEjEW,gBAAgB,CAAE,GAAEX,SAAU,QAAO,CAAC,GAAG,UAAS;MAAExB;KAAO,EAAE;MACzD,IAAI,CAACwB,SAAS,CAAC,GAAGxB,KAAK;KAC1B;;IAED4F,QAAQ,CAAE,SAAQC,YAAa,EAAC,CAAC,GAAG,UAAS7F,KAAK,EAAE8F,QAAQ,EAAE;MAAA,IAAAC,MAAA;MAC1D,MACInH,EAAE,GAAa,IAAI;QACnB;UAAEI;SAAS,GAAIJ,EAAE;QACjBoH,YAAY,IAAAD,MAAA,GAAG/F,KAAK,cAAA+F,MAAA,uBAALA,MAAA,CAAO/G,OAAO;MACjC,IAAIJ,EAAE,CAACuC,qBAAqB,EAAE;;;QAG1B,IAAI6E,YAAY,aAAZA,YAAY,eAAZA,YAAY,CAAEC,cAAc,EAAE;UAC9BrH,EAAE,CAAC8C,cAAc,GAAGsE,YAAY;;;;;QAKpChH,OAAO,CAACwC,SAAS,CAAC,GAAGxB,KAAK;QAC1B;;;MAGJ,IAAI,CAACpB,EAAE,CAACsH,mBAAmB,EAAE;QACzB,IAAIlH,OAAO,CAACwC,SAAS,CAAC,KAAKxB,KAAK,EAAE;UAC9BhB,OAAO,CAAE,MAAK6G,YAAa,EAAC,CAAC,CAAC7F,KAAK,CAAC;UACpCA,KAAK,GAAGhB,OAAO,CAACwC,SAAS,CAAC;;;;;MAKlC,IAAIxB,KAAK,KAAK8F,QAAQ,EAAE;QACpB,IAAIH,SAAS,EAAE;UACXA,SAAS,CAACtD,OAAO,GAAGzD,EAAE;UACtB+G,SAAS,CAAC7L,IAAI,GAAI,GAAE0H,SAAU,WAAU;UACxC5C,EAAE,CAACkB,eAAe,CAAC6F,SAAS,CAAC7L,IAAI,CAAC;UAClCkG,KAAK,CAACsC,GAAG,CAACqD,SAAS,CAAC;;;QAGxB/G,EAAE,CAAE,IAAG4C,SAAU,EAAC,CAAC,GAAGxB,KAAK;;QAE3BpB,EAAE,CAACK,kBAAkB,CAACsD,OAAO,CAACC,UAAU,IAAI;UAAA,IAAA2D,WAAA;UACxC,CAAAA,WAAA,GAAA3D,UAAU,CAAE,WAAUqD,YAAa,EAAC,CAAC,cAAAM,WAAA,uBAArCA,WAAA,CAAApC,IAAA,CAAAvB,UAAU,EAA8BxC,KAAK,CAAC;SACjD,CAAC;QACFpB,EAAE,CAAE,IAAG4C,SAAU,EAAC,CAAC,GAAG,IAAI;;MAE9B,OAAOxB,KAAK;KACf;;EAELoG,sBAAsBA,CAACC,KAAK,EAAE;;AAElC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACQ,OAAO,IAAI,CAAC3D,OAAO,CAAC,YAAY,EAAA4D,cAAA,CAAAA,cAAA;MAAItH,OAAO,EAAGqH,KAAK,CAACE;OAAWF,KAAK;MAAEE,MAAM,EAAG;OAAO;;;;;;EAM1F,IAAIC,WAAWA,GAAG;;AAEtB,CAAC;;ACxaD;AACA;AACA;AACA;AACA;AACA;AACA;AACe,MAAMC,aAAa,SAAStG,IAAI,CAAC;EAC5C,WAAWuG,aAAaA,GAAG;IACvB,OAAO;MACHC,YAAY,EAAG,CAAC;MAChBC,SAAS,EAAM,CAAC;MAChBC,UAAU,EAAK,CAAC;MAChBC,OAAO,EAAQ,CAAC;MAChBC,QAAQ,EAAO,EAAE;MACjBC,GAAG,EAAYC,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;MAC5CC,SAAS,EAAM,IAAI;;;;MAGnBC,QAAQA,CAAC3Q,IAAI,EAAE;QACX,OAAQ,2CAA0CA,IAAI,CAAC4Q,IAAI,IAAI,IAAI,CAACA,IAAK,IAAG5Q,IAAI,CAACgO,GAAG,IAAI,EAAG;AAC3G;AACA,4DAA4D6C,UAAU,CAACC,MAAM,CAAC9Q,IAAI,CAACiH,IAAI,EAAE,KAAK,CAAE;AAChG,8DAA8D4J,UAAU,CAACC,MAAM,CAAC9Q,IAAI,CAACiH,IAAI,EAAE,GAAG,CAAE;AAChG;AACA;AACA,qDAAqD+H,YAAY,CAAC+B,UAAU,CAAC/Q,IAAI,CAACgR,IAAI,CAAE;AACxF,uBAAuB;;KAEd;;EAELC,eAAeA,CAACjR,IAAI,EAAE;IAClB,OAAO,IAAI,CAACuQ,GAAG,CAACW,SAAS,GAAG,IAAI,CAACP,QAAQ,CAAC3Q,IAAI,CAAC;;EAEnDmR,mBAAmBA,CAACC,EAAE,EAAEnK,IAAI,EAAE;IAC1B,MACIoK,eAAe,GAAKD,EAAE,aAAFA,EAAE,uBAAFA,EAAE,CAAEE,aAAa,CAAC,uBAAuB,CAAC;MAC9DC,iBAAiB,GAAGH,EAAE,aAAFA,EAAE,uBAAFA,EAAE,CAAEE,aAAa,CAAC,yBAAyB,CAAC;IACpE,IAAIrK,IAAI,IAAIoK,eAAe,IAAIE,iBAAiB,IAAIC,aAAa,CAACC,YAAY,EAAE;MAC5E,IAAI,IAAI,CAACb,IAAI,KAAK,MAAM,EAAE;QACtBS,eAAe,CAACK,KAAK,CAACC,SAAS,GAAM,UAAU1K,IAAI,CAAC2K,QAAQ,EAAE,GAAG,EAAE,GAAI,EAAG,MAAK;QAC/EL,iBAAiB,CAACG,KAAK,CAACC,SAAS,GAAI,UAAS1K,IAAI,CAAC4K,UAAU,EAAE,GAAG,CAAE,MAAK;OAC5E,MACI;QACDR,eAAe,CAACK,KAAK,CAACC,SAAS,GAAK,MAAM;QAC1CJ,iBAAiB,CAACG,KAAK,CAACC,SAAS,GAAG,MAAM;;;;EAItD,IAAIf,IAAIA,CAACA,IAAI,EAAE;IACX,IAAI,CAACkB,KAAK,GAAGlB,IAAI;;;;EAIrB,IAAIA,IAAIA,GAAG;IACP,IAAI,IAAI,CAACkB,KAAK,EAAE;MACZ,OAAO,IAAI,CAACA,KAAK;;IAErB,MACIC,eAAe,GAAUlB,UAAU,CAACmB,YAAY,CAAC,IAAI,CAACtB,SAAS,CAACuB,iBAAiB,CAACC,cAAc,CAACC,IAAI,EAAE,KAAK,CAAC,GAAG,CAAC;MACjHC,sBAAsB,GAAGvB,UAAU,CAACuB,sBAAsB,CAAC,IAAI,CAAC1B,SAAS,CAACtN,iBAAiB,CAAC;IAChG,OAAO2O,eAAe,IAAIK,sBAAsB,GAAG,MAAM,GAAG,KAAK;;EAErE,IAAIzB,QAAQA,CAACA,QAAQ,EAAE;IACnB,IAAI,CAAC0B,SAAS,GAAG1B,QAAQ;;;AAGjC;AACA;AACA;EACI,IAAIA,QAAQA,GAAG;IACX,OAAO,IAAI,CAAC0B,SAAS;;AAE7B;AACArC,aAAa,CAACsC,MAAM,GAAG,eAAe;;AC7EtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,MAAMC,gBAAgB,SAASC,eAAe,CAAC;AAE9DD,gBAAgB,CAACD,MAAM,GAAG,kBAAkB;;AClB5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,MAAMjO,2BAA2B,SAASoO,KAAK,CAAC;EAC3D,WAAWxK,KAAKA,GAAG;IACf,OAAO,6BAA6B;;;EAGxC,WAAWyK,IAAIA,GAAG;IACd,OAAO,wBAAwB;;EAEnC,WAAWzC,aAAaA,GAAG;IACvB,OAAO;MACH0C,qBAAqB,EAAG,EAAE;MAC1BC,KAAK,EAAmB,KAAK;MAC7BC,QAAQ,EAAgB,KAAK;MAC7BC,SAAS,EAAe,KAAK;MAC7BC,WAAW,EAAa,mBAAmB;MAC3CC,KAAK,EAAmB,IAAI;MAC5BC,QAAQ,EAAgB,IAAI;MAC5BC,YAAY,EAAY,SAAS;MACjCC,WAAW,EAAaC,UAAU;MAClCC,SAAS,EAAe,IAAI;MAC5BC,QAAQ,EAAgB,IAAI;MAC5BC,QAAQ,EAAgB,IAAI;MAC5BC,WAAW,EAAa,IAAI;MAC5BxF,GAAG,EAAqB,8BAA8B;MACtDyF,IAAI,EAAoB;QACpBC,QAAQ,EAAG;UACPC,WAAW,EAAG;SACjB;QACDC,KAAK,EAAG;UACJC,kBAAkB,EAAG;YACjBC,MAAM,EAAI,GAAG;YACb9F,GAAG,EAAO,UAAU;YACpB+F,KAAK,EAAK,QAAQ;YAClB/C,IAAI,EAAM,8BAA8B;YACxCgD,OAAO,EAAG;WACb;UACDC,oBAAoB,EAAG;YACnBH,MAAM,EAAI,GAAG;YACbC,KAAK,EAAK,SAAS;YACnB/C,IAAI,EAAM,eAAe;YACzBgD,OAAO,EAAG;WACb;UACDE,YAAY,EAAG;YACXJ,MAAM,EAAI,GAAG;YACbC,KAAK,EAAK,QAAQ;YAClB/C,IAAI,EAAM,kBAAkB;YAC5BgD,OAAO,EAAG;;;;KAIzB;;;AAGT;AACA;AACA;AACA;EACI,IAAIC,oBAAoBA,GAAG;IACvB,OAAO,IAAI,CAACE,SAAS,CAACF,oBAAoB;;;AAGlD;AACA;AACA;AACA;EACI,IAAIJ,kBAAkBA,GAAG;IACrB,OAAO,IAAI,CAACM,SAAS,CAACN,kBAAkB;;;AAGhD;AACA;AACA;AACA;EACI,IAAIK,YAAYA,GAAG;IACf,OAAO,IAAI,CAACC,SAAS,CAACD,YAAY;;;AAG1C;AACA;AACA;EACIE,2BAA2BA,GAAG;IAC1B,IAAI,CAACC,sBAAsB,EAAE;IAC7B,IAAI,CAACC,IAAI,EAAE;;;AAGnB;AACA;AACA;EACIC,yBAAyBA,GAAG;IACxB,IAAI,CAACC,mBAAmB,EAAE;IAC1B,IAAI,CAACF,IAAI,EAAE;;;AAGnB;AACA;AACA;EACIG,mBAAmBA,GAAG;IAClB,IAAI,CAACC,QAAQ,IAAI,IAAI,CAACA,QAAQ,CAACpH,IAAI,CAAC,IAAI,CAAC1B,OAAO,CAAC;IACjD,IAAI,CAAC0I,IAAI,EAAE;;EAEfK,iBAAiBA,GAAG;IAChB,IAAI,IAAI,CAACD,QAAQ,EAAE;MACf,IAAI,CAACA,QAAQ,CAACpH,IAAI,CAAC,IAAI,CAAC1B,OAAO,CAAC;;IAEpC,IAAI,CAAC0I,IAAI,EAAE;;;AAGnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIM,OAAOA,CAAC3K,MAAM,GAAG,EAAE,EAAE;IACjB,MAAM9B,EAAE,GAAG,IAAI;IACf,CACI,YAAY,EACZ,aAAa,EACb,OAAO,EACP,MAAM,EACN,WAAW,EACX,UAAU,EACV,aAAa,EACb,SAAS,CACZ,CAAC2D,OAAO,CAAC+I,IAAI,IAAI;MACd,IAAIA,IAAI,IAAI5K,MAAM,EAAE9B,EAAE,CAAC0M,IAAI,CAAC,GAAG5K,MAAM,CAAC4K,IAAI,CAAC;KAC9C,CAAC;IACF1M,EAAE,CAAC2M,kBAAkB,EAAE;IACvB,OAAO,KAAK,CAACC,IAAI,CAAC9K,MAAM,CAAC;;EAE7B6K,kBAAkBA,GAAG;IACjB,MACI3M,EAAE,GAA2D,IAAI;MACjE;QAAE8L,oBAAoB;QAAEJ,kBAAkB;QAAEK;OAAc,GAAG/L,EAAE,CAACgM,SAAS;MACzE;QAAEX,WAAW;QAAEwB,UAAU,GAAG;OAAU,GAAuB7M,EAAE;MAC/D8M,QAAQ,GAAqDzB,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAE0B,WAAW;;;;;;;;;;IAUzF,IAAID,QAAQ,EAAE;MACVhB,oBAAoB,CAACjD,IAAI,GAAG7I,EAAE,CAACgN,CAAC,CAAC,eAAe,CAAC;MACjDhN,EAAE,CAACiN,IAAI,GAAGjN,EAAE,CAACgN,CAAC,CAAE,GAAEH,UAAW,cAAa,CAAC;KAC9C,MACI;MACDf,oBAAoB,CAACjD,IAAI,GAAG7I,EAAE,CAACgN,CAAC,CAAE,GAAEH,UAAW,mBAAkB,CAAC;MAClE7M,EAAE,CAACiN,IAAI,GAAGjN,EAAE,CAACgN,CAAC,CAAE,GAAEH,UAAW,kBAAiB,CAAC;;IAEnDnB,kBAAkB,CAAC7C,IAAI,GAAG7I,EAAE,CAACgN,CAAC,CAAE,GAAEH,UAAW,qBAAoB,CAAC;IAClEd,YAAY,CAAClD,IAAI,GAAG7I,EAAE,CAACgN,CAAC,CAAC,kBAAkB,CAAC;IAC5ChN,EAAE,CAAC5D,KAAK,GAAG4D,EAAE,CAACgN,CAAC,CAAC,UAAU,CAAC;;;;;IAK3BhN,EAAE,CAACkN,KAAK,GAAGlN,EAAE,CAACgN,CAAC,CAAE,GAAEH,UAAW,QAAO,CAAC;;;AAG9C;AACA;AACA;EACIX,sBAAsBA,GAAG;IACrB,MAAM;MAAEb,WAAW;MAAE8B,SAAS;MAAE1J,OAAO;MAAE2J;KAAa,GAAG,IAAI;IAC7D/B,WAAW,CAACgC,UAAU,EAAE;;;IAGxBF,SAAS,IAAI,IAAI,CAAC/I,QAAQ,CAAC+I,SAAS,EAAE1J,OAAO,EAAE,CAAC4H,WAAW,CAAC,CAAC;;IAE7DA,WAAW,CAACiC,QAAQ,EAAE;IACtBF,WAAW,IAAI,IAAI,CAAChJ,QAAQ,CAACgJ,WAAW,EAAE3J,OAAO,EAAE,CAAC4H,WAAW,CAAC,CAAC;;;AAGzE;AACA;AACA;EACIgB,mBAAmBA,GAAG;IAAA,IAAAkB,gBAAA;IAClB,MAAM;MAAElC,WAAW;MAAE8B,SAAS;MAAE1J,OAAO;MAAE2J;KAAa,GAAG,IAAI;IAC7D/B,WAAW,CAACgC,UAAU,EAAE;IACxB,IAAIG,eAAe;;IAEnB,IAAInC,WAAW,aAAXA,WAAW,eAAXA,WAAW,CAAE0B,WAAW,EAAE;MAC1B1B,WAAW,CAACoC,UAAU,CAACC,iBAAiB,CAACrC,WAAW,CAAC5G,SAAS,EAAE,IAAI,EAAE,CAACkJ,UAAU,EAAEC,OAAO,EAAEC,KAAK,KAAK;;QAElG,IAAIA,KAAK,GAAG,CAAC,EAAE;UACXL,eAAe,GAAGG,UAAU;UAC5B,OAAO,KAAK;;OAEnB,CAAC;;;IAGN,CAAAJ,gBAAA,GAAAC,eAAe,cAAAD,gBAAA,uBAAfA,gBAAA,CAAiBO,kBAAkB,EAAE;;IAErCzC,WAAW,CAACoC,UAAU,GAAG,IAAI;;;IAG7BN,SAAS,IAAI,IAAI,CAAC/I,QAAQ,CAAC+I,SAAS,EAAE1J,OAAO,EAAE,CAAC4H,WAAW,CAAC,CAAC;;;IAG7DA,WAAW,CAAC0C,cAAc,GAAG,IAAI;;IAEjC1C,WAAW,CAACiC,QAAQ,EAAE;IACtBF,WAAW,IAAI,IAAI,CAAChJ,QAAQ,CAACgJ,WAAW,EAAE3J,OAAO,EAAE,CAAC4H,WAAW,CAAC,CAAC;;EAErE2C,kBAAkBA,GAAG;IACjB,IAAI,CAACrB,kBAAkB,EAAE;IACzB,KAAK,CAACqB,kBAAkB,EAAE;;AAElC;AACA;AACA9R,2BAA2B,CAAC+R,SAAS,EAAE;AACvC/R,2BAA2B,CAACiO,MAAM,GAAG,6BAA6B;;AChQlE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,MAAM7L,wBAAwB,SAAS4P,KAAK,CAAC;;;EAWxDC,UAAUA,GAAG;IACT,OAAO,CACH,IAAI,IAAI,CAACC,OAAO,GAAG,CAAC;MAAEvF,IAAI,EAAG,SAAS;MAAEwF,KAAK,EAAG;KAAQ,CAAC,GAAG,EAAE,CAAC,EAC/D;MAAEA,KAAK,EAAG,OAAO;MAAIxF,IAAI,EAAG;KAAY,EACxC;MAAEwF,KAAK,EAAG,QAAQ;MAAGxF,IAAI,EAAG;KAAa,EACzC;MAAEwF,KAAK,EAAG,SAAS;MAAExF,IAAI,EAAG;KAAc,EAC1C;MAAEwF,KAAK,EAAG,QAAQ;MAAGxF,IAAI,EAAG;KAAa,CAC5C;;AAET;AAACyF,eAAA,CApBoBhQ,wBAAwB,WAC1B,0BAA0B;AAAAgQ,eAAA,CADxBhQ,wBAAwB,UAG3B,0BAA0B;AAAAgQ,eAAA,CAHvBhQ,wBAAwB,kBAInB;EAClBiQ,QAAQ,EAAgB,KAAK;EAC7BC,YAAY,EAAY,MAAM;EAC9BC,UAAU,EAAc,OAAO;EAC/BC,qBAAqB,EAAG,IAAI;EAC5BN,OAAO,EAAiB;AAC5B,CAAC;AAWL;AACA9P,wBAAwB,CAAC2P,SAAS,EAAE;AACpC3P,wBAAwB,CAAC6L,MAAM,GAAG,0BAA0B;;AC9B5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,MAAMlM,mBAAmB,SAASiQ,KAAK,CAAC;EACnD,WAAWpO,KAAKA,GAAG;IACf,OAAO,qBAAqB;;;EAGhC,WAAWyK,IAAIA,GAAG;IACd,OAAO,qBAAqB;;EAEhC,WAAWzC,aAAaA,GAAG;IACvB,MACI6G,mBAAmB,GAAG,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC;MAChEC,YAAY,GAAUD,mBAAmB,CAACE,IAAI,CAAC,GAAG,CAAC;IACvD,OAAO;MACHD,YAAY;MACZL,QAAQ,EAAc,KAAK;MAC3BO,YAAY,EAAUF,YAAY;MAClCG,gBAAgB,EAAMJ,mBAAmB,CAACK,MAAM,CAAC,CAACzT,GAAG,EAAEsS,KAAK,KAAK,CAACnF,UAAU,CAACuG,cAAc,CAACpB,KAAK,CAAC,CAAC,CAACgB,IAAI,CAAC,GAAG,CAAC;MAC7GK,mBAAmB,EAAGP,mBAAmB,CAACK,MAAM,CAAC,CAACzT,GAAG,EAAEsS,KAAK,KAAKnF,UAAU,CAACuG,cAAc,CAACpB,KAAK,CAAC,CAAC,CAACgB,IAAI,CAAC,GAAG,CAAC;MAC5GM,QAAQ,EAAc,wBAAwB;MAC9CX,YAAY,EAAU,MAAM;MAC5BC,UAAU,EAAY;KACzB;;EAELN,UAAUA,GAAG;IACT,MAAMnO,EAAE,GAAG,IAAI;IACfA,EAAE,CAACoP,SAAS,GAAG,IAAI;IACnB,OAAOpP,EAAE,CAACqP,QAAQ,CAACC,MAAM,CAAC,CACtB;MAAEjB,KAAK,EAAGrO,EAAE,CAAC4O,YAAY;MAAS/F,IAAI,EAAG7I,EAAE,CAACgN,CAAC,CAAC,QAAQ,CAAC;MAAEnH,GAAG,EAAG7F,EAAE,CAACmP;KAAU,EAC5E;MAAEd,KAAK,EAAGrO,EAAE,CAAC+O,gBAAgB;MAAKlG,IAAI,EAAG7I,EAAE,CAACgN,CAAC,CAAC,YAAY;KAAG,EAC7D;MAAEqB,KAAK,EAAGrO,EAAE,CAACkP,mBAAmB;MAAErG,IAAI,EAAG7I,EAAE,CAACgN,CAAC,CAAC,gBAAgB;KAAG,CACpE,CAAC;;EAEN,IAAIqC,QAAQA,GAAG;IACX,MAAMrP,EAAE,GAAG,IAAI;IACf,IAAI,CAACA,EAAE,CAACoP,SAAS,EAAE;MACf,MAAMG,YAAY,GAAG7G,UAAU,CAAC6G,YAAY;MAC5C,MAAMC,QAAQ,GAAG9G,UAAU,CAAC+G,WAAW,EAAE,CAACjK,GAAG,CAAC,CAACqD,IAAI,EAAEgF,KAAK,MAAM;QAAEhF,IAAI;QAAEwF,KAAK,EAAGqB,wBAAwB,CAACC,SAAS,CAAC9B,KAAK;OAAG,CAAC,CAAC;;MAE7H7N,EAAE,CAACoP,SAAS,GAAGI,QAAQ,CAACI,KAAK,CAACL,YAAY,CAAC,CAACD,MAAM,CAACE,QAAQ,CAACI,KAAK,CAAC,CAAC,EAAEL,YAAY,CAAC,CAAC;;IAEvF,OAAOvP,EAAE,CAACoP,SAAS;;EAEvB,IAAIf,KAAKA,CAACA,KAAK,EAAE;IACb,MAAMrO,EAAE,GAAG,IAAI;IACf,IAAIqO,KAAK,IAAIwB,KAAK,CAACC,OAAO,CAACzB,KAAK,CAAC,EAAE;MAC/BA,KAAK,GAAGA,KAAK,CAACQ,IAAI,CAAC,GAAG,CAAC;;;IAG3B,IAAI,CAACR,KAAK,IAAI,CAACrO,EAAE,CAACoB,KAAK,CAAC2O,UAAU,CAAC,OAAO,EAAE1B,KAAK,CAAC,EAAE;MAChDA,KAAK,GAAGrO,EAAE,CAAC8O,YAAY;;IAE3B,KAAK,CAACT,KAAK,GAAGA,KAAK;;EAEvB,IAAIA,KAAKA,GAAG;IACR,IAAIA,KAAK,GAAG,KAAK,CAACA,KAAK;IACvB,IAAIA,KAAK,IAAIwB,KAAK,CAACC,OAAO,CAACzB,KAAK,CAAC,EAAE;MAC/BA,KAAK,GAAGA,KAAK,CAACQ,IAAI,CAAC,GAAG,CAAC;;IAE3B,OAAOR,KAAK;;AAEpB;AACA;AACApQ,mBAAmB,CAACgQ,SAAS,EAAE;AAC/BhQ,mBAAmB,CAACkM,MAAM,GAAG,qBAAqB;;ACxElD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,MAAM6F,yBAAyB,SAASC,WAAW,CAAC;EAC/D,WAAWnQ,KAAKA,GAAG;IACf,OAAO,2BAA2B;;;EAGtC,WAAWyK,IAAIA,GAAG;IACd,OAAO,2BAA2B;;EAEtC,WAAWzC,aAAaA,GAAG;IACvB,OAAO;MACHyD,QAAQ,EAAG;QACP1F,GAAG,EAAU,UAAU;QACvBqK,UAAU,EAAG;;KAEpB;;EAELC,SAASA,CAACrO,MAAM,GAAG,EAAE,EAAE;IACnB,MAAM9B,EAAE,GAAG,IAAI;IACf8B,MAAM,CAACsO,OAAO,GAAG,CAAC;IAClBtO,MAAM,CAAC2J,KAAK,GAAKzL,EAAE,CAACmO,UAAU,EAAE;IAChC,KAAK,CAACgC,SAAS,CAACrO,MAAM,CAAC;;EAE3BuO,cAAcA,CAACC,IAAI,EAAE;IACjB,MAAM/U,GAAG,GAAGmU,wBAAwB,CAACa,SAAS,CAACD,IAAI,CAACjC,KAAK,CAAC,CAAC,CAAC,CAAC;IAC7DiC,IAAI,CAACzH,IAAI,GAAGH,UAAU,CAAC8H,UAAU,CAACjV,GAAG,CAAC,CAACkV,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC;;EAE1DtC,UAAUA,GAAG;IACT,MAAMnO,EAAE,GAAG,IAAI;IACf,IAAI,CAACA,EAAE,CAAC0Q,OAAO,EAAE;MACb,MAAMnB,YAAY,GAAG7G,UAAU,CAAC6G,YAAY;MAC5C,MAAMC,QAAQ,GAAG9G,UAAU,CAAC+G,WAAW,EAAE,CAACjK,GAAG,CAAC,CAACqD,IAAI,EAAEgF,KAAK,MAAM;QAC5DhF,IAAI,EAAIA,IAAI,CAAC4H,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC;QAC5BpC,KAAK,EAAGqB,wBAAwB,CAACC,SAAS,CAAC9B,KAAK;OACnD,CAAC,CAAC;;MAEH7N,EAAE,CAAC0Q,OAAO,GAAGlB,QAAQ,CAACI,KAAK,CAACL,YAAY,CAAC,CAACD,MAAM,CAACE,QAAQ,CAACI,KAAK,CAAC,CAAC,EAAEL,YAAY,CAAC,CAAC;;IAErF,OAAOvP,EAAE,CAAC0Q,OAAO;;EAErB,IAAIrC,KAAKA,CAACA,KAAK,EAAE;IACb,IAAIA,KAAK,IAAIwB,KAAK,CAACC,OAAO,CAACzB,KAAK,CAAC,EAAE;MAC/BA,KAAK,GAAGA,KAAK,CAACQ,IAAI,CAAC,GAAG,CAAC;;IAE3B,KAAK,CAACR,KAAK,GAAGA,KAAK;;EAEvB,IAAIA,KAAKA,GAAG;IACR,IAAIA,KAAK,GAAG,KAAK,CAACA,KAAK;IACvB,IAAIA,KAAK,IAAIwB,KAAK,CAACC,OAAO,CAACzB,KAAK,CAAC,EAAE;MAC/BA,KAAK,GAAGA,KAAK,CAACQ,IAAI,CAAC,GAAG,CAAC;;IAE3B,OAAOR,KAAK;;;;EAGhBsC,cAAcA,GAAG;;IAEb,IAAI,CAAClF,KAAK,CAAC9H,OAAO,CAAC,IAAI,CAAC0M,cAAc,EAAE,IAAI,CAAC;;EAEjDrC,kBAAkBA,GAAG;IACjB,IAAI,CAAC2C,cAAc,EAAE;IACrB,KAAK,CAAC3C,kBAAkB,EAAE;;EAE9B,IAAI4C,eAAeA,GAAG;IAClB,MAAMC,SAAS,GAAG,KAAK,CAACD,eAAe;;IAEvCC,SAAS,CAACvQ,IAAI,CAAC,SAAS,CAAC;IACzB,OAAOuQ,SAAS;;AAExB;AACA;AACAb,yBAAyB,CAAC/B,SAAS,EAAE;AACrC+B,yBAAyB,CAAC7F,MAAM,GAAG,2BAA2B;;AChF9D;AACA;AACA;AACA;AACA;AACe,MAAM2G,8BAA8B,SAASb,WAAW,CAAC;EACpE,WAAWnQ,KAAKA,GAAG;IACf,OAAO,gCAAgC;;;EAG3C,WAAWyK,IAAIA,GAAG;IACd,OAAO,gCAAgC;;EAE3C,WAAWzC,aAAaA,GAAG;IACvB,OAAO;MACHyD,QAAQ,EAAG;QACP2E,UAAU,EAAG,IAAI;QACjBrK,GAAG,EAAU;;KAEpB;;EAEL,IAAIkL,QAAQA,GAAG;IACX,OAAO,CAAC;;EAEZ,IAAIC,QAAQA,GAAG;IACX,OAAO,EAAE;;EAEbb,SAASA,CAACrO,MAAM,GAAG,EAAE,EAAE;IACnB,MAAM9B,EAAE,GAAG,IAAI;IACf8B,MAAM,CAACsO,OAAO,GAAG,CAAC;IAClBtO,MAAM,CAAC2J,KAAK,GAAKzL,EAAE,CAACmO,UAAU,EAAE;IAChC,KAAK,CAACgC,SAAS,CAACrO,MAAM,CAAC;;EAE3BqM,UAAUA,GAAG;IACT,MACInO,EAAE,GAAM,IAAI;MACZyL,KAAK,GAAG,EAAE;IACd,KAAK,IAAI4C,KAAK,GAAGrO,EAAE,CAAC+Q,QAAQ,EAAE1C,KAAK,IAAIrO,EAAE,CAACgR,QAAQ,EAAE3C,KAAK,EAAE,EAAE;;MAEzD5C,KAAK,CAACnL,IAAI,CAAC;QACPuI,IAAI,EAAGwF,KAAK,GAAG,EAAE;QACjBA;OACH,CAAC;;IAEN,OAAO5C,KAAK;;EAEhB,IAAImF,eAAeA,GAAG;IAClB,MAAMC,SAAS,GAAG,KAAK,CAACD,eAAe;;IAEvCC,SAAS,CAACvQ,IAAI,CAAC,SAAS,CAAC;IACzB,OAAOuQ,SAAS;;AAExB;AACA;AACAC,8BAA8B,CAAC7C,SAAS,EAAE;AAC1C6C,8BAA8B,CAAC3G,MAAM,GAAG,gCAAgC;;ACtDxE;AACA;AACA;AACA;AACA;AACe,MAAM8G,2BAA2B,SAAShB,WAAW,CAAC;EACjE,WAAWnQ,KAAKA,GAAG;IACf,OAAO,6BAA6B;;;EAGxC,WAAWyK,IAAIA,GAAG;IACd,OAAO,6BAA6B;;EAExC,WAAWzC,aAAaA,GAAG;IACvB,OAAO;MACHyD,QAAQ,EAAG;QACP2E,UAAU,EAAG,IAAI;QACjBrK,GAAG,EAAU;;KAEpB;;EAELsK,SAASA,CAACrO,MAAM,GAAG,EAAE,EAAE;IACnB,MAAM9B,EAAE,GAAG,IAAI;IACf8B,MAAM,CAACsO,OAAO,GAAG,CAAC;IAClBtO,MAAM,CAAC2J,KAAK,GAAKzL,EAAE,CAACmO,UAAU,EAAE;IAChC,KAAK,CAACgC,SAAS,CAACrO,MAAM,CAAC;;EAE3BqM,UAAUA,GAAG;IACT,OAAOzF,UAAU,CAACwI,aAAa,EAAE,CAAC1L,GAAG,CAAC,CAAC8K,IAAI,EAAEzC,KAAK,MAAM;MACpDhF,IAAI,EAAIyH,IAAI,CAACG,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC;MAC5BpC,KAAK,EAAGR,KAAK,GAAG,CAAC;KACpB,CAAC,CAAC;;;EAEPwC,cAAcA,CAACC,IAAI,EAAE;IACjBA,IAAI,CAACzH,IAAI,GAAGH,UAAU,CAACyI,YAAY,CAACb,IAAI,CAACjC,KAAK,GAAG,CAAC,CAAC,CAACoC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC;;EAEvEE,cAAcA,GAAG;;IAEb,IAAI,CAAClF,KAAK,CAAC9H,OAAO,CAAC,IAAI,CAAC0M,cAAc,EAAE,IAAI,CAAC;;EAEjDrC,kBAAkBA,GAAG;IACjB,IAAI,CAAC2C,cAAc,EAAE;IACrB,KAAK,CAAC3C,kBAAkB,EAAE;;EAE9B,IAAI4C,eAAeA,GAAG;IAClB,MAAMC,SAAS,GAAG,KAAK,CAACD,eAAe;;IAEvCC,SAAS,CAACvQ,IAAI,CAAC,SAAS,CAAC;IACzB,OAAOuQ,SAAS;;AAExB;AACA;AACAI,2BAA2B,CAAChD,SAAS,EAAE;AACvCgD,2BAA2B,CAAC9G,MAAM,GAAG,6BAA6B;;ACtDlE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,MAAMhM,4BAA4B,SAAS+P,KAAK,CAAC;EAC5D,WAAWpO,KAAKA,GAAG;IACf,OAAO,8BAA8B;;;EAGzC,WAAWyK,IAAIA,GAAG;IACd,OAAO,8BAA8B;;EAEzC,WAAWzC,aAAaA,GAAG;IACvB,OAAO;MACHyG,QAAQ,EAAO,KAAK;MACpB6C,WAAW,EAAI,OAAO;MACtB5C,YAAY,EAAG,MAAM;MACrBC,UAAU,EAAK;KAClB;;EAELN,UAAUA,GAAG;IACT,OAAO,CACH;MAAEE,KAAK,EAAG,OAAO;MAAExF,IAAI,EAAG,IAAI,CAACmE,CAAC,CAAC,UAAU;KAAG,EAC9C;MAAEqB,KAAK,EAAG,OAAO;MAAExF,IAAI,EAAG,IAAI,CAACmE,CAAC,CAAC,UAAU;KAAG,EAC9C;MAAEqB,KAAK,EAAG,MAAM;MAAGxF,IAAI,EAAG,IAAI,CAACmE,CAAC,CAAC,YAAY;KAAG,CACnD;;EAEL,IAAIqB,KAAKA,CAACA,KAAK,EAAE;;IAEbA,KAAK,GAAGA,KAAK,IAAI,OAAO;IACxB,KAAK,CAACA,KAAK,GAAGA,KAAK;;EAEvB,IAAIA,KAAKA,GAAG;IACR,OAAO,KAAK,CAACA,KAAK;;EAEtB,IAAIZ,UAAUA,GAAG;IACb,OAAO,IAAI,CAAC4D,WAAW;;EAE3B,IAAI5D,UAAUA,CAACA,UAAU,EAAE;IACvB,IAAIY,KAAK,GAAG,IAAI;IAChB,IAAIZ,UAAU,CAAC6D,OAAO,EAAE;MACpBjD,KAAK,GAAG,MAAM;KACjB,MACI,IAAIZ,UAAU,CAACvK,KAAK,EAAE;MACvBmL,KAAK,GAAG,OAAO;;IAEnB,IAAI,CAACgD,WAAW,GAAG5D,UAAU;IAC7B,IAAI,CAACY,KAAK,GAAGA,KAAK;;AAE1B;AACA;AACAlQ,4BAA4B,CAAC8P,SAAS,EAAE;AACxC9P,4BAA4B,CAACgM,MAAM,GAAG,8BAA8B;;ACxDpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,MAAMjM,wBAAwB,SAASgQ,KAAK,CAAC;EACxD,WAAWpO,KAAKA,GAAG;IACf,OAAO,0BAA0B;;;EAGrC,WAAWyK,IAAIA,GAAG;IACd,OAAO,0BAA0B;;EAErC,WAAWzC,aAAaA,GAAG;IACvB,OAAO;MACHyG,QAAQ,EAAO,KAAK;MACpBY,QAAQ,EAAO,iCAAiC;MAChDX,YAAY,EAAG,MAAM;MACrBC,UAAU,EAAK,OAAO;MACtBK,YAAY,EAAG,CAAC;MAChByC,WAAW,EAAI;KAClB;;EAELpD,UAAUA,GAAG;IACT,MAAMnO,EAAE,GAAG,IAAI;IACf,OAAOA,EAAE,CAACwR,eAAe,EAAE,CAAClC,MAAM,CAAC;;;;IAI/B;MAAEjB,KAAK,EAAG,IAAI;MAAExF,IAAI,EAAG7I,EAAE,CAACgN,CAAC,CAAC,eAAe,CAAC;MAAEnH,GAAG,EAAG7F,EAAE,CAACmP;KAAU,CACpE,CAAC;;EAENqC,eAAeA,GAAG;IACd,MAAMxR,EAAE,GAAG,IAAI;;;;;;;;IAQf,OAAOyR,WAAW,CAACC,QAAQ,CAAC1R,EAAE,CAACuR,WAAW,EAAEI,CAAC,KACzC;MAAEtD,KAAK,EAAGsD,CAAC,GAAG,CAAC;MAAE9I,IAAI,EAAG7I,EAAE,CAACgN,CAAC,CAAE,WAAU2E,CAAC,GAAG,CAAE,EAAC;KAAG,CACrD,CAAC;;EAEN,IAAItD,KAAKA,CAACA,KAAK,EAAE;IACb,MAAMrO,EAAE,GAAG,IAAI;IACf,IAAIqO,KAAK,IAAIwB,KAAK,CAACC,OAAO,CAACzB,KAAK,CAAC,EAAE;MAC/BA,KAAK,GAAGA,KAAK,CAACQ,IAAI,CAAC,GAAG,CAAC;;;IAG3B,IAAI,CAACR,KAAK,IAAI,CAACrO,EAAE,CAACoB,KAAK,CAAC2O,UAAU,CAAC,OAAO,EAAE1B,KAAK,CAAC,EAAE;MAChDA,KAAK,GAAGrO,EAAE,CAAC8O,YAAY;;IAE3B,KAAK,CAACT,KAAK,GAAGA,KAAK;;EAEvB,IAAIA,KAAKA,GAAG;IACR,MAAMA,KAAK,GAAG,KAAK,CAACA,KAAK;IACzB,OAAOA,KAAK,GAAI,GAAEA,KAAM,EAAC,CAACuD,KAAK,CAAC,GAAG,CAAC,CAACpM,GAAG,CAAC8K,IAAI,IAAIuB,QAAQ,CAACvB,IAAI,EAAE,EAAE,CAAC,CAAC,GAAG,EAAE;;AAEjF;AACA;AACApS,wBAAwB,CAAC+P,SAAS,EAAE;AACpC/P,wBAAwB,CAACiM,MAAM,GAAG,0BAA0B;;ACvD5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,MAAM2H,qBAAqB,SAASC,KAAK,CAAC;EAoGrDC,YAAYA,CAACC,MAAM,EAAE;IACjB,KAAK,CAACD,YAAY,CAACC,MAAM,CAAC;IAC1B,MACIjS,EAAE,GAAG,IAAI;MACT;QACIkS,cAAc;QACdC,eAAe;QACfC,oBAAoB;QACpBC,iBAAiB;QACjBC,mBAAmB;QACnBC,wBAAwB;QACxBC;OACH,GAAIxS,EAAE,CAACgM,SAAS;IACrB,IAAIiG,MAAM,EAAE;MACR,MACIxK,KAAK,GAAOwK,MAAM,CAACQ,QAAQ;QAC3BhO,SAAS,GAAGgD,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEhD,SAAS;;MAEhC,IAAIA,SAAS,EAAE;;QAEX,IAAI,CAACwN,MAAM,CAACzV,IAAI,IAAI,CAACyV,MAAM,CAACzV,IAAI,CAACkW,MAAM,EAAE;UACrCP,eAAe,CAAC9D,KAAK,GAAG,CAACqB,wBAAwB,CAACC,SAAS,CAAClL,SAAS,CAACkO,MAAM,EAAE,CAAC,CAAC;;;QAGpF,IAAI,CAACV,MAAM,CAACW,SAAS,IAAI,CAACX,MAAM,CAACW,SAAS,CAACF,MAAM,EAAE;UAC/CN,oBAAoB,CAAC/D,KAAK,GAAG5J,SAAS,CAACoO,OAAO,EAAE;;;QAGpD,IAAI,CAACZ,MAAM,CAACtV,MAAM,IAAI,CAACsV,MAAM,CAACtV,MAAM,CAAC+V,MAAM,EAAE;UACzCL,iBAAiB,CAAChE,KAAK,GAAG5J,SAAS,CAACqO,QAAQ,EAAE,GAAG,CAAC;;;;MAI1D,IAAIb,MAAM,CAACzV,IAAI,IAAIyV,MAAM,CAACc,SAAS,EAAE;QACjCR,wBAAwB,CAACS,KAAK,EAAE;;QAEhC,IAAI,CAAChT,EAAE,CAACiT,SAAS,EAAE;UACfX,mBAAmB,CAACY,OAAO,EAAE;;OAEpC,MACI;QACDZ,mBAAmB,CAACU,KAAK,EAAE;;QAE3B,IAAI,CAAChT,EAAE,CAACiT,SAAS,EAAE;UACfV,wBAAwB,CAACW,OAAO,EAAE;;;MAG1CV,mBAAmB,CAAC/E,UAAU,GAAGwE,MAAM;KAC1C,MACI;MACDC,cAAc,CAAC7D,KAAK,GAAG,MAAM;;;;AAIzC;AACA;AACA;AACA;EACI8E,eAAeA,CAAC1F,UAAU,EAAE;;IAExB,MAAM2F,MAAM,GAAG,IAAI,CAACC,SAAS,CAAEC,CAAC,IAAKA,CAAC,CAACpY,IAAI,IAAIuS,UAAU,IAAI,CAAC6F,CAAC,CAACC,QAAQ,CAAC;;IAEzE,IAAI,EAAE,SAAS,IAAIH,MAAM,CAAC,EAAE;MACxBA,MAAM,CAAC9B,OAAO,GAAG,IAAI;;IAEzB,IAAI,EAAE,OAAO,IAAI8B,MAAM,CAAC,EAAE;MACtBA,MAAM,CAAClQ,KAAK,GAAG,IAAI;;IAEvBuK,UAAU,CAAC+F,GAAG,CAACJ,MAAM,CAAC;;EAE1BK,gBAAgBA,GAAG;IACf,MACIzT,EAAE,GAA6B,IAAI;MACnC;QAAE0T,UAAU;QAAEC;OAAc,GAAG3T,EAAE,CAACgM,SAAS;IAC/C,QAAQhM,EAAE,CAACgM,SAAS,CAACwG,mBAAmB,CAACnE,KAAK;MAC1C,KAAK,OAAO;QACRqF,UAAU,CAAC9G,IAAI,EAAE;QACjB8G,UAAU,CAACE,MAAM,EAAE;QACnBD,YAAY,CAACxH,IAAI,EAAE;QACnBwH,YAAY,CAACE,OAAO,EAAE;QACtB;MACJ,KAAK,MAAM;QACPH,UAAU,CAACvH,IAAI,EAAE;QACjBuH,UAAU,CAACG,OAAO,EAAE;QACpBF,YAAY,CAAC/G,IAAI,EAAE;QACnB+G,YAAY,CAACC,MAAM,EAAE;QACrB;MACJ;QACIF,UAAU,CAACvH,IAAI,EAAE;QACjBwH,YAAY,CAACxH,IAAI,EAAE;QACnBuH,UAAU,CAACG,OAAO,EAAE;QACpBF,YAAY,CAACE,OAAO,EAAE;;;EAGlCC,2BAA2BA,CAAC;IAAEC;GAAS,EAAE;IACrC,MAAM;MAAE3B;KAAsB,GAAG,IAAI,CAACpG,SAAS;IAC/CoG,oBAAoB,CAACmB,QAAQ,GAAG,CAACQ,OAAO,IAAI,CAAC,IAAI,CAACC,6BAA6B,CAAC5B,oBAAoB,CAAC;;EAEzG6B,gCAAgCA,CAAC;IAAEF;GAAS,EAAE;IAC1C,MAAM;MAAEG,SAAS;MAAEC;KAAgB,GAAG,IAAI,CAACnI,SAAS;;IAEpDkI,SAAS,CAACX,QAAQ,GAAGY,cAAc,CAACZ,QAAQ,GAAG,CAACQ,OAAO,IAAI,CAAC,IAAI,CAACC,6BAA6B,CAACE,SAAS,CAAC;;EAE7GE,2BAA2BA,GAAG;IAC1B,IAAI,CAACX,gBAAgB,EAAE;;EAE3BO,6BAA6BA,CAACK,MAAM,EAAEC,SAAS,GAAG,IAAI,CAACtI,SAAS,CAACkG,cAAc,CAAC7D,KAAK,EAAE;IACnF,OAAO,CAACgG,MAAM,CAACE,YAAY,IAAIF,MAAM,CAACE,YAAY,CAACC,QAAQ,CAACF,SAAS,CAAC;;EAE1EG,sBAAsBA,CAAC;IAAEpG,KAAK;IAAEqG,QAAQ;IAAEzc;GAAO,EAAE;IAC/C,MACI+H,EAAE,GAAM,IAAI;MACZyL,KAAK,GAAGzL,EAAE,CAAC2U,QAAQ,CAACrB,CAAC,IAAI,cAAc,IAAIA,CAAC,CAAC;MAC7C;QACIsB,aAAa;QACbpC;OACH,GAAOxS,EAAE,CAACgM,SAAS;IACxB,IAAI/T,KAAK,IAAIoW,KAAK,EAAE;MAChB,KAAK,IAAIsD,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGlG,KAAK,CAACiH,MAAM,EAAEf,CAAC,EAAE,EAAE;QACnC,MAAMrB,IAAI,GAAG7E,KAAK,CAACkG,CAAC,CAAC;QACrB,IAAI3R,EAAE,CAACgU,6BAA6B,CAAC1D,IAAI,EAAEjC,KAAK,CAAC,EAAE;UAC/CiC,IAAI,CAAC1D,IAAI,EAAE;UACX0D,IAAI,CAACsD,MAAM,EAAE;SAChB,MACI;UACDtD,IAAI,CAACnE,IAAI,EAAE;UACXmE,IAAI,CAACuD,OAAO,EAAE;;;;MAItBe,aAAa,CAACC,MAAM,GAAGrC,mBAAmB,CAACqC,MAAM,GAAGxG,KAAK,KAAK,MAAM;MACpE,IAAIA,KAAK,KAAK,MAAM,EAAE;QAClBuG,aAAa,CAACE,IAAI,GAAG9U,EAAE,CAACgN,CAAC,CAAE,sBAAqBqB,KAAM,eAAc,CAAC;;;;MAIzE,IAAIqG,QAAQ,KAAK,MAAM,IAAIE,aAAa,CAACvG,KAAK,IAAI,IAAI,EAAE;QACpDuG,aAAa,CAACvG,KAAK,GAAG,CAAC;;MAE3BrO,EAAE,CAAC+U,iBAAiB,EAAE;;;EAG9BA,iBAAiBA,GAAG;IAChB,MACI/U,EAAE,GAAc,IAAI;MACpB;QAAEgM;OAAW,GAAGhM,EAAE;IACtBA,EAAE,CAAC8T,2BAA2B,CAAC;MAAEC,OAAO,EAAG/H,SAAS,CAACsG,mBAAmB,CAACyB;KAAS,CAAC;IACnF/T,EAAE,CAACiU,gCAAgC,CAAC;MAAEF,OAAO,EAAG/H,SAAS,CAACuG,wBAAwB,CAACwB;KAAS,CAAC;IAC7F/T,EAAE,CAACoU,2BAA2B,EAAE;;EAEpCpG,kBAAkBA,GAAG;;IAEjB,MAAM;MAAE0F,UAAU;MAAEkB,aAAa;MAAE1C;KAAgB,GAAG,IAAI,CAAClG,SAAS;IACpE0H,UAAU,CAACoB,IAAI,GAAG,IAAI,CAAC9H,CAAC,CAAC,6BAA6B,CAAC;IACvD,IAAIkF,cAAc,CAAC7D,KAAK,IAAI6D,cAAc,CAAC7D,KAAK,KAAK,MAAM,EAAE;MACzDuG,aAAa,CAACE,IAAI,GAAG,IAAI,CAAC9H,CAAC,CAAE,sBAAqBkF,cAAc,CAAC7D,KAAM,eAAc,CAAC;;IAE1F,KAAK,CAACL,kBAAkB,EAAE;;AAElC;AACA;AAAAM,eAAA,CApQqBwD,qBAAqB,WACvB,uBAAuB;AAAAxD,eAAA,CADrBwD,qBAAqB,UAExB,uBAAuB;AAAAxD,eAAA,CAFpBwD,qBAAqB,kBAGhB;EAClBjM,GAAG,EAAO,oBAAoB;EAC9BoM,MAAM,EAAI,KAAK;EACf7D,OAAO,EAAG,KAAK;EACf3C,KAAK,EAAK;IACNyG,cAAc,EAAG;MACb3H,IAAI,EAAO,0BAA0B;MACrCrP,IAAI,EAAO,WAAW;MACtB8Z,KAAK,EAAM,+BAA+B;MAC1CrJ,MAAM,EAAK,EAAE;MACbsJ,QAAQ,EAAG,2BAA2B;MACtC7G,OAAO,EAAI;KACd;IACDwG,aAAa,EAAG;MACZrK,IAAI,EAAO,aAAa;MACxBoB,MAAM,EAAK,EAAE;MACbzQ,IAAI,EAAO,UAAU;MACrB8Z,KAAK,EAAM,2BAA2B;MACtCE,GAAG,EAAQ,CAAC;MACZC,QAAQ,EAAG;KACd;IACDhD,eAAe,EAAG;MACd5H,IAAI,EAAW,2BAA2B;MAC1CoB,MAAM,EAAS,EAAE;MACjBzQ,IAAI,EAAW,MAAM;MACrBqZ,YAAY,EAAG;KAClB;;IAEDjC,mBAAmB,EAAG;MAClB/H,IAAI,EAAW,UAAU;MACzBoB,MAAM,EAAS,EAAE;MACjByJ,WAAW,EAAI,OAAO;MACtBb,YAAY,EAAG,SAAS;MACxBS,KAAK,EAAU,0BAA0B;MACzCjB,OAAO,EAAQ,IAAI;MACnBkB,QAAQ,EAAO;KAClB;IACD7C,oBAAoB,EAAG;MACnB7H,IAAI,EAAW,gCAAgC;MAC/CoB,MAAM,EAAS,EAAE;MACjBzQ,IAAI,EAAW,WAAW;MAC1BqZ,YAAY,EAAG;KAClB;IACDlC,iBAAiB,EAAG;MAChB9H,IAAI,EAAW,6BAA6B;MAC5CoB,MAAM,EAAS,EAAE;MACjBzQ,IAAI,EAAW,QAAQ;MACvBqZ,YAAY,EAAG;KAClB;;IAEDhC,wBAAwB,EAAG;MACvBhI,IAAI,EAAW,UAAU;MACzBoB,MAAM,EAAS,EAAE;MACjByJ,WAAW,EAAI,OAAO;MACtBb,YAAY,EAAG,gBAAgB;MAC/BS,KAAK,EAAU,4BAA4B;MAC3CC,QAAQ,EAAO;KAClB;IACDd,cAAc,EAAG;MACb5J,IAAI,EAAW,0BAA0B;MACzCoB,MAAM,EAAS,EAAE;MACjBzQ,IAAI,EAAW,WAAW;MAC1BqZ,YAAY,EAAG;KAClB;IACDL,SAAS,EAAG;MACR3J,IAAI,EAAW,qBAAqB;MACpCoB,MAAM,EAAS,EAAE;MACjBzQ,IAAI,EAAW,MAAM;MACrBqZ,YAAY,EAAG,gBAAgB;MAC/Bc,IAAI,EAAW;KAClB;IACD7C,mBAAmB,EAAG;MAClBjI,IAAI,EAAO,8BAA8B;MACzCoB,MAAM,EAAK,GAAG;MACdqJ,KAAK,EAAM,gCAAgC;MAC3CC,QAAQ,EAAG;KACd;IACDvB,UAAU,EAAG;MACTnJ,IAAI,EAAO,aAAa;MACxBoB,MAAM,EAAK,GAAG;MACdzQ,IAAI,EAAO,OAAO;MAClBga,GAAG,EAAQ,CAAC;MACZC,QAAQ,EAAG,IAAI;MACf5B,QAAQ,EAAG,IAAI;MACfyB,KAAK,EAAM;KACd;IACDrB,YAAY,EAAG;MACXpJ,IAAI,EAAO,WAAW;MACtBoB,MAAM,EAAK,GAAG;MACdzQ,IAAI,EAAO,SAAS;MACpB2Z,MAAM,EAAK,IAAI;MACftB,QAAQ,EAAG,IAAI;MACfyB,KAAK,EAAM,GAAG;MACdG,QAAQ,EAAG;;;AAGvB,CAAC;AAkKLrD,qBAAqB,CAAC7D,SAAS,EAAE;AACjC6D,qBAAqB,CAAC3H,MAAM,GAAG,uBAAuB;;AC7Rte,MAAMmL,SAAS,SAASlL,gBAAgB,CAAC;;EAEpD,WAAWtK,KAAKA,GAAG;IACf,OAAO,WAAW;;;AAG1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI,WAAW2B,YAAYA,GAAG;IACtB,OAAO;;AAEf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACY8T,YAAY,EAAG,IAAI;MACnBhL,IAAI,EAAG;;AAEnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;KACS;;;EAEL,WAAWiL,YAAYA,GAAG;IACtB,MAAM1T,MAAM,GAAG,KAAK,CAAC0T,YAAY;IACjC1T,MAAM,CAACuB,KAAK,CAAC/C,IAAI,CAAC,mBAAmB,CAAC;IACtC,OAAOwB,MAAM;;;;;AAKrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEI,IAAIrB,aAAaA,GAAG;;IAEhB,OAAO,IAAI,CAACP,MAAM,CAACuV,YAAY,GAAG,IAAI,CAACvV,MAAM,CAACkB,KAAK,GAAG,IAAI,CAAClB,MAAM,CAACO,aAAa;;EAEnFiV,gBAAgBA,CAACjO,KAAK,EAAE;IAAA,IAAAkO,IAAA;IACpB,MACI9d,IAAI,GAAe,KAAK,CAAC6d,gBAAgB,CAACjO,KAAK,CAAC;MAChDmO,YAAY,GAAO/d,IAAI,CAACge,aAAa;MACrC;QAAE3V;OAAQ,GAAS,IAAI;MACvBmL,WAAW,GAAQnL,MAAM,CAAC4V,kBAAkB,CAACF,YAAY,CAAC;;MAE1DG,cAAc,GAAK1K,WAAW,MAAAsK,IAAA,GAAKzV,MAAM,CAAC8V,qBAAqB,CAACJ,YAAY,CAAC,IAAI,IAAI,CAACnV,aAAa,CAACwV,IAAI,cAAAN,IAAA,uBAAtEA,IAAA,CAAyEO,SAAS;MACpHC,gBAAgB,GAAG9K,WAAW,IAAInL,MAAM,CAACkW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"}