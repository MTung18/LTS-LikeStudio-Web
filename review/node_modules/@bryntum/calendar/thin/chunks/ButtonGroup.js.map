{"version":3,"file":"ButtonGroup.js","sources":["../../../../Core/lib/Core/widget/ButtonGroup.js"],"sourcesContent":["import Container from './Container.js';\nimport Rotatable from './mixin/Rotatable.js';\n\nimport './Button.js';\n\n/**\n * @module Core/widget/ButtonGroup\n */\n\n/**\n * A specialized container that holds buttons, displaying them in a horizontal group with borders adjusted to make them\n * stick together.\n *\n * Trying to add other widgets than buttons will throw an exception.\n *\n * ```javascript\n * new ButtonGroup({\n *     items : [\n *         { icon : 'b-fa b-fa-kiwi-bird' },\n *         { icon : 'b-fa b-fa-kiwi-otter' },\n *         { icon : 'b-fa b-fa-kiwi-rabbit' },\n *         ...\n *     ]\n * });\n * ```\n *\n * @inlineexample Core/widget/ButtonGroup.js\n * @classType buttonGroup\n * @extends Core/widget/Container\n * @widget\n */\nexport default class ButtonGroup extends Container.mixin(Rotatable) {\n\n    /**\n     * Fires when a button in the group is clicked\n     * @event click\n     * @param {Core.widget.Button} source Clicked button\n     * @param {Event} event DOM event\n     */\n\n    /**\n     * Fires when the default action is performed on a button in the group (the button is clicked)\n     * @event action\n     * @param {Core.widget.Button} source Clicked button\n     * @param {Event} event DOM event\n     */\n\n    /**\n     * Fires when a button in the group is toggled (the {@link Core.widget.Button#property-pressed} state is changed).\n     * If you need to process the pressed button only, consider using {@link #event-click} event or {@link #event-action} event.\n     * @event toggle\n     * @param {Core.widget.Button} source Toggled button\n     * @param {Boolean} pressed New pressed state\n     * @param {Event} event DOM event\n     */\n\n    static $name = 'ButtonGroup';\n\n    static type = 'buttongroup';\n\n    static configurable = {\n        defaultType : 'button',\n\n        /**\n         * Custom CSS class to add to element. When using raised buttons (cls 'b-raised' on the buttons), the group\n         * will look nicer if you also set that cls on the group.\n         *\n         * ```\n         * new ButtonGroup({\n         *   cls : 'b-raised,\n         *   items : [\n         *       { icon : 'b-fa b-fa-unicorn', cls : 'b-raised' },\n         *       ...\n         *   ]\n         * });\n         * ```\n         *\n         * @config {String}\n         * @category CSS\n         */\n        cls : null,\n\n        /**\n         * An array of Buttons or typed Button config objects.\n         * @config {ButtonConfig[]|Core.widget.Button[]}\n         */\n        items : null,\n\n        /**\n         * Default color to apply to all contained buttons, see {@link Core.widget.Button#config-color Button#color}.\n         * Individual buttons can override the default.\n         * @config {String}\n         */\n        color : null,\n\n        /**\n         * Set to `true` to turn the ButtonGroup into a toggle group, assigning a generated value to each contained\n         * buttons {@link Core.widget.Button#config-toggleGroup toggleGroup config}. Individual buttons can\n         * override the default.\n         * @config {Boolean}\n         */\n        toggleGroup : null,\n\n        valueSeparator : ',',\n\n        columns : null,\n\n        hideWhenEmpty : true,\n\n        defaultBindProperty : 'value'\n    };\n\n    onChildAdd(item) {\n        super.onChildAdd(item);\n\n        item.ion({\n            click   : 'resetValueCache',\n            toggle  : 'onItemToggle',\n            thisObj : this,\n            // This needs to run before the 'click' event is relayed by this button group, in such listener\n            // the `value` must already be updated\n            prio    : 10000\n        });\n    }\n\n    onChildRemove(item) {\n        item.un({\n            toggle  : 'resetValueCache',\n            click   : 'resetValueCache',\n            thisObj : this\n        });\n        super.onChildRemove(item);\n    }\n\n    onItemToggle(event) {\n        const me = this;\n\n        me.resetValueCache();\n\n        if (!me.isSettingValue && (!me.toggleGroup || event.pressed)) {\n            me.triggerFieldChange({ value : me.value, userAction : true, event });\n        }\n    }\n\n    resetValueCache() {\n        // reset cached value to revalidate next time it's requested\n        this._value = null;\n    }\n\n    createWidget(widget) {\n        const\n            me   = this,\n            type = me.constructor.resolveType(widget.type || 'button');\n\n        if (type.isButton) {\n            if (me.color && !widget.color) {\n                widget.color = me.color;\n            }\n\n            if (me.toggleGroup && !widget.toggleGroup) {\n                if (typeof me.toggleGroup === 'boolean') {\n                    me.toggleGroup = ButtonGroup.generateId('toggleGroup');\n                }\n\n                widget.toggleGroup = me.toggleGroup;\n            }\n        }\n\n        if (me.columns) {\n            widget.width = `${100 / me.columns}%`;\n        }\n\n        widget = super.createWidget(widget);\n\n        me.relayEvents(widget, ['click', 'action', 'toggle']);\n\n        return widget;\n    }\n\n    updateRotate(rotate) {\n        this.eachWidget(btn => {\n            if (btn.rotate !== false) {\n                btn.rotate = rotate;\n            }\n        });\n    }\n\n    get value() {\n        // if we don't have cached value\n        // let's calculate it based on item values\n        if (!this._value) {\n            const values = [];\n\n            // collect pressed item values\n            this.items.forEach(w => {\n                if (w.pressed && w.value !== undefined) {\n                    values.push(w.value);\n                }\n            });\n\n            // build a string\n            this._value = values.join(this.valueSeparator);\n        }\n\n        return this._value;\n    }\n\n    set value(value) {\n        const\n            me       = this,\n            oldValue = me.value;\n\n        if (!Array.isArray(value)) {\n            if (value === undefined || value === null) {\n                value = [];\n            }\n            else if (typeof value == 'string') {\n                value = value.split(me.valueSeparator);\n            }\n            else {\n                value = [value];\n            }\n        }\n\n        me._value = value.join(me.valueSeparator);\n\n        me.isSettingValue = true;\n\n        // Reflect value on items\n        me.items.forEach(w => {\n            if (w.value !== undefined) {\n                w.pressed = value.includes(w.value);\n            }\n        });\n\n        me.isSettingValue = false;\n\n        if (!me.isConfiguring && oldValue !== me.value) {\n            me.triggerFieldChange({ value : me.value, userAction : false });\n        }\n    }\n\n    updateDisabled(disabled) {\n        this.items.forEach(button => button.disabled = disabled || (!button.ignoreParentReadOnly && this.readOnly));\n    }\n\n    updateReadOnly(readOnly) {\n        super.updateReadOnly(readOnly);\n\n        this.updateDisabled(this.disabled);\n    }\n\n    get widgetClassList() {\n        const classList = super.widgetClassList;\n        // if the buttons should be shown in rows\n        this.columns && classList.push('b-columned');\n        return classList;\n    }\n}\n\n// Register this widget type with its Factory\nButtonGroup.initClass();\n"],"names":["ButtonGroup","Container","mixin","Rotatable","onChildAdd","item","ion","click","toggle","thisObj","prio","onChildRemove","un","onItemToggle","event","me","resetValueCache","isSettingValue","toggleGroup","pressed","triggerFieldChange","value","userAction","_value","createWidget","widget","type","constructor","resolveType","isButton","color","generateId","columns","width","relayEvents","updateRotate","rotate","eachWidget","btn","values","items","forEach","w","undefined","push","join","valueSeparator","oldValue","Array","isArray","split","includes","isConfiguring","updateDisabled","disabled","button","ignoreParentReadOnly","readOnly","updateReadOnly","widgetClassList","classList","_defineProperty","defaultType","cls","hideWhenEmpty","defaultBindProperty","initClass","_$name"],"mappings":"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"}