{"version":3,"file":"EventSelection.js","sources":["../../../../Scheduler/lib/Scheduler/crud/AbstractCrudManager.js","../../../../Scheduler/lib/Scheduler/data/CrudManager.js","../../../../Scheduler/lib/Scheduler/eventlayout/PackMixin.js","../../../../Scheduler/lib/Scheduler/view/mixin/Describable.js","../../../../Scheduler/lib/Scheduler/view/mixin/EventSelection.js"],"sourcesContent":["import Base from '../../Core/Base.js';\nimport AbstractCrudManagerMixin from './AbstractCrudManagerMixin.js';\nimport StringHelper from '../../Core/helper/StringHelper.js';\n\n/**\n * @module Scheduler/crud/AbstractCrudManager\n */\n\n/**\n * @typedef {Object} CrudManagerStoreDescriptor\n * @property {String} storeId Unique store identifier. Store related requests/responses will be sent under this name.\n * @property {Core.data.Store} store The store itself.\n * @property {String} [phantomIdField] Set this if the store model has a predefined field to keep phantom record identifier.\n * @property {String} [idField] id field name, if it's not specified then class will try to get it from store model.\n * @property {Boolean} [writeAllFields] Set to true to write all fields from modified records\n */\n\n/**\n * This is an abstract class serving as the base for the {@link Scheduler.data.CrudManager} class.\n * It implements basic mechanisms to organize batch communication with a server.\n * Yet it does not contain methods related to _data transfer_ nor _encoding_.\n * These methods are to be provided in sub-classes by consuming the appropriate mixins.\n *\n * For example, this is how the class can be used to implement an JSON encoding system:\n *\n * ```javascript\n * // let's make new CrudManager using AJAX as a transport system and JSON for encoding\n * class MyCrudManager extends JsonEncode(AjaxTransport(AbstractCrudManager)) {\n *\n * }\n * ```\n *\n * ## Data transfer and encoding methods\n *\n * These are methods that must be provided by subclasses of this class:\n *\n * - [#sendRequest](#Scheduler/crud/AbstractCrudManagerMixin#function-sendRequest)\n * - [#cancelRequest](#Scheduler/crud/AbstractCrudManagerMixin#function-cancelRequest)\n * - [#encode](#Scheduler/crud/AbstractCrudManagerMixin#function-encode)\n * - [#decode](#Scheduler/crud/AbstractCrudManagerMixin#function-decode)\n *\n * @extends Core/Base\n * @mixes Scheduler/crud/AbstractCrudManagerMixin\n * @abstract\n */\nexport default class AbstractCrudManager extends Base.mixin(AbstractCrudManagerMixin) {\n    //region Default config\n\n    /**\n     * The server revision stamp.\n     * The _revision stamp_ is a number which should be incremented after each server-side change.\n     * This property reflects the current version of the data retrieved from the server and gets updated after each\n     * {@link Scheduler/crud/AbstractCrudManagerMixin#function-load} and {@link Scheduler/crud/AbstractCrudManagerMixin#function-sync} call.\n     * @property {Number}\n     * @readonly\n     */\n    get revision() {\n        return this.crudRevision;\n    }\n\n    set revision(value) {\n        this.crudRevision = value;\n    }\n\n    /**\n     * Get or set data of {@link #property-crudStores} as a JSON string.\n     *\n     * Get a JSON string:\n     * ```javascript\n     *\n     * const jsonString = scheduler.crudManager.json;\n     *\n     * // returned jsonString:\n     * '{\"eventsData\":[...],\"resourcesData\":[...],...}'\n     *\n     * // object representation of the returned jsonString:\n     * {\n     *     resourcesData    : [...],\n     *     eventsData       : [...],\n     *     assignmentsData  : [...],\n     *     dependenciesData : [...],\n     *     timeRangesData   : [...],\n     *     // data from other stores\n     * }\n     * ```\n     *\n     * Set a JSON string (to populate the CrudManager stores):\n     *\n     * ```javascript\n     * scheduler.crudManager.json = '{\"eventsData\":[...],\"resourcesData\":[...],...}'\n     * ```\n     *\n     * @property {String}\n     */\n    get json() {\n        return StringHelper.safeJsonStringify(this);\n    }\n\n    set json(json) {\n        if (typeof json === 'string') {\n            json = StringHelper.safeJsonParse(json);\n        }\n\n        this.forEachCrudStore(store => {\n            const dataName = `${store.storeId}Data`;\n            if (json[dataName]) {\n                store.data = json[dataName];\n            }\n        });\n    }\n\n    static get defaultConfig() {\n        return {\n            /**\n             * Sets the list of stores controlled by the CRUD manager.\n             *\n             * When adding a store to the CrudManager, make sure the server response format is correct for `load` and `sync` requests.\n             * Learn more in the [Working with data](#Scheduler/guides/data/crud_manager.md#loading-data) guide.\n             *\n             * Store can be provided as in instance, using its `storeId` or as an {@link #typedef-CrudManagerStoreDescriptor}\n             * object.\n             * @config {Core.data.Store[]|String[]|CrudManagerStoreDescriptor[]}\n             */\n            stores : null\n\n            /**\n             * Encodes request to the server.\n             * @function encode\n             * @param {Object} request The request to encode.\n             * @returns {String} The encoded request.\n             * @abstract\n             */\n\n            /**\n             * Decodes response from the server.\n             * @function decode\n             * @param {String} response The response to decode.\n             * @returns {Object} The decoded response.\n             * @abstract\n             */\n        };\n    }\n\n    //endregion\n\n    //region Init\n\n    construct(config = {}) {\n        if (config.stores) {\n            config.crudStores = config.stores;\n            delete config.stores;\n        }\n\n        super.construct(config);\n    }\n\n    //endregion\n\n    //region inline data\n\n    /**\n     * Returns the data from all CrudManager `crudStores` in a format that can be consumed by `inlineData`.\n     *\n     * Used by JSON.stringify to correctly convert this CrudManager to json.\n     *\n     * The returned data is identical to what {@link Scheduler/crud/AbstractCrudManager#property-inlineData} contains.\n     *\n     * ```javascript\n     *\n     * const json = scheduler.crudManager.toJSON();\n     *\n     * // json:\n     * {\n     *     eventsData : [...],\n     *     resourcesData : [...],\n     *     dependenciesData : [...],\n     *     assignmentsData : [...],\n     *     timeRangesData : [...],\n     *     resourceTimeRangesData : [...],\n     *     // ... other stores data\n     * }\n     * ```\n     *\n     * Output can be consumed by `inlineData`.\n     *\n     * ```javascript\n     * const json = scheduler.crudManager.toJSON();\n     *\n     * // Plug it back in later\n     * scheduler.crudManager.inlineData = json;\n     * ```\n     *\n     * @function toJSON\n     * @returns {Object}\n     * @category JSON\n     */\n    toJSON() {\n        // Collect data from crudStores\n        const result = {};\n        this.forEachCrudStore((store, storeId) => result[`${storeId}Data`] = store.toJSON());\n        return result;\n    }\n\n    /**\n     * Get or set data of CrudManager stores. The returned data is identical to what\n     * {@link Scheduler/crud/AbstractCrudManager#function-toJSON} returns:\n     *\n     * ```javascript\n     *\n     * const data = scheduler.crudManager.inlineData;\n     *\n     * // data:\n     * {\n     *     eventsData : [...],\n     *     resourcesData : [...],\n     *     dependenciesData : [...],\n     *     assignmentsData : [...],\n     *     timeRangesData : [...],\n     *     resourceTimeRangesData : [...],\n     *     ... other stores data\n     * }\n     *\n     *\n     * // Plug it back in later\n     * scheduler.crudManager.inlineData = data;\n     * ```\n     *\n     * @property {Object}\n     */\n    get inlineData() {\n        return this.toJSON();\n    }\n\n    set inlineData(data) {\n        this.json = data;\n    }\n\n    //endregion\n\n    //region Store collection (add, remove, get & iterate)\n\n    set stores(stores) {\n        if (stores !== this.crudStores) {\n            this.crudStores = stores;\n        }\n    }\n\n    /**\n     * A list of registered stores whose server communication will be collected into a single batch.\n     * Each store is represented by a _store descriptor_.\n     * @member {CrudManagerStoreDescriptor[]} stores\n     */\n    get stores() {\n        return this.crudStores;\n    }\n\n    //endregion\n\n    /**\n     * Returns true if the crud manager is currently loading data\n     * @property {Boolean}\n     * @readonly\n     * @category CRUD\n     */\n    get isLoading() {\n        return this.isCrudManagerLoading;\n    }\n\n    /**\n     * Adds a store to the collection.\n     *\n     *```javascript\n     * // append stores to the end of collection\n     * crudManager.addStore([\n     *     store1,\n     *     // storeId\n     *     'bar',\n     *     // store descriptor\n     *     {\n     *         storeId : 'foo',\n     *         store   : store3\n     *     },\n     *     {\n     *         storeId         : 'bar',\n     *         store           : store4,\n     *         // to write all fields of modified records\n     *         writeAllFields  : true\n     *     }\n     * ]);\n     *```\n     *\n     * **Note:** Order in which stores are kept in the collection is very essential sometimes.\n     * Exactly in this order the loaded data will be put into each store.\n     *\n     * When adding a store to the CrudManager, make sure the server response format is correct for `load` and `sync`\n     * requests. Learn more in the [Working with data](#Scheduler/guides/data/crud_manager.md#loading-data) guide.\n     *\n     * @param {Core.data.Store|String|CrudManagerStoreDescriptor|Core.data.Store[]|String[]|CrudManagerStoreDescriptor[]} store\n     * A store or list of stores. Each store might be specified by its instance, `storeId` or _descriptor_.\n     * @param {Number} [position] The relative position of the store. If `fromStore` is specified the position will be\n     * taken relative to it.\n     * If not specified then store(s) will be appended to the end of collection.\n     * Otherwise, it will be an index in stores collection.\n     *\n     * ```javascript\n     * // insert stores store4, store5 to the start of collection\n     * crudManager.addStore([ store4, store5 ], 0);\n     * ```\n     *\n     * @param {String|Core.data.Store|CrudManagerStoreDescriptor} [fromStore] The store relative to which position\n     * should be calculated. Can be defined as a store identifier, instance or descriptor (the result of\n     * {@link Scheduler/crud/AbstractCrudManagerMixin#function-getStoreDescriptor} call).\n     *\n     * ```javascript\n     * // insert store6 just before a store having storeId equal to 'foo'\n     * crudManager.addStore(store6, 0, 'foo');\n     *\n     * // insert store7 just after store3 store\n     * crudManager.addStore(store7, 1, store3);\n     * ```\n     */\n    addStore(...args) {\n        return this.addCrudStore(...args);\n    }\n\n    removeStore(...args) {\n        return this.removeCrudStore(...args);\n    }\n\n    getStore(...args) {\n        return this.getCrudStore(...args);\n    }\n\n    hasChanges(...args) {\n        return this.crudStoreHasChanges(...args);\n    }\n\n    loadData(...args) {\n        return this.loadCrudManagerData(...args);\n    }\n}\n","import ResourceStore from './ResourceStore.js';\nimport EventStore from './EventStore.js';\nimport AssignmentStore from './AssignmentStore.js';\nimport DependencyStore from './DependencyStore.js';\nimport Store from '../../Core/data/Store.js';\nimport ProjectCrudManager from './mixin/ProjectCrudManager.js';\nimport AbstractCrudManager from '../crud/AbstractCrudManager.js';\nimport AjaxTransport from '../crud/transport/AjaxTransport.js';\nimport JsonEncoder from '../crud/encoder/JsonEncoder.js';\nimport ProjectModel from '../model/ProjectModel.js';\nimport ObjectHelper from '../../Core/helper/ObjectHelper.js';\n\n/**\n * @module Scheduler/data/CrudManager\n */\n\n/**\n * The Crud Manager (or \"CM\") is a class implementing centralized loading and saving of data in multiple stores.\n * Loading the stores and saving all changes is done using a single request. The stores managed by CRUD manager should\n * not be configured with their own CRUD URLs or use {@link Core/data/AjaxStore#config-autoLoad}/{@link Core/data/AjaxStore#config-autoCommit}.\n *\n * This class uses JSON as its data encoding format.\n *\n * ## Scheduler stores\n *\n * The class supports Scheduler specific stores (namely: resource, event, assignment and dependency stores).\n * For these stores, the CM has separate configs ({@link #config-resourceStore}, {@link #config-eventStore},\n * {@link #config-assignmentStore}) to register them.\n *\n * ```javascript\n * const crudManager = new CrudManager({\n *     autoLoad        : true,\n *     resourceStore   : resourceStore,\n *     eventStore      : eventStore,\n *     assignmentStore : assignmentStore,\n *     transport       : {\n *         load : {\n *             url : 'php/read.php'\n *         },\n *         sync : {\n *             url : 'php/save.php'\n *         }\n *     }\n * });\n * ```\n *\n * ## AJAX request configuration\n *\n * To configure AJAX request parameters please take a look at the\n * {@link Scheduler/crud/transport/AjaxTransport} docs.\n *\n * ```javascript\n * const crudManager = new CrudManager({\n *     autoLoad        : true,\n *     resourceStore,\n *     eventStore,\n *     assignmentStore,\n *     transport       : {\n *         load    : {\n *             url         : 'php/read.php',\n *             // use GET request\n *             method      : 'GET',\n *             // pass request JSON in \"rq\" parameter\n *             paramName   : 'rq',\n *             // extra HTTP request parameters\n *             params      : {\n *                 foo     : 'bar'\n *             },\n *             // pass some extra Fetch API option\n *             credentials : 'include'\n *         },\n *         sync : {\n *             url : 'php/save.php'\n *         }\n *     }\n * });\n * ```\n * ## Using inline data\n *\n * The CrudManager provides settable property {@link #property-inlineData} that can\n * be used to get data from all {@link #property-crudStores} at once and to set this\n * data as well. Populating the stores this way can be useful if you cannot or you do not want to use CrudManager for\n * server requests but you pull the data by other means and have it ready outside CrudManager. Also, the data from all\n * stores is available in a single assignment statement.\n *\n * ### Getting data\n * ```javascript\n * const data = scheduler.crudManager.inlineData;\n *\n * // use the data in your application\n * ```\n *\n * ### Setting data\n * ```javascript\n * const data = // your function to pull server data\n *\n * scheduler.crudManager.inlineData = data;\n * ```\n *\n * ## Load order\n *\n * The CM is aware of the proper load order for Scheduler specific stores so you don't need to worry about it.\n * If you provide any extra stores (using {@link #config-stores} config) they will be\n * added to the start of collection before the Scheduler specific stores.\n * If you need a different loading order, you should use {@link #function-addStore} method to\n * register your store:\n *\n * ```javascript\n * const crudManager = new CrudManager({\n *     resourceStore   : resourceStore,\n *     eventStore      : eventStore,\n *     assignmentStore : assignmentStore,\n *     // extra user defined stores will get to the start of collection\n *     // so they will be loaded first\n *     stores          : [ store1, store2 ],\n *     transport       : {\n *         load : {\n *             url : 'php/read.php'\n *         },\n *         sync : {\n *             url : 'php/save.php'\n *         }\n *     }\n * });\n *\n * // append store3 to the end so it will be loaded last\n * crudManager.addStore(store3);\n *\n * // now when we registered all the stores let's load them\n * crudManager.load();\n * ```\n *\n * ## Assignment store\n *\n * The Crud Manager is designed to use {@link Scheduler/data/AssignmentStore} for assigning events to one or multiple resources.\n * However if server provides `resourceId` for any of the `events` then the Crud Manager enables backward compatible mode when\n * an event could have a single assignment only. This also disables multiple assignments in Scheduler UI.\n * In order to use multiple assignments server backend should be able to receive/send `assignments` for `load` and `sync` requests.\n *\n * ## Project\n *\n * The Crud Manager automatically consumes stores of the provided project (namely its {@link Scheduler/model/ProjectModel#property-eventStore},\n * {@link Scheduler/model/ProjectModel#property-resourceStore}, {@link Scheduler/model/ProjectModel#property-assignmentStore},\n * {@link Scheduler/model/ProjectModel#property-dependencyStore}, {@link Scheduler/model/ProjectModel#property-timeRangeStore} and\n * {@link Scheduler/model/ProjectModel#property-resourceTimeRangeStore}):\n *\n * ```javascript\n * const crudManager = new CrudManager({\n *     // crud manager will get stores from myAppProject project\n *     project   : myAppProject,\n *     transport : {\n *         load : {\n *             url : 'php/read.php'\n *         },\n *         sync : {\n *             url : 'php/save.php'\n *         }\n *     }\n * });\n * ```\n *\n * @mixes Scheduler/data/mixin/ProjectCrudManager\n * @mixes Scheduler/crud/encoder/JsonEncoder\n * @mixes Scheduler/crud/transport/AjaxTransport\n * @extends Scheduler/crud/AbstractCrudManager\n */\n\nexport default class CrudManager extends AbstractCrudManager.mixin(ProjectCrudManager, AjaxTransport, JsonEncoder) {\n\n    static $name = 'CrudManager';\n\n    //region Config\n\n    static get defaultConfig() {\n        return {\n            projectClass         : ProjectModel,\n            resourceStoreClass   : ResourceStore,\n            eventStoreClass      : EventStore,\n            assignmentStoreClass : AssignmentStore,\n            dependencyStoreClass : DependencyStore,\n\n            /**\n             * A store with resources (or a config object).\n             * @config {Scheduler.data.ResourceStore|ResourceStoreConfig}\n             */\n            resourceStore : {},\n\n            /**\n             * A store with events (or a config object).\n             *\n             * ```\n             * crudManager : {\n             *      eventStore {\n             *          storeClass : MyEventStore\n             *      }\n             * }\n             * ```\n             * @config {Scheduler.data.EventStore|EventStoreConfig}\n             */\n            eventStore : {},\n\n            /**\n             * A store with assignments (or a config object).\n             * @config {Scheduler.data.AssignmentStore|AssignmentStoreConfig}\n             */\n            assignmentStore : {},\n\n            /**\n             * A store with dependencies(or a config object).\n             * @config {Scheduler.data.DependencyStore|DependencyStoreConfig}\n             */\n            dependencyStore : {},\n\n            /**\n             * A project that holds and links stores\n             * @config {Scheduler.model.ProjectModel}\n             */\n            project : null\n        };\n    }\n\n    //endregion\n\n    buildProject() {\n        return new this.projectClass(this.buildProjectConfig());\n    }\n\n    buildProjectConfig() {\n        return ObjectHelper.cleanupProperties({\n            eventStore             : this.eventStore,\n            resourceStore          : this.resourceStore,\n            assignmentStore        : this.assignmentStore,\n            dependencyStore        : this.dependencyStore,\n            resourceTimeRangeStore : this.resourceTimeRangeStore\n        });\n    }\n\n    //region Stores\n\n    set project(project) {\n        const me = this;\n\n        if (project !== me._project) {\n            me.detachListeners('beforeDataReady');\n            me.detachListeners('afterDataReady');\n\n            me._project = project;\n\n            if (project) {\n                me.eventStore             = project.eventStore;\n                me.resourceStore          = project.resourceStore;\n                me.assignmentStore        = project.assignmentStore;\n                me.dependencyStore        = project.dependencyStore;\n                me.timeRangeStore         = project.timeRangeStore;\n                me.resourceTimeRangeStore = project.resourceTimeRangeStore;\n\n                // When adding multiple events to the store it will trigger multiple change events each of which will\n                // call crudManager.hasChanges, which will try to actually get the changeset package. It takes some time\n                // and we better skip that part for the dataready event, suspending changes tracking.\n                project.ion({\n                    name      : 'beforeDataReady',\n                    dataReady : () => me.suspendChangesTracking(),\n                    prio      : 100,\n                    thisObj   : me\n                });\n\n                project.ion({\n                    name      : 'afterDataReady',\n                    dataReady : () => me.resumeChangesTracking(),\n                    prio      : -100,\n                    thisObj   : me\n                });\n            }\n\n            if (!me.eventStore) {\n                me.eventStore = {};\n            }\n            if (!me.resourceStore) {\n                me.resourceStore = {};\n            }\n            if (!me.assignmentStore) {\n                me.assignmentStore = {};\n            }\n            if (!me.dependencyStore) {\n                me.dependencyStore = {};\n            }\n        }\n    }\n\n    get project() {\n        return this._project;\n    }\n\n    /**\n     * Store for {@link Scheduler/feature/TimeRanges timeRanges} feature.\n     * @property {Core.data.Store}\n     */\n    get timeRangeStore() {\n        return this._timeRangeStore?.store;\n    }\n\n    set timeRangeStore(store) {\n        this.setFeaturedStore('_timeRangeStore', store, this.project?.timeRangeStoreClass);\n    }\n\n    /**\n     * Store for {@link Scheduler/feature/ResourceTimeRanges resourceTimeRanges} feature.\n     * @property {Core.data.Store}\n     */\n    get resourceTimeRangeStore() {\n        return this._resourceTimeRangeStore?.store;\n    }\n\n    set resourceTimeRangeStore(store) {\n        this.setFeaturedStore('_resourceTimeRangeStore', store, this.project?.resourceTimeRangeStoreClass);\n    }\n\n    /**\n     * Get/set the resource store bound to the CRUD manager.\n     * @property {Scheduler.data.ResourceStore}\n     */\n    get resourceStore() {\n        return this._resourceStore?.store;\n    }\n\n    set resourceStore(store) {\n        const me = this;\n\n        me.setFeaturedStore('_resourceStore', store, me.resourceStoreClass);\n    }\n\n    /**\n     * Get/set the event store bound to the CRUD manager.\n     * @property {Scheduler.data.EventStore}\n     */\n    get eventStore() {\n        return this._eventStore?.store;\n    }\n\n    set eventStore(store) {\n        const me = this;\n\n        me.setFeaturedStore('_eventStore', store, me.eventStoreClass);\n    }\n\n    /**\n     * Get/set the assignment store bound to the CRUD manager.\n     * @property {Scheduler.data.AssignmentStore}\n     */\n    get assignmentStore() {\n        return this._assignmentStore?.store;\n    }\n\n    set assignmentStore(store) {\n        this.setFeaturedStore('_assignmentStore', store, this.assignmentStoreClass);\n    }\n\n    /**\n     * Get/set the dependency store bound to the CRUD manager.\n     * @property {Scheduler.data.DependencyStore}\n     */\n    get dependencyStore() {\n        return this._dependencyStore?.store;\n    }\n\n    set dependencyStore(store) {\n        this.setFeaturedStore('_dependencyStore', store, this.dependencyStoreClass);\n    }\n\n    setFeaturedStore(property, store, storeClass) {\n        const\n            me       = this,\n            oldStore = me[property]?.store;\n\n        // if not the same store\n        if (oldStore !== store) {\n            // normalize store value (turn it into a storeClass instance if needed)\n            store = Store.getStore(store, store?.storeClass || storeClass);\n\n            if (oldStore) {\n                me.removeStore(oldStore);\n            }\n\n            me[property] = store && { store } || null;\n\n            // Adds configured scheduler stores to the store collection ensuring correct order\n            // unless they're already registered.\n            me.addPrioritizedStore(me[property]);\n        }\n\n        return me[property];\n    }\n\n    getChangesetPackage() {\n        const pack = super.getChangesetPackage();\n\n        // Remove assignments from changes if using single assignment mode (resourceId)\n        if (pack && this.eventStore.usesSingleAssignment) {\n            delete pack[this.assignmentStore.storeId];\n            // No other changes?\n            if (!this.crudStores.some(storeInfo => pack[storeInfo.storeId])) {\n                return null;\n            }\n        }\n\n        return pack;\n    }\n\n    //endregion\n\n    get crudLoadValidationMandatoryStores() {\n        return [this._eventStore.storeId, this._resourceStore.storeId];\n    }\n\n};\n","import Base from '../../Core/Base.js';\nimport DateHelper from '../../Core/helper/DateHelper.js';\n\n/**\n * @module Scheduler/eventlayout/PackMixin\n */\n\n/**\n * Mixin holding functionality shared between HorizontalLayoutPack and VerticalLayout.\n *\n * @mixin\n * @private\n */\nexport default Target => class PackMixin extends (Target || Base) {\n    static get $name() {\n        return 'PackMixin';\n    }\n\n    static get defaultConfig() {\n        return {\n            coordProp       : 'top',\n            sizeProp        : 'height',\n            inBandCoordProp : 'inBandTop',\n            inBandSizeProp  : 'inBandHeight'\n        };\n    }\n\n    isSameGroup(a, b) {\n        return this.grouped ? a.group === b.group : true;\n    }\n\n    // Packs the events to consume as little space as possible\n    packEventsInBands(events, applyClusterFn) {\n        const\n            me                      = this,\n            { coordProp, sizeProp } = me;\n\n        let slot,\n            firstInCluster,\n            cluster,\n            j;\n\n        for (let i = 0, l = events.length; i < l; i++) {\n            firstInCluster = events[i];\n\n            slot = me.findStartSlot(events, firstInCluster);\n\n            cluster = me.getCluster(events, i);\n\n            if (cluster.length > 1) {\n                firstInCluster[coordProp] = slot.start;\n                firstInCluster[sizeProp]  = slot.end - slot.start;\n\n                // If there are multiple slots, and events in the cluster have multiple start dates, group all same-start events into first slot\n                j = 1;\n\n                while (j < (cluster.length - 1) && cluster[j + 1].start - firstInCluster.start === 0) {\n                    j++;\n                }\n\n                // See if there's more than 1 slot available for this cluster, if so - first group in cluster consumes the entire first slot\n                const nextSlot = me.findStartSlot(events, cluster[j]);\n\n                if (nextSlot && nextSlot.start < 0.8) {\n                    cluster.length = j;\n                }\n            }\n\n            const\n                clusterSize = cluster.length,\n                slotSize    = (slot.end - slot.start) / clusterSize;\n\n            // Apply fraction values\n            for (j = 0; j < clusterSize; j++) {\n                applyClusterFn(cluster[j], j, slot, slotSize);\n            }\n\n            i += clusterSize - 1;\n        }\n\n        return 1;\n    }\n\n    findStartSlot(events, event) {\n        const\n            {\n                inBandSizeProp,\n                inBandCoordProp,\n                coordProp,\n                sizeProp\n            }                = this,\n            priorOverlappers = this.getPriorOverlappingEvents(events, event);\n\n        let i;\n\n        if (priorOverlappers.length === 0) {\n            return {\n                start : 0,\n                end   : 1\n            };\n        }\n\n        for (i = 0; i < priorOverlappers.length; i++) {\n            const\n                item       = priorOverlappers[i],\n                COORD_PROP = inBandCoordProp in item ? inBandCoordProp : coordProp,\n                SIZE_PROP  = inBandSizeProp in item ? inBandSizeProp : sizeProp;\n\n            if (i === 0 && item[COORD_PROP] > 0) {\n                return {\n                    start : 0,\n                    end   : item[COORD_PROP]\n                };\n            }\n            else {\n                if (item[COORD_PROP] + item[SIZE_PROP] < (i < priorOverlappers.length - 1 ? priorOverlappers[i + 1][COORD_PROP] : 1)) {\n                    return {\n                        start : item[COORD_PROP] + item[SIZE_PROP],\n                        end   : i < priorOverlappers.length - 1 ? priorOverlappers[i + 1][COORD_PROP] : 1\n                    };\n                }\n            }\n        }\n\n        return false;\n    }\n\n    getPriorOverlappingEvents(events, event) {\n        const\n            start       = event.start,\n            end         = event.end,\n            overlappers = [];\n\n        for (let i = 0, l = events.indexOf(event); i < l; i++) {\n            const item = events[i];\n\n            if (this.isSameGroup(item, event) && DateHelper.intersectSpans(start, end, item.start, item.end)) {\n                overlappers.push(item);\n            }\n        }\n\n        overlappers.sort(this.sortOverlappers.bind(this));\n\n        return overlappers;\n    }\n\n    sortOverlappers(e1, e2) {\n        const { coordProp } = this;\n\n        return e1[coordProp] - e2[coordProp];\n    }\n\n    getCluster(events, startIndex) {\n        const\n            startEvent = events[startIndex],\n            result     = [startEvent];\n\n        if (startIndex >= events.length - 1) {\n            return result;\n        }\n\n        let { start, end } = startEvent;\n\n        for (let i = startIndex + 1, l = events.length; i < l; i++) {\n            const item = events[i];\n\n            if (!this.isSameGroup(item, startEvent) || !DateHelper.intersectSpans(start, end, item.start, item.end)) {\n                break;\n            }\n\n            result.push(item);\n            start = DateHelper.max(start, item.start);\n            end   = DateHelper.min(item.end, end);\n        }\n\n        return result;\n    }\n};\n","import Base from '../../../Core/Base.js';\nimport DateHelper from '../../../Core/helper/DateHelper.js';\n\n/**\n * @module Scheduler/view/mixin/Describable\n */\n\nconst\n    arrayify = format => (!format || Array.isArray(format)) ? format : [format],\n    pickFormat = (formats, index, defaultFormat) => (formats && formats[index] !== true) ? formats[index] : defaultFormat;\n\n/**\n * Mixin that provides a consistent method for describing the ranges of time presented by a view. This is currently\n * consumed only by the Calendar widget for describing its child views. This mixin is defined here to facilitate using\n * a Scheduler as a child view of a Calendar.\n *\n * @mixin\n */\nexport default Target => class Describable extends (Target || Base) {\n    static $name = 'Describable';\n\n    static configurable = {\n        /**\n         * A {@link Core.helper.DateHelper} format string to use to create date output for view descriptions.\n         * @config {String}\n         * @default\n         */\n        dateFormat : 'MMMM d, YYYY',\n\n        /**\n         * A string used to separate start and end dates in the {@link #config-descriptionFormat}.\n         * @prp {String}\n         * @default\n         */\n        dateSeparator : ' - ',\n\n        /**\n         * The date format used by the default {@link #config-descriptionRenderer} for rendering the view's description.\n         * If this value is `null`, the {@link #config-dateFormat} (and potentially {@link #config-dateSeparator}) will\n         * be used.\n         *\n         * For views that can span a range of dates, this can be a 2-item array with the following interpretation:\n         *\n         * - `descriptionFormat[0]` is either a date format string or `true` (to use {@link #config-dateFormat}). The\n         *   result of formatting the `startDate` with this format specification is used when the formatting both the\n         *   `startDate` and `endDate` with this specification produces the same result. For example, a week view\n         *   displays only the month and year components of the date, so this will be used unless the end of the week\n         *   crosses into the next month.\n         *\n         * - `descriptionFormat[1]` is used with {@link Core.helper.DateHelper#function-formatRange-static} when the\n         *  `startDate` and `endDate` format differently using `descriptionFormat[0]` (as described above). This one\n         *  format string produces a result for both dates. If this value is `true`, the {@link #config-dateFormat} and\n         *  {@link #config-dateSeparator} are combined to produce the range format.\n         *\n         * @prp {String|String[]|Boolean[]}\n         * @default\n         */\n        descriptionFormat : null,\n\n        /**\n         * A function that provides the textual description for this view. If provided, this function overrides the\n         * {@link #config-descriptionFormat}.\n         *\n         * ```javascript\n         *  descriptionRenderer() {\n         *      const\n         *          eventsInView = this.eventStore.records.filter(\n         *              eventRec => DateHelper.intersectSpans(\n         *                  this.startDate, this.endDate,\n         *                  eventRec.startDate, eventRec.endDate)).length,\n         *          sd = DateHelper.format(this.startDate, 'DD/MM/YYY'),\n         *          ed = DateHelper.format(this.endDate, 'DD/MM/YYY');\n         *\n         *     return `${sd} - ${ed}, ${eventsInView} event${eventsInView === 1 ? '' : 's'}`;\n         * }\n         * ```\n         * @config {Function} descriptionRenderer\n         * @param {Core.widget.Widget} view The active view in case the function is in another scope.\n         */\n        descriptionRenderer : null\n    };\n\n    /**\n     * Returns the date or ranges of included dates as an array. If there is only one significant date, the array will\n     * have only one element. Otherwise, a range of dates is returned as a two-element array with `[0]` being the\n     * `startDate` and `[1]` the `lastDate`.\n     * @member {Date[]}\n     * @internal\n     */\n    get dateBounds() {\n        return [this.date];\n    }\n\n    get description() {\n        const\n            me = this,\n            { dateBounds, dateFormat, descriptionRenderer } = me,\n            descriptionFormat = me.descriptionFormat ?? arrayify(me.defaultDescriptionFormat);\n\n        let end, ret;\n\n        if (descriptionRenderer) {\n            ret = me.callback(descriptionRenderer, me, [me]);\n        }\n        else {\n            const format0 = pickFormat(descriptionFormat, 0, dateFormat);\n\n            // Format the startDate and endDate using the first format\n            ret = DateHelper.format(dateBounds[0], format0);\n            end = dateBounds.length > 1 && descriptionFormat?.length > 1 && (\n                DateHelper.format(dateBounds[0], format0) !== DateHelper.format(dateBounds[1], format0)\n            );\n\n            if (end) {\n                // The endDate renders a different description, and we have a range format.\n                ret = DateHelper.formatRange(dateBounds,\n                    pickFormat(descriptionFormat, 1, `S${dateFormat}${me.dateSeparator}E${dateFormat}`));\n            }\n        }\n\n        return ret;\n    }\n\n    changeDescriptionFormat(format) {\n        return arrayify(format);\n    }\n\n    get widgetClass() {}  // no b-describable class\n};\n","import Base from '../../../Core/Base.js';\nimport Collection from '../../../Core/util/Collection.js';\nimport ArrayHelper from '../../../Core/helper/ArrayHelper.js';\n\n/**\n * @module Scheduler/view/mixin/EventSelection\n */\n\n/**\n * Mixin that tracks event or assignment selection by clicking on one or more events in the scheduler.\n * @mixin\n */\nexport default Target => class EventSelection extends (Target || Base) {\n    static get $name() {\n        return 'EventSelection';\n    }\n\n    //region Default config\n\n    static get configurable() {\n        return {\n            /**\n             * Configure as `true`, or set property to `true` to highlight dependent events as well when selecting an event.\n             * @config {Boolean}\n             * @default\n             * @category Selection\n             */\n            highlightPredecessors : false,\n\n            /**\n             * Configure as `true`, or set property to `true` to highlight dependent events as well when selecting an event.\n             * @config {Boolean}\n             * @default\n             * @category Selection\n             */\n            highlightSuccessors : false,\n\n            /**\n             * Configure as `true` to deselect a selected event upon click.\n             * @config {Boolean}\n             * @default\n             * @category Selection\n             */\n            deselectOnClick : false\n        };\n    }\n\n    static get defaultConfig() {\n        return {\n            /**\n             * Configure as `true` to allow `CTRL+click` to select multiple events in the scheduler.\n             * @config {Boolean}\n             * @category Selection\n             */\n            multiEventSelect : false,\n\n            /**\n             * Configure as `true`, or set property to `true` to disable event selection.\n             * @config {Boolean}\n             * @default\n             * @category Selection\n             */\n            eventSelectionDisabled : false,\n\n            /**\n             * CSS class to add to selected events.\n             * @config {String}\n             * @default\n             * @category CSS\n             * @private\n             */\n            eventSelectedCls : 'b-sch-event-selected',\n\n            /**\n             * Configure as `true` to trigger `selectionChange` when removing a selected event/assignment.\n             * @config {Boolean}\n             * @default\n             * @category Selection\n             */\n            triggerSelectionChangeOnRemove : false,\n\n            /**\n             * This flag controls whether Scheduler should preserve its selection of events when loading a new dataset\n             * (if selected event ids are included in the newly loaded dataset).\n             * @config {Boolean}\n             * @default\n             * @category Selection\n             */\n            maintainSelectionOnDatasetChange : true,\n\n            /**\n             * CSS class to add to other instances of a selected event, to highlight them.\n             * @config {String}\n             * @default\n             * @category CSS\n             * @private\n             */\n            eventAssignHighlightCls : 'b-sch-event-assign-selected',\n\n            /**\n             * Collection to store selection.\n             * @config {Core.util.Collection}\n             * @private\n             */\n            selectedCollection : {}\n        };\n    }\n\n    //endregion\n\n    //region Events\n\n    /**\n     * Fired any time there is a change to the events selected in the Scheduler.\n     * @event eventSelectionChange\n     * @param {'select'|'deselect'|'update'|'clear'} action One of the actions 'select', 'deselect', 'update',\n     * 'clear'\n     * @param {Scheduler.model.EventModel[]} selected An array of the Events added to the selection.\n     * @param {Scheduler.model.EventModel[]} deselected An array of the Event removed from the selection.\n     * @param {Scheduler.model.EventModel[]} selection The new selection.\n     */\n\n    /**\n     * Fired any time there is going to be a change to the events selected in the Scheduler.\n     * Returning `false` prevents the change\n     * @event beforeEventSelectionChange\n     * @preventable\n     * @param {String} action One of the actions 'select', 'deselect', 'update', 'clear'\n     * @param {Scheduler.model.EventModel[]} selected An array of events that will be added to the selection.\n     * @param {Scheduler.model.EventModel[]} deselected An array of events that will be removed from the selection.\n     * @param {Scheduler.model.EventModel[]} selection The currently selected events, before applying `selected` and `deselected`.\n     */\n\n    /**\n     * Fired any time there is a change to the assignments selected in the Scheduler.\n     * @event assignmentSelectionChange\n     * @param {'select'|'deselect'|'update'|'clear'} action One of the actions 'select', 'deselect', 'update',\n     * 'clear'\n     * @param {Scheduler.model.AssignmentModel[]} selected An array of the Assignments added to the selection.\n     * @param {Scheduler.model.AssignmentModel[]} deselected An array of the Assignments removed from the selection.\n     * @param {Scheduler.model.AssignmentModel[]} selection The new selection.\n     */\n\n    /**\n     * Fired any time there is going to be a change to the assignments selected in the Scheduler.\n     * Returning `false` prevents the change\n     * @event beforeAssignmentSelectionChange\n     * @preventable\n     * @param {String} action One of the actions 'select', 'deselect', 'update', 'clear'\n     * @param {Scheduler.model.EventModel[]} selected An array of assignments that will be added to the selection.\n     * @param {Scheduler.model.EventModel[]} deselected An array of assignments that will be removed from the selection.\n     * @param {Scheduler.model.EventModel[]} selection The currently selected assignments, before applying `selected` and `deselected`.\n     */\n\n    //endregion\n\n    //region Init\n\n    afterConstruct() {\n        super.afterConstruct();\n\n        this.navigator?.ion({\n            navigate : 'onEventNavigate',\n            thisObj  : this\n        });\n    }\n\n    //endregion\n\n    //region Selected Collection\n\n    set selectedCollection(selectedCollection) {\n        if (!(selectedCollection instanceof Collection)) {\n            selectedCollection = new Collection(selectedCollection);\n        }\n        this._selectedCollection = selectedCollection;\n\n        // Fire row change events from onSelectedCollectionChange\n        selectedCollection.ion({\n            change : (...args) => this.project.deferUntilRepopulationIfNeeded(\n                'onSelectedCollectionChange',\n                (...args) => !this.isDestroying && this.onSelectedCollectionChange(...args),\n                args\n            ),\n            // deferring this handler breaks the UI\n            beforeSplice : 'onBeforeSelectedCollectionSplice',\n            thisObj      : this\n        });\n    }\n\n    get selectedCollection() {\n        return this._selectedCollection;\n    }\n\n    getActionType(selection, selected, deselected) {\n        return (selection.length > 0)\n            ? ((selected.length > 0 && deselected.length > 0)\n                ? 'update'\n                : (selected.length > 0\n                    ? 'select'\n                    : 'deselect'))\n            : 'clear';\n    }\n\n    //endregion\n\n    //region Modify selection\n\n    getEventsFromAssignments(assignments) {\n        return ArrayHelper.unique(assignments.map(assignment => assignment.event));\n    }\n\n    /**\n     * The {@link Scheduler.model.EventModel events} which are selected.\n     * @property {Scheduler.model.EventModel[]}\n     * @category Selection\n     */\n    get selectedEvents() {\n        return this.getEventsFromAssignments(this.selectedCollection.values);\n    }\n\n    set selectedEvents(events) {\n        // Select all assignments\n        const assignments = [];\n\n        events = ArrayHelper.asArray(events);\n\n        events?.forEach(event => {\n            if (this.isEventSelectable(event) !== false) {\n                assignments.push(...event.assignments);\n            }\n        });\n\n        // Replace the entire selected collection with the new record set\n        this.selectedCollection.splice(0, this.selectedCollection.count, assignments);\n    }\n\n    /**\n     * The {@link Scheduler.model.AssignmentModel events} which are selected.\n     * @property {Scheduler.model.AssignmentModel[]}\n     * @category Selection\n     */\n    get selectedAssignments() {\n        return this.selectedCollection.values;\n    }\n\n    set selectedAssignments(assignments) {\n        // Replace the entire selected collection with the new record set\n        this.selectedCollection.splice(0, this.selectedCollection.count, assignments || []);\n    }\n\n    /**\n     * Returns `true` if the {@link Scheduler.model.EventModel event} is selected.\n     * @param {Scheduler.model.EventModel} event The event\n     * @returns {Boolean} Returns `true` if the event is selected\n     * @category Selection\n     */\n    isEventSelected(event) {\n        const { selectedCollection } = this;\n\n        return Boolean(selectedCollection.count && selectedCollection.includes(event.assignments));\n    }\n\n    /**\n     * A template method (empty by default) allowing you to control if an event can be selected or not.\n     *\n     * ```javascript\n     * new Scheduler({\n     *     isEventSelectable(event) {\n     *         return event.startDate >= Date.now();\n     *     }\n     * })\n     * ```\n     *\n     * This selection process is applicable to calendar too:\n     *\n     * ```javascript\n     * new Calendar({\n     *     isEventSelectable(event) {\n     *         return event.startDate >= Date.now();\n     *     }\n     * })\n     * ```\n     *\n     * @param {Scheduler.model.EventModel} event The event record\n     * @returns {Boolean} true if event can be selected, otherwise false\n     * @prp {Function}\n     * @category Selection\n     */\n    isEventSelectable(event) {}\n\n    /**\n     * Returns `true` if the {@link Scheduler.model.AssignmentModel assignment} is selected.\n     * @param {Scheduler.model.AssignmentModel} assignment The assignment\n     * @returns {Boolean} Returns `true` if the assignment is selected\n     * @category Selection\n     */\n    isAssignmentSelected(assignment) {\n        return this.selectedCollection.includes(assignment);\n    }\n\n    /**\n     * Selects the passed {@link Scheduler.model.EventModel event} or {@link Scheduler.model.AssignmentModel assignment}\n     * *if it is not selected*. Selecting events results in all their assignments being selected.\n     * @param {Scheduler.model.EventModel|Scheduler.model.AssignmentModel} eventOrAssignment The event or assignment to select\n     * @param {Boolean} [preserveSelection] Pass `true` to preserve any other selected events or assignments\n     * @category Selection\n     */\n    select(eventOrAssignment, preserveSelection = false) {\n        if (eventOrAssignment.isAssignment) {\n            this.selectAssignment(eventOrAssignment, preserveSelection);\n        }\n        else {\n            this.selectEvent(eventOrAssignment, preserveSelection);\n        }\n    }\n\n    /**\n     * Selects the passed {@link Scheduler.model.EventModel event} *if it is not selected*. Selecting an event will\n     * select all its assignments.\n     * @param {Scheduler.model.EventModel} event The event select\n     * @param {Boolean} [preserveSelection] Pass `true` to preserve any other selected events\n     * @category Selection\n     */\n    selectEvent(event, preserveSelection = false) {\n        // If the event is already selected, this is a no-op.\n        // In this case, selection must not be cleared even in the absence of preserveSelection\n        if (!this.isEventSelected(event)) {\n            this.selectEvents([event], preserveSelection);\n        }\n    }\n\n    /**\n     * Selects the passed {@link Scheduler.model.AssignmentModel assignment} *if it is not selected*.\n     * @param {Scheduler.model.AssignmentModel} assignment The assignment to select\n     * @param {Boolean} [preserveSelection] Pass `true` to preserve any other selected assignments\n     * @param {Event} [event] If this method was invoked as a result of a user action, this is the DOM event that triggered it\n     * @category Selection\n     */\n    selectAssignment(assignment, preserveSelection = false, event) {\n        // If the event is already selected, this is a no-op.\n        // In this case, selection must not be cleared even in the absence of preserveSelection\n        if (!this.isAssignmentSelected(assignment)) {\n            preserveSelection ? this.selectedCollection.add(assignment) : this.selectedAssignments = assignment;\n        }\n    }\n\n    /**\n     * Deselects the passed {@link Scheduler.model.EventModel event} or {@link Scheduler.model.AssignmentModel assignment}\n     * *if it is selected*.\n     * @param {Scheduler.model.EventModel|Scheduler.model.AssignmentModel} eventOrAssignment The event or assignment to deselect.\n     * @category Selection\n     */\n    deselect(eventOrAssignment) {\n        if (eventOrAssignment.isAssignment) {\n            this.deselectAssignment(eventOrAssignment);\n        }\n        else {\n            this.deselectEvent(eventOrAssignment);\n        }\n    }\n\n    /**\n     * Deselects the passed {@link Scheduler.model.EventModel event} *if it is selected*.\n     * @param {Scheduler.model.EventModel} event The event to deselect.\n     * @category Selection\n     */\n    deselectEvent(event) {\n        if (this.isEventSelected(event)) {\n            this.selectedCollection.remove(...event.assignments);\n        }\n    }\n\n    /**\n     * Deselects the passed {@link Scheduler.model.AssignmentModel assignment} *if it is selected*.\n     * @param {Scheduler.model.AssignmentModel} assignment The assignment to deselect\n     * @param {Event} [event] If this method was invoked as a result of a user action, this is the DOM event that triggered it\n     * @category Selection\n     */\n    deselectAssignment(assignment) {\n        if (this.isAssignmentSelected(assignment)) {\n            this.selectedCollection.remove(assignment);\n        }\n    }\n\n    /**\n     * Adds {@link Scheduler.model.EventModel events} to the selection.\n     * @param {Scheduler.model.EventModel[]} events Events to be selected\n     * @param {Boolean} [preserveSelection] Pass `true` to preserve any other selected events\n     * @category Selection\n     */\n    selectEvents(events, preserveSelection = false) {\n        if (preserveSelection) {\n            const assignments = (events.reduce((assignments, event) => {\n                if (this.isEventSelectable(event) !== false) {\n                    assignments.push(...event.assignments);\n                }\n                return assignments;\n            }, []));\n\n            this.selectedCollection.add(assignments);\n        }\n        else {\n            this.selectedEvents = events;\n        }\n    }\n\n    /**\n     * Removes {@link Scheduler.model.EventModel events} from the selection.\n     * @param {Scheduler.model.EventModel[]} events Events or assignments  to be deselected\n     * @category Selection\n     */\n    deselectEvents(events) {\n        this.selectedCollection.remove(events.reduce((assignments, event) => {\n            assignments.push(...event.assignments);\n            return assignments;\n        }, []));\n    }\n\n    /**\n     * Adds {@link Scheduler.model.AssignmentModel assignments} to the selection.\n     * @param {Scheduler.model.AssignmentModel[]} assignments Assignments to be selected\n     * @category Selection\n     */\n    selectAssignments(assignments) {\n        this.selectedCollection.add(assignments);\n    }\n\n    /**\n     * Removes {@link Scheduler.model.AssignmentModel assignments} from the selection.\n     * @param {Scheduler.model.AssignmentModel[]} assignments Assignments  to be deselected\n     * @category Selection\n     */\n    deselectAssignments(assignments) {\n        this.selectedCollection.remove(assignments);\n    }\n\n    /**\n     * Deselects all {@link Scheduler.model.EventModel events} and {@link Scheduler.model.AssignmentModel assignments}.\n     * @category Selection\n     */\n    clearEventSelection() {\n        this.selectedAssignments = [];\n    }\n\n    //endregion\n\n    //region Events\n\n    /**\n     * Responds to mutations of the underlying selection Collection.\n     * Keeps the UI synced, eventSelectionChange and assignmentSelectionChange event is fired when `me.silent` is falsy.\n     * @private\n     */\n\n    onBeforeSelectedCollectionSplice({ toAdd, toRemove, index }) {\n        const\n            me = this,\n            selection = me._selectedCollection.values,\n            selected = toAdd,\n            deselected = toRemove > 0 ? selected.slice(index, toRemove + index) : [],\n            action = me.getActionType(selection, selected, deselected);\n\n        if (me.trigger('beforeEventSelectionChange', {\n            action,\n            selection  : me.getEventsFromAssignments(selection) || [],\n            selected   : me.getEventsFromAssignments(selected) || [],\n            deselected : me.getEventsFromAssignments(deselected) || []\n        }) === false) {\n            return false;\n        }\n\n        if (me.trigger('beforeAssignmentSelectionChange', {\n            action,\n            selection,\n            selected,\n            deselected\n        }) === false) {\n            return false;\n        }\n    }\n\n    onSelectedCollectionChange({ added, removed }) {\n        const\n            me         = this,\n            selection  = me.selectedAssignments,\n            selected   = added || [],\n            deselected = removed || [];\n\n        function updateSelection(assignmentRecord, select) {\n            const eventRecord    = assignmentRecord.event;\n\n            if (eventRecord) {\n                const\n                    { eventAssignHighlightCls } = me,\n                    element                     = me.getElementFromAssignmentRecord(assignmentRecord);\n\n                me.currentOrientation.toggleCls(assignmentRecord, me.eventSelectedCls, select);\n\n                eventAssignHighlightCls && me.getElementsFromEventRecord(eventRecord).forEach(el => {\n                    if (el !== element) {\n                        const otherAssignmentRecord = me.resolveAssignmentRecord(el);\n\n                        me.currentOrientation.toggleCls(otherAssignmentRecord, eventAssignHighlightCls, select);\n\n                        if (select) {\n                            // Need to force a reflow to get the highlightning animation triggered\n                            el.style.animation = 'none';\n                            el.offsetHeight;\n                            el.style.animation = '';\n                        }\n                        el.classList.toggle(eventAssignHighlightCls, select);\n                    }\n                });\n            }\n        }\n\n        deselected.forEach(record => updateSelection(record, false));\n        selected.forEach(record => updateSelection(record, true));\n\n        if (me.highlightSuccessors || me.highlightPredecessors) {\n            me.highlightLinkedEvents(me.selectedEvents);\n        }\n\n        // To be able to restore selection after reloading resources (which might lead to regenerated assignments in\n        // the single assignment scenario, so cannot rely on records or ids)\n        me.$selectedAssignments = selection.map(assignment => ({\n            eventId    : assignment.eventId,\n            resourceId : assignment.resourceId\n        }));\n\n        if (!me.silent) {\n            const action = this.getActionType(selection, selected, deselected);\n\n            me.trigger('assignmentSelectionChange', {\n                action,\n                selection,\n                selected,\n                deselected\n            });\n\n            me.trigger('eventSelectionChange', {\n                action,\n                selection  : me.selectedEvents,\n                selected   : me.getEventsFromAssignments(selected),\n                deselected : me.getEventsFromAssignments(deselected)\n            });\n        }\n    }\n\n    /**\n     * Assignment change listener to remove events from selection which are no longer in the assignments.\n     * @private\n     */\n    onAssignmentChange(event) {\n        super.onAssignmentChange(event);\n\n        const\n            me = this,\n            { action, records : assignments } = event;\n\n        me.silent = !me.triggerSelectionChangeOnRemove;\n\n        if (action === 'remove') {\n            me.deselectAssignments(assignments);\n        }\n        else if (action === 'removeall' && !me.eventStore.isSettingData) {\n            me.clearEventSelection();\n        }\n        else if (action === 'dataset' && me.$selectedAssignments) {\n            if (!me.maintainSelectionOnDatasetChange) {\n                me.clearEventSelection();\n            }\n            else {\n                const newAssignments = me.$selectedAssignments.map(selector =>\n                    assignments.find(a =>\n                        a.eventId === selector.eventId &&\n                        a.resourceId === selector.resourceId\n                    )\n                );\n\n                me.selectedAssignments = ArrayHelper.clean(newAssignments);\n            }\n        }\n\n        me.silent = false;\n    }\n\n    onInternalEventStoreChange({ source, action, records }) {\n        // Setting empty event dataset cannot be handled in onAssignmentChange above, no assignments might be affected\n        if (!source.isResourceTimeRangeStore && action === 'dataset' && !records.length) {\n            this.clearEventSelection();\n        }\n\n        super.onInternalEventStoreChange(...arguments);\n    }\n\n    /**\n     * Mouse listener to update selection.\n     * @private\n     */\n    onAssignmentSelectionClick(event, clickedRecord) {\n        const me = this;\n\n        // Multi selection: CTRL means preserve selection, just add or remove the event.\n        // Single selection: CTRL deselects already selected event\n        if (me.isAssignmentSelected(clickedRecord)) {\n            if (me.deselectOnClick || event.ctrlKey) {\n                me.deselectAssignment(clickedRecord, me.multiEventSelect, event);\n            }\n        }\n        else if (this.isEventSelectable(clickedRecord.event) !== false) {\n            me.selectAssignment(clickedRecord, event.ctrlKey && me.multiEventSelect, event);\n        }\n    }\n\n    /**\n     * Navigation listener to update selection.\n     * @private\n     */\n    onEventNavigate({ event, item }) {\n        if (!this.eventSelectionDisabled) {\n            const assignment = item && (item.nodeType === Element.ELEMENT_NODE ? this.resolveAssignmentRecord(item) : item);\n\n            if (assignment) {\n                this.onAssignmentSelectionClick(event, assignment);\n            }\n            // Click outside of an event/assignment;\n            else {\n                this.clearEventSelection();\n            }\n        }\n    }\n\n    changeHighlightSuccessors(value) {\n        return this.changeLinkedEvents(value);\n    }\n\n    changeHighlightPredecessors(value) {\n        return this.changeLinkedEvents(value);\n    }\n\n    changeLinkedEvents(value) {\n        const me = this;\n\n        if (value) {\n            me.highlighted = me.highlighted || new Set();\n\n            me.highlightLinkedEvents(me.selectedEvents);\n        }\n        else if (me.highlighted) {\n            me.highlightLinkedEvents();\n        }\n\n        return value;\n    }\n\n    // Function that highlights/unhighlights events in a dependency chain\n    highlightLinkedEvents(eventRecords = []) {\n        const\n            me                  = this,\n            {\n                highlighted,\n                eventStore\n            }                   = me,\n            dependenciesFeature = me.features.dependencies;\n\n        // Unhighlight previously highlighted records\n        highlighted.forEach(eventRecord => {\n            if (!eventRecords.includes(eventRecord)) {\n                eventRecord.meta.highlight = false;\n                highlighted.delete(eventRecord);\n\n                if (eventStore.includes(eventRecord)) {\n                    eventRecord.dependencies.forEach(dep => dependenciesFeature.unhighlight(dep, 'b-highlight'));\n                }\n            }\n        });\n\n        eventRecords.forEach(eventRecord => {\n            const toWalk = [eventRecord];\n\n            // Collect all events along the dependency chain\n            while (toWalk.length) {\n                const record = toWalk.pop();\n\n                highlighted.add(record);\n\n                if (me.highlightSuccessors) {\n                    record.outgoingDeps.forEach(outgoing => {\n                        dependenciesFeature.highlight(outgoing, 'b-highlight');\n                        !highlighted.has(outgoing.toEvent) && toWalk.push(outgoing.toEvent);\n                    });\n                }\n                if (me.highlightPredecessors) {\n                    record.incomingDeps.forEach(incoming => {\n                        dependenciesFeature.highlight(incoming, 'b-highlight');\n                        !highlighted.has(incoming.fromEvent) && toWalk.push(incoming.fromEvent);\n                    });\n                }\n            }\n\n            // Highlight them\n            highlighted.forEach(record => record.meta.highlight = true);\n        });\n\n        // Toggle flag on schedulers element, to fade others in or out\n        me.element.classList.toggle('b-highlighting', eventRecords.length > 0);\n\n        me.refreshWithTransition();\n    }\n\n    onEventDataGenerated(renderData) {\n        if (this.highlightSuccessors || this.highlightPredecessors) {\n            renderData.cls['b-highlight'] = renderData.eventRecord.meta.highlight;\n        }\n        super.onEventDataGenerated(renderData);\n    }\n\n    updateProject(project, old) {\n        // Clear selection when the whole world shifts :)\n        this.clearEventSelection();\n\n        super.updateProject(project, old);\n    }\n\n    //endregion\n\n    doDestroy() {\n        this._selectedCollection?.destroy();\n\n        super.doDestroy();\n    }\n\n    //region Getters/Setters\n\n    // This does not need a className on Widgets.\n    // Each *Class* which doesn't need 'b-' + constructor.name.toLowerCase() automatically adding\n    // to the Widget it's mixed in to should implement thus.\n    get widgetClass() {}\n\n    //endregion\n};\n"],"names":["AbstractCrudManager","Base","mixin","AbstractCrudManagerMixin","revision","crudRevision","value","json","StringHelper","safeJsonStringify","safeJsonParse","forEachCrudStore","store","dataName","storeId","data","defaultConfig","stores","construct","config","crudStores","toJSON","result","inlineData","isLoading","isCrudManagerLoading","addStore","args","addCrudStore","removeStore","removeCrudStore","getStore","getCrudStore","hasChanges","crudStoreHasChanges","loadData","loadCrudManagerData","_$name","CrudManager","ProjectCrudManager","AjaxTransport","JsonEncoder","projectClass","ProjectModel","resourceStoreClass","ResourceStore","eventStoreClass","EventStore","assignmentStoreClass","AssignmentStore","dependencyStoreClass","DependencyStore","resourceStore","eventStore","assignmentStore","dependencyStore","project","buildProject","buildProjectConfig","ObjectHelper","cleanupProperties","resourceTimeRangeStore","me","_project","detachListeners","timeRangeStore","ion","name","dataReady","suspendChangesTracking","prio","thisObj","resumeChangesTracking","_this$_timeRangeStore","_timeRangeStore","_this$project","setFeaturedStore","timeRangeStoreClass","_this$_resourceTimeRa","_resourceTimeRangeStore","_this$project2","resourceTimeRangeStoreClass","_this$_resourceStore","_resourceStore","_this$_eventStore","_eventStore","_this$_assignmentStor","_assignmentStore","_this$_dependencyStor","_dependencyStore","property","storeClass","_me$property","oldStore","_store","Store","addPrioritizedStore","getChangesetPackage","pack","usesSingleAssignment","some","storeInfo","crudLoadValidationMandatoryStores","_defineProperty","Target","PackMixin","$name","coordProp","sizeProp","inBandCoordProp","inBandSizeProp","isSameGroup","a","b","grouped","group","packEventsInBands","events","applyClusterFn","slot","firstInCluster","cluster","j","i","l","length","findStartSlot","getCluster","start","end","nextSlot","clusterSize","slotSize","event","priorOverlappers","getPriorOverlappingEvents","item","COORD_PROP","SIZE_PROP","overlappers","indexOf","DateHelper","intersectSpans","push","sort","sortOverlappers","bind","e1","e2","startIndex","startEvent","max","min","arrayify","format","Array","isArray","pickFormat","formats","index","defaultFormat","_class","Describable","dateBounds","date","description","_me$descriptionFormat","dateFormat","descriptionRenderer","descriptionFormat","defaultDescriptionFormat","ret","callback","format0","formatRange","dateSeparator","changeDescriptionFormat","widgetClass","EventSelection","configurable","highlightPredecessors","highlightSuccessors","deselectOnClick","multiEventSelect","eventSelectionDisabled","eventSelectedCls","triggerSelectionChangeOnRemove","maintainSelectionOnDatasetChange","eventAssignHighlightCls","selectedCollection","afterConstruct","_this$navigator","navigator","navigate","Collection","_selectedCollection","change","deferUntilRepopulationIfNeeded","isDestroying","onSelectedCollectionChange","beforeSplice","getActionType","selection","selected","deselected","getEventsFromAssignments","assignments","ArrayHelper","unique","map","assignment","selectedEvents","values","_events","asArray","forEach","isEventSelectable","splice","count","selectedAssignments","isEventSelected","Boolean","includes","isAssignmentSelected","select","eventOrAssignment","preserveSelection","isAssignment","selectAssignment","selectEvent","selectEvents","add","deselect","deselectAssignment","deselectEvent","remove","reduce","deselectEvents","selectAssignments","deselectAssignments","clearEventSelection","onBeforeSelectedCollectionSplice","toAdd","toRemove","slice","action","trigger","added","removed","updateSelection","assignmentRecord","eventRecord","element","getElementFromAssignmentRecord","currentOrientation","toggleCls","getElementsFromEventRecord","el","otherAssignmentRecord","resolveAssignmentRecord","style","animation","offsetHeight","classList","toggle","record","highlightLinkedEvents","$selectedAssignments","eventId","resourceId","silent","onAssignmentChange","records","isSettingData","newAssignments","selector","find","clean","onInternalEventStoreChange","source","isResourceTimeRangeStore","arguments","onAssignmentSelectionClick","clickedRecord","ctrlKey","onEventNavigate","nodeType","Element","ELEMENT_NODE","changeHighlightSuccessors","changeLinkedEvents","changeHighlightPredecessors","highlighted","Set","eventRecords","dependenciesFeature","features","dependencies","meta","highlight","delete","dep","unhighlight","toWalk","pop","outgoingDeps","outgoing","has","toEvent","incomingDeps","incoming","fromEvent","refreshWithTransition","onEventDataGenerated","renderData","cls","updateProject","old","doDestroy","_this$_selectedCollec","destroy"],"mappings":";;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,MAAMA,mBAAmB,SAASC,IAAI,CAACC,KAAK,CAACC,wBAAwB,CAAC,CAAC;;;AAGtF;AACA;AACA;AACA;AACA;AACA;AACA;EACI,IAAIC,QAAQA,GAAG;IACX,OAAO,IAAI,CAACC,YAAY;;EAE5B,IAAID,QAAQA,CAACE,KAAK,EAAE;IAChB,IAAI,CAACD,YAAY,GAAGC,KAAK;;;AAGjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI,IAAIC,IAAIA,GAAG;IACP,OAAOC,YAAY,CAACC,iBAAiB,CAAC,IAAI,CAAC;;EAE/C,IAAIF,IAAIA,CAACA,IAAI,EAAE;IACX,IAAI,OAAOA,IAAI,KAAK,QAAQ,EAAE;MAC1BA,IAAI,GAAGC,YAAY,CAACE,aAAa,CAACH,IAAI,CAAC;;IAE3C,IAAI,CAACI,gBAAgB,CAACC,KAAK,IAAI;MAC3B,MAAMC,QAAQ,GAAI,GAAED,KAAK,CAACE,OAAQ,MAAK;MACvC,IAAIP,IAAI,CAACM,QAAQ,CAAC,EAAE;QAChBD,KAAK,CAACG,IAAI,GAAGR,IAAI,CAACM,QAAQ,CAAC;;KAElC,CAAC;;EAEN,WAAWG,aAAaA,GAAG;IACvB,OAAO;;AAEf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACYC,MAAM,EAAG;;AAErB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;KACS;;;;EAILC,SAASA,CAACC,MAAM,GAAG,EAAE,EAAE;IACnB,IAAIA,MAAM,CAACF,MAAM,EAAE;MACfE,MAAM,CAACC,UAAU,GAAGD,MAAM,CAACF,MAAM;MACjC,OAAOE,MAAM,CAACF,MAAM;;IAExB,KAAK,CAACC,SAAS,CAACC,MAAM,CAAC;;;;;AAK/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIE,MAAMA,GAAG;;IAEL,MAAMC,MAAM,GAAG,EAAE;IACjB,IAAI,CAACX,gBAAgB,CAAC,CAACC,KAAK,EAAEE,OAAO,KAAKQ,MAAM,CAAE,GAAER,OAAQ,MAAK,CAAC,GAAGF,KAAK,CAACS,MAAM,EAAE,CAAC;IACpF,OAAOC,MAAM;;;AAGrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI,IAAIC,UAAUA,GAAG;IACb,OAAO,IAAI,CAACF,MAAM,EAAE;;EAExB,IAAIE,UAAUA,CAACR,IAAI,EAAE;IACjB,IAAI,CAACR,IAAI,GAAGQ,IAAI;;;;EAIpB,IAAIE,MAAMA,CAACA,MAAM,EAAE;IACf,IAAIA,MAAM,KAAK,IAAI,CAACG,UAAU,EAAE;MAC5B,IAAI,CAACA,UAAU,GAAGH,MAAM;;;;AAIpC;AACA;AACA;AACA;EACI,IAAIA,MAAMA,GAAG;IACT,OAAO,IAAI,CAACG,UAAU;;;;AAI9B;AACA;AACA;AACA;AACA;EACI,IAAII,SAASA,GAAG;IACZ,OAAO,IAAI,CAACC,oBAAoB;;;AAGxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;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"}