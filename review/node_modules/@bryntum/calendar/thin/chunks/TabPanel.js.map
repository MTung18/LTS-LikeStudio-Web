{"version":3,"file":"TabPanel.js","sources":["../../../../Core/lib/Core/util/WebSocketManager.js","../../../../Core/lib/Core/widget/FieldSet.js","../../../../Core/lib/Core/widget/Radio.js","../../../../Core/lib/Core/widget/RadioGroup.js","../../../../Core/lib/Core/widget/Tab.js","../../../../Core/lib/Core/widget/TabBar.js","../../../../Core/lib/Core/widget/TabPanel.js"],"sourcesContent":["import Base from '../Base.js';\nimport Events from '../mixin/Events.js';\n\n/**\n * @module Core/helper/WebSocketManager\n */\n\n/**\n * This class allows to send and receive messages from websocket server passing responses via events. This helper is\n * meant to be used with a demo websocket server. It sends messages that are JSON strings including \"command\" key and\n * arbitrary data keys. For example:\n *\n * ```\n * // request string to notify other clients that new client is connected\n * \"{ \\\"command\\\": \\\"hello\\\", \\\"userName\\\": \\\"new user\\\" }\"\n *\n * // response message from the websocket server with list of connected users\n * \"{ \\\"command\\\": \\\"users\\\", \\\"users\\\": [\\\"new user\\\"] }\"\n * ```\n *\n * Usage:\n * ```javascript\n * connector = new WebSocketManager({\n *     address     : 'ws://localhost:8080',\n *     userName    : 'Test client',\n *     autoConnect : false\n * });\n *\n * const opened = await connector.open();\n *\n * if (!opened) {\n *     console.log('Could not open connection');\n * }\n *\n * connector.on({\n *     message({ data }) {\n *         console.log(data);\n *     }\n * });\n *\n * // Sends \"{ \\\"command\\\": \\\"hello\\\", \\\"userName\\\": \\\"mark\\\" }\" string to the websocket server\n * // When response arrives helper will log following message: \"{ command: 'users', users: ['mark'] }\"\n * connector.send('hello', { userName : 'mark' });\n * ```\n * @class\n * @extends Core/Base\n * @mixes Core/mixin/Events\n * @private\n */\nexport default class WebSocketManager extends Events(Base) {\n    // This allows to hook into for testing purposes\n    static webSocketImplementation = typeof WebSocket === 'undefined' ? null : WebSocket\n\n    static configurable = {\n        /**\n         * WebSocket server address\n         * @config {String}\n         */\n        address : '',\n\n        /**\n         * User name allowing to identify client\n         * @config {String}\n         */\n        userName : 'User',\n\n        /**\n         * Connect to websocket server immediately after instantiation\n         * @config {Boolean}\n         */\n        autoConnect : true\n    }\n\n    construct(config = {}) {\n        const me = this;\n\n        super.construct(config);\n\n        me.onWsOpen = me.onWsOpen.bind(me);\n        me.onWsClose = me.onWsClose.bind(me);\n        me.onWsMessage = me.onWsMessage.bind(me);\n        me.onWsError = me.onWsError.bind(me);\n\n        if (me.autoConnect && me.address) {\n            me.open();\n        }\n    }\n\n    doDestroy() {\n        const me = this;\n\n        if (me.connector) {\n            me.detachSocketListeners(me.connector);\n            me.connector.close();\n            me.connector = null;\n        }\n        super.doDestroy();\n    }\n\n    //#region Websocket state\n\n    get isConnecting() {\n        return this.connector?.readyState === this.constructor.webSocketImplementation.CONNECTING;\n    }\n\n    get isOpened() {\n        return this.connector?.readyState === this.constructor.webSocketImplementation.OPEN;\n    }\n\n    get isClosing() {\n        return this.connector?.readyState === this.constructor.webSocketImplementation.CLOSING;\n    }\n\n    get isClosed() {\n        return this.connector?.readyState === this.constructor.webSocketImplementation.CLOSED;\n    }\n\n    //#endregion\n\n    //#region Websocket init\n\n    createWebSocketConnector() {\n        const connector = this.connector = new this.constructor.webSocketImplementation(this.address);\n\n        this.attachSocketListeners(connector);\n    }\n\n    destroyWebSocketConnector() {\n        this.detachSocketListeners(this.connector);\n\n        this.connector.close();\n\n        this.connector = null;\n    }\n\n    attachSocketListeners(connector) {\n        const me = this;\n\n        connector.addEventListener('open', me.onWsOpen);\n        connector.addEventListener('close', me.onWsClose);\n        connector.addEventListener('message', me.onWsMessage);\n        connector.addEventListener('error', me.onWsError);\n    }\n\n    detachSocketListeners(connector) {\n        const me = this;\n\n        connector.removeEventListener('open', me.onWsOpen);\n        connector.removeEventListener('close', me.onWsClose);\n        connector.removeEventListener('message', me.onWsMessage);\n        connector.removeEventListener('error', me.onWsError);\n    }\n\n    //#endregion\n\n    //#region Websocket methods\n\n    /**\n     * Connect to the server and start listening for messages\n     * @returns {Promise} Returns true if connection was successful and false otherwise\n     */\n    async open() {\n        const me = this;\n\n        if (me._openPromise) {\n            return me._openPromise;\n        }\n\n        if (!me.address) {\n            console.warn('Server me.address cannot be empty');\n            return;\n        }\n\n        if (me.isOpened) {\n            return true;\n        }\n\n        me.createWebSocketConnector();\n\n        let detacher;\n\n        // Wait for `open` or `close` event\n        me._openPromise = new Promise(resolve => {\n            detacher = me.ion({\n                open() {\n                    resolve(true);\n                },\n                error() {\n                    resolve(false);\n                }\n            });\n        }).then(value => {\n            // Detach listeners\n            detacher();\n\n            // Cleanup the promise\n            me._openPromise = null;\n\n            // If quit early with a timeout then remove reference to the WebSocket instance\n            if (!value) {\n                me.destroyWebSocketConnector();\n            }\n\n            return value;\n        }).catch(() => {\n            me._openPromise = null;\n            me.destroyWebSocketConnector();\n        });\n\n        return me._openPromise;\n    }\n\n    /**\n     * Close socket and disconnect from the server\n     */\n    close() {\n        if (this.connector) {\n            this.destroyWebSocketConnector();\n            this.trigger('close');\n        }\n    }\n\n    /**\n     * Send data to the websocket server\n     * @param {String} command\n     * @param {*} data\n     */\n    send(command, data = {}) {\n        this.connector?.send(JSON.stringify({ command, ...data }));\n    }\n\n    //#endregion\n\n    //#region websocket event listeners\n\n    onWsOpen(event) {\n        this.trigger('open', { event });\n    }\n\n    onWsClose(event) {\n        this.trigger('close', { event });\n    }\n\n    onWsMessage(message) {\n        try {\n            const data = JSON.parse(message.data);\n            this.trigger('message', { data });\n        }\n        catch (error) {\n            this.trigger('error', { error });\n        }\n    }\n\n    onWsError(error) {\n        this.trigger('error', { error });\n    }\n\n    //#endregion\n}\n","import Panel from './Panel.js';\nimport Labelable from './mixin/Labelable.js';\nimport DomHelper from '../helper/DomHelper.js';\n\n/**\n * @module Core/widget/FieldSet\n */\n\n/**\n * The `FieldSet` widget wraps an <code>&lt;fieldset&gt;</code> element. A fieldset is a specially styled\n * {@link Core.widget.Panel} intended to hold form fields.\n *\n * @extends Core/widget/Panel\n * @mixes Core/widget/mixin/Labelable\n * @classType fieldset\n * @widget\n */\nexport default class FieldSet extends Panel.mixin(Labelable) {\n    //region Config\n    static get $name() {\n        return 'FieldSet';\n    }\n\n    // Factoryable type name\n    static get type() {\n        return 'fieldset';\n    }\n\n    static get configurable() {\n        return {\n            bodyTag   : 'fieldset',\n            focusable : false,\n\n            /**\n             * Setting this config to `true` assigns a horizontal box layout (`flex-flow: row`) to the items in this\n             * container, while `false` assigns a vertical box layout (`flex-flow: column`).\n             *\n             * By default, this value is automatically determined based on the {@link #config-label} and\n             * {@link #config-labelPosition} configs.\n             * @config {Boolean}\n             */\n            inline : null,\n\n            inlineInternal : null,\n\n            layout : {\n                type       : 'box',\n                horizontal : false\n            }\n        };\n    }\n\n    static get prototypeProperties() {\n        return {\n            flexRowCls : 'b-hbox',\n            flexColCls : 'b-vbox'\n        };\n    }\n\n    //endregion\n\n    //region Composition\n\n    get bodyConfig() {\n        const\n            result = super.bodyConfig,\n            { className } = result,\n            { inlineInternal: inline, hasLabel, title } = this;\n\n        delete result.html;\n\n        className['b-inline'] = inline;\n        className['b-fieldset-has-label'] = hasLabel;\n\n        if (title) {\n            result.children = {\n                // We render the <legend> element for a11y (not 100% sure it is needed)\n                legendElement : {\n                    tag   : 'legend',\n                    text  : title,\n                    class : {\n                        'b-fieldset-legend' : 1\n                    }\n                }\n            };\n        }\n\n        return result;\n    }\n\n    compose() {\n        const { inlineInternal: inline, label, labelCls, labelWidth } = this;\n\n        return {\n            class : {\n                'b-field' : label,\n                'b-vbox'  : !inline  // override panel\n            },\n            children : {\n                'labelElement > headerElement' : (label || null) && {\n                    tag   : 'label',\n                    html  : label,\n                    class : {\n                        'b-label'       : 1,\n                        'b-align-start' : 1,\n                        [labelCls]      : labelCls\n                    },\n                    style : {\n                        width : DomHelper.unitize('width', labelWidth)[1]\n                    }\n                }\n            }\n        };\n    }\n\n    //endregion\n\n    syncInlineInternal() {\n        this.inlineInternal = this.inline ?? (this.label != null && this.labelPosition === 'before');\n    }\n\n    updateDisabled(value, was) {\n        super.updateDisabled(value, was);\n\n        // Needs {}'s to avoid a \"return false\" that ends iteration\n        this.eachWidget(item => {\n            item.disabled = value;\n        }, /* deep = */false);\n    }\n\n    updateInline() {\n        this.syncInlineInternal();\n    }\n\n    updateInlineInternal(inline) {\n        this.layout.horizontal = inline;\n    }\n\n    updateLabel() {\n        this.syncInlineInternal();\n    }\n\n    updateLabelPosition() {\n        this.syncInlineInternal();\n    }\n}\n\n// Register this widget type with its Factory\nFieldSet.initClass();\n","import Checkbox from './Checkbox.js';\n\n/**\n * @module Core/widget/Radio\n */\n\n/**\n * The `Radio` widget wraps an <code>&lt;input type=\"radio\"&gt;</code> element.\n *\n * Color can be specified and you can optionally configure {@link #config-text} to display in a label to the right of\n * the radio button instead of, or in addition to, a standard field {@link #config-label}.\n *\n * {@inlineexample Core/widget/Radio.js vertical}\n *\n * ## Nested Items\n * A radio button can also have a {@link #config-container} of additional {@link Core.widget.Container#config-items}.\n * These items can be displayed immediately following the field's label (which is the default when there is only one\n * item) or below the radio button. This can be controlled using the {@link #config-inline} config.\n *\n * In the demo below notice how additional fields are displayed for the checked radio button:\n *\n * {@inlineexample Core/widget/Radio-items.js vertical}\n *\n * For a simpler way to create a set of radio buttons, see the {@link Core.widget.RadioGroup} widget.\n *\n * @extends Core/widget/Checkbox\n * @classType radio\n * @widget\n */\nexport default class Radio extends Checkbox {\n    //region Config\n    static get $name() {\n        return 'Radio';\n    }\n\n    // Factoryable type name\n    static get type() {\n        return 'radio';\n    }\n\n    // Factoryable type alias\n    static get alias() {\n        return 'radiobutton';\n    }\n\n    static get configurable() {\n        return {\n            inputType : 'radio',\n\n            /**\n             * Set this to `true` so that clicking a checked radio button will clear its checked state.\n             * @config {Boolean}\n             * @default false\n             */\n            clearable : null,\n\n            uncheckedValue : undefined  // won't store to Container#values when unchecked\n        };\n    }\n\n    //endregion\n\n    //region Init\n\n    get textLabelCls() {\n        return super.textLabelCls + ' b-radio-label';\n    }\n\n    //endregion\n\n    internalOnClick(info) {\n        if (super.internalOnClick(info) !== false) {\n            if (this.checked && this.clearable) {\n                this.checked = false;\n            }\n        }\n    }\n\n    updateName(name) {\n        this.toggleGroup = name;\n    }\n\n    // Empty override to get rid of clear trigger\n    updateClearable() {}\n}\n\n// Register this widget type with its Factory\nRadio.initClass();\n","import ObjectHelper from '../helper/ObjectHelper.js';\nimport FieldSet from './FieldSet.js';\nimport Widget from './Widget.js';\n\nimport './Radio.js';\nimport './layout/Box.js';\n\n/**\n * @module Core/widget/RadioGroup\n */\n\n/**\n * The `RadioGroup` widget contains a set of related `{@link Core/widget/Radio}` button widgets.\n *\n * For example, to present three choices and have the user select one of them:\n *\n * ```javascript\n *  {\n *      type    : 'radiogroup',\n *      title   : 'Resolve Conflict',\n *      name    : 'resolution',\n *      value   : 'A',  // the default choice\n *      options : {\n *          A : 'Keep the original version',\n *          B : 'Use the new version',\n *          C : 'Reconcile individual conflicts'\n *      }\n *  }\n * ```\n *\n * {@inlineexample Core/widget/RadioGroup.js}\n *\n * The {@link #config-name} config is required for this widget and it will be assigned to all radio buttons created by\n * processing the {@link #config-options} config.\n *\n * ## Nested Items\n * Radio buttons can also have a {@link Core.widget.Radio#config-container} of additional\n * {@link Core.widget.Container#config-items}. These items can be displayed immediately following the field's label\n * (which is the default when there is only one item) or below the radio button. This can be controlled using the\n * {@link Core.widget.Radio#config-inline} config.\n *\n * In the demo below notice how additional fields are displayed for the checked radio button:\n *\n * {@inlineexample Core/widget/RadioGroupNested.js vertical}\n *\n * @extends Core/widget/FieldSet\n * @classType radiogroup\n * @widget\n */\nexport default class RadioGroup extends FieldSet {\n    //region Config\n    static get $name() {\n        return 'RadioGroup';\n    }\n\n    // Factoryable type name\n    static get type() {\n        return 'radiogroup';\n    }\n\n    static get configurable() {\n        return {\n            defaultType : 'radio',\n\n            /**\n             * Set this to `true` so that clicking the currently checked radio button will clear the check from all\n             * radio buttons in the group.\n             * @config {Boolean}\n             * @default false\n             */\n            clearable : null,\n\n            /**\n             * The name by which this widget's {@link #property-value} is accessed using the parent container's\n             * {@link Core.widget.Container#property-values}.\n             *\n             * The config must be provided as it is used to set the {@link Core.widget.Radio#config-name} of the\n             * child {@link Core.widget.Radio radio buttons}.\n             * @config {String}\n             */\n            name : null,\n\n            /**\n             * The set of radio button options for this radio button group. This is a shorthand for defining these in\n             * the {@link Core.widget.Container#config-items}. The keys of this object hold the radio button's\n             * {@link Core.widget.Radio#config-checkedValue} while the object values are a string for the radio button's\n             * {@link Core.widget.Radio#config-text} or a config object for that radio button.\n             *\n             * The {@link #property-value} of this radio button group will be one of the keys in this object or `null`\n             * if no radio button is checked.\n             *\n             * For example, consider the following configuration:\n             * ```javascript\n             *  {\n             *      type    : 'radiogroup',\n             *      name    : 'resolution',\n             *      value   : 'A',\n             *      options : {\n             *          A : 'Keep the original version',\n             *          B : 'Use the new version',\n             *          C : 'Reconcile individual conflicts'\n             *      }\n             *  }\n             * ```\n             *\n             * The above is equivalent to this configuration below using {@link #config-items}:\n             * ```javascript\n             *  {\n             *      type  : 'radiogroup',\n             *      items : [{\n             *          text         : 'Keep the original version',\n             *          name         : 'resolution',\n             *          ref          : 'resolution_A',\n             *          checked      : true,\n             *          checkedValue : 'A'\n             *      }, {\n             *          text         : 'Use the new version',\n             *          name         : 'resolution',\n             *          ref          : 'resolution_B',\n             *          checkedValue : 'B'\n             *      }, {\n             *          text         : 'Reconcile individual conflicts',\n             *          name         : 'resolution',\n             *          ref          : 'resolution_C',\n             *          checkedValue : 'C'\n             *      }]\n             *  }\n             * ```\n             * @config {Object<String,String|RadioConfig>} options\n             */\n            options : {\n                value : null,\n\n                $config : {\n                    merge : 'items'\n                }\n            },\n\n            defaultBindProperty : 'value'\n        };\n    }\n\n    get existingOptions() {\n        const { name } = this;\n\n        return this.ensureItems().filter(c => c.name === name);\n    }\n\n    get refPrefix() {\n        return `${this.name || this.ref || this.id}_`;\n    }\n\n    get selected() {\n        return this.existingOptions.filter(c => c.input.checked)[0] || null;\n    }\n\n    /**\n     * This property corresponds to the {@link Core.widget.Radio#config-checkedValue} of the currently\n     * {@link Core.widget.Radio#property-checked} radio button.\n     * @property {String}\n     */\n    get value() {\n        const { selected } = this;\n\n        return selected ? selected.checkedValue : null;\n    }\n\n    set value(v) {\n        this.existingOptions.forEach(c => {\n            c.isConfiguring = this.isConfiguring;\n            c.checked = c.checkedValue === v;\n            c.isConfiguring = false;\n        });\n    }\n\n    ensureItems() {\n        this.getConfig('options');\n\n        return super.ensureItems();\n    }\n\n    changeOptions(options, was) {\n        if (!(options && was && ObjectHelper.isDeeplyEqual(was, options))) {\n            return options;\n        }\n    }\n\n    convertOption(key, option, existing) {\n        const\n            me       = this,\n            { name } = me,\n            ret      = {\n                name,\n                type         : 'radio',\n                value        : key === me.value,\n                ref          : `${me.refPrefix}${key}`,\n                checkedValue : key\n            };\n\n        if (typeof option === 'string') {\n            ret.text = option;\n        }\n        else {\n            ObjectHelper.assign(ret, option);\n        }\n\n        return existing ? Widget.reconfigure(existing, ret) : ret;\n    }\n\n    isOurRadio(item) {\n        // Radio groups could be nested using field containers, so we need isRadio and name equality check:\n        return item.isRadio && item.name === this.name;\n    }\n\n    isolateFieldChange(field) {\n        // if this is one of our radio buttons, swallow the field change:\n        return this.isOurRadio(field);\n    }\n\n    onChildAdd(item) {\n        super.onChildAdd(item);\n\n        if (this.isOurRadio(item)) {\n            item.ion({\n                name         : item.id,\n                beforeChange : 'onRadioItemBeforeChange',\n                change       : 'onRadioItemChange',\n                click        : 'onRadioClick',\n                thisObj      : this\n            });\n        }\n    }\n\n    onChildRemove(item) {\n        if (this.isOurRadio(item)) {\n            this.detachListeners(item.id);\n        }\n\n        super.onChildRemove(item);\n    }\n\n    onRadioClick(ev) {\n        const { source } = ev;\n\n        if (source.checked && this.clearable && source.clearable == null) {\n            source.checked = false;\n        }\n    }\n\n    onRadioItemBeforeChange(ev) {\n        if (ev.checked) {\n            const\n                me = this,\n                { lastValue } = me;\n\n            if (!me.reverting && me.trigger('beforeChange', me.wrapRadioEvent(ev)) === false) {\n                if (lastValue != null && lastValue !== me.value) {\n                    me.reverting = true;\n\n                    ev.source.uncheckToggleGroupMembers();\n                    me.value = lastValue;\n                    me.lastValue = lastValue;\n\n                    me.reverting = false;\n\n                    return false;\n                }\n            }\n        }\n    }\n\n    onRadioItemChange(ev) {\n        const me = this;\n\n        if (ev.checked && !me.reverting) {\n            me.triggerFieldChange(me.wrapRadioEvent(ev));\n            me.lastValue = me.value;\n        }\n    }\n\n    wrapRadioEvent(ev) {\n        return {\n            from       : ev,\n            item       : ev.source,\n            userAction : ev.userAction,\n            lastValue  : this.lastValue,\n            value      : this.value\n        };\n    }\n\n    updateOptions() {\n        const\n            me                     = this,\n            { options, refPrefix } = me,\n            existingOptions        = me.existingOptions.reduce((m, c) => {\n                m[c.ref.substring(refPrefix.length)] = c;\n                return m;\n            }, {});\n\n        let index = 0,\n            key, option;\n\n        if (options) {\n            for (key in options) {\n                option = me.convertOption(key, options[key], existingOptions[key]);\n\n                delete existingOptions[key];\n                me.insert(option, index++);\n            }\n        }\n\n        const existing = Object.values(existingOptions);\n\n        if (existing?.length) {\n            me.remove(existing);\n            existing.forEach(c => c.destroy());\n        }\n    }\n\n    //endregion\n}\n\n// Register this widget type with its Factory\nRadioGroup.initClass();\n","import DomClassList from '../helper/util/DomClassList.js';\nimport FunctionHelper from '../helper/FunctionHelper.js';\nimport Button from './Button.js';\n\n/**\n * @module Core/widget/Tab\n */\n\n/**\n * This widget class is used to present items in a {@link Core.widget.TabPanel} on its {@link Core.widget.TabBar tabBar}.\n * A reference to this widget is stored via the {@link Core.widget.Widget#config-tab} config on the tab panel's items.\n *\n * ```javascript\n * let tabPanel = new TabPanel({\n *  items: [\n *      {\n *          title: 'Settings',\n *          // Tab configs\n *          tab : {\n *              // Show an icon in the tab\n *              icon : 'b-fa b-fa-cog'\n *          },\n *          items: [\n *              ...\n *          ]\n *      }\n *  ]\n * });\n * ```\n * @extends Core/widget/Button\n * @classType tab\n */\nexport default class Tab extends Button {\n    //region Config\n    static get $name() {\n        return 'Tab';\n    }\n\n    // Factoryable type name\n    static get type() {\n        return 'tab';\n    }\n\n    static get configurable() {\n        return {\n            /**\n             * This config is set to `true` when this tab represents the `activeTab` of a {@link Core.widget.TabPanel}. It\n             * is managed by the tab panel is not set directly.\n             * @config {Boolean} active\n             * @default false\n             */\n            active : null,\n\n            /**\n             * This config is set to the ordinal position of this tab in the {@link Core.widget.TabPanel}. It is managed\n             * by the tab panel is not set directly.\n             * @config {Number} index\n             */\n            index : null,\n\n            /**\n             * This config is set to `true` when this tab represents the first tab of a {@link Core.widget.TabPanel}. It\n             * is managed by the tab panel is not set directly.\n             * @config {Boolean} isFirst\n             */\n            isFirst : null,\n\n            /**\n             * This config is set to `true` when this tab represents the last tab of a {@link Core.widget.TabPanel}. It\n             * is managed by the tab panel is not set directly.\n             * @config {Boolean} isLast\n             */\n            isLast : null,\n\n            /**\n             * The {@link Core.widget.Widget} in the {@link Core.widget.TabPanel} corresponding to this tab. This is\n             * managed by the tab panel is not set directly.\n             * @config {Core.widget.Widget} item\n             */\n            item : {\n                value : null,\n\n                $config : 'nullify'\n            },\n\n            itemCls : null,\n\n            /**\n             * The tab panel that owns this tab.\n             * @config {Core.widget.TabPanel} tabPanel\n             */\n            tabPanel : null,\n\n            /**\n             * The config property on this tab that will be set to the value of the {@link #config-titleSource} property\n             * of this tab's {@link #config-item}.\n             *\n             * By default, the {@link #config-text} property of the tab is set to the {@link Core.widget.Widget#config-title}\n             * property of its {@link #config-item}.\n             * @config {String} titleProperty\n             * @default\n             */\n            titleProperty : 'text',\n\n            /**\n             * The config property on this tab's {@link #config-item} that is used to set the value of the\n             * {@link #config-titleProperty} of this tab.\n             *\n             * By default, the {@link #config-text} property of the tab is set to the {@link Core.widget.Widget#config-title}\n             * property of its {@link #config-item}.\n             * @config {String} titleSource\n             * @default\n             */\n            titleSource : 'title',\n\n            role : 'tab'\n        };\n    }\n\n    compose() {\n        const\n            { active, cls, index, isFirst, isLast } = this,\n            setSize = this.owner.visibleChildCount;\n\n        return {\n            tabindex : 0,\n\n            'aria-selected' : active,\n            'aria-setsize'  : setSize,\n            'aria-posinset' : index + 1,\n\n            class : {\n                'b-tabpanel-tab' : 1,\n                'b-active'       : active,\n                'b-tab-first'    : isFirst,\n                'b-tab-last'     : isLast,\n\n                ...cls   // cls is a DomClassList\n            },\n\n            dataset : {\n                index\n            }\n        };\n    }\n\n    //endregion\n\n    updateIndex(index) {\n        this.isFirst = !index;\n    }\n\n    updateItem(item, was) {\n        const me = this;\n\n        if (was?.tab === me) {\n            was.tab = null;\n        }\n\n        if (item) {\n            item.tab = me;\n\n            me[me.titleProperty] = item[me.titleSource];\n            me.itemCls = item.cls;\n            me.ariaElement.setAttribute('aria-controls', item.id);\n            item.role = 'tabpanel';\n        }\n\n        me.itemChangeDetacher?.();\n        me.itemChangeDetacher = item && FunctionHelper.after(item, 'onConfigChange', 'onItemConfigChange', me, {\n            return : false\n        });\n\n        me.itemHideDetacher?.();\n        me.itemHideDetacher = item?.ion({\n            beforeChangeHidden   : 'onItemBeforeChangeHidden',\n            beforeHide           : 'onItemBeforeHide',\n            beforeUpdateDisabled : 'onItemBeforeUpdateDisabled',\n            thisObj              : me,\n            prio                 : 1000 // We must know before the layout intercepts and activates a sibling\n        });\n\n        me.syncMinMax();\n    }\n\n    updateItemCls(cls, was) {\n        const\n            { element } = this,\n            classList = element && DomClassList.from(element?.classList, /* returnEmpty= */true);\n\n        if (element) {\n            classList.remove(was).add(cls);\n            element.className = classList.value;\n        }\n    }\n\n    updateRotate(rotate, was) {\n        if (!rotate !== !was) {\n            this.syncMinMax();\n        }\n    }\n\n    syncMinMax() {\n        const\n            me = this,\n            { rotate, tabPanel } = me;\n\n        // We have to read the configs directly since there are getters that read the DOM styles:\n        let { _minWidth : minWidth, _minHeight : minHeight, _maxWidth : maxWidth, _maxHeight : maxHeight } = me;\n\n        // When a tab rotation changes, we need to pivot the min/max width values with the height values\n        if (tabPanel) {\n            const { tabMinWidth, tabMaxWidth } = tabPanel;\n\n            if (tabMinWidth != null) {\n                if (rotate) {\n                    // if we were previously not rotated, the tabMinWidth may be effecting our minWidth:\n                    if (minWidth === tabMinWidth) {\n                        minWidth = null;\n                    }\n\n                    // noinspection JSSuspiciousNameCombination\n                    minHeight = tabMinWidth;\n                }\n                else {\n                    // if we were previously rotated, the tabMinWidth may be effecting our minHeight:\n                    if (minHeight === tabMinWidth) {\n                        minHeight = null;\n                    }\n\n                    minWidth = tabMinWidth;\n                }\n            }\n\n            if (tabMaxWidth != null) {\n                if (rotate) {\n                    if (maxWidth === tabMaxWidth) {\n                        maxWidth = null;\n                    }\n\n                    // noinspection JSSuspiciousNameCombination\n                    maxHeight = tabMaxWidth;\n                }\n                else {\n                    if (maxHeight === tabMaxWidth) {\n                        maxHeight = null;\n                    }\n\n                    maxWidth = tabMaxWidth;\n                }\n            }\n\n            me.minWidth = minWidth;\n            me.minHeight = minHeight;\n            me.maxWidth = maxWidth;\n            me.maxHeight = maxHeight;\n        }\n    }\n\n    onItemBeforeChangeHidden({ source : hidingChild, hidden }) {\n        // If it's a hide/show that is not part of the layout's deactivating/activating, we must hide/show the tab\n        if (!hidingChild.$isDeactivating && !hidingChild.$isActivating) {\n            const { tabPanel } = this;\n\n            this.hidden = hidden;\n\n            // if tab to hide is active, let's active previous visible and enabled tab\n            if (hidden && hidingChild === tabPanel.activeItem) {\n                tabPanel.activateAvailableTab(hidingChild);\n            }\n        }\n    }\n\n    onItemBeforeHide() {\n        // If it's a hide that is not part of the layout's deactivating, we hide the tab\n        if (!this.item.$isDeactivating) {\n            this.hide();\n        }\n    }\n\n    onItemBeforeUpdateDisabled({ source : disablingChild, disabled }) {\n        const { tabPanel } = this;\n\n        this.disabled = disabled;\n\n        // if tab to disable is active, let's active previous visible and enabled tab\n        if (disablingChild === tabPanel.activeItem) {\n            tabPanel.activateAvailableTab(disablingChild);\n        }\n    }\n\n    onItemConfigChange({ name, value }) {\n        if (name === this.titleSource) {\n            this[this.titleProperty] = value;\n        }\n    }\n}\n\n// Register this widget type with its Factory\nTab.initClass();\n","import Toolbar from './Toolbar.js';\nimport ArrayHelper from '../helper/ArrayHelper.js';\n\nimport './Tab.js';\n\n/**\n * @module Core/widget/TabBar\n */\n\nconst isTab = t => t.isTab;\n\n/**\n * A special toolbar used by {@link Core.widget.TabPanel} to present {@link Core.widget.Tab tabs} for the container's\n * items.\n *\n * The {@link Core.widget.Container#config-items} of a tab bar are typically managed by the tab panel, however,\n * items can be added that do not correspond to items in the tab panel. The {@link Core.widget.Widget#config-weight}\n * config of each tab defaults to 0 or the weight of its corresponding item.\n *\n * @extends Core/widget/Toolbar\n * @classType tabbar\n */\nexport default class TabBar extends Toolbar {\n    static get $name() {\n        return 'TabBar';\n    }\n\n    // Factoryable type name\n    static get type() {\n        return 'tabbar';\n    }\n\n    static get configurable() {\n        return {\n            defaultType : 'tab',\n\n            overflow : 'scroll',\n\n            role : 'tablist',\n\n            ignoreParentReadOnly : true\n        };\n    }\n\n    get firstTab() {\n        return this.tabAt(0);\n    }\n\n    get lastTab() {\n        return this.tabAt(-1);\n    }\n\n    get tabCount() {\n        return this._items.countOf(isTab);\n    }\n\n    get tabs() {\n        return ArrayHelper.from(this._items, isTab);\n    }\n\n    compose() {\n        return {\n            children : {\n                toolbarContent : {\n                    class : {\n                        'b-tabpanel-tabs' : 1\n                    }\n                }\n            }\n        };\n    }\n\n    indexOfTab(tab) {\n        return this._items.indexOf(tab, isTab);\n    }\n\n    onChildAdd(child) {\n        super.onChildAdd(child);\n\n        if (child.index == null) {\n            this.syncTabs();\n        }\n    }\n\n    onChildRemove(child) {\n        super.onChildRemove(child);\n\n        this.syncTabs();\n    }\n\n    onFocusIn() {\n        const { activeIndex } = this.owner;\n\n        // It must have a numeric active index set up\n        if (!isNaN(activeIndex)) {\n            this.tabs[activeIndex].focus();\n        }\n    }\n\n    syncTabs() {\n        const { tabs } = this;\n\n        for (let i = 0, n = tabs.length; i < n; ++i) {\n            tabs[i].index = i;\n            tabs[i].isFirst = !i;\n            tabs[i].isLast = i === n - 1;\n        }\n    }\n\n    tabAt(index) {\n        return this._items.find(isTab, index) || null;\n    }\n}\n\n// Register this widget type with its Factory\nTabBar.initClass();\n","import ArrayHelper from '../helper/ArrayHelper.js';\nimport ObjectHelper from '../helper/ObjectHelper.js';\nimport Panel from './Panel.js';\nimport Tab from './Tab.js';\n\nimport './TabBar.js';\nimport './layout/Card.js';\nimport GlobalEvents from '../GlobalEvents.js';\n\n/**\n * @module Core/widget/TabPanel\n */\n\n/**\n * A tab panel widget which displays a collection of tabs, each of which can contain other widgets (or simple HTML). This\n * widget has a {@link Core.widget.TabBar tab bar} on top of its contents, and each {@link Core.widget.Tab tab} can be\n * customized using the {@link Core.widget.Tab#config-tab} config.\n *\n * @extends Core/widget/Container\n * @example\n * let tabPanel = new TabPanel({\n *  items: [\n *      {\n *          title: 'First',\n *          items: [\n *              { type: 'textfield', label: 'Name' },\n *              ...\n *          ]\n *      }, {\n *          title: 'Settings',\n *          tab : {\n *              // Show an icon in the tab\n *              icon : 'b-fa b-fa-cog'\n *          },\n *          items: [\n *              ...\n *          ]\n *      }\n *  ]\n * });\n *\n * The tab selector buttons are focusable elememts. `Enter` or `Space` activates a tab, and moves\n * focus into the newly visible tab item.\n *\n * @classType tabpanel\n * @inlineexample Core/widget/TabPanel.js\n * @widget\n */\nexport default class TabPanel extends Panel {\n    //region Config\n    static get $name() {\n        return 'TabPanel';\n    }\n\n    // Factoryable type name\n    static get type() {\n        return 'tabpanel';\n    }\n\n    // Factoryable type alias\n    static get alias() {\n        return 'tabs';\n    }\n\n    static get configurable() {\n        return {\n            /**\n             * The index of the initially active tab.\n             * @member {Number} activeTab\n             */\n            /**\n             * The index of the initially active tab.\n             * @config {Number}\n             * @default\n             */\n            activeTab : 0,\n\n            /**\n             * Specifies whether to slide tabs in and out of visibility.\n             * @config {Boolean}\n             * @default\n             */\n            animateTabChange : true,\n\n            /**\n             * Set the height of all tabs to match the tab with the highest content.\n             * @config {Boolean}\n             * @default\n             */\n            autoHeight : false,\n\n            defaultType : 'container',\n\n            focusable : false,\n\n            itemCls : 'b-tabpanel-item',\n\n            layout : {\n                type : 'card'\n            },\n\n            // Prevent child panels from displaying a header unless explicitly configured with one\n            suppressChildHeaders : true,\n\n            tabBar : {\n                type   : 'tabbar',\n                weight : -2000\n            },\n\n            /**\n             * Min width of a tab title. 0 means no minimum width. This is default.\n             * @config {Number}\n             * @default\n             */\n            tabMinWidth : null,\n\n            /**\n             * Max width of a tab title. 0 means no maximum width. This is default.\n             * @config {Number}\n             * @default\n             */\n            tabMaxWidth : null\n        };\n    }\n\n    //endregion\n\n    //region Init\n\n    /**\n     * The active tab index. Setting must be done through {@link #property-activeTab}\n     * @property {Number}\n     * @readonly\n     */\n    get activeIndex() {\n        return this.layout.activeIndex;\n    }\n\n    /**\n     * The active child widget. Setting must be done through {@link #property-activeTab}\n     * @property {Core.widget.Widget}\n     * @readonly\n     */\n    get activeItem() {\n        return this.layout.activeItem;\n    }\n\n    get activeTabItemIndex() {\n        const { activeTab, items, tabBar } = this;\n\n        return items.indexOf(tabBar.tabs[activeTab]?.item);\n    }\n\n    get bodyConfig() {\n        return ObjectHelper.merge({\n            className : {\n                'b-tabpanel-body' : 1\n            }\n        }, super.bodyConfig);\n    }\n\n    get focusElement() {\n        const activeTab = this.items[this.activeTab || 0];\n\n        return activeTab?.focusElement || activeTab?.tab?.focusElement;\n    }\n\n    get tabPanelBody() {\n        return this.bodyElement;\n    }\n\n    finalizeInit() {\n        super.finalizeInit();\n\n        const\n            me                    = this,\n            { activeTab, layout } = me,\n            { activeIndex }       = layout,\n            { tabs }              = me.tabBar,\n            activeTabItemIndex    = activeTab >= 0 && activeTab < tabs.length && me.items.indexOf(tabs[activeTab].item);\n\n        if (tabs.length > 0 && (activeTabItemIndex === false || activeTabItemIndex < 0)) {\n            throw new Error(`Invalid activeTab ${activeTab} (${tabs.length} tabs)`);\n        }\n\n        if (activeTabItemIndex !== activeIndex) {\n            // Since we are responding to configuration, we need to sync activeIndex to activeTab as if it were the\n            // initial value of activeIndex. This cannot be done (reasonably) during initialization of the card layout\n            // because of the possibility of tabless items, so we wait until the dust settles on the items, the tabBar\n            // and all other configs, but we must do the tab change silently (since the the initial active item is set\n            // without such ceremony) and without animation (to avoid the appearance of the initial tab animating in)\n            layout.setActiveItem(activeTabItemIndex, activeIndex, {\n                animation : false,\n                silent    : true\n            });\n        }\n\n        layout.animateCardChange = me.animateTabChange;\n    }\n\n    onChildAdd(child) {\n        // The layout will hide inactive new items.\n        // And we must add our beforeHide listener *after* call super.\n        super.onChildAdd(child);\n\n        if (!this.initialItems) {\n            const\n                me          = this,\n                { tabBar }  = me,\n                config      = me.makeTabConfig(child),\n                // if child.tab === false, config will be null... no tab for this one\n                firstTab    = config && tabBar?.firstTab,\n                // if there are no tabs yet, this will be the first so we can skip all the indexing...\n                tabBarItems = firstTab && tabBar._items,\n                // not all items have tabs but the new child won't have one yet:\n                tabItems    = firstTab && ArrayHelper.from(me._items, it => it.tab || it === child),\n                // non-tabs could be in the tabBar, but the tabs must be contiguous:\n                index       = firstTab ? tabItems.indexOf(child) + tabBarItems.indexOf(firstTab) : 0;\n\n            if (config && tabBar) {\n                if (firstTab && child.weight == null && index < tabBarItems.count - 1) {\n                    tabBar.insert(config, index);\n                }\n                else {\n                    tabBar.add(config);\n                }\n            }\n        }\n    }\n\n    onChildRemove(child) {\n        const\n            { tab }   = child,\n            { items } = this;\n\n        if (tab) {\n            this.tabBar.remove(tab);\n            tab.destroy();\n        }\n\n        // Removing the active item, then show a sibling if any are left\n        if (child === this.activeItem) {\n            this._activeTab = null;\n            if (items.length) {\n                this.activeTab = items[Math.min(this.activeIndex, items.length - 1)];\n            }\n        }\n\n        super.onChildRemove(child);\n    }\n\n    //endregion\n\n    //region Tabs\n\n    isDisabledOrHiddenTab(tabIndex) {\n        const\n            { tabs } = this.tabBar,\n            tab      = tabs?.[tabIndex];\n        return tab && (tab.disabled || tab.hidden);\n    }\n\n    findAvailableTab(item, delta = 1) {\n        const\n            { tabs }  = this.tabBar,\n            tabCount  = tabs.length,\n            itemIndex = Math.max(0, tabs.indexOf(item.tab));\n\n        if (itemIndex) {\n            delta = -delta;\n        }\n\n        let activeTab;\n\n        for (let n = 1; n <= tabCount; ++n) {\n            //  itemIndex=2, tabCount=5:\n            //               n : 1, 2, 3, 4, 5\n            //      delta =  1 : 3, 4, 0, 1, 2\n            //      delta = -1 : 1, 0, 4, 3, 2\n            activeTab = (itemIndex + ((delta < 0) ? tabCount : 0) + n * delta) % tabCount;\n            if (!this.isDisabledOrHiddenTab(activeTab)) {\n                break;\n            }\n        }\n        return activeTab;\n    }\n\n    activateAvailableTab(item, delta = 1) {\n        this.activeTab = this.findAvailableTab(item, delta);\n    }\n\n    changeActiveTab(activeTab, oldActiveTab) {\n        const\n            me           = this,\n            {\n                tabBar,\n                layout\n            }            = me,\n            { tabCount } = tabBar;\n\n        if (activeTab.isWidget || ObjectHelper.isObject(activeTab)) {\n            // Must be a child widget, so add if it's not already in our items.\n            if (me.items.indexOf(activeTab) === -1) {\n                activeTab = me.add(activeTab);\n            }\n\n            activeTab = tabBar.indexOfTab(activeTab.tab);\n        }\n        else {\n            activeTab = parseInt(activeTab, 10);\n        }\n\n        if (!me.initialItems && tabCount > 0 && (activeTab < -1 || activeTab >= tabCount)) {\n            throw new Error(`Invalid activeTab ${activeTab} (${tabCount} tabs)`);\n        }\n\n        if (me.isDisabledOrHiddenTab(activeTab)) {\n            activeTab = me.findAvailableTab(activeTab);\n        }\n\n        // If we are animating, we must wait until any animation is finished\n        // before we can go ahead and apply the change.\n        if (layout.animateCardChange && layout.cardChangeAnimation) {\n            layout.cardChangeAnimation.then(cardChange => {\n                // If the animation resulted in not where we want, update the activeTab\n                if (cardChange?.activeIndex !== activeTab) {\n                    me._activeTab = activeTab;\n                    me.updateActiveTab(activeTab, oldActiveTab);\n                }\n            });\n        }\n        else {\n            return activeTab;\n        }\n    }\n\n    async updateActiveTab() {\n        if (!this.initialItems) {\n            const { activeTabItemIndex, layout } = this;\n\n            if (activeTabItemIndex > -1) {\n                if (layout.animateCardChange) {\n                    await this.tabSelectionPromise;\n                }\n\n                // A no-change returns no chage event object\n                this.tabSelectionPromise = layout.setActiveItem(this.items[activeTabItemIndex])?.promise;\n            }\n        }\n    }\n\n    changeTabBar(bar) {\n        this.getConfig('strips');\n\n        this.strips = {\n            tabBar : bar\n        };\n\n        return this.strips.tabBar;\n    }\n\n    makeTabConfig(item) {\n        const\n            { tab } = item,\n            config  = {\n                item,\n\n                type              : 'tab',\n                tabPanel          : this,\n                disabled          : Boolean(item.disabled),\n                hidden            : item.initialConfig.hidden,\n                weight            : item.weight || 0,\n                internalListeners : {\n                    click   : 'onTabClick',\n                    thisObj : this\n                },\n                localizableProperties : {\n                    // our tabs copy their text from the item's title and so are not directly localized\n                    text : false\n                }\n            };\n\n        if (tab === false) {\n            return null;\n        }\n\n        return ObjectHelper.isObject(tab) ? Tab.mergeConfigs(config, tab) : config;\n    }\n\n    updateItems(items, was) {\n        const\n            me                          = this,\n            { activeTab, initialItems } = me;\n\n        let index = 0,\n            tabs;\n\n        super.updateItems(items, was);\n\n        if (initialItems) {\n            tabs = Array.from(items, it => me.makeTabConfig(it)).filter(it => {\n                if (it) {\n                    it.index = index++;\n                    return true;\n                }\n            });\n\n            if (index) {\n                tabs[0].isFirst = true;\n                tabs[index - 1].isLast = true;\n                tabs[activeTab].active = true;\n\n                me.tabBar.add(tabs);\n                me.activeTab = activeTab;  // now we can validate the activeTab value\n            }\n        }\n    }\n\n    updateTabMinWidth(tabMinWidth) {\n        this.tabBar?.items.forEach(tab => {\n            if (tab.isTab) {\n                tab.minWidth = tabMinWidth;\n            }\n        });\n    }\n\n    updateTabMaxWidth(tabMaxWidth) {\n        this.tabBar?.items.forEach(tab => {\n            if (tab.isTab) {\n                tab.maxWidth = tabMaxWidth;\n            }\n        });\n    }\n\n    //endregion\n\n    //region Auto height\n\n    updateAutoHeight(autoHeight) {\n        this.detachListeners('themeAutoHeight');\n\n        autoHeight && GlobalEvents.ion({\n            name    : 'themeAutoHeight',\n            theme   : 'internalOnThemeChange',\n            thisObj : this\n        });\n\n        this.$measureHeight = autoHeight;\n    }\n\n    applyAutoHeight() {\n        const\n            me                             = this,\n            { layout, activeTab, element } = me,\n            { animateCardChange }          = layout;\n\n        // stop animate to change tabs on back stage.\n        layout.animateCardChange = false;\n\n        // override any previously applied height when measuring\n        me.height = null;\n\n        // get the max height comparing all tabs and apply to the tab\n        me.height = Math.max(...me.items.map(tab => {\n            me.activeTab = tab;\n            return element.clientHeight;\n        })) + 1;\n\n        // Go back to initial configs\n        me.activeTab = activeTab;\n        layout.animateCardChange = animateCardChange;\n\n        me.$measureHeight = false;\n    }\n\n    internalOnThemeChange() {\n        if (this.isVisible) {\n            this.applyAutoHeight();\n        }\n        else {\n            this.$measureHeight = true;\n        }\n    }\n\n    //endregion\n\n    //region Events\n\n    // Called after beforeActiveItemChange has fired and not been vetoed before animation and activeItemChange\n    onBeginActiveItemChange(activeItemChangeEvent) {\n        const\n            tabs                           = this.tabBar.tabs,\n            { activeItem, prevActiveItem } = activeItemChangeEvent;\n\n        // Our UI changes immediately, our state must be accurate\n        this.activeTab = tabs.indexOf(activeItem?.tab);\n\n        // Deactivate previous active tab\n        if (prevActiveItem?.tab) {\n            prevActiveItem.tab.active = false;\n        }\n\n        if (activeItem?.tab) {\n            activeItem.tab.active = true;\n            activeItem.tab.show();\n        }\n    }\n\n    // Auto called because Card layout triggers the beforeActiveItemChange on its owner\n    onBeforeActiveItemChange(activeItemChangeEvent) {\n        /**\n         * The active tab is about to be changed. Return `false` to prevent this.\n         * @event beforeTabChange\n         * @preventable\n         * @param {Number} activeIndex - The new active index.\n         * @param {Core.widget.Widget} activeItem - The new active child widget.\n         * @param {Number} prevActiveIndex - The previous active index.\n         * @param {Core.widget.Widget} prevActiveItem - The previous active child widget.\n         */\n        return this.trigger('beforeTabChange', activeItemChangeEvent);\n    }\n\n    // Auto called because Card layout triggers the activeItemChange on its owner\n    onActiveItemChange(activeItemChangeEvent) {\n        /**\n         * The active tab has changed.\n         * @event tabChange\n         * @param {Number} activeIndex - The new active index.\n         * @param {Core.widget.Widget} activeItem - The new active child widget.\n         * @param {Number} prevActiveIndex - The previous active index.\n         * @param {Core.widget.Widget} prevActiveItem - The previous active child widget.\n         */\n        this.trigger('tabChange', activeItemChangeEvent);\n    }\n\n    onTabClick(event) {\n        this.activeTab = event.source.item;\n    }\n\n    onPaint() {\n        super.onPaint(...arguments);\n\n        // Measure tabs on first paint if configured to do so\n        if (this.$measureHeight) {\n            this.applyAutoHeight();\n        }\n    }\n\n    //endregion\n}\n\n// Register this widget type with its Factory\nTabPanel.initClass();\n"],"names":["WebSocketManager","Events","Base","construct","config","me","onWsOpen","bind","onWsClose","onWsMessage","onWsError","autoConnect","address","open","doDestroy","connector","detachSocketListeners","close","isConnecting","_this$connector","readyState","constructor","webSocketImplementation","CONNECTING","isOpened","_this$connector2","OPEN","isClosing","_this$connector3","CLOSING","isClosed","_this$connector4","CLOSED","createWebSocketConnector","attachSocketListeners","destroyWebSocketConnector","addEventListener","removeEventListener","_openPromise","console","warn","detacher","Promise","resolve","ion","error","then","value","catch","trigger","send","command","data","_this$connector5","JSON","stringify","_objectSpread","event","message","parse","_defineProperty","WebSocket","userName","_$name","FieldSet","Panel","mixin","Labelable","$name","type","configurable","bodyTag","focusable","inline","inlineInternal","layout","horizontal","prototypeProperties","flexRowCls","flexColCls","bodyConfig","result","className","hasLabel","title","html","children","legendElement","tag","text","class","compose","label","labelCls","labelWidth","style","width","DomHelper","unitize","syncInlineInternal","_this$inline","labelPosition","updateDisabled","was","eachWidget","item","disabled","updateInline","updateInlineInternal","updateLabel","updateLabelPosition","initClass","Radio","Checkbox","alias","inputType","clearable","uncheckedValue","undefined","textLabelCls","internalOnClick","info","checked","updateName","name","toggleGroup","updateClearable","RadioGroup","defaultType","options","$config","merge","defaultBindProperty","existingOptions","ensureItems","filter","c","refPrefix","ref","id","selected","input","checkedValue","v","forEach","isConfiguring","getConfig","changeOptions","ObjectHelper","isDeeplyEqual","convertOption","key","option","existing","ret","assign","Widget","reconfigure","isOurRadio","isRadio","isolateFieldChange","field","onChildAdd","beforeChange","change","click","thisObj","onChildRemove","detachListeners","onRadioClick","ev","source","onRadioItemBeforeChange","lastValue","reverting","wrapRadioEvent","uncheckToggleGroupMembers","onRadioItemChange","triggerFieldChange","from","userAction","updateOptions","reduce","m","substring","length","index","insert","Object","values","remove","destroy","Tab","Button","active","isFirst","isLast","itemCls","tabPanel","titleProperty","titleSource","role","cls","setSize","owner","visibleChildCount","tabindex","dataset","updateIndex","updateItem","_me$itemChangeDetache","_me$itemHideDetacher","tab","ariaElement","setAttribute","itemChangeDetacher","call","FunctionHelper","after","return","itemHideDetacher","beforeChangeHidden","beforeHide","beforeUpdateDisabled","prio","syncMinMax","updateItemCls","element","classList","DomClassList","add","updateRotate","rotate","_minWidth","minWidth","_minHeight","minHeight","_maxWidth","maxWidth","_maxHeight","maxHeight","tabMinWidth","tabMaxWidth","onItemBeforeChangeHidden","hidingChild","hidden","$isDeactivating","$isActivating","activeItem","activateAvailableTab","onItemBeforeHide","hide","onItemBeforeUpdateDisabled","disablingChild","onItemConfigChange","isTab","t","TabBar","Toolbar","overflow","ignoreParentReadOnly","firstTab","tabAt","lastTab","tabCount","_items","countOf","tabs","ArrayHelper","toolbarContent","indexOfTab","indexOf","child","syncTabs","onFocusIn","activeIndex","isNaN","focus","i","n","find","TabPanel","activeTab","animateTabChange","autoHeight","suppressChildHeaders","tabBar","weight","activeTabItemIndex","_tabBar$tabs$activeTa","items","focusElement","_activeTab$tab","tabPanelBody","bodyElement","finalizeInit","Error","setActiveItem","animation","silent","animateCardChange","initialItems","makeTabConfig","tabBarItems","tabItems","it","count","_activeTab","Math","min","isDisabledOrHiddenTab","tabIndex","findAvailableTab","delta","itemIndex","max","changeActiveTab","oldActiveTab","isWidget","isObject","parseInt","cardChangeAnimation","cardChange","updateActiveTab","_layout$setActiveItem","tabSelectionPromise","promise","changeTabBar","bar","strips","Boolean","initialConfig","internalListeners","localizableProperties","mergeConfigs","updateItems","Array","updateTabMinWidth","_this$tabBar","updateTabMaxWidth","_this$tabBar2","updateAutoHeight","GlobalEvents","theme","$measureHeight","applyAutoHeight","height","map","clientHeight","internalOnThemeChange","isVisible","onBeginActiveItemChange","activeItemChangeEvent","prevActiveItem","show","onBeforeActiveItemChange","onActiveItemChange","onTabClick","onPaint","arguments"],"mappings":"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,CAACM,OAAO,GAAG,KAAK;;;;EAIhCC,UAAUA,CAACC,IAAI,EAAE;IACb,IAAI,CAACC,WAAW,GAAGD,IAAI;;;EAG3BE,eAAeA,GAAG;AACtB;AACA;AACAd,KAAK,CAACD,SAAS,EAAE;AACjBC,KAAK,CAACjD,MAAM,GAAG,OAAO;;ACpEtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,MAAMgE,UAAU,SAAS/D,QAAQ,CAAC;;EAE7C,WAAWI,KAAKA,GAAG;IACf,OAAO,YAAY;;;EAGvB,WAAWC,IAAIA,GAAG;IACd,OAAO,YAAY;;EAEvB,WAAWC,YAAYA,GAAG;IACtB,OAAO;MACH0D,WAAW,EAAG,OAAO;;AAEjC;AACA;AACA;AACA;AACA;MACYZ,SAAS,EAAG,IAAI;;AAE5B;AACA;AACA;AACA;AACA;AACA;AACA;MACYQ,IAAI,EAAG,IAAI;;AAEvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACYK,OAAO,EAAG;QACNlF,KAAK,EAAG,IAAI;QACZmF,OAAO,EAAG;UACNC,KAAK,EAAG;;OAEf;MACDC,mBAAmB,EAAG;KACzB;;EAEL,IAAIC,eAAeA,GAAG;IAClB,MAAM;MAAET;KAAM,GAAG,IAAI;IACrB,OAAO,IAAI,CAACU,WAAW,EAAE,CAACC,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACZ,IAAI,KAAKA,IAAI,CAAC;;EAE1D,IAAIa,SAASA,GAAG;IACZ,OAAQ,GAAE,IAAI,CAACb,IAAI,IAAI,IAAI,CAACc,GAAG,IAAI,IAAI,CAACC,EAAG,GAAE;;EAEjD,IAAIC,QAAQA,GAAG;IACX,OAAO,IAAI,CAACP,eAAe,CAACE,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACK,KAAK,CAACnB,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI;;;AAG3E;AACA;AACA;AACA;EACI,IAAI3E,KAAKA,GAAG;IACR,MAAM;MAAE6F;KAAU,GAAG,IAAI;IACzB,OAAOA,QAAQ,GAAGA,QAAQ,CAACE,YAAY,GAAG,IAAI;;EAElD,IAAI/F,KAAKA,CAACgG,CAAC,EAAE;IACT,IAAI,CAACV,eAAe,CAACW,OAAO,CAACR,CAAC,IAAI;MAC9BA,CAAC,CAACS,aAAa,GAAG,IAAI,CAACA,aAAa;MACpCT,CAAC,CAACd,OAAO,GAAGc,CAAC,CAACM,YAAY,KAAKC,CAAC;MAChCP,CAAC,CAACS,aAAa,GAAG,KAAK;KAC1B,CAAC;;EAENX,WAAWA,GAAG;IACV,IAAI,CAACY,SAAS,CAAC,SAAS,CAAC;IACzB,OAAO,KAAK,CAACZ,WAAW,EAAE;;EAE9Ba,aAAaA,CAAClB,OAAO,EAAE1B,GAAG,EAAE;IACxB,IAAI,EAAE0B,OAAO,IAAI1B,GAAG,IAAI6C,YAAY,CAACC,aAAa,CAAC9C,GAAG,EAAE0B,OAAO,CAAC,CAAC,EAAE;MAC/D,OAAOA,OAAO;;;EAGtBqB,aAAaA,CAACC,GAAG,EAAEC,MAAM,EAAEC,QAAQ,EAAE;IACjC,MACIpJ,EAAE,GAAS,IAAI;MACf;QAAEuH;OAAM,GAAGvH,EAAE;MACbqJ,GAAG,GAAQ;QACP9B,IAAI;QACJvD,IAAI,EAAW,OAAO;QACtBtB,KAAK,EAAUwG,GAAG,KAAKlJ,EAAE,CAAC0C,KAAK;QAC/B2F,GAAG,EAAa,GAAErI,EAAE,CAACoI,SAAU,GAAEc,GAAI,EAAC;QACtCT,YAAY,EAAGS;OAClB;IACL,IAAI,OAAOC,MAAM,KAAK,QAAQ,EAAE;MAC5BE,GAAG,CAACjE,IAAI,GAAG+D,MAAM;KACpB,MACI;MACDJ,YAAY,CAACO,MAAM,CAACD,GAAG,EAAEF,MAAM,CAAC;;IAEpC,OAAOC,QAAQ,GAAGG,MAAM,CAACC,WAAW,CAACJ,QAAQ,EAAEC,GAAG,CAAC,GAAGA,GAAG;;EAE7DI,UAAUA,CAACrD,IAAI,EAAE;;IAEb,OAAOA,IAAI,CAACsD,OAAO,IAAItD,IAAI,CAACmB,IAAI,KAAK,IAAI,CAACA,IAAI;;EAElDoC,kBAAkBA,CAACC,KAAK,EAAE;;IAEtB,OAAO,IAAI,CAACH,UAAU,CAACG,KAAK,CAAC;;EAEjCC,UAAUA,CAACzD,IAAI,EAAE;IACb,KAAK,CAACyD,UAAU,CAACzD,IAAI,CAAC;IACtB,IAAI,IAAI,CAACqD,UAAU,CAACrD,IAAI,CAAC,EAAE;MACvBA,IAAI,CAAC7D,GAAG,CAAC;QACLgF,IAAI,EAAWnB,IAAI,CAACkC,EAAE;QACtBwB,YAAY,EAAG,yBAAyB;QACxCC,MAAM,EAAS,mBAAmB;QAClCC,KAAK,EAAU,cAAc;QAC7BC,OAAO,EAAQ;OAClB,CAAC;;;EAGVC,aAAaA,CAAC9D,IAAI,EAAE;IAChB,IAAI,IAAI,CAACqD,UAAU,CAACrD,IAAI,CAAC,EAAE;MACvB,IAAI,CAAC+D,eAAe,CAAC/D,IAAI,CAACkC,EAAE,CAAC;;IAEjC,KAAK,CAAC4B,aAAa,CAAC9D,IAAI,CAAC;;EAE7BgE,YAAYA,CAACC,EAAE,EAAE;IACb,MAAM;MAAEC;KAAQ,GAAGD,EAAE;IACrB,IAAIC,MAAM,CAACjD,OAAO,IAAI,IAAI,CAACN,SAAS,IAAIuD,MAAM,CAACvD,SAAS,IAAI,IAAI,EAAE;MAC9DuD,MAAM,CAACjD,OAAO,GAAG,KAAK;;;EAG9BkD,uBAAuBA,CAACF,EAAE,EAAE;IACxB,IAAIA,EAAE,CAAChD,OAAO,EAAE;MACZ,MACIrH,EAAE,GAAG,IAAI;QACT;UAAEwK;SAAW,GAAGxK,EAAE;MACtB,IAAI,CAACA,EAAE,CAACyK,SAAS,IAAIzK,EAAE,CAAC4C,OAAO,CAAC,cAAc,EAAE5C,EAAE,CAAC0K,cAAc,CAACL,EAAE,CAAC,CAAC,KAAK,KAAK,EAAE;QAC9E,IAAIG,SAAS,IAAI,IAAI,IAAIA,SAAS,KAAKxK,EAAE,CAAC0C,KAAK,EAAE;UAC7C1C,EAAE,CAACyK,SAAS,GAAG,IAAI;UACnBJ,EAAE,CAACC,MAAM,CAACK,yBAAyB,EAAE;UACrC3K,EAAE,CAAC0C,KAAK,GAAG8H,SAAS;UACpBxK,EAAE,CAACwK,SAAS,GAAGA,SAAS;UACxBxK,EAAE,CAACyK,SAAS,GAAG,KAAK;UACpB,OAAO,KAAK;;;;;EAK5BG,iBAAiBA,CAACP,EAAE,EAAE;IAClB,MAAMrK,EAAE,GAAG,IAAI;IACf,IAAIqK,EAAE,CAAChD,OAAO,IAAI,CAACrH,EAAE,CAACyK,SAAS,EAAE;MAC7BzK,EAAE,CAAC6K,kBAAkB,CAAC7K,EAAE,CAAC0K,cAAc,CAACL,EAAE,CAAC,CAAC;MAC5CrK,EAAE,CAACwK,SAAS,GAAGxK,EAAE,CAAC0C,KAAK;;;EAG/BgI,cAAcA,CAACL,EAAE,EAAE;IACf,OAAO;MACHS,IAAI,EAAST,EAAE;MACfjE,IAAI,EAASiE,EAAE,CAACC,MAAM;MACtBS,UAAU,EAAGV,EAAE,CAACU,UAAU;MAC1BP,SAAS,EAAI,IAAI,CAACA,SAAS;MAC3B9H,KAAK,EAAQ,IAAI,CAACA;KACrB;;EAELsI,aAAaA,GAAG;IACZ,MACIhL,EAAE,GAAuB,IAAI;MAC7B;QAAE4H,OAAO;QAAEQ;OAAW,GAAGpI,EAAE;MAC3BgI,eAAe,GAAUhI,EAAE,CAACgI,eAAe,CAACiD,MAAM,CAAC,CAACC,CAAC,EAAE/C,CAAC,KAAK;QACzD+C,CAAC,CAAC/C,CAAC,CAACE,GAAG,CAAC8C,SAAS,CAAC/C,SAAS,CAACgD,MAAM,CAAC,CAAC,GAAGjD,CAAC;QACxC,OAAO+C,CAAC;OACX,EAAE,EAAE,CAAC;IACV,IAAIG,KAAK,GAAG,CAAC;MACTnC,GAAG;MAAEC,MAAM;IACf,IAAIvB,OAAO,EAAE;MACT,KAAKsB,GAAG,IAAItB,OAAO,EAAE;QACjBuB,MAAM,GAAGnJ,EAAE,CAACiJ,aAAa,CAACC,GAAG,EAAEtB,OAAO,CAACsB,GAAG,CAAC,EAAElB,eAAe,CAACkB,GAAG,CAAC,CAAC;QAClE,OAAOlB,eAAe,CAACkB,GAAG,CAAC;QAC3BlJ,EAAE,CAACsL,MAAM,CAACnC,MAAM,EAAEkC,KAAK,EAAE,CAAC;;;IAGlC,MAAMjC,QAAQ,GAAGmC,MAAM,CAACC,MAAM,CAACxD,eAAe,CAAC;IAC/C,IAAIoB,QAAQ,aAARA,QAAQ,eAARA,QAAQ,CAAEgC,MAAM,EAAE;MAClBpL,EAAE,CAACyL,MAAM,CAACrC,QAAQ,CAAC;MACnBA,QAAQ,CAACT,OAAO,CAACR,CAAC,IAAIA,CAAC,CAACuD,OAAO,EAAE,CAAC;;;;AAI9C;AACA;AACAhE,UAAU,CAAChB,SAAS,EAAE;AACtBgB,UAAU,CAAChE,MAAM,GAAG,YAAY;;AClRhC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,MAAMiI,GAAG,SAASC,MAAM,CAAC;;EAEpC,WAAW7H,KAAKA,GAAG;IACf,OAAO,KAAK;;;EAGhB,WAAWC,IAAIA,GAAG;IACd,OAAO,KAAK;;EAEhB,WAAWC,YAAYA,GAAG;IACtB,OAAO;;AAEf;AACA;AACA;AACA;AACA;MACY4H,MAAM,EAAG,IAAI;;AAEzB;AACA;AACA;AACA;MACYR,KAAK,EAAG,IAAI;;AAExB;AACA;AACA;AACA;MACYS,OAAO,EAAG,IAAI;;AAE1B;AACA;AACA;AACA;MACYC,MAAM,EAAG,IAAI;;AAEzB;AACA;AACA;AACA;MACY3F,IAAI,EAAG;QACH1D,KAAK,EAAG,IAAI;QACZmF,OAAO,EAAG;OACb;MACDmE,OAAO,EAAG,IAAI;;AAE1B;AACA;AACA;MACYC,QAAQ,EAAG,IAAI;;AAE3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACYC,aAAa,EAAG,MAAM;;AAElC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACYC,WAAW,EAAG,OAAO;MACrBC,IAAI,EAAG;KACV;;EAEL9G,OAAOA,GAAG;IACN,MACI;QAAEuG,MAAM;QAAEQ,GAAG;QAAEhB,KAAK;QAAES,OAAO;QAAEC;OAAQ,GAAG,IAAI;MAC9CO,OAAO,GAAG,IAAI,CAACC,KAAK,CAACC,iBAAiB;IAC1C,OAAO;MACHC,QAAQ,EAAG,CAAC;MACZ,eAAe,EAAGZ,MAAM;MACxB,cAAc,EAAIS,OAAO;MACzB,eAAe,EAAGjB,KAAK,GAAG,CAAC;MAC3BhG,KAAK,EAAAlC,cAAA;QACD,gBAAgB,EAAG,CAAC;QACpB,UAAU,EAAS0I,MAAM;QACzB,aAAa,EAAMC,OAAO;QAC1B,YAAY,EAAOC;SAChBM,GAAG,CACT;MACDK,OAAO,EAAG;QACNrB;;KAEP;;;EAGLsB,WAAWA,CAACtB,KAAK,EAAE;IACf,IAAI,CAACS,OAAO,GAAG,CAACT,KAAK;;EAEzBuB,UAAUA,CAACxG,IAAI,EAAEF,GAAG,EAAE;IAAA,IAAA2G,qBAAA,EAAAC,oBAAA;IAClB,MAAM9M,EAAE,GAAG,IAAI;IACf,IAAI,CAAAkG,GAAG,aAAHA,GAAG,uBAAHA,GAAG,CAAE6G,GAAG,MAAK/M,EAAE,EAAE;MACjBkG,GAAG,CAAC6G,GAAG,GAAG,IAAI;;IAElB,IAAI3G,IAAI,EAAE;MACNA,IAAI,CAAC2G,GAAG,GAAG/M,EAAE;MACbA,EAAE,CAACA,EAAE,CAACkM,aAAa,CAAC,GAAG9F,IAAI,CAACpG,EAAE,CAACmM,WAAW,CAAC;MAC3CnM,EAAE,CAACgM,OAAO,GAAG5F,IAAI,CAACiG,GAAG;MACrBrM,EAAE,CAACgN,WAAW,CAACC,YAAY,CAAC,eAAe,EAAE7G,IAAI,CAACkC,EAAE,CAAC;MACrDlC,IAAI,CAACgG,IAAI,GAAG,UAAU;;IAE1B,CAAAS,qBAAA,GAAA7M,EAAE,CAACkN,kBAAkB,cAAAL,qBAAA,uBAArBA,qBAAA,CAAAM,IAAA,CAAAnN,EAAE,CAAuB;IACzBA,EAAE,CAACkN,kBAAkB,GAAG9G,IAAI,IAAIgH,cAAc,CAACC,KAAK,CAACjH,IAAI,EAAE,gBAAgB,EAAE,oBAAoB,EAAEpG,EAAE,EAAE;MACnGsN,MAAM,EAAG;KACZ,CAAC;IACF,CAAAR,oBAAA,GAAA9M,EAAE,CAACuN,gBAAgB,cAAAT,oBAAA,uBAAnBA,oBAAA,CAAAK,IAAA,CAAAnN,EAAE,CAAqB;IACvBA,EAAE,CAACuN,gBAAgB,GAAGnH,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAE7D,GAAG,CAAC;MAC5BiL,kBAAkB,EAAK,0BAA0B;MACjDC,UAAU,EAAa,kBAAkB;MACzCC,oBAAoB,EAAG,4BAA4B;MACnDzD,OAAO,EAAgBjK,EAAE;MACzB2N,IAAI,EAAmB,IAAI;KAC9B,CAAC;;IACF3N,EAAE,CAAC4N,UAAU,EAAE;;EAEnBC,aAAaA,CAACxB,GAAG,EAAEnG,GAAG,EAAE;IACpB,MACI;QAAE4H;OAAS,GAAG,IAAI;MAClBC,SAAS,GAAGD,OAAO,IAAIE,YAAY,CAAClD,IAAI,CAACgD,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEC,SAAS,oBAAoB,IAAI,CAAC;IACxF,IAAID,OAAO,EAAE;MACTC,SAAS,CAACtC,MAAM,CAACvF,GAAG,CAAC,CAAC+H,GAAG,CAAC5B,GAAG,CAAC;MAC9ByB,OAAO,CAACjJ,SAAS,GAAGkJ,SAAS,CAACrL,KAAK;;;EAG3CwL,YAAYA,CAACC,MAAM,EAAEjI,GAAG,EAAE;IACtB,IAAI,CAACiI,MAAM,KAAK,CAACjI,GAAG,EAAE;MAClB,IAAI,CAAC0H,UAAU,EAAE;;;EAGzBA,UAAUA,GAAG;IACT,MACI5N,EAAE,GAAG,IAAI;MACT;QAAEmO,MAAM;QAAElC;OAAU,GAAGjM,EAAE;;IAE7B,IAAI;MAAEoO,SAAS,EAAGC,QAAQ;MAAEC,UAAU,EAAGC,SAAS;MAAEC,SAAS,EAAGC,QAAQ;MAAEC,UAAU,EAAGC;KAAW,GAAG3O,EAAE;;IAEvG,IAAIiM,QAAQ,EAAE;MACV,MAAM;QAAE2C,WAAW;QAAEC;OAAa,GAAG5C,QAAQ;MAC7C,IAAI2C,WAAW,IAAI,IAAI,EAAE;QACrB,IAAIT,MAAM,EAAE;;UAER,IAAIE,QAAQ,KAAKO,WAAW,EAAE;YAC1BP,QAAQ,GAAG,IAAI;;;UAGnBE,SAAS,GAAGK,WAAW;SAC1B,MACI;;UAED,IAAIL,SAAS,KAAKK,WAAW,EAAE;YAC3BL,SAAS,GAAG,IAAI;;UAEpBF,QAAQ,GAAGO,WAAW;;;MAG9B,IAAIC,WAAW,IAAI,IAAI,EAAE;QACrB,IAAIV,MAAM,EAAE;UACR,IAAIM,QAAQ,KAAKI,WAAW,EAAE;YAC1BJ,QAAQ,GAAG,IAAI;;;UAGnBE,SAAS,GAAGE,WAAW;SAC1B,MACI;UACD,IAAIF,SAAS,KAAKE,WAAW,EAAE;YAC3BF,SAAS,GAAG,IAAI;;UAEpBF,QAAQ,GAAGI,WAAW;;;MAG9B7O,EAAE,CAACqO,QAAQ,GAAGA,QAAQ;MACtBrO,EAAE,CAACuO,SAAS,GAAGA,SAAS;MACxBvO,EAAE,CAACyO,QAAQ,GAAGA,QAAQ;MACtBzO,EAAE,CAAC2O,SAAS,GAAGA,SAAS;;;EAGhCG,wBAAwBA,CAAC;IAAExE,MAAM,EAAGyE,WAAW;IAAEC;GAAQ,EAAE;;IAEvD,IAAI,CAACD,WAAW,CAACE,eAAe,IAAI,CAACF,WAAW,CAACG,aAAa,EAAE;MAC5D,MAAM;QAAEjD;OAAU,GAAG,IAAI;MACzB,IAAI,CAAC+C,MAAM,GAAGA,MAAM;;MAEpB,IAAIA,MAAM,IAAID,WAAW,KAAK9C,QAAQ,CAACkD,UAAU,EAAE;QAC/ClD,QAAQ,CAACmD,oBAAoB,CAACL,WAAW,CAAC;;;;EAItDM,gBAAgBA,GAAG;;IAEf,IAAI,CAAC,IAAI,CAACjJ,IAAI,CAAC6I,eAAe,EAAE;MAC5B,IAAI,CAACK,IAAI,EAAE;;;EAGnBC,0BAA0BA,CAAC;IAAEjF,MAAM,EAAGkF,cAAc;IAAEnJ;GAAU,EAAE;IAC9D,MAAM;MAAE4F;KAAU,GAAG,IAAI;IACzB,IAAI,CAAC5F,QAAQ,GAAGA,QAAQ;;IAExB,IAAImJ,cAAc,KAAKvD,QAAQ,CAACkD,UAAU,EAAE;MACxClD,QAAQ,CAACmD,oBAAoB,CAACI,cAAc,CAAC;;;EAGrDC,kBAAkBA,CAAC;IAAElI,IAAI;IAAE7E;GAAO,EAAE;IAChC,IAAI6E,IAAI,KAAK,IAAI,CAAC4E,WAAW,EAAE;MAC3B,IAAI,CAAC,IAAI,CAACD,aAAa,CAAC,GAAGxJ,KAAK;;;AAG5C;AACA;AACAiJ,GAAG,CAACjF,SAAS,EAAE;AACfiF,GAAG,CAACjI,MAAM,GAAG,KAAK;;ACtPlB;AACA;AACA;AACA,MAAMgM,KAAK,GAAGC,CAAC,IAAIA,CAAC,CAACD,KAAK;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,MAAME,MAAM,SAASC,OAAO,CAAC;EACxC,WAAW9L,KAAKA,GAAG;IACf,OAAO,QAAQ;;;EAGnB,WAAWC,IAAIA,GAAG;IACd,OAAO,QAAQ;;EAEnB,WAAWC,YAAYA,GAAG;IACtB,OAAO;MACH0D,WAAW,EAAG,KAAK;MACnBmI,QAAQ,EAAG,QAAQ;MACnB1D,IAAI,EAAG,SAAS;MAChB2D,oBAAoB,EAAG;KAC1B;;EAEL,IAAIC,QAAQA,GAAG;IACX,OAAO,IAAI,CAACC,KAAK,CAAC,CAAC,CAAC;;EAExB,IAAIC,OAAOA,GAAG;IACV,OAAO,IAAI,CAACD,KAAK,CAAC,CAAC,CAAC,CAAC;;EAEzB,IAAIE,QAAQA,GAAG;IACX,OAAO,IAAI,CAACC,MAAM,CAACC,OAAO,CAACX,KAAK,CAAC;;EAErC,IAAIY,IAAIA,GAAG;IACP,OAAOC,WAAW,CAACzF,IAAI,CAAC,IAAI,CAACsF,MAAM,EAAEV,KAAK,CAAC;;EAE/CpK,OAAOA,GAAG;IACN,OAAO;MACHL,QAAQ,EAAG;QACPuL,cAAc,EAAG;UACbnL,KAAK,EAAG;YACJ,iBAAiB,EAAG;;;;KAInC;;EAELoL,UAAUA,CAAC1D,GAAG,EAAE;IACZ,OAAO,IAAI,CAACqD,MAAM,CAACM,OAAO,CAAC3D,GAAG,EAAE2C,KAAK,CAAC;;EAE1C7F,UAAUA,CAAC8G,KAAK,EAAE;IACd,KAAK,CAAC9G,UAAU,CAAC8G,KAAK,CAAC;IACvB,IAAIA,KAAK,CAACtF,KAAK,IAAI,IAAI,EAAE;MACrB,IAAI,CAACuF,QAAQ,EAAE;;;EAGvB1G,aAAaA,CAACyG,KAAK,EAAE;IACjB,KAAK,CAACzG,aAAa,CAACyG,KAAK,CAAC;IAC1B,IAAI,CAACC,QAAQ,EAAE;;EAEnBC,SAASA,GAAG;IACR,MAAM;MAAEC;KAAa,GAAG,IAAI,CAACvE,KAAK;;IAElC,IAAI,CAACwE,KAAK,CAACD,WAAW,CAAC,EAAE;MACrB,IAAI,CAACR,IAAI,CAACQ,WAAW,CAAC,CAACE,KAAK,EAAE;;;EAGtCJ,QAAQA,GAAG;IACP,MAAM;MAAEN;KAAM,GAAG,IAAI;IACrB,KAAK,IAAIW,CAAC,GAAG,CAAC,EAAEC,CAAC,GAAGZ,IAAI,CAAClF,MAAM,EAAE6F,CAAC,GAAGC,CAAC,EAAE,EAAED,CAAC,EAAE;MACzCX,IAAI,CAACW,CAAC,CAAC,CAAC5F,KAAK,GAAG4F,CAAC;MACjBX,IAAI,CAACW,CAAC,CAAC,CAACnF,OAAO,GAAG,CAACmF,CAAC;MACpBX,IAAI,CAACW,CAAC,CAAC,CAAClF,MAAM,GAAGkF,CAAC,KAAKC,CAAC,GAAG,CAAC;;;EAGpCjB,KAAKA,CAAC5E,KAAK,EAAE;IACT,OAAO,IAAI,CAAC+E,MAAM,CAACe,IAAI,CAACzB,KAAK,EAAErE,KAAK,CAAC,IAAI,IAAI;;AAErD;AACA;AACAuE,MAAM,CAAClJ,SAAS,EAAE;AAClBkJ,MAAM,CAAClM,MAAM,GAAG,QAAQ;;ACpFxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,MAAM0N,QAAQ,SAASxN,KAAK,CAAC;;EAExC,WAAWG,KAAKA,GAAG;IACf,OAAO,UAAU;;;EAGrB,WAAWC,IAAIA,GAAG;IACd,OAAO,UAAU;;;EAGrB,WAAW6C,KAAKA,GAAG;IACf,OAAO,MAAM;;EAEjB,WAAW5C,YAAYA,GAAG;IACtB,OAAO;;AAEf;AACA;AACA;;AAEA;AACA;AACA;AACA;MACYoN,SAAS,EAAG,CAAC;;AAEzB;AACA;AACA;AACA;MACYC,gBAAgB,EAAG,IAAI;;AAEnC;AACA;AACA;AACA;MACYC,UAAU,EAAG,KAAK;MAClB5J,WAAW,EAAG,WAAW;MACzBxD,SAAS,EAAG,KAAK;MACjB6H,OAAO,EAAG,iBAAiB;MAC3B1H,MAAM,EAAG;QACLN,IAAI,EAAG;OACV;;MAEDwN,oBAAoB,EAAG,IAAI;MAC3BC,MAAM,EAAG;QACLzN,IAAI,EAAK,QAAQ;QACjB0N,MAAM,EAAG,CAAC;OACb;;AAEb;AACA;AACA;AACA;MACY9C,WAAW,EAAG,IAAI;;AAE9B;AACA;AACA;AACA;MACYC,WAAW,EAAG;KACjB;;;;;AAKT;AACA;AACA;AACA;EACI,IAAIiC,WAAWA,GAAG;IACd,OAAO,IAAI,CAACxM,MAAM,CAACwM,WAAW;;;AAGtC;AACA;AACA;AACA;EACI,IAAI3B,UAAUA,GAAG;IACb,OAAO,IAAI,CAAC7K,MAAM,CAAC6K,UAAU;;EAEjC,IAAIwC,kBAAkBA,GAAG;IAAA,IAAAC,qBAAA;IACrB,MAAM;MAAEP,SAAS;MAAEQ,KAAK;MAAEJ;KAAQ,GAAG,IAAI;IACzC,OAAOI,KAAK,CAACnB,OAAO,EAAAkB,qBAAA,GAACH,MAAM,CAACnB,IAAI,CAACe,SAAS,CAAC,cAAAO,qBAAA,uBAAtBA,qBAAA,CAAwBxL,IAAI,CAAC;;EAEtD,IAAIzB,UAAUA,GAAG;IACb,OAAOoE,YAAY,CAACjB,KAAK,CAAC;MACtBjD,SAAS,EAAG;QACR,iBAAiB,EAAG;;KAE3B,EAAE,KAAK,CAACF,UAAU,CAAC;;EAExB,IAAImN,YAAYA,GAAG;IAAA,IAAAC,cAAA;IACf,MAAMV,SAAS,GAAG,IAAI,CAACQ,KAAK,CAAC,IAAI,CAACR,SAAS,IAAI,CAAC,CAAC;IACjD,OAAO,CAAAA,SAAS,aAATA,SAAS,uBAATA,SAAS,CAAES,YAAY,MAAIT,SAAS,aAATA,SAAS,wBAAAU,cAAA,GAATV,SAAS,CAAEtE,GAAG,cAAAgF,cAAA,uBAAdA,cAAA,CAAgBD,YAAY;;EAElE,IAAIE,YAAYA,GAAG;IACf,OAAO,IAAI,CAACC,WAAW;;EAE3BC,YAAYA,GAAG;IACX,KAAK,CAACA,YAAY,EAAE;IACpB,MACIlS,EAAE,GAAsB,IAAI;MAC5B;QAAEqR,SAAS;QAAE/M;OAAQ,GAAGtE,EAAE;MAC1B;QAAE8Q;OAAa,GAASxM,MAAM;MAC9B;QAAEgM;OAAM,GAAgBtQ,EAAE,CAACyR,MAAM;MACjCE,kBAAkB,GAAMN,SAAS,IAAI,CAAC,IAAIA,SAAS,GAAGf,IAAI,CAAClF,MAAM,IAAIpL,EAAE,CAAC6R,KAAK,CAACnB,OAAO,CAACJ,IAAI,CAACe,SAAS,CAAC,CAACjL,IAAI,CAAC;IAC/G,IAAIkK,IAAI,CAAClF,MAAM,GAAG,CAAC,KAAKuG,kBAAkB,KAAK,KAAK,IAAIA,kBAAkB,GAAG,CAAC,CAAC,EAAE;MAC7E,MAAM,IAAIQ,KAAK,CAAE,qBAAoBd,SAAU,KAAIf,IAAI,CAAClF,MAAO,QAAO,CAAC;;IAE3E,IAAIuG,kBAAkB,KAAKb,WAAW,EAAE;;;;;;MAMpCxM,MAAM,CAAC8N,aAAa,CAACT,kBAAkB,EAAEb,WAAW,EAAE;QAClDuB,SAAS,EAAG,KAAK;QACjBC,MAAM,EAAM;OACf,CAAC;;IAENhO,MAAM,CAACiO,iBAAiB,GAAGvS,EAAE,CAACsR,gBAAgB;;EAElDzH,UAAUA,CAAC8G,KAAK,EAAE;;;IAGd,KAAK,CAAC9G,UAAU,CAAC8G,KAAK,CAAC;IACvB,IAAI,CAAC,IAAI,CAAC6B,YAAY,EAAE;MACpB,MACIxS,EAAE,GAAY,IAAI;QAClB;UAAEyR;SAAQ,GAAIzR,EAAE;QAChBD,MAAM,GAAQC,EAAE,CAACyS,aAAa,CAAC9B,KAAK,CAAC;;QAErCX,QAAQ,GAAMjQ,MAAM,KAAI0R,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEzB,QAAQ;;QAExC0C,WAAW,GAAG1C,QAAQ,IAAIyB,MAAM,CAACrB,MAAM;;QAEvCuC,QAAQ,GAAM3C,QAAQ,IAAIO,WAAW,CAACzF,IAAI,CAAC9K,EAAE,CAACoQ,MAAM,EAAEwC,EAAE,IAAIA,EAAE,CAAC7F,GAAG,IAAI6F,EAAE,KAAKjC,KAAK,CAAC;;QAEnFtF,KAAK,GAAS2E,QAAQ,GAAG2C,QAAQ,CAACjC,OAAO,CAACC,KAAK,CAAC,GAAG+B,WAAW,CAAChC,OAAO,CAACV,QAAQ,CAAC,GAAG,CAAC;MACxF,IAAIjQ,MAAM,IAAI0R,MAAM,EAAE;QAClB,IAAIzB,QAAQ,IAAIW,KAAK,CAACe,MAAM,IAAI,IAAI,IAAIrG,KAAK,GAAGqH,WAAW,CAACG,KAAK,GAAG,CAAC,EAAE;UACnEpB,MAAM,CAACnG,MAAM,CAACvL,MAAM,EAAEsL,KAAK,CAAC;SAC/B,MACI;UACDoG,MAAM,CAACxD,GAAG,CAAClO,MAAM,CAAC;;;;;EAKlCmK,aAAaA,CAACyG,KAAK,EAAE;IACjB,MACI;QAAE5D;OAAK,GAAK4D,KAAK;MACjB;QAAEkB;OAAO,GAAG,IAAI;IACpB,IAAI9E,GAAG,EAAE;MACL,IAAI,CAAC0E,MAAM,CAAChG,MAAM,CAACsB,GAAG,CAAC;MACvBA,GAAG,CAACrB,OAAO,EAAE;;;IAGjB,IAAIiF,KAAK,KAAK,IAAI,CAACxB,UAAU,EAAE;MAC3B,IAAI,CAAC2D,UAAU,GAAG,IAAI;MACtB,IAAIjB,KAAK,CAACzG,MAAM,EAAE;QACd,IAAI,CAACiG,SAAS,GAAGQ,KAAK,CAACkB,IAAI,CAACC,GAAG,CAAC,IAAI,CAAClC,WAAW,EAAEe,KAAK,CAACzG,MAAM,GAAG,CAAC,CAAC,CAAC;;;IAG5E,KAAK,CAAClB,aAAa,CAACyG,KAAK,CAAC;;;;EAI9BsC,qBAAqBA,CAACC,QAAQ,EAAE;IAC5B,MACI;QAAE5C;OAAM,GAAG,IAAI,CAACmB,MAAM;MACtB1E,GAAG,GAAQuD,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAG4C,QAAQ,CAAC;IAC/B,OAAOnG,GAAG,KAAKA,GAAG,CAAC1G,QAAQ,IAAI0G,GAAG,CAACiC,MAAM,CAAC;;EAE9CmE,gBAAgBA,CAAC/M,IAAI,EAAEgN,KAAK,GAAG,CAAC,EAAE;IAC9B,MACI;QAAE9C;OAAM,GAAI,IAAI,CAACmB,MAAM;MACvBtB,QAAQ,GAAIG,IAAI,CAAClF,MAAM;MACvBiI,SAAS,GAAGN,IAAI,CAACO,GAAG,CAAC,CAAC,EAAEhD,IAAI,CAACI,OAAO,CAACtK,IAAI,CAAC2G,GAAG,CAAC,CAAC;IACnD,IAAIsG,SAAS,EAAE;MACXD,KAAK,GAAG,CAACA,KAAK;;IAElB,IAAI/B,SAAS;IACb,KAAK,IAAIH,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIf,QAAQ,EAAE,EAAEe,CAAC,EAAE;;;;;MAKhCG,SAAS,GAAG,CAACgC,SAAS,IAAKD,KAAK,GAAG,CAAC,GAAIjD,QAAQ,GAAG,CAAC,CAAC,GAAGe,CAAC,GAAGkC,KAAK,IAAIjD,QAAQ;MAC7E,IAAI,CAAC,IAAI,CAAC8C,qBAAqB,CAAC5B,SAAS,CAAC,EAAE;QACxC;;;IAGR,OAAOA,SAAS;;EAEpBjC,oBAAoBA,CAAChJ,IAAI,EAAEgN,KAAK,GAAG,CAAC,EAAE;IAClC,IAAI,CAAC/B,SAAS,GAAG,IAAI,CAAC8B,gBAAgB,CAAC/M,IAAI,EAAEgN,KAAK,CAAC;;EAEvDG,eAAeA,CAAClC,SAAS,EAAEmC,YAAY,EAAE;IACrC,MACIxT,EAAE,GAAa,IAAI;MACnB;QACIyR,MAAM;QACNnN;OACH,GAActE,EAAE;MACjB;QAAEmQ;OAAU,GAAGsB,MAAM;IACzB,IAAIJ,SAAS,CAACoC,QAAQ,IAAI1K,YAAY,CAAC2K,QAAQ,CAACrC,SAAS,CAAC,EAAE;;MAExD,IAAIrR,EAAE,CAAC6R,KAAK,CAACnB,OAAO,CAACW,SAAS,CAAC,KAAK,CAAC,CAAC,EAAE;QACpCA,SAAS,GAAGrR,EAAE,CAACiO,GAAG,CAACoD,SAAS,CAAC;;MAEjCA,SAAS,GAAGI,MAAM,CAAChB,UAAU,CAACY,SAAS,CAACtE,GAAG,CAAC;KAC/C,MACI;MACDsE,SAAS,GAAGsC,QAAQ,CAACtC,SAAS,EAAE,EAAE,CAAC;;IAEvC,IAAI,CAACrR,EAAE,CAACwS,YAAY,IAAIrC,QAAQ,GAAG,CAAC,KAAKkB,SAAS,GAAG,CAAC,CAAC,IAAIA,SAAS,IAAIlB,QAAQ,CAAC,EAAE;MAC/E,MAAM,IAAIgC,KAAK,CAAE,qBAAoBd,SAAU,KAAIlB,QAAS,QAAO,CAAC;;IAExE,IAAInQ,EAAE,CAACiT,qBAAqB,CAAC5B,SAAS,CAAC,EAAE;MACrCA,SAAS,GAAGrR,EAAE,CAACmT,gBAAgB,CAAC9B,SAAS,CAAC;;;;IAI9C,IAAI/M,MAAM,CAACiO,iBAAiB,IAAIjO,MAAM,CAACsP,mBAAmB,EAAE;MACxDtP,MAAM,CAACsP,mBAAmB,CAACnR,IAAI,CAACoR,UAAU,IAAI;;QAE1C,IAAI,CAAAA,UAAU,aAAVA,UAAU,uBAAVA,UAAU,CAAE/C,WAAW,MAAKO,SAAS,EAAE;UACvCrR,EAAE,CAAC8S,UAAU,GAAGzB,SAAS;UACzBrR,EAAE,CAAC8T,eAAe,CAACzC,SAAS,EAAEmC,YAAY,CAAC;;OAElD,CAAC;KACL,MACI;MACD,OAAOnC,SAAS;;;EAGxB,MAAMyC,eAAeA,GAAG;IACpB,IAAI,CAAC,IAAI,CAACtB,YAAY,EAAE;MACpB,MAAM;QAAEb,kBAAkB;QAAErN;OAAQ,GAAG,IAAI;MAC3C,IAAIqN,kBAAkB,GAAG,CAAC,CAAC,EAAE;QAAA,IAAAoC,qBAAA;QACzB,IAAIzP,MAAM,CAACiO,iBAAiB,EAAE;UAC1B,MAAM,IAAI,CAACyB,mBAAmB;;;QAGlC,IAAI,CAACA,mBAAmB,IAAAD,qBAAA,GAAGzP,MAAM,CAAC8N,aAAa,CAAC,IAAI,CAACP,KAAK,CAACF,kBAAkB,CAAC,CAAC,cAAAoC,qBAAA,uBAApDA,qBAAA,CAAsDE,OAAO;;;;EAIpGC,YAAYA,CAACC,GAAG,EAAE;IACd,IAAI,CAACtL,SAAS,CAAC,QAAQ,CAAC;IACxB,IAAI,CAACuL,MAAM,GAAG;MACV3C,MAAM,EAAG0C;KACZ;IACD,OAAO,IAAI,CAACC,MAAM,CAAC3C,MAAM;;EAE7BgB,aAAaA,CAACrM,IAAI,EAAE;IAChB,MACI;QAAE2G;OAAK,GAAG3G,IAAI;MACdrG,MAAM,GAAI;QACNqG,IAAI;QACJpC,IAAI,EAAgB,KAAK;QACzBiI,QAAQ,EAAY,IAAI;QACxB5F,QAAQ,EAAYgO,OAAO,CAACjO,IAAI,CAACC,QAAQ,CAAC;QAC1C2I,MAAM,EAAc5I,IAAI,CAACkO,aAAa,CAACtF,MAAM;QAC7C0C,MAAM,EAActL,IAAI,CAACsL,MAAM,IAAI,CAAC;QACpC6C,iBAAiB,EAAG;UAChBvK,KAAK,EAAK,YAAY;UACtBC,OAAO,EAAG;SACb;QACDuK,qBAAqB,EAAG;;UAEpBpP,IAAI,EAAG;;OAEd;IACL,IAAI2H,GAAG,KAAK,KAAK,EAAE;MACf,OAAO,IAAI;;IAEf,OAAOhE,YAAY,CAAC2K,QAAQ,CAAC3G,GAAG,CAAC,GAAGpB,GAAG,CAAC8I,YAAY,CAAC1U,MAAM,EAAEgN,GAAG,CAAC,GAAGhN,MAAM;;EAE9E2U,WAAWA,CAAC7C,KAAK,EAAE3L,GAAG,EAAE;IACpB,MACIlG,EAAE,GAA4B,IAAI;MAClC;QAAEqR,SAAS;QAAEmB;OAAc,GAAGxS,EAAE;IACpC,IAAIqL,KAAK,GAAG,CAAC;MACTiF,IAAI;IACR,KAAK,CAACoE,WAAW,CAAC7C,KAAK,EAAE3L,GAAG,CAAC;IAC7B,IAAIsM,YAAY,EAAE;MACdlC,IAAI,GAAGqE,KAAK,CAAC7J,IAAI,CAAC+G,KAAK,EAAEe,EAAE,IAAI5S,EAAE,CAACyS,aAAa,CAACG,EAAE,CAAC,CAAC,CAAC1K,MAAM,CAAC0K,EAAE,IAAI;QAC9D,IAAIA,EAAE,EAAE;UACJA,EAAE,CAACvH,KAAK,GAAGA,KAAK,EAAE;UAClB,OAAO,IAAI;;OAElB,CAAC;MACF,IAAIA,KAAK,EAAE;QACPiF,IAAI,CAAC,CAAC,CAAC,CAACxE,OAAO,GAAG,IAAI;QACtBwE,IAAI,CAACjF,KAAK,GAAG,CAAC,CAAC,CAACU,MAAM,GAAG,IAAI;QAC7BuE,IAAI,CAACe,SAAS,CAAC,CAACxF,MAAM,GAAG,IAAI;QAC7B7L,EAAE,CAACyR,MAAM,CAACxD,GAAG,CAACqC,IAAI,CAAC;QACnBtQ,EAAE,CAACqR,SAAS,GAAGA,SAAS,CAAC;;;;;EAIrCuD,iBAAiBA,CAAChG,WAAW,EAAE;IAAA,IAAAiG,YAAA;IAC3B,CAAAA,YAAA,OAAI,CAACpD,MAAM,cAAAoD,YAAA,uBAAXA,YAAA,CAAahD,KAAK,CAAClJ,OAAO,CAACoE,GAAG,IAAI;MAC9B,IAAIA,GAAG,CAAC2C,KAAK,EAAE;QACX3C,GAAG,CAACsB,QAAQ,GAAGO,WAAW;;KAEjC,CAAC;;EAENkG,iBAAiBA,CAACjG,WAAW,EAAE;IAAA,IAAAkG,aAAA;IAC3B,CAAAA,aAAA,OAAI,CAACtD,MAAM,cAAAsD,aAAA,uBAAXA,aAAA,CAAalD,KAAK,CAAClJ,OAAO,CAACoE,GAAG,IAAI;MAC9B,IAAIA,GAAG,CAAC2C,KAAK,EAAE;QACX3C,GAAG,CAAC0B,QAAQ,GAAGI,WAAW;;KAEjC,CAAC;;;;EAINmG,gBAAgBA,CAACzD,UAAU,EAAE;IACzB,IAAI,CAACpH,eAAe,CAAC,iBAAiB,CAAC;IACvCoH,UAAU,IAAI0D,YAAY,CAAC1S,GAAG,CAAC;MAC3BgF,IAAI,EAAM,iBAAiB;MAC3B2N,KAAK,EAAK,uBAAuB;MACjCjL,OAAO,EAAG;KACb,CAAC;IACF,IAAI,CAACkL,cAAc,GAAG5D,UAAU;;EAEpC6D,eAAeA,GAAG;IACd,MACIpV,EAAE,GAA+B,IAAI;MACrC;QAAEsE,MAAM;QAAE+M,SAAS;QAAEvD;OAAS,GAAG9N,EAAE;MACnC;QAAEuS;OAAmB,GAAYjO,MAAM;;IAE3CA,MAAM,CAACiO,iBAAiB,GAAG,KAAK;;IAEhCvS,EAAE,CAACqV,MAAM,GAAG,IAAI;;IAEhBrV,EAAE,CAACqV,MAAM,GAAGtC,IAAI,CAACO,GAAG,CAAC,GAAGtT,EAAE,CAAC6R,KAAK,CAACyD,GAAG,CAACvI,GAAG,IAAI;MACxC/M,EAAE,CAACqR,SAAS,GAAGtE,GAAG;MAClB,OAAOe,OAAO,CAACyH,YAAY;KAC9B,CAAC,CAAC,GAAG,CAAC;;IAEPvV,EAAE,CAACqR,SAAS,GAAGA,SAAS;IACxB/M,MAAM,CAACiO,iBAAiB,GAAGA,iBAAiB;IAC5CvS,EAAE,CAACmV,cAAc,GAAG,KAAK;;EAE7BK,qBAAqBA,GAAG;IACpB,IAAI,IAAI,CAACC,SAAS,EAAE;MAChB,IAAI,CAACL,eAAe,EAAE;KACzB,MACI;MACD,IAAI,CAACD,cAAc,GAAG,IAAI;;;;;;EAMlCO,uBAAuBA,CAACC,qBAAqB,EAAE;IAC3C,MACIrF,IAAI,GAA6B,IAAI,CAACmB,MAAM,CAACnB,IAAI;MACjD;QAAEnB,UAAU;QAAEyG;OAAgB,GAAGD,qBAAqB;;IAE1D,IAAI,CAACtE,SAAS,GAAGf,IAAI,CAACI,OAAO,CAACvB,UAAU,aAAVA,UAAU,uBAAVA,UAAU,CAAEpC,GAAG,CAAC;;IAE9C,IAAI6I,cAAc,aAAdA,cAAc,eAAdA,cAAc,CAAE7I,GAAG,EAAE;MACrB6I,cAAc,CAAC7I,GAAG,CAAClB,MAAM,GAAG,KAAK;;IAErC,IAAIsD,UAAU,aAAVA,UAAU,eAAVA,UAAU,CAAEpC,GAAG,EAAE;MACjBoC,UAAU,CAACpC,GAAG,CAAClB,MAAM,GAAG,IAAI;MAC5BsD,UAAU,CAACpC,GAAG,CAAC8I,IAAI,EAAE;;;;EAI7BC,wBAAwBA,CAACH,qBAAqB,EAAE;;AAEpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACQ,OAAO,IAAI,CAAC/S,OAAO,CAAC,iBAAiB,EAAE+S,qBAAqB,CAAC;;;EAGjEI,kBAAkBA,CAACJ,qBAAqB,EAAE;;AAE9C;AACA;AACA;AACA;AACA;AACA;AACA;IACQ,IAAI,CAAC/S,OAAO,CAAC,WAAW,EAAE+S,qBAAqB,CAAC;;EAEpDK,UAAUA,CAAC5S,KAAK,EAAE;IACd,IAAI,CAACiO,SAAS,GAAGjO,KAAK,CAACkH,MAAM,CAAClE,IAAI;;EAEtC6P,OAAOA,GAAG;IACN,KAAK,CAACA,OAAO,CAAC,GAAGC,SAAS,CAAC;;IAE3B,IAAI,IAAI,CAACf,cAAc,EAAE;MACrB,IAAI,CAACC,eAAe,EAAE;;;;AAIlC;AACA;AACAhE,QAAQ,CAAC1K,SAAS,EAAE;AACpB0K,QAAQ,CAAC1N,MAAM,GAAG,UAAU;;;;"}