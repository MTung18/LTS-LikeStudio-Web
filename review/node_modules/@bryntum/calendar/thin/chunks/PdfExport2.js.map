{"version":3,"file":"PdfExport2.js","sources":["../../../../Scheduler/lib/Scheduler/column/ResourceInfoColumn.js","../../../../Scheduler/lib/Scheduler/feature/Labels.js","../../../../Scheduler/lib/Scheduler/feature/TimelineSummary.js","../../../../Scheduler/lib/Scheduler/feature/export/Utils.js","../../../../Scheduler/lib/Scheduler/feature/export/exporter/SchedulerExporterMixin.js","../../../../Scheduler/lib/Scheduler/feature/export/exporter/MultiPageExporter.js","../../../../Scheduler/lib/Scheduler/feature/export/exporter/MultiPageVerticalExporter.js","../../../../Scheduler/lib/Scheduler/view/export/field/ScheduleRangeCombo.js","../../../../Scheduler/lib/Scheduler/view/export/SchedulerExportDialog.js","../../../../Scheduler/lib/Scheduler/feature/export/exporter/SinglePageExporter.js","../../../../Scheduler/lib/Scheduler/feature/export/PdfExport.js"],"sourcesContent":["import Column from '../../Grid/column/Column.js';\nimport ColumnStore from '../../Grid/data/ColumnStore.js';\nimport StringHelper from '../../Core/helper/StringHelper.js';\nimport VersionHelper from '../../Core/helper/VersionHelper.js';\nimport AvatarRendering from '../../Core/widget/util/AvatarRendering.js';\n\n/**\n * @module Scheduler/column/ResourceInfoColumn\n */\n\n/**\n * Displays basic resource information. Defaults to showing an image + name + event count (all configurable).\n *\n * If a resource has no image, you can either provide an icon using `iconCls` in the data (you then need to specify\n * `image === false` in your data) or the resource initials will be shown.\n *\n * Be sure to specify {@link Scheduler.view.mixin.SchedulerEventRendering#config-resourceImagePath} to instruct the\n * column where to look for the images.\n *\n * If an image fails to load or if a resource lacks an image, the resource name initials will be rendered. If the\n * resource has an {@link Scheduler/model/mixin/ResourceModelMixin#field-eventColor} specified, it will be used as the\n * background color of the initials.\n *\n * @inlineexample Scheduler/column/ResourceInfoColumn.js\n * @classType resourceInfo\n * @extends Grid/column/Column\n * @column\n */\nexport default class ResourceInfoColumn extends Column {\n\n    static get $name() {\n        return 'ResourceInfoColumn';\n    }\n\n    static get type() {\n        return 'resourceInfo';\n    }\n\n    static get fields() {\n        return ['showEventCount', 'showRole', 'showMeta', 'showImage', 'validNames', 'autoScaleThreshold', 'useNameAsImageName'];\n    }\n\n    static get defaults() {\n        return {\n            /** @hideconfigs renderer */\n\n            /**\n             * Show image. Looks for image name in fields on the resource in the following order: 'imageUrl', 'image',\n             * 'name'. Set `showImage` to a field name to use a custom field. Set `Scheduler.resourceImagePath` to\n             * specify where to load images from. If no extension found, defaults to\n             * {@link Scheduler.view.mixin.SchedulerEventRendering#config-resourceImageExtension}.\n             * @config {Boolean}\n             * @default\n             */\n            showImage : true,\n\n            /**\n             * Show number of events assigned to the resource below the name.\n             * @config {Boolean}\n             * @default\n             */\n            showEventCount : true,\n\n            /**\n             * A template string to render any extra information about the resource below the name\n             * @config {Function}\n             * @param {Scheduler.model.ResourceModel} resourceRecord The record representing the current row\n             */\n            showMeta : null,\n\n            /**\n             * Show resource role below the name. Specify `true` to display data from the `role` field, or specify a field\n             * name to read this value from.\n             * @config {Boolean|String}\n             * @default\n             */\n            showRole : false,\n\n            /**\n             * Valid image names. Set to `null` to allow all names.\n             * @deprecated This will be removed in 6.0\n             * @config {String[]}\n             */\n            validNames : null,\n\n            /**\n             * Specify 0 to prevent the column from adapting its content according to the used row height, or specify a\n             * threshold (row height) at which scaling should start.\n             * @config {Number}\n             * @default\n             */\n            autoScaleThreshold : 40,\n\n            /**\n             * Use the resource name as the image name when no `image` is specified on the resource.\n             * @config {Boolean}\n             * @default\n             */\n            useNameAsImageName : true,\n\n            field      : 'name',\n            htmlEncode : false,\n            width      : 140,\n            cellCls    : 'b-resourceinfo-cell',\n            editor     : VersionHelper.isTestEnv ? false : 'text'\n        };\n    }\n\n    construct(...args) {\n        super.construct(...args);\n\n        this.avatarRendering = new AvatarRendering({\n            element : this.grid.element\n        });\n    }\n\n    doDestroy() {\n        super.doDestroy();\n\n        this.avatarRendering.destroy();\n    }\n\n    getImageURL(imageName) {\n        const\n            resourceImagePath = this.grid.resourceImagePath || '',\n            parts             = resourceImagePath.split('//'),\n            urlPart           = parts.length > 1 ? parts[1] : resourceImagePath,\n            joined            = StringHelper.joinPaths([urlPart || '', imageName || '']);\n\n        return parts.length > 1 ? parts[0] + '//' + joined : joined;\n    }\n\n    template(resourceRecord, value) {\n        const me        = this,\n            {\n                showImage,\n                showRole,\n                showMeta,\n                showEventCount,\n                grid\n            }         = me,\n            {\n                timeAxis,\n                resourceImageExtension = '',\n                defaultResourceImageName\n            }         = grid,\n            roleField = typeof showRole === 'string' ? showRole : 'role',\n            count     = showEventCount && resourceRecord.eventStore.getEvents({\n                includeOccurrences : grid.enableRecurringEvents,\n                resourceRecord,\n                startDate          : timeAxis.startDate,\n                endDate            : timeAxis.endDate\n            }).length;\n\n        let imageUrl;\n\n        if (showImage && resourceRecord.image !== false) {\n            if (resourceRecord.imageUrl) {\n                imageUrl = resourceRecord.imageUrl;\n            }\n            else {\n                // record.image is supposed to be a file name, located at resourceImagePath\n                const\n                    imageName = typeof showImage === 'string'\n                        ? showImage\n                        : (resourceRecord.image || value && me.useNameAsImageName && (value.toLowerCase() + resourceImageExtension) || defaultResourceImageName) || '';\n\n                imageUrl = imageName && me.getImageURL(imageName);\n\n                // Image name should have an extension\n                if (imageUrl && !imageName.includes('.')) {\n                    // If validNames is specified, check that imageName is valid\n                    if (!me.validNames || me.validNames.includes(imageName)) {\n                        imageUrl += resourceImageExtension;\n                    }\n                }\n            }\n        }\n\n        return {\n            class    : 'b-resource-info',\n            children : [\n                showImage && me.avatarRendering.getResourceAvatar({\n                    resourceRecord,\n                    initials        : resourceRecord.initials,\n                    color           : resourceRecord.eventColor,\n                    iconCls         : resourceRecord.iconCls,\n                    imageUrl,\n                    defaultImageUrl : defaultResourceImageName && this.getImageURL(defaultResourceImageName)\n                }),\n                showRole || showEventCount || showMeta ? {\n                    tag      : 'dl',\n                    children : [\n                        {\n                            tag  : 'dt',\n                            text : value\n                        },\n                        showRole ? {\n                            tag   : 'dd',\n                            class : 'b-resource-role',\n                            text  : resourceRecord[roleField]\n                        } : null,\n\n                        showEventCount ? {\n                            tag   : 'dd',\n                            class : 'b-resource-events',\n                            html  : me.L('L{eventCountText}', count)\n                        } : null,\n\n                        showMeta ? {\n                            tag   : 'dd',\n                            class : 'b-resource-meta',\n                            html  : me.showMeta(resourceRecord)\n                        } : null\n                    ]\n                } : value // This becomes a text node, no HTML encoding needed\n            ]\n        };\n\n    }\n\n    defaultRenderer({ grid, record, cellElement, value, isExport }) {\n        let result;\n\n        if (record.isSpecialRow) {\n            result = '';\n        }\n        else if (isExport) {\n            result = value;\n        }\n        else {\n            if (this.autoScaleThreshold && grid.rowHeight < this.autoScaleThreshold) {\n                cellElement.style.fontSize = (grid.rowHeight / 40) + 'em';\n            }\n            else {\n                cellElement.style.fontSize = '';\n            }\n\n            result = this.template(record, value);\n        }\n\n        return result;\n    }\n}\n\nColumnStore.registerColumnType(ResourceInfoColumn);\n","import InstancePlugin from '../../Core/mixin/InstancePlugin.js';\nimport GridFeatureManager from '../../Grid/feature/GridFeatureManager.js';\nimport DateHelper from '../../Core/helper/DateHelper.js';\nimport DomHelper from '../../Core/helper/DomHelper.js';\nimport DomSync from '../../Core/helper/DomSync.js';\nimport EventHelper from '../../Core/helper/EventHelper.js';\nimport StringHelper from '../../Core/helper/StringHelper.js';\nimport Editor from '../../Core/widget/Editor.js';\n\n/**\n * @module Scheduler/feature/Labels\n */\n\nconst\n    sides       = [\n        'top',\n        'before',\n        'after',\n        'bottom'\n    ],\n    editorAlign = (side, client) => {\n        switch (side) {\n            case 'top' :\n                return 'b-b';\n            case 'after' :\n                return client.rtl ? 'r-r' : 'l-l';\n            case 'right' :\n                return 'l-l';\n            case 'bottom' :\n                return 't-t';\n            case 'before' :\n                return client.rtl ? 'l-l' : 'r-r';\n            case 'left' :\n                return 'r-r';\n        }\n    },\n    topBottom   = {\n        top    : 1,\n        bottom : 1\n    },\n    layoutModes = {\n        estimate : 1,\n        measure  : 1\n    },\n    layoutSides = {\n        before : 1,\n        after  : 1\n    };\n\n/**\n * Configuration object for a label used by the Labels feature.\n * @typedef {Object} SchedulerLabelConfig\n * @property {String} field The name of a field in one of the associated records, {@link Scheduler.model.EventModel} or\n * {@link Scheduler.model.ResourceModel}. The record from which the field value is drawn will be ascertained by checking\n * for field definitions by the specified name.\n * @property {Function} renderer A function, which when passed an object containing `eventRecord`, `resourceRecord`,\n * `assignmentRecord` and `domConfig` properties, returns the HTML to display as the label\n * @property {Scheduler.model.EventModel} renderer.eventRecord\n * @property {Scheduler.model.ResourceModel} renderer.resourceRecord\n * @property {Scheduler.model.AssignmentModel} renderer.assignmentRecord\n * @property {DomConfig} renderer.domConfig\n * @property {Object} thisObj The `this` reference to use in the `renderer`.\n * @property {FieldConfig|Core.widget.Field} editor If the label is to be editable, a field configuration object with a\n * `type` property, or an instantiated Field. **The `field` property is mandatory for editing to work**.\n */\n\n/**\n * Displays labels at positions {@link #config-top}, {@link #config-right}, {@link #config-bottom} and\n * {@link #config-left}.\n *\n * Text in labels can be set from a field on the {@link Scheduler.model.EventModel} or the\n * {@link Scheduler.model.ResourceModel} or using a custom renderer.\n *\n * Since `top` and `bottom` labels occupy space that would otherwise be used by the event we recommend using bigger\n * rowHeights (>55px for both labels with default styling) and zero barMargins because `top`/`bottom` labels give space\n * around events anyway.\n *\n * To prevent labels from being overlapped by other events, see {@link #config-labelLayoutMode}.\n *\n * This feature is **off** by default. It is **not** supported in vertical mode.\n * For info on enabling it, see {@link Grid.view.mixin.GridFeatures}.\n *\n * @extends Core/mixin/InstancePlugin\n * @demo Scheduler/labels\n * @inlineexample Scheduler/feature/Labels.js\n * @classtype labels\n * @feature\n */\nexport default class Labels extends InstancePlugin {\n    //region Config\n\n    static get $name() {\n        return 'Labels';\n    }\n\n    static get configurable() {\n        return {\n            /**\n             * CSS class to apply to label elements\n             * @config {String}\n             * @default\n             */\n            labelCls : 'b-sch-label',\n\n            /**\n             * Top label configuration object.\n             * @config {SchedulerLabelConfig}\n             * @default\n             */\n            top : null,\n\n            /**\n             * Configuration object for the label which appears *after* the event bar in the current writing direction.\n             * @config {SchedulerLabelConfig}\n             * @default\n             */\n            after : null,\n\n            /**\n             * Right label configuration object.\n             * @config {SchedulerLabelConfig}\n             * @default\n             */\n            right : null,\n\n            /**\n             * Bottom label configuration object.\n             * @config {SchedulerLabelConfig}\n             * @default\n             */\n            bottom : null,\n\n            /**\n             * Configuration object for the label which appears *before* the event bar in the current writing direction.\n             * @config {SchedulerLabelConfig}\n             * @default\n             */\n            before : null,\n\n            /**\n             * Left label configuration object.\n             * @config {SchedulerLabelConfig}\n             * @default\n             */\n            left : null,\n\n            thisObj : null,\n\n            /**\n             * What action should be taken when focus moves leaves the cell editor, for example when clicking outside.\n             * May be `'complete'` or `'cancel`'.\n             * @config {'complete'|'cancel'}\n             * @default\n             */\n            blurAction : 'cancel',\n\n            /**\n             * How to handle labels during event layout. Options are:\n             *\n             * * default - Labels do not affect event layout, events will overlap labels\n             * * estimate - Label width is estimated by multiplying text length with {@link #config-labelCharWidth}\n             * * measure - Label width is determined by measuring the label, precise but slow\n             *\n             * Note that this only applies to the left and right labels, top and bottom labels does not take part in the\n             * event layout process.\n             *\n             * @config {'default'|'estimate'|'measure'}\n             * @default\n             */\n            labelLayoutMode : 'default',\n\n            /**\n             * Factor representing the average char width in pixels used to determine label width when configured\n             * with `labelLayoutMode: 'estimate'`.\n             * @config {Number}\n             * @default\n             */\n            labelCharWidth : 7\n        };\n    }\n\n    // Plugin configuration. This plugin chains some of the functions in Grid.\n    static get pluginConfig() {\n        return {\n            chain : ['onEventDataGenerated']\n        };\n    }\n\n    //endregion\n\n    //region Init & destroy\n\n    construct(scheduler, config) {\n        const me = this;\n\n        if (scheduler.isVertical) {\n            throw new Error('Labels feature is not supported in vertical mode');\n        }\n\n        me.scheduler = scheduler;\n\n        super.construct(scheduler, config);\n\n        if (me.top || me.bottom || me.before || me.after) {\n            me.updateHostClasslist();\n\n            // rowHeight warning, not in use\n            //const labelCount = !!me.topLabel + !!me.bottomLabel;\n            //if (scheduler.rowHeight < 60 - labelCount * 12) console.log('')\n        }\n    }\n\n    updateHostClasslist() {\n        const\n            { top, bottom } = this,\n            { classList }   = this.scheduler.element;\n\n        classList.remove('b-labels-topbottom');\n        classList.remove('b-labels-top');\n        classList.remove('b-labels-bottom');\n\n        // OR is correct. This means that there are labels above OR below.\n        if (top || bottom) {\n            classList.add('b-labels-topbottom');\n            if (top) {\n                classList.add('b-labels-top');\n            }\n            if (bottom) {\n                classList.add('b-labels-bottom');\n            }\n        }\n    }\n\n    onLabelDblClick(event) {\n        const\n            me        = this,\n            target    = event.target;\n\n        if (target && !me.scheduler.readOnly) {\n            const\n                { side }          = target.dataset,\n                labelConfig       = me[side],\n                { editor, field } = labelConfig;\n\n            if (editor) {\n                const eventRecord = this.scheduler.resolveEventRecord(event.target);\n\n                if (eventRecord.readOnly) {\n                    return;\n                }\n\n                if (!(editor instanceof Editor)) {\n                    labelConfig.editor = new Editor({\n                        blurAction   : me.blurAction,\n                        inputField   : editor,\n                        scrollAction : 'realign'\n                    });\n                }\n\n                // Editor removes itself from the DOM after being hidden\n                labelConfig.editor.render(me.scheduler.element);\n\n                labelConfig.editor.startEdit({\n                    target,\n                    align     : editorAlign(side, me.client),\n                    matchSize : false,\n                    record    : eventRecord,\n                    field\n                });\n\n                event.stopImmediatePropagation();\n                return false;\n            }\n        }\n    }\n\n    changeTop(top) {\n        return this.processLabelSpec(top, 'top');\n    }\n\n    updateTop() {\n        this.updateHostClasslist();\n    }\n\n    changeAfter(after) {\n        return this.processLabelSpec(after, 'after');\n    }\n\n    updateAfter() {\n        this.updateHostClasslist();\n    }\n\n    changeRight(right) {\n        this[this.client.rtl ? 'before' : 'after'] = right;\n    }\n\n    changeBottom(bottom) {\n        return this.processLabelSpec(bottom, 'bottom');\n    }\n\n    updateBottom() {\n        this.updateHostClasslist();\n    }\n\n    changeBefore(before) {\n        return this.processLabelSpec(before, 'before');\n    }\n\n    updateBefore() {\n        this.updateHostClasslist();\n    }\n\n    changeLeft(left) {\n        this[this.client.rtl ? 'after' : 'before'] = left;\n    }\n\n    processLabelSpec(labelSpec, side) {\n        if (typeof labelSpec === 'function') {\n            labelSpec = {\n                renderer : labelSpec\n            };\n        }\n        else if (typeof labelSpec === 'string') {\n            labelSpec = {\n                field : labelSpec\n            };\n        }\n        // Allow us to mutate ownProperties in the labelSpec without mutating outside object\n        else if (labelSpec) {\n            labelSpec = Object.setPrototypeOf({}, labelSpec);\n        }\n        // Clear label\n        else {\n            return null;\n        }\n\n        const\n            { scheduler }                                = this,\n            { eventStore, resourceStore, taskStore, id } = scheduler,\n            { field, editor }                            = labelSpec;\n\n        // If there are milestones, and we are changing the available height\n        // either by adding a top/bottom label, or adding a top/bottom label\n        // then during the next dependency refresh, milestone width must be recalculated.\n        if (topBottom[side]) {\n            scheduler.milestoneWidth = null;\n        }\n\n        if (eventStore && !taskStore) {\n            labelSpec.recordType = 'event';\n        }\n        else {\n            labelSpec.recordType = 'task';\n        }\n\n        // Find the field definition or property from whichever store and cache the type.\n        if (field) {\n            let\n                fieldDef,\n                fieldFound = false;\n\n            if (eventStore && !taskStore) {\n                fieldDef = eventStore.modelClass.fieldMap[field];\n                if (fieldDef) {\n                    labelSpec.fieldDef = fieldDef;\n                    labelSpec.recordType = 'event';\n                    fieldFound = true;\n                }\n                // Check if it references a property\n                else if (Reflect.has(eventStore.modelClass.prototype, field)) {\n                    labelSpec.recordType = 'event';\n                    fieldFound = true;\n                }\n            }\n\n            if (!fieldDef && taskStore) {\n                fieldDef = taskStore.modelClass.fieldMap[field];\n                if (fieldDef) {\n                    labelSpec.fieldDef = fieldDef;\n                    labelSpec.recordType = 'task';\n                    fieldFound = true;\n                }\n                // Check if it references a property\n                else if (Reflect.has(resourceStore.modelClass.prototype, field)) {\n                    labelSpec.recordType = 'task';\n                    fieldFound = true;\n                }\n            }\n\n            if (!fieldDef && resourceStore) {\n                fieldDef = resourceStore.modelClass.fieldMap[field];\n                if (fieldDef) {\n                    labelSpec.fieldDef = fieldDef;\n                    labelSpec.recordType = 'resource';\n                    fieldFound = true;\n                }\n                // Check if it references a property\n                else if (Reflect.has(resourceStore.modelClass.prototype, field)) {\n                    labelSpec.recordType = 'resource';\n                    fieldFound = true;\n                }\n            }\n            //<debug>\n            // We couldn't find the requested field in the modelClass\n            // for either of the stores.\n            if (!fieldFound) {\n                throw new Error(`Scheduler ${id} labels ${side} field ${field} does not exist in either eventStore or resourceStore`);\n            }\n            //</debug>\n\n            if (editor) {\n                if (typeof editor === 'boolean') {\n                    scheduler.editor = {\n                        type : 'textfield'\n                    };\n                }\n                else if (typeof editor === 'string') {\n                    scheduler.editor = {\n                        type : editor\n                    };\n                }\n                EventHelper.on({\n                    element  : scheduler.timeAxisSubGrid.element,\n                    delegate : '.b-sch-label',\n                    dblclick : 'onLabelDblClick',\n                    thisObj  : this\n                });\n            }\n        }\n\n        //<debug>\n        if (!labelSpec.field && !labelSpec.renderer) {\n            throw new Error(`Scheduler ${scheduler.id} labels ${side} must either have a field or a renderer`);\n        }\n        //</debug>\n\n        return labelSpec;\n    }\n\n    doDisable(disable) {\n        super.doDisable(disable);\n\n        if (this.client.isPainted) {\n            this.client.refresh();\n        }\n    }\n\n    //endregion\n\n    generateLabelConfigs(data) {\n        const\n            me      = this,\n            configs = [];\n\n        // Insert all configured labels\n        for (const side of sides) {\n            if (me[side]) {\n                const\n                    {\n                        field,\n                        fieldDef,\n                        recordType,\n                        renderer,\n                        thisObj\n                    }  = me[side],\n                    domConfig = {\n                        tag       : 'label',\n                        className : {\n                            [me.labelCls]              : 1,\n                            [`${me.labelCls}-${side}`] : 1\n                        },\n                        dataset : {\n                            side,\n                            taskFeature : `label-${side}`\n                        }\n                    };\n\n                let value;\n\n                const\n                    eventRecordProperty = `${recordType}Record`,\n                    eventRecord         = data[eventRecordProperty];\n\n                // If there's a renderer, use that by preference\n                if (renderer) {\n                    value = renderer.call(thisObj || me.thisObj || me, {\n                        [eventRecordProperty] : eventRecord,\n                        resourceRecord        : data.resourceRecord,\n                        assignmentRecord      : data.assignmentRecord,\n                        domConfig\n                    });\n                }\n                else {\n                    value = eventRecord[field];\n\n                    // If it's a date, format it according to the Scheduler's defaults\n                    if (fieldDef?.type === 'date' && !renderer) {\n                        value = DateHelper.format(value, me.client.displayDateFormat);\n                    }\n                    else {\n                        value = StringHelper.encodeHtml(value);\n                    }\n                }\n\n                domConfig.html = value || '\\xa0';\n\n                configs.push(domConfig);\n            }\n        }\n\n        return configs;\n    }\n\n    measureLabels(configs, data) {\n        const\n            me      = this,\n            pxPerMS = me.client.timeAxisViewModel.getSingleUnitInPixels('millisecond');\n\n        for (const config of configs) {\n            if (layoutSides[config.dataset.side]) {\n                let { html } = config;\n\n                let length = 0;\n\n                // Calculate length based on string length\n                if (me.labelLayoutMode === 'estimate') {\n                    // Strip tags before estimating\n                    if (html.includes('<')) {\n                        html = DomHelper.stripTags(html);\n                    }\n\n                    length = (html.length * me.labelCharWidth) + 18; // 18 = 1.5em, margin from event\n                }\n                // Measure\n                else {\n                    const element = me.labelMeasureElement || (me.labelMeasureElement = DomHelper.createElement({\n                        className : 'b-sch-event-wrap b-measure-label',\n                        parent    : me.client.foregroundCanvas\n                    }));\n\n                    // Outer DomSync should not remove\n                    element.retainElement = true;\n\n                    DomSync.sync({\n                        targetElement : element,\n                        childrenOnly  : true,\n                        domConfig     : {\n                            children : [\n                                config\n                            ]\n                        }\n                    });\n\n                    length = element.firstElementChild.offsetWidth;\n                }\n\n                // Convert from px to ms\n                const ms = length / pxPerMS;\n\n                // Adjust values used for event layout (not event position)\n                switch (config.dataset.side) {\n                    case 'before':\n                        data.startMS -= ms;\n                        break;\n                    case 'after':\n                        data.endMS += ms;\n                        break;\n                }\n            }\n        }\n    }\n\n    onEventDataGenerated(data) {\n        if (!this.disabled && !data.eventRecord?.isResourceTimeRange) {\n            const configs = this.generateLabelConfigs(data);\n\n            if (layoutModes[this.labelLayoutMode]) {\n                this.measureLabels(configs, data);\n            }\n\n            data.wrapperChildren.push(...configs);\n        }\n    }\n\n    updateLabelLayoutMode() {\n        if (!this.isConfiguring) {\n            this.client.refreshWithTransition();\n        }\n    }\n\n    updateLabelCharWidth() {\n        if (!this.isConfiguring) {\n            this.client.refreshWithTransition();\n        }\n    }\n}\n\n// TODO: Refactor the SASS, so that the auto-generated class name of ''b-' + cls.name.toLowerCase() can be used.\nLabels.featureClass = 'b-sch-labels';\n\nGridFeatureManager.registerFeature(Labels, false, 'Scheduler');\n","import GridSummary from '../../Grid/feature/Summary.js';\nimport Tooltip from '../../Core/widget/Tooltip.js';\n\n/**\n * @module Scheduler/feature/TimelineSummary\n */\n\n// noinspection JSClosureCompilerSyntax\n/**\n * Base class, not to be used directly.\n * @extends Grid/feature/Summary\n * @abstract\n */\nexport default class TimelineSummary extends GridSummary {\n    //region Config\n\n    static get $name() {\n        return 'TimelineSummary';\n    }\n\n    static get configurable() {\n        return {\n            /**\n             * Show tooltip containing summary values and labels\n             * @config {Boolean}\n             * @default\n             */\n            showTooltip : true\n        };\n    }\n\n    // Plugin configuration. This plugin chains some of the functions in Grid.\n    static get pluginConfig() {\n        return {\n            chain : ['renderRows', 'updateProject']\n        };\n    }\n\n    //endregion\n\n    //region Init\n\n    construct(client, config) {\n        const me = this;\n\n        super.construct(client, config);\n\n        if (!me.summaries) {\n            me.summaries = [{ renderer : me.renderer }];\n        }\n\n        // Feature might be run from Grid (in docs), should not crash\n        // https://app.assembla.com/spaces/bryntum/tickets/6801/details\n        if (client.isTimelineBase) {\n            me.updateProject(client.project);\n\n            client.ion({\n                timeAxisViewModelUpdate : me.renderRows,\n                thisObj                 : me\n            });\n        }\n    }\n\n    //endregion\n\n    //region Render\n\n    updateProject(project) {\n        this.detachListeners('summaryProject');\n\n        project.ion({\n            name      : 'summaryProject',\n            dataReady : 'updateTimelineSummaries',\n            thisObj   : this\n        });\n    }\n\n    renderRows() {\n        if (this.client.isHorizontal) {\n            this.client.timeAxisSubGrid.footer.element.querySelector('.b-grid-footer').classList.add('b-sch-summarybar');\n        }\n\n        super.renderRows();\n\n        if (!this.disabled) {\n            this.render();\n        }\n    }\n\n    get summaryBarElement() {\n        return this.client.element.querySelector('.b-sch-summarybar');\n    }\n\n    render() {\n        const\n            me                   = this,\n            { client: timeline } = me,\n            sizeProp             = timeline.isHorizontal ? 'width' : 'height',\n            colCfg               = timeline.timeAxisViewModel.columnConfig,\n            summaryContainer     = me.summaryBarElement;\n\n        if (summaryContainer) {\n            // if any sum config has a label, init tooltip\n            if (!me._tip && me.showTooltip && me.summaries.some(config => config.label)) {\n                me._tip = new Tooltip({\n                    id             : `${timeline.id}-summary-tip`,\n                    cls            : 'b-timeaxis-summary-tip',\n                    hoverDelay     : 0,\n                    hideDelay      : 100,\n                    forElement     : summaryContainer,\n                    anchorToTarget : true,\n                    trackMouse     : false,\n                    forSelector    : '.b-timeaxis-tick',\n                    getHtml        : ({ activeTarget }) => activeTarget._tipHtml\n                });\n            }\n\n            summaryContainer.innerHTML = colCfg[colCfg.length - 1].map(col => `<div class=\"b-timeaxis-tick\" style=\"${sizeProp}: ${col.width}px\"></div>`).join('');\n\n            me.updateTimelineSummaries();\n        }\n    }\n\n    //endregion\n\n    /**\n     * Refreshes the summaries\n     */\n    refresh() {\n        super.refresh();\n        this.updateTimelineSummaries();\n    }\n\n    doDisable(disable) {\n        const { isConfiguring } = this.client;\n\n        super.doDisable(disable);\n\n        this.summaryColumn?.toggle(!disable);\n\n        if (!isConfiguring && !disable) {\n            this.render();\n        }\n    }\n\n    doDestroy() {\n        this._tip?.destroy();\n        super.doDestroy();\n    }\n}\n","export const ScheduleRange = {\n    completeview : 'completeview',\n    // completedata : 'completedata',\n    currentview  : 'currentview',\n    daterange    : 'daterange'\n};\n","import DateHelper from '../../../../Core/helper/DateHelper.js';\nimport Rectangle from '../../../../Core/helper/util/Rectangle.js';\nimport DomHelper from '../../../../Core/helper/DomHelper.js';\nimport DomSync from '../../../../Core/helper/DomSync.js';\nimport { ScheduleRange } from '../Utils.js';\n\nconst immediatePromise = Promise.resolve();\n\nexport default base => class SchedulerExporterMixin extends base {\n    async scrollRowIntoView(client, index) {\n        const\n            {\n                rowManager,\n                scrollable\n            }    = client,\n            oldY = scrollable.y;\n\n        // If it's a valid index to scroll to, then try it.\n        if (index < client.store.count) {\n            // Scroll the requested row to the viewport top\n            scrollable.scrollTo(null, rowManager.calculateTop(index));\n\n            // If that initiated a scroll, we need to wait for the row to be rendered, so return\n            // a Promise which resolves when that happens.\n            if (scrollable.y !== oldY) {\n                // GridBase adds listener to vertical scroll to update rows. Rows might be or might not be updated,\n                // but at the end of each scroll grid will trigger `scroll` event. So far this is the only scroll event\n                // triggered by the grid itself and it is different from `scroll` event on scrollable.\n                return new Promise(resolve => {\n                    const detacher = client.ion({\n                        scroll({ scrollTop }) {\n                            // future-proof: only react to scroll event with certain argument\n                            if (scrollTop != null && rowManager.getRow(index)) {\n                                detacher();\n                                resolve();\n                            }\n                        }\n                    });\n                });\n            }\n        }\n\n        // No scroll occurred. Promise must be resolved immediately\n        return immediatePromise;\n    }\n\n    async scrollToDate(client, date) {\n        let scrollFired = false;\n\n        const promises    = [];\n\n        // Time axis is updated on element scroll, which is async event. We need to synchronize this logic.\n        // If element horizontal scroll is changed then sync event is fired. We add listener to that one specific event\n        // and remove it right after scrollToDate sync code, keeping listeners clean. If scrolling occurred, we need\n        // to wait until time header is updated.\n        const detacher = client.timeAxisSubGrid.scrollable.ion({\n            scrollStart({ x }) {\n                if (x != null) {\n                    scrollFired = true;\n                }\n            }\n        });\n\n        // added `block: start` to do scrolling faster\n        // it moves data to begin of visible area that is longer section for re-render\n        promises.push(client.scrollToDate(date, { block : 'start' }));\n\n        detacher();\n\n        if (scrollFired) {\n            // We have to wait for scrollEnd event before moving forward. When exporting large view we might have to scroll\n            // extensively and it might occur that requested scroll position would not be reached because concurrent\n            // scrollEnd events would move scroll back.\n            // scrollEnd is on a 100ms timer *after* the last scroll event fired, so all necessary\n            // updated will have occurred.\n            // Covered by Gantt/tests/feature/export/MultiPageVertical.t.js\n            promises.push(client.timeAxisSubGrid.header.scrollable.await('scrollEnd', { checkLog : false }));\n        }\n\n        await Promise.all(promises);\n    }\n\n    cloneElement(element, target, clear) {\n        super.cloneElement(element, target, clear);\n\n        const clonedEl = this.element.querySelector('.b-schedulerbase');\n\n        // Remove default animation classes\n        clonedEl?.classList.remove(...['fade-in', 'slide-from-left', 'slide-from-top', 'zoom-in'].map(name => `b-initial-${name}`));\n    }\n\n    async prepareComponent(config) {\n        const\n            me                     = this,\n            { client }             = config,\n            { currentOrientation } = client,\n            includeTimeline        = client.timeAxisSubGrid.width > 0;\n\n        switch (config.scheduleRange) {\n            case ScheduleRange.completeview:\n                config.rangeStart = client.startDate;\n                config.rangeEnd   = client.endDate;\n                break;\n            case ScheduleRange.currentview: {\n                const { startDate, endDate } = client.visibleDateRange;\n                config.rangeStart = startDate;\n                config.rangeEnd = endDate;\n                break;\n            }\n        }\n\n        await client.waitForAnimations();\n\n        // Disable infinite scroll before export, so it doesn't change time span\n        config.infiniteScroll = client.infiniteScroll;\n        client.infiniteScroll = false;\n\n        // Don't change timespan if time axis subgrid is not visible\n        if (includeTimeline) {\n            // set new timespan before calling parent to get proper scheduler header/content size\n            client.setTimeSpan(config.rangeStart, config.rangeEnd);\n\n            // Access svgCanvas el to create dependency canvas early\n            // eslint-disable-next-line no-unused-expressions\n            client.svgCanvas;\n        }\n\n        // Disable event animations during export\n        me._oldEnableEventAnimations = client.enableEventAnimations;\n        client.enableEventAnimations = false;\n\n        // Add scroll buffer for the horizontal rendering\n        if (currentOrientation.isHorizontalRendering) {\n            me._oldScrollBuffer = currentOrientation.scrollBuffer;\n            me._oldVerticalBuffer = currentOrientation.verticalBufferSize;\n            currentOrientation.scrollBuffer = 100;\n            currentOrientation.verticalBufferSize = -1;\n        }\n\n        // Raise flag on the client to render all suggested dependencies\n        client.ignoreViewBox = true;\n\n        await super.prepareComponent(config);\n\n        const\n            { exportMeta, element } = me,\n            fgCanvasEl              = element.querySelector('.b-sch-foreground-canvas'),\n            timeAxisEl              = element.querySelector('.b-horizontaltimeaxis');\n\n        exportMeta.includeTimeline = includeTimeline;\n\n        if (includeTimeline && config.scheduleRange !== ScheduleRange.completeview) {\n            // If we are exporting subrange of dates we need to change subgrid size accordingly\n            exportMeta.totalWidth -= exportMeta.subGrids.normal.width;\n            exportMeta.totalWidth += exportMeta.subGrids.normal.width = client.timeAxisViewModel.getDistanceBetweenDates(config.rangeStart, config.rangeEnd);\n\n            const\n                horizontalPages = Math.ceil(exportMeta.totalWidth / exportMeta.pageWidth),\n                totalPages      = horizontalPages * exportMeta.verticalPages;\n\n            exportMeta.horizontalPages = horizontalPages;\n            exportMeta.totalPages = totalPages;\n\n            // store left scroll to imitate normal grid/header scroll using margin\n            exportMeta.subGrids.normal.scrollLeft = client.getCoordinateFromDate(config.rangeStart);\n        }\n\n        exportMeta.timeAxisHeaders = [];\n        exportMeta.timeAxisPlaceholders = [];\n        exportMeta.headersColleted = false;\n\n        DomHelper.forEachSelector(timeAxisEl, '.b-sch-header-row', headerRow => {\n            exportMeta.timeAxisPlaceholders.push(me.createPlaceholder(headerRow));\n            exportMeta.timeAxisHeaders.push(new Map());\n        });\n\n        // Add placeholder for events, clear all event elements, but not the entire elements as it contains svg canvas\n        exportMeta.subGrids.normal.eventsPlaceholder = me.createPlaceholder(fgCanvasEl, false);\n        DomHelper.removeEachSelector(fgCanvasEl, '.b-sch-event-wrap,.b-sch-resourcetimerange');\n\n        DomHelper.removeEachSelector(me.element, '.b-released');\n\n        exportMeta.eventsBoxes = new Map();\n        exportMeta.client = client;\n\n        if (client.hasActiveFeature('columnLines')) {\n            const columnLinesCanvas = element.querySelector('.b-column-lines-canvas');\n\n            exportMeta.columnLinesPlaceholder = me.createPlaceholder(columnLinesCanvas);\n\n            exportMeta.columnLines = { lines : new Map(), majorLines : new Map() };\n        }\n\n        if (client.hasActiveFeature('timeRanges')) {\n            const\n                timeRangesHeaderCanvas = element.querySelector('.b-sch-timeaxiscolumn .b-sch-timeranges-canvas'),\n                timeRangesBodyCanvas = element.querySelector('.b-sch-foreground-canvas .b-sch-timeranges-canvas');\n\n            exportMeta.timeRanges = {};\n\n            // header is optional\n            if (timeRangesHeaderCanvas) {\n                exportMeta.timeRanges.header = {};\n                exportMeta.timeRangesHeaderPlaceholder = me.createPlaceholder(timeRangesHeaderCanvas);\n            }\n\n            exportMeta.timeRanges.body = {};\n            exportMeta.timeRangesBodyPlaceholder = me.createPlaceholder(timeRangesBodyCanvas);\n        }\n\n        if (client.hasActiveFeature('dependencies')) {\n            client.features.dependencies.fillDrawingCache();\n\n            const svgCanvasEl = element.querySelector(`[id=\"${client.svgCanvas.getAttribute('id')}\"]`);\n\n            // Same as above, clear only dependency lines, because there might be markers added by user\n            if (svgCanvasEl) {\n                exportMeta.dependencyCanvasEl = svgCanvasEl;\n\n                exportMeta.dependenciesPlaceholder = me.createPlaceholder(svgCanvasEl, false, {\n                    ns  : 'http://www.w3.org/2000/svg',\n                    tag : 'path'\n                });\n                DomHelper.removeEachSelector(svgCanvasEl, '.b-sch-dependency');\n            }\n        }\n\n        // We need to scroll component to date to calculate correct start margin\n        if (includeTimeline && !DateHelper.betweenLesser(config.rangeStart, client.startDate, client.endDate)) {\n            await me.scrollToDate(client, config.rangeStart);\n        }\n    }\n\n    async restoreState(config) {\n        let waitForHorizontalScroll = false;\n\n        const\n            { client } = config,\n            promises = [];\n\n        // If scroll will be changed during restoring state (and it will likely be), raise a flag that exporter should\n        // wait for scrollEnd event before releasing control\n        const detacher = client.timeAxisSubGrid.scrollable.ion({\n            scrollStart({ x }) {\n                // HACK: scrollStart might actually fire when scroll is set to existing value\n                if (this.element.scrollLeft !== x) {\n                    waitForHorizontalScroll = true;\n                }\n            }\n        });\n\n        promises.push(super.restoreState(config));\n\n        // Scroll start will be fired synchronously\n        detacher();\n\n        if (waitForHorizontalScroll) {\n            promises.push(client.timeAxisSubGrid.header.scrollable.await('scrollEnd', { checkLog : false }));\n        }\n\n        await Promise.all(promises);\n    }\n\n    async restoreComponent(config) {\n        const\n            { client }             = config,\n            { currentOrientation } = client;\n\n        client.ignoreViewBox = false;\n\n        client.infiniteScroll = config.infiniteScroll;\n\n        client.enableEventAnimations = this._oldEnableEventAnimations;\n\n        if (currentOrientation.isHorizontalRendering) {\n            currentOrientation.scrollBuffer = this._oldScrollBuffer;\n            currentOrientation.verticalBufferSize = this._oldVerticalBuffer;\n        }\n\n        await super.restoreComponent(config);\n    }\n\n    async onRowsCollected(rows, config) {\n        const me = this;\n\n        await super.onRowsCollected(rows, config);\n\n        // Only collect this data if timeline is visible\n        if (me.exportMeta.includeTimeline) {\n            const\n                { client, enableDirectRendering } = config,\n                { timeView }                      = client,\n                { pageRangeStart, pageRangeEnd }  = me.getCurrentPageDateRange(config);\n\n            if (enableDirectRendering) {\n                // If first page does not include timeline we don't need to render anything for it\n                if (pageRangeStart && pageRangeEnd) {\n                    me.renderHeaders(config, pageRangeStart, pageRangeEnd);\n\n                    me.renderLines(config, pageRangeStart, pageRangeEnd);\n\n                    me.renderRanges(config, pageRangeStart, pageRangeEnd);\n\n                    me.renderEvents(config, rows, pageRangeStart, pageRangeEnd);\n                }\n            }\n            else {\n                // Exported page may not contain timeline view, in which case we need to fall through\n                if (pageRangeStart) {\n                    let rangeProcessed = false;\n\n                    await me.scrollToDate(client, pageRangeStart);\n\n                    // Time axis and events are only rendered for the visible time span\n                    // we need to scroll the view and gather events/timeline elements\n                    // while (timeView.endDate <= config.rangeEnd) {\n                    while (!rangeProcessed) {\n                        me.collectLines(config);\n\n                        me.collectHeaders(config);\n\n                        me.collectRanges(config);\n\n                        me.collectEvents(rows, config);\n\n                        if (DateHelper.timeSpanContains(timeView.startDate, timeView.endDate, pageRangeStart, pageRangeEnd)) {\n                            rangeProcessed = true;\n                        }\n                        else if (timeView.endDate.getTime() >= pageRangeEnd.getTime()) {\n                            rangeProcessed = true;\n                        }\n                        else {\n                            const endDate = timeView.endDate;\n\n                            await me.scrollToDate(client, timeView.endDate);\n\n                            // If timeview end date is same as before scroll it means client is not able to scroll to date\n                            // and will go into infinite loop unless we stop it\n                            if (endDate.getTime() === timeView.endDate.getTime()) {\n                                throw new Error('Could not scroll to date');\n                            }\n                        }\n                    }\n                }\n\n                await me.scrollToDate(client, config.rangeStart);\n            }\n        }\n    }\n\n    getCurrentPageDateRange({ rangeStart, rangeEnd, enableDirectRendering, client }) {\n        const\n            me = this,\n            { exportMeta } = me,\n            { horizontalPages, horizontalPosition, pageWidth, subGrids } = exportMeta;\n\n        let pageRangeStart, pageRangeEnd;\n\n        // when exporting to multiple pages we only need to scroll sub-range within visible time span\n        if (horizontalPages > 1) {\n            const\n                pageStartX = horizontalPosition * pageWidth,\n                pageEndX   = (horizontalPosition + 1) * pageWidth,\n                // Assuming normal grid is right next to right side of the locked grid\n                // There is also a default splitter\n                normalGridX = subGrids.locked.width + subGrids.locked.splitterWidth;\n\n            if (pageEndX <= normalGridX) {\n                pageRangeEnd = pageRangeStart = null;\n            }\n            else {\n                const { scrollLeft = 0 } = subGrids.normal;\n\n                pageRangeStart = client.getDateFromCoordinate(Math.max(pageStartX - normalGridX + scrollLeft, 0));\n\n                // Extend visible schedule by 20% to cover up possible splitter\n                const multiplier = enableDirectRendering ? 1 : 1.2;\n\n                pageRangeEnd = client.getDateFromCoordinate((pageEndX - normalGridX + scrollLeft) * multiplier) || rangeEnd;\n            }\n        }\n        else {\n            pageRangeStart = rangeStart;\n            pageRangeEnd   = rangeEnd;\n        }\n\n        return {\n            pageRangeStart,\n            pageRangeEnd\n        };\n    }\n\n    prepareExportElement() {\n        const\n            { element, exportMeta }                = this,\n            { id, headerId, footerId, scrollLeft } = exportMeta.subGrids.normal,\n            el                                     = element.querySelector(`[id=\"${id}\"]`);\n\n        ['.b-sch-background-canvas', '.b-sch-foreground-canvas'].forEach(selector => {\n            const canvasEl = el.querySelector(selector);\n\n            if (canvasEl) {\n                // Align canvases to last exported row bottom. If no such property exists - remove inline height\n                if (exportMeta.lastExportedRowBottom) {\n                    canvasEl.style.height = `${exportMeta.lastExportedRowBottom}px`;\n                }\n                else {\n                    canvasEl.style.height = '';\n                }\n\n                // Simulate horizontal scroll\n                if (scrollLeft) {\n                    canvasEl.style.marginLeft = `-${scrollLeft}px`;\n                }\n            }\n        });\n\n        if (scrollLeft) {\n            [headerId, footerId].forEach(id => {\n                const el = element.querySelector(`[id=\"${id}\"] .b-widget-scroller`);\n                if (el) {\n                    el.style.marginLeft = `-${scrollLeft}px`;\n                }\n            });\n        }\n\n        return super.prepareExportElement();\n    }\n\n    collectHeaders(config) {\n        const\n            me             = this,\n            { client }     = config,\n            { exportMeta } = me;\n\n        // We only need to collect headers once, this flag is raised once they are collected along all exported range\n        if (!exportMeta.headersCollected) {\n            const\n                timeAxisEl = client.timeView.element,\n                timeAxisHeaders = exportMeta.timeAxisHeaders;\n\n            DomHelper.forEachSelector(timeAxisEl, '.b-sch-header-row', (headerRow, index, headerRows) => {\n                const headersMap = timeAxisHeaders[index];\n\n                DomHelper.forEachSelector(headerRow, '.b-sch-header-timeaxis-cell', el => {\n                    if (!headersMap.has(el.dataset.tickIndex)) {\n                        headersMap.set(el.dataset.tickIndex, el.outerHTML);\n                    }\n                });\n\n                if (index === headerRows.length - 1 && headersMap.has(String(client.timeAxis.count - 1))) {\n                    exportMeta.headersCollected = true;\n                }\n            });\n        }\n    }\n\n    collectRanges(config) {\n        const\n            me             = this,\n            { client }     = config,\n            { exportMeta } = me,\n            { timeRanges } = exportMeta;\n\n        if (!exportMeta.headersCollected && timeRanges) {\n            const\n                { headerCanvas, bodyCanvas } = client.features.timeRanges;\n\n            if (headerCanvas) {\n                DomHelper.forEachSelector(headerCanvas, '.b-sch-timerange', el => {\n                    timeRanges.header[el.dataset.id] = el.outerHTML;\n                });\n            }\n\n            DomHelper.forEachSelector(bodyCanvas, '.b-sch-timerange', el => {\n                timeRanges.body[el.dataset.id] = el.outerHTML;\n            });\n        }\n    }\n\n    collectLines(config) {\n        const\n            me              = this,\n            { client }      = config,\n            { exportMeta }  = me,\n            { columnLines } = exportMeta;\n\n        if (!exportMeta.headersCollected && columnLines) {\n            const bgCanvas = client.backgroundCanvas;\n\n            DomHelper.forEachSelector(bgCanvas, '.b-column-line, .b-column-line-major', (lineEl) => {\n                if (lineEl.classList.contains('b-column-line')) {\n                    const lineIndex = Number(lineEl.dataset.line.replace(/line-/, ''));\n\n                    columnLines.lines.set(lineIndex, lineEl.outerHTML);\n                }\n                else {\n                    const lineIndex = Number(lineEl.dataset.line.replace(/major-/, ''));\n\n                    columnLines.majorLines.set(lineIndex, lineEl.outerHTML);\n                }\n            });\n        }\n    }\n\n    collectEvents(rows, config) {\n        const\n            me         = this,\n            addedRows  = rows.length,\n            { client } = config,\n            normalRows = me.exportMeta.subGrids.normal.rows;\n\n        rows.forEach((row, index) => {\n            const\n                rowConfig = normalRows[normalRows.length - addedRows + index],\n                resource  = client.store.getAt(row.dataIndex),\n                eventsMap = rowConfig[3];\n\n            resource.events?.forEach(event => {\n                if (event.isScheduled) {\n                    let el = client.getElementFromEventRecord(event, resource);\n\n                    if (el && (el = el.parentElement) && !eventsMap.has(event.id)) {\n                        eventsMap.set(event.id, [el.outerHTML, Rectangle.from(el, el.offsetParent)]);\n                    }\n                }\n            });\n\n            resource.timeRanges?.forEach(timeRange => {\n                const\n                    elId = client.features.resourceTimeRanges?.generateElementId(timeRange) || '',\n                    el   = client.foregroundCanvas.syncIdMap[elId];\n\n                if (el && !eventsMap.has(elId)) {\n                    eventsMap.set(elId, [el.outerHTML, Rectangle.from(el, el.offsetParent)]);\n                }\n            });\n        });\n    }\n\n    //#region Direct rendering\n\n    renderHeaders(config, start, end) {\n        const\n            me               = this,\n            { exportMeta }   = me,\n            { client }       = config,\n            timeAxisHeaders  = exportMeta.timeAxisHeaders,\n            // Get the time axis view reference that we will use to build cells for specific time ranges\n            { timeAxisView } = client.timeAxisColumn,\n            domConfig        = timeAxisView.buildCells(start, end),\n            targetElement    = document.createElement('div');\n\n        DomSync.sync({\n            targetElement,\n            domConfig\n        });\n\n        DomHelper.forEachSelector(targetElement, '.b-sch-header-row', (headerRow, index) => {\n            const headersMap = timeAxisHeaders[index];\n\n            DomHelper.forEachSelector(headerRow, '.b-sch-header-timeaxis-cell', el => {\n                if (!headersMap.has(el.dataset.tickIndex)) {\n                    headersMap.set(el.dataset.tickIndex, el.outerHTML);\n                }\n            });\n        });\n    }\n\n    renderEvents(config, rows, start, end) {\n        const\n            me         = this,\n            { client } = config,\n            normalRows = me.exportMeta.subGrids.normal.rows;\n\n        rows.forEach((row, index) => {\n            const\n                rowConfig      = normalRows[index],\n                eventsMap      = rowConfig[3],\n                resource       = client.store.getAt(row.dataIndex),\n                resourceLayout = client.currentOrientation.getResourceLayout(resource),\n                left           = client.getCoordinateFromDate(start),\n                right          = client.getCoordinateFromDate(end),\n                eventDOMConfigs = client.currentOrientation.getEventDOMConfigForCurrentView(resourceLayout, row, left, right),\n                targetElement   = document.createElement('div');\n\n            eventDOMConfigs.forEach(domConfig => {\n                const\n                    { eventId }                  = domConfig.dataset,\n                    { left, top, width, height } = domConfig.style;\n\n                DomSync.sync({\n                    targetElement,\n                    domConfig\n                });\n\n                eventsMap.set(eventId, [targetElement.outerHTML, new Rectangle(left, top, width, height)]);\n            });\n        });\n    }\n\n    renderLines(config, start, end) {\n        const\n            me              = this,\n            { client }      = config,\n            { exportMeta }  = me,\n            { columnLines } = exportMeta;\n\n        if (columnLines) {\n            const\n                domConfigs    = client.features.columnLines.getColumnLinesDOMConfig(start, end),\n                targetElement = document.createElement('div');\n\n            DomSync.sync({\n                targetElement,\n                domConfig : {\n                    children : domConfigs\n                },\n                onlyChildren : true\n            });\n\n            // Put all lines HTML to a single key in the set. That allows us to share code path with legacy export mode\n            columnLines.lines.set(0, targetElement.innerHTML);\n        }\n    }\n\n    renderRanges(config, start, end) {\n        const\n            me             = this,\n            { client }     = config,\n            { exportMeta } = me,\n            { timeRanges } = exportMeta;\n\n        if (timeRanges) {\n            const\n                domConfigs    = client.features.timeRanges.getDOMConfig(start, end),\n                targetElement = document.createElement('div');\n\n            // domConfigs is an array of two elements - first includes time range configs for body, second - for head\n            domConfigs.forEach((children, i) => {\n                DomSync.sync({\n                    targetElement,\n                    domConfig : {\n                        children,\n                        onlyChildren : true\n                    }\n                });\n\n                // body configs\n                if (i === 0) {\n                    timeRanges.body = targetElement.innerHTML;\n                }\n                // header configs\n                else {\n                    timeRanges.header = targetElement.innerHTML;\n                }\n            });\n        }\n    }\n\n    //#endregion\n\n    buildPageHtml(config) {\n        const\n            me = this,\n            {\n                subGrids,\n                timeAxisHeaders,\n                timeAxisPlaceholders,\n                columnLines,\n                columnLinesPlaceholder,\n                timeRanges,\n                timeRangesHeaderPlaceholder,\n                timeRangesBodyPlaceholder\n            }  = me.exportMeta,\n            { enableDirectRendering } = config;\n\n        // Now when rows are collected, we need to add them to exported grid\n        let html = me.prepareExportElement();\n\n        Object.values(subGrids).forEach(({ placeHolder, eventsPlaceholder, rows, mergedCellsHtml }) => {\n            const\n                placeHolderText       = placeHolder.outerHTML,\n                // Rows can be repositioned, in which case event related to that row should also be translated\n                { resources, events } = me.positionRows(rows, config);\n\n            let contentHtml =  resources.join('');\n\n            if (mergedCellsHtml?.length) {\n                contentHtml += `<div class=\"b-grid-merged-cells-container\">${mergedCellsHtml.join('')}</div>`;\n            }\n\n            html = html.replace(placeHolderText, contentHtml);\n\n            if (eventsPlaceholder) {\n                html = html.replace(eventsPlaceholder.outerHTML, events.join(''));\n            }\n        });\n\n        timeAxisHeaders.forEach((headers, index) => {\n            html = html.replace(timeAxisPlaceholders[index].outerHTML, Array.from(headers.values()).join(''));\n        });\n\n        if (columnLines) {\n            const lineElements = Array.from(columnLines.lines.values()).concat(Array.from(columnLines.majorLines.values()));\n\n            html = html.replace(columnLinesPlaceholder.outerHTML, lineElements.join(''));\n\n            // Lines are collected once for old mode, don't clear them\n            if (enableDirectRendering) {\n                me.exportMeta.columnLines.lines.clear();\n                me.exportMeta.columnLines.majorLines.clear();\n            }\n        }\n\n        if (timeRanges) {\n            if (enableDirectRendering) {\n                html = html.replace(timeRangesBodyPlaceholder.outerHTML, timeRanges.body);\n\n                // time ranges header element is optional\n                if (timeRangesHeaderPlaceholder) {\n                    html = html.replace(timeRangesHeaderPlaceholder.outerHTML, timeRanges.header);\n                }\n\n                me.exportMeta.timeRanges = {};\n            }\n            else {\n                html = html.replace(timeRangesBodyPlaceholder.outerHTML, Object.values(timeRanges.body).join(''));\n\n                // time ranges header element is optional\n                if (timeRangesHeaderPlaceholder) {\n                    html = html.replace(timeRangesHeaderPlaceholder.outerHTML, Object.values(timeRanges.body).join(''));\n                }\n            }\n        }\n\n        html = me.buildDependenciesHtml(html);\n\n        return html;\n    }\n\n    getEventBox(event) {\n        const\n            me = this,\n            {\n                eventsBoxes,\n                enableDirectRendering\n            } = me.exportMeta;\n\n        const box = event && eventsBoxes.get(String(event.id));\n\n        // In scheduler milestone box left edge is aligned with milestone start date. Later element is rotated and\n        // shifted by CSS by 50% of its width. Dependency feature relies on actual element sizes, but pdf export\n        // does not render actual elements. Therefore, we need to adjust the box.\n        // TODO: RTL support?\n        if (enableDirectRendering && box && event.isMilestone) {\n            box.translate(-box.width / 2, 0);\n        }\n\n        return box;\n    }\n\n    renderDependencies() {\n        const\n            me                = this,\n            {\n                client,\n                eventsBoxes\n            }                 = me.exportMeta,\n            { dependencies }  = client,\n            dependencyFeature = client.features.dependencies,\n            targetElement     = DomHelper.createElement();\n\n        let draw = false;\n\n        dependencies.forEach(dependency => {\n            if ((!eventsBoxes.has(String(dependency.from)) &&\n                !eventsBoxes.has(String(dependency.to))) ||\n                !dependencyFeature.isDependencyVisible(dependency)) {\n                return;\n            }\n\n            const\n                fromBox = me.getEventBox(dependency.fromEvent),\n                toBox   = me.getEventBox(dependency.toEvent);\n\n            dependencyFeature.drawDependency(dependency, true, { from : fromBox?.clone(), to : toBox?.clone() });\n            draw = true;\n        });\n\n        // Force dom sync\n        if (draw) {\n            dependencyFeature.domSync(targetElement);\n        }\n\n        return targetElement.innerHTML;\n    }\n\n    buildDependenciesHtml(html) {\n        const { dependenciesPlaceholder, includeTimeline } = this.exportMeta;\n\n        if (dependenciesPlaceholder && includeTimeline) {\n            const placeholder = dependenciesPlaceholder.outerHTML;\n            html = html.replace(placeholder, this.renderDependencies());\n        }\n\n        return html;\n    }\n};\n","import GridMultiPageExporter from '../../../../Grid/feature/export/exporter/MultiPageExporter.js';\nimport SchedulerExporterMixin from './SchedulerExporterMixin.js';\n\n/**\n * @module Scheduler/feature/export/exporter/MultiPageExporter\n */\n\n/**\n * A multiple page exporter. Used by the {@link Scheduler.feature.export.PdfExport} feature to export to multiple pages.\n * You do not need to use this class directly.\n *\n * ### Extending exporter\n *\n * ```javascript\n * class MyMultiPageExporter extends MultiPageExporter {\n *     // type is required for exporter\n *     static get type() {\n *         return 'mymultipageexporter';\n *     }\n *\n *     get stylesheets() {\n *         const stylesheets = super.stylesheets;\n *\n *         stylesheets.forEach(styleNodeOrLinkTag => doSmth(styleNodeOrLinkTag))\n *\n *         return stylesheets;\n *     }\n * }\n *\n * const scheduler = new Scheduler({\n *     features : {\n *         pdfExport : {\n *             // this export feature is configured with only one exporter\n *             exporters : [MyMultiPageExporter]\n *         }\n *     }\n * });\n *\n * // run export with the new exporter\n * scheduler.features.pdfExport.export({ exporter : 'mymultipageexporter' });\n * ```\n *\n * @classType multipage\n * @feature\n * @extends Grid/feature/export/exporter/MultiPageExporter\n * @typings Grid/feature/export/exporter/MultiPageExporter -> Grid/feature/export/exporter/GridMultiPageExporter\n */\nexport default class MultiPageExporter extends SchedulerExporterMixin(GridMultiPageExporter) {\n\n    static get $name() {\n        return 'MultiPageExporter';\n    }\n\n    static get type() {\n        return 'multipage';\n    }\n\n    async stateNextPage(config) {\n        await super.stateNextPage(config);\n\n        this.exportMeta.eventsBoxes.clear();\n    }\n\n    positionRows(rows) {\n        const\n            resources   = [],\n            events      = [];\n\n        // In case of variable row height row vertical position is not guaranteed to increase\n        // monotonously. Position row manually instead\n        rows.forEach(([html, top, height, eventsHtml]) => {\n            resources.push(html);\n            eventsHtml && Array.from(eventsHtml.entries()).forEach(([key, [html, box, extras = []]]) => {\n                events.push(html + extras.join(''));\n\n                // Store event box to render dependencies later\n                this.exportMeta.eventsBoxes.set(String(key), box);\n            });\n        });\n\n        return { resources, events };\n    }\n}\n","import GridMultiPageVerticalExporter from '../../../../Grid/feature/export/exporter/MultiPageVerticalExporter.js';\nimport SchedulerExporterMixin from './SchedulerExporterMixin.js';\nimport { ScheduleRange } from '../Utils.js';\n\n/**\n * @module Scheduler/feature/export/exporter/MultiPageVerticalExporter\n */\n\n/**\n * A vertical multiple page exporter. Used by the {@link Scheduler.feature.export.PdfExport} feature to export to\n * multiple pages. Content will be scaled in a horizontal direction to fit the page.\n *\n * You do not need to use this class directly.\n *\n * ### Extending exporter\n *\n * ```javascript\n * class MyMultiPageVerticalExporter extends MultiPageVerticalExporter {\n *     // type is required for exporter\n *     static get type() {\n *         return 'mymultipageverticalexporter';\n *     }\n *\n *     get stylesheets() {\n *         const stylesheets = super.stylesheets;\n *\n *         stylesheets.forEach(styleNodeOrLinkTag => doSmth(styleNodeOrLinkTag))\n *\n *         return stylesheets;\n *     }\n * }\n *\n * const scheduler = new Scheduler({\n *     features : {\n *         pdfExport : {\n *             // this export feature is configured with only one exporter\n *             exporters : [MyMultiPageVerticalExporter]\n *         }\n *     }\n * });\n *\n * // run export with the new exporter\n * scheduler.features.pdfExport.export({ exporter : 'mymultipageverticalexporter' });\n * ```\n *\n * @classType multipagevertical\n * @feature\n * @extends Grid/feature/export/exporter/MultiPageVerticalExporter\n * @typings Grid/feature/export/exporter/MultiPageVerticalExporter -> Grid/feature/export/exporter/GridMultiPageVerticalExporter\n */\nexport default class MultiPageVerticalExporter extends SchedulerExporterMixin(GridMultiPageVerticalExporter) {\n\n    static get $name() {\n        return 'MultiPageVerticalExporter';\n    }\n\n    static get type() {\n        return 'multipagevertical';\n    }\n\n    async stateNextPage(config) {\n        await super.stateNextPage(config);\n\n        this.exportMeta.eventsBoxes.clear();\n    }\n\n    async prepareComponent(config) {\n        await super.prepareComponent(config);\n\n        // Scheduler exporter mixin can update totalWidth, so we need to adjust pages and scale here again\n        if (config.scheduleRange !== ScheduleRange.completeview) {\n            this.estimateTotalPages(config);\n        }\n    }\n\n    positionRows(rows) {\n        const\n            resources   = [],\n            events      = [];\n\n        // In case of variable row height row vertical position is not guaranteed to increase\n        // monotonously. Position row manually instead\n        rows.forEach(([html, , , eventsHtml]) => {\n            resources.push(html);\n            eventsHtml && Array.from(eventsHtml.entries()).forEach(([key, [html, box, extras = []]]) => {\n                events.push(html + extras.join(''));\n\n                // Store event box to render dependencies later\n                this.exportMeta.eventsBoxes.set(String(key), box);\n            });\n        });\n\n        return { resources, events };\n    }\n}\n","import { ScheduleRange } from '../../../feature/export/Utils.js';\nimport Combo from '../../../../Core/widget/Combo.js';\n\nexport default class ScheduleRangeCombo extends Combo {\n    static get $name() {\n        return 'ScheduleRangeCombo';\n    }\n\n    // Factoryable type name\n    static get type() {\n        return 'schedulerangecombo';\n    }\n\n    static get defaultConfig() {\n        return {\n            editable              : false,\n            localizeDisplayFields : true,\n            displayField          : 'text',\n            buildItems() {\n                // Do not remove. Assertion strings for Localization sanity check.\n                // 'L{completeview}'\n                // 'L{currentview}'\n                // 'L{daterange}'\n                // 'L{completedata}'\n                return Object.entries(ScheduleRange).map(([id, text]) => ({ value : id, text : 'L{' + text + '}' }));\n            }\n        };\n    }\n}\n\n// Register this widget type with its Factory\nScheduleRangeCombo.initClass();\n","import DateHelper from '../../../Core/helper/DateHelper.js';\nimport GridExportDialog from '../../../Grid/view/export/ExportDialog.js';\nimport { ScheduleRange } from '../../feature/export/Utils.js';\nimport '../../view/export/field/ScheduleRangeCombo.js';\nimport Field from '../../../Core/widget/Field.js';\n\n/**\n * @module Scheduler/view/export/SchedulerExportDialog\n */\n\n/**\n * Extends the Grid's {@link Grid.view.export.ExportDialog} and adds a few extra fields specific to the scheduler.\n *\n * ## Default widgets\n *\n * The default widgets of this dialog are:\n *\n * | Widget ref             | Type                                     | Weight | Description                                          |\n * |------------------------|------------------------------------------|--------|----------------------------------------------------- |\n * | `columnsField`         | {@link Core.widget.Combo Combo}          | 100    | Choose columns to export                             |\n * | `scheduleRangeField`   | {@link Core.widget.Combo Combo}          | 150    | Choose date range to export                          |\n * | `rangesContainer`      | {@link Core.widget.Container Container}  | 151    | Container for range fields                           |\n * | \\>`rangeStartField`    | {@link Core.widget.DateField DateField}  | 10     | Choose date range start                              |\n * | \\>`rangeEndField`      | {@link Core.widget.DateField DateField}  | 30     | Choose date range end                                |\n * | `rowsRangeField`       | {@link Core.widget.Combo Combo}          | 200    | Choose which rows to export                          |\n * | `exporterTypeField`    | {@link Core.widget.Combo Combo}          | 300    | Type of the exporter to use                          |\n * | `alignRowsField`       | {@link Core.widget.Checkbox Checkbox}    | 400    | Align row top to the page top on every exported page |\n * | `repeatHeaderField`    | {@link Core.widget.Checkbox Checkbox}    | 500    | Toggle repeating headers on / off                    |\n * | `fileFormatField`      | {@link Core.widget.Combo Combo}          | 600    | Choose file format                                   |\n * | `paperFormatField`     | {@link Core.widget.Combo Combo}          | 700    | Choose paper format                                  |\n * | `orientationField`     | {@link Core.widget.Combo Combo}          | 800    | Choose orientation                                   |\n *\n * The default buttons are:\n *\n * | Widget ref             | Type                                     | Weight | Description                                          |\n * |------------------------|------------------------------------------|--------|------------------------------------------------------|\n * | `exportButton`         | {@link Core.widget.Button Button}        | 100    | Triggers export                                      |\n * | `cancelButton`         | {@link Core.widget.Button Button}        | 200    | Cancel export                                        |\n *\n * *\\> nested items*\n *\n * ## Configuring default widgets\n *\n * Widgets can be customized with {@link Scheduler.feature.export.PdfExport#config-exportDialog} config:\n *\n * ```javascript\n * const scheduler = new Scheduler({\n *     features : {\n *         pdfExport : {\n *             exportDialog : {\n *                 items : {\n *                     // hide the field\n *                     orientationField  : { hidden : true },\n *\n *                     // reorder fields\n *                     exporterTypeField : { weight : 150 },\n *\n *                     // change default format in exporter\n *                     fileFormatField   : { value : 'png' },\n *\n *                     // Configure nested fields\n *                     rangesContainer : {\n *                         items : {\n *                             rangeStartField : { value : new Date() },\n *                             rangeEndField : { value : new Date() }\n *                         }\n *                     }\n *                 }\n *             }\n *         }\n *     }\n * });\n *\n * scheduler.features.pdfExport.showExportDialog();\n * ```\n *\n * ## Using DateTime fields for range start/end\n *\n * This config system is also capable (but not limited to) of changing layout of the container and replacing widget type:\n *\n * ```javascript\n * const scheduler = new Scheduler({\n *     features : {\n *         pdfExport : {\n *             exportDialog : {\n *                 items : {\n *                     rangesContainer : {\n *                         // DateTime fields are longer, so we better lay them out\n *                         // vertically\n *                         layoutStyle : {\n *                             flexDirection : 'column'\n *                         },\n *                         items : {\n *                             rangeStartField : {\n *                                 // Use DateTime widget for ranges\n *                                 type       : 'datetime',\n *\n *                                 // Sync label width with other fields\n *                                 labelWidth : '12em'\n *                             },\n *                             rangeEndField : {\n *                                 type       : 'datetime',\n *                                 labelWidth : '12em'\n *                             },\n *                             // Add a filler widget that would add a margin at the bottom\n *                             filler : {\n *                                 height : '0.6em',\n *                                 weight : 900\n *                             }\n *                         }\n *                     }\n *                 }\n *             }\n *         }\n *     }\n * });\n *\n * ```\n *\n * ## Configuring default columns\n *\n * By default all visible columns are selected in the export dialog. This is managed by\n * {@link #config-autoSelectVisibleColumns} config. To change default selected columns you should disable this config\n * and set field value. Value should be an array of valid column ids (or column instances). This way you can\n * preselect hidden columns:\n *\n * ```javascript\n * const scheduler = new Scheduler({\n *     columns : [\n *         { id : 'name', text : 'Name', field : 'name' },\n *         { id : 'age', text : 'Age', field : 'age' },\n *         { id : 'city', text : 'City', field : 'city', hidden : true }\n *     ],\n *     features : {\n *         pdfExport : {\n *             exportDialog : {\n *                 autoSelectVisibleColumns : false,\n *                 items : {\n *                     columnsField : { value : ['name', 'city'] }\n *                 }\n *             }\n *         }\n *     }\n * })\n *\n * // This will show export dialog with Name and City columns selected\n * // even though City column is hidden in the UI\n * scheduler.features.pdfExport.showExportDialog();\n * ```\n *\n * ## Adding fields\n *\n * You can add your own fields to the export dialog. To make such field value acessible to the feature it should follow\n * naming pattern - it should have `ref` config ending with `Field`, see other fields for reference - `orientationField`,\n * `columnsField`, etc. Fields not matching this pattern are ignored. When values are collected from the dialog, `Field`\n * part of the widget reference is removed, so `orientationField` becomes `orientation`, `fooField` becomes `foo`, etc.\n *\n * ```javascript\n * const grid = new Grid({\n *     features : {\n *         pdfExport : {\n *             exportDialog : {\n *                 items : {\n *                     // This field gets into export config\n *                     fooField : {\n *                         type : 'text',\n *                         label : 'Foo',\n *                         value : 'FOO'\n *                     },\n *\n *                     // This one does not, because name doesn't end with `Field`\n *                     bar : {\n *                         type : 'text',\n *                         label : 'Bar',\n *                         value : 'BAR'\n *                     },\n *\n *                     // Add a container widget to wrap some fields together\n *                     myContainer : {\n *                         type : 'container',\n *                         items : {\n *                             // This one gets into config too despite the nesting level\n *                             bazField : {\n *                                 type : 'text',\n *                                 label : 'Baz',\n *                                 value : 'BAZ'\n *                             }\n *                         }\n *                     }\n *                 }\n *             }\n *         }\n *     }\n * });\n *\n * // Assuming export dialog is opened and export triggered with default values\n * // you can receive custom field values here\n * grid.on({\n *     beforePdfExport({ config }) {\n *         console.log(config.foo) // 'FOO'\n *         console.log(config.bar) // undefined\n *         console.log(config.baz) // 'BAZ'\n *     }\n * });\n * ```\n *\n * ## Configuring widgets at runtime\n *\n * If you don't know column ids before grid instantiation or you want a flexible config, you can change widget values\n * before dialog pops up:\n *\n * ```javascript\n * const scheduler = new Scheduler({\n *     columns : [\n *         { id : 'name', text : 'Name', field : 'name' },\n *         { id : 'age', text : 'Age', field : 'age' },\n *         { id : 'city', text : 'City', field : 'city', hidden : true }\n *     ],\n *     features : {\n *         pdfExport : true\n *     }\n * });\n *\n * // Such listener would ignore autoSelectVisibleColumns config. Similar to the snippet\n * // above this will show Name and City columns\n * scheduler.features.pdfExport.exportDialog.on({\n *     beforeShow() {\n *         this.widgetMap.columnsField.value = ['age', 'city']\n *     }\n * });\n * ```\n *\n * @extends Grid/view/export/ExportDialog\n */\nexport default class SchedulerExportDialog extends GridExportDialog {\n\n    //region Config\n\n    static get $name() {\n        return 'SchedulerExportDialog';\n    }\n\n    static get type() {\n        return 'schedulerexportdialog';\n    }\n\n    static get configurable() {\n        return {\n            defaults : {\n                localeClass : this\n            },\n            items : {\n                scheduleRangeField : {\n                    type   : 'schedulerangecombo',\n                    label  : 'L{Schedule range}',\n                    value  : 'completeview',\n                    weight : 150,\n                    onChange({ value }) {\n                        this.parent.widgetMap.rangesContainer.hidden = value !== ScheduleRange.daterange;\n                    }\n                },\n                rangesContainer : {\n                    type     : 'container',\n                    flex     : '1 0 100%',\n                    weight   : 151,\n                    hidden   : true,\n                    defaults : {\n                        localeClass : this\n                    },\n                    items : {\n                        filler : {\n                            // Filler widget to align date fields\n                            weight : 0,\n                            type   : 'widget'\n                        },\n                        rangeStartField : {\n                            type       : 'datefield',\n                            label      : 'L{Export from}',\n                            labelWidth : '3em',\n                            flex       : '1 0 25%',\n                            weight     : 10,\n                            onChange({ value }) {\n                                this.parent.widgetMap.rangeEndField.min = DateHelper.add(value, 1, 'd');\n                            }\n                        },\n                        filler2 : {\n                            // Another filler to move label further from previous field\n                            type   : 'widget',\n                            weight : 20,\n                            width  : '0.5em'\n                        },\n                        rangeEndField : {\n                            type       : 'datefield',\n                            label      : 'L{Export to}',\n                            labelWidth : '1em',\n                            flex       : '1 0 25%',\n                            weight     : 30,\n                            onChange({ value }) {\n                                this.parent.widgetMap.rangeStartField.max = DateHelper.add(value, -1, 'd');\n                            }\n                        }\n                    }\n                }\n            }\n        };\n    }\n\n    //endregion\n\n    onLocaleChange() {\n        const\n            labelWidth = this.L('labelWidth');\n\n        this.width = this.L('L{width}');\n\n        this.items.forEach(widget => {\n            if (widget instanceof Field) {\n                widget.labelWidth = labelWidth;\n            }\n            else if (widget.ref === 'rangesContainer') {\n                widget.items[0].width = labelWidth;\n            }\n        });\n    }\n\n    applyInitialValues(config) {\n        super.applyInitialValues(config);\n\n        const\n            me                   = this,\n            {\n                client,\n                scheduleRange\n            }                    = config,\n            items                = config.items = config.items || {},\n            scheduleRangeField   = items.scheduleRangeField = items.scheduleRangeField || {},\n            rangesContainer      = items.rangesContainer = items.rangesContainer || {},\n            rangesContainerItems = rangesContainer.items = rangesContainer.items || {},\n            filler               = rangesContainerItems.filler = rangesContainerItems.filler || {},\n            rangeStartField      = rangesContainerItems.rangeStartField = rangesContainerItems.rangeStartField || {},\n            rangeEndField        = rangesContainerItems.rangeEndField = rangesContainerItems.rangeEndField || {};\n\n        filler.width = me.L('labelWidth');\n\n        scheduleRangeField.value = scheduleRangeField.value || scheduleRange;\n\n        if (scheduleRangeField.value === ScheduleRange.daterange) {\n            rangesContainer.hidden = false;\n        }\n\n        const rangeStart = rangeStartField.value = rangeStartField.value || client.startDate;\n        rangeStartField.max = DateHelper.max(client.startDate, DateHelper.add(client.endDate, -1, 'd'));\n\n        let rangeEnd = rangeEndField.value || client.endDate;\n\n        // This is the only place where we can validate date range before it gets to export feature\n        if (rangeEnd <= rangeStart) {\n            rangeEnd = DateHelper.add(rangeStart, 1, 'd');\n        }\n\n        rangeEndField.value = rangeEnd;\n        rangeEndField.min   = DateHelper.min(client.endDate, DateHelper.add(client.startDate, 1, 'd'));\n    }\n}\n","import GridSinglePageExporter from '../../../../Grid/feature/export/exporter/SinglePageExporter.js';\nimport SchedulerExporterMixin from './SchedulerExporterMixin.js';\n\n/**\n * @module Scheduler/feature/export/exporter/SinglePageExporter\n */\n\n/**\n * A single page exporter. Used by the {@link Scheduler.feature.export.PdfExport} feature to export to single page.\n * Content will be scaled in both directions to fit the page.\n *\n * You do not need to use this class directly.\n *\n * ### Extending exporter\n *\n * ```javascript\n * class MySinglePageExporter extends SinglePageExporter {\n *     // type is required for exporter\n *     static get type() {\n *         return 'mysinglepageexporter';\n *     }\n *\n *     get stylesheets() {\n *         const stylesheets = super.stylesheets;\n *\n *         stylesheets.forEach(styleNodeOrLinkTag => doSmth(styleNodeOrLinkTag))\n *\n *         return stylesheets;\n *     }\n * }\n *\n * const scheduler = new Scheduler({\n *     features : {\n *         pdfExport : {\n *             // this export feature is configured with only one exporter\n *             exporters : [MySinglePageExporter]\n *         }\n *     }\n * });\n *\n * // run export with the new exporter\n * scheduler.features.pdfExport.export({ exporter : 'mysinglepageexporter' });\n * ```\n *\n * @classType singlepage\n * @feature\n * @extends Grid/feature/export/exporter/SinglePageExporter\n * @typings Grid/feature/export/exporter/SinglePageExporter -> Grid/feature/export/exporter/GridSinglePageExporter\n */\nexport default class SinglePageExporter extends SchedulerExporterMixin(GridSinglePageExporter) {\n\n    static get $name() {\n        return 'SinglePageExporter';\n    }\n\n    static get type() {\n        return 'singlepage';\n    }\n\n    // We should not collect dependencies per each page, instead we'd render them once\n    collectDependencies() {}\n\n    positionRows(rows, config) {\n        const\n            resources   = [],\n            events      = [],\n            translateRe = /translate\\((\\d+.?\\d*)px, (\\d+.?\\d*)px\\)/,\n            topRe       = /top:.+?px/;\n\n        if (config.enableDirectRendering) {\n            rows.forEach(([html, , , eventsHtml]) => {\n                resources.push(html);\n\n                eventsHtml && Array.from(eventsHtml.entries()).forEach(([key, [html, box, extras = []]]) => {\n                    // Store event box to render dependencies later\n                    this.exportMeta.eventsBoxes.set(String(key), box);\n\n                    events.push(html + extras.join(''));\n                });\n            });\n        }\n        else {\n            let currentTop = 0;\n\n            // In case of variable row height row vertical position is not guaranteed to increase\n            // monotonously. Position row manually instead\n            rows.forEach(([html, top, height, eventsHtml]) => {\n                // Adjust row vertical position by changing `translate` style\n                resources.push(html.replace(translateRe, `translate($1px, ${currentTop}px)`));\n\n                const rowTopDelta = currentTop - top;\n\n                eventsHtml && Array.from(eventsHtml.entries()).forEach(([key, [html, box]]) => {\n                    // Fix event vertical position according to the row top\n                    box.translate(0, rowTopDelta);\n\n                    // Store event box to render dependencies later\n                    this.exportMeta.eventsBoxes.set(String(key), box);\n\n                    // Adjust event vertical position by replacing `top` style\n                    events.push(html.replace(topRe, `top: ${box.y}px`));\n                });\n\n                currentTop += height;\n            });\n        }\n\n        return { resources, events };\n    }\n}\n","import GridPdfExport from '../../../Grid/feature/export/PdfExport.js';\nimport GridFeatureManager from '../../../Grid/feature/GridFeatureManager.js';\nimport SchedulerExportDialog from '../../view/export/SchedulerExportDialog.js';\nimport SinglePageExporter from './exporter/SinglePageExporter.js';\nimport MultiPageExporter from './exporter/MultiPageExporter.js';\nimport MultiPageVerticalExporter from './exporter/MultiPageVerticalExporter.js';\nimport ObjectHelper from '../../../Core/helper/ObjectHelper.js';\n\n/**\n * @module Scheduler/feature/export/PdfExport\n */\n\n/**\n * Generates PDF/PNG files from the Scheduler component.\n *\n * <img src=\"Scheduler/export-dialog.png\" style=\"max-width : 300px\" alt=\"Scheduler Export dialog\">\n *\n * **NOTE:** Server side is required to make export work!\n *\n * The export server is written in nodejs and it is shipped with our examples. You can find setup instructions in\n * `examples/_shared/server/README.md` and `examples/export/README.md` files.\n *\n * When your server is up and running, it listens to requests. The Export feature sends a request to the specified URL\n * with the HTML fragments. The server generates a PDF (or PNG) file and returns a download link (or binary, depending\n * on {@link #config-sendAsBinary} config). Then the Export feature opens the link in a new tab and the file is\n * automatically downloaded by your browser. This is configurable, see {@link #config-openAfterExport} config.\n *\n * The {@link #config-exportServer} URL must be configured. The URL can be localhost if you start the server locally,\n * or your remote server address.\n *\n * ## Usage\n *\n * ```javascript\n * const scheduler = new Scheduler({\n *     features : {\n *         pdfExport : {\n *             exportServer : 'http://localhost:8080' // Required\n *         }\n *     }\n * })\n *\n * // Opens popup allowing to customize export settings\n * scheduler.features.pdfExport.showExportDialog();\n *\n * // Simple export\n * scheduler.features.pdfExport.export({\n *     // Required, set list of column ids to export\n *     columns : scheduler.columns.map(c => c.id)\n * }).then(result => {\n *     // Response instance and response content in JSON\n *     let { response, responseJSON } = result;\n * });\n * ```\n *\n * Appends configs related to exporting time axis: {@link #config-scheduleRange}, {@link #config-rangeStart},\n * {@link #config-rangeEnd}\n *\n * ## Loading resources\n *\n * If you face a problem with loading resources when exporting, the cause might be that the application and the export server are hosted on different servers.\n * This is due to [Cross-Origin Resource Sharing](https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS) (CORS). There are 2 options how to handle this:\n * - Allow cross origin requests from the server where your export is hosted to the server where your application is hosted;\n * - Copy all resources keeping the folder hierarchy from the server where your application is hosted to the server where your export is hosted\n * and setup paths using {@link Grid.feature.export.PdfExport#config-translateURLsToAbsolute} config and configure the export server to give access to the path:\n *\n * ```javascript\n * const scheduler = new Scheduler({\n *     features : {\n *         pdfExport : {\n *             exportServer : 'http://localhost:8080',\n *             // '/resources' is hardcoded in WebServer implementation\n *             translateURLsToAbsolute : 'http://localhost:8080/resources'\n *         }\n *     }\n * })\n * ```\n *\n * ```javascript\n * // Following path would be served by this address: http://localhost:8080/resources/\n * node ./src/server.js -h 8080 -r web/application/styles\n * ```\n *\n * where `web/application/styles` is a physical root location of the copied resources, for example:\n *\n * <img src=\"Grid/export-server-resources.png\" style=\"max-width : 500px\" alt=\"Export server structure with copied resources\" />\n *\n * @extends Grid/feature/export/PdfExport\n * @classtype pdfExport\n * @feature\n * @typings Grid/feature/export/PdfExport -> Grid/feature/export/GridPdfExport\n */\nexport default class PdfExport extends GridPdfExport {\n    static get $name() {\n        return 'PdfExport';\n    }\n\n    static get defaultConfig() {\n        return {\n            exporters     : [SinglePageExporter, MultiPageExporter, MultiPageVerticalExporter],\n            dialogClass   : SchedulerExportDialog,\n            /**\n             * Specifies how to export time span.\n             *  * completeview - Complete configured time span, from scheduler start date to end date\n             *  * currentview  - Currently visible time span\n             *  * daterange    - Use specific date range, provided additionally in config. See {@link #config-rangeStart}/\n             *  {@link #config-rangeEnd}\n             * @config {'completeview'|'currentview'|'daterange'}\n             * @default\n             * @category Export file config\n             */\n            scheduleRange : 'completeview',\n\n            /**\n             * Exported time span range start. Used with `daterange` config of the {@link #config-scheduleRange}\n             * @config {Date}\n             * @category Export file config\n             */\n            rangeStart : null,\n\n            /**\n             * Returns the instantiated export dialog widget as configured by {@link #config-exportDialog}\n             * @member {Scheduler.view.export.SchedulerExportDialog} exportDialog\n             */\n            /**\n             * A config object to apply to the {@link Scheduler.view.export.SchedulerExportDialog} widget.\n             * @config {SchedulerExportDialogConfig} exportDialog\n             */\n\n            /**\n             * Exported time span range end. Used with `daterange` config of the {@link #config-scheduleRange}\n             * @config {Date}\n             * @category Export file config\n             */\n            rangeEnd : null\n        };\n    }\n\n    get defaultExportDialogConfig() {\n        return ObjectHelper.copyProperties(super.defaultExportDialogConfig, this, ['scheduleRange']);\n    }\n\n    buildExportConfig(config) {\n        config = super.buildExportConfig(config);\n\n        const {\n            scheduleRange,\n            rangeStart,\n            rangeEnd\n        } = this;\n\n        // Time axis is filtered from UI, need to append it\n        if (config.columns && !config.columns.find(col => col.type === 'timeAxis')) {\n            config.columns.push(config.client.timeAxisColumn.id);\n        }\n\n        return ObjectHelper.assign({\n            scheduleRange,\n            rangeStart,\n            rangeEnd\n        }, config);\n    }\n}\n\nGridFeatureManager.registerFeature(PdfExport, false, 'Scheduler');\n"],"names":["ResourceInfoColumn","Column","$name","type","fields","defaults","showImage","showEventCount","showMeta","showRole","validNames","autoScaleThreshold","useNameAsImageName","field","htmlEncode","width","cellCls","editor","VersionHelper","isTestEnv","construct","args","avatarRendering","AvatarRendering","element","grid","doDestroy","destroy","getImageURL","imageName","resourceImagePath","parts","split","urlPart","length","joined","StringHelper","joinPaths","template","resourceRecord","value","me","timeAxis","resourceImageExtension","defaultResourceImageName","roleField","count","eventStore","getEvents","includeOccurrences","enableRecurringEvents","startDate","endDate","imageUrl","image","toLowerCase","includes","class","children","getResourceAvatar","initials","color","eventColor","iconCls","defaultImageUrl","tag","text","html","L","defaultRenderer","record","cellElement","isExport","result","isSpecialRow","rowHeight","style","fontSize","ColumnStore","registerColumnType","_$name","sides","editorAlign","side","client","rtl","topBottom","top","bottom","layoutModes","estimate","measure","layoutSides","before","after","Labels","InstancePlugin","configurable","labelCls","right","left","thisObj","blurAction","labelLayoutMode","labelCharWidth","pluginConfig","chain","scheduler","config","isVertical","Error","updateHostClasslist","classList","remove","add","onLabelDblClick","event","target","readOnly","dataset","labelConfig","eventRecord","resolveEventRecord","Editor","inputField","scrollAction","render","startEdit","align","matchSize","stopImmediatePropagation","changeTop","processLabelSpec","updateTop","changeAfter","updateAfter","changeRight","changeBottom","updateBottom","changeBefore","updateBefore","changeLeft","labelSpec","renderer","Object","setPrototypeOf","resourceStore","taskStore","id","milestoneWidth","recordType","fieldDef","modelClass","fieldMap","Reflect","has","prototype","EventHelper","on","timeAxisSubGrid","delegate","dblclick","doDisable","disable","isPainted","refresh","generateLabelConfigs","data","configs","domConfig","className","taskFeature","eventRecordProperty","call","assignmentRecord","DateHelper","format","displayDateFormat","encodeHtml","push","measureLabels","pxPerMS","timeAxisViewModel","getSingleUnitInPixels","DomHelper","stripTags","labelMeasureElement","createElement","parent","foregroundCanvas","retainElement","DomSync","sync","targetElement","childrenOnly","firstElementChild","offsetWidth","ms","startMS","endMS","onEventDataGenerated","_data$eventRecord","disabled","isResourceTimeRange","wrapperChildren","updateLabelLayoutMode","isConfiguring","refreshWithTransition","updateLabelCharWidth","featureClass","GridFeatureManager","registerFeature","TimelineSummary","GridSummary","showTooltip","summaries","isTimelineBase","updateProject","project","ion","timeAxisViewModelUpdate","renderRows","detachListeners","name","dataReady","isHorizontal","footer","querySelector","summaryBarElement","timeline","sizeProp","colCfg","columnConfig","summaryContainer","_tip","some","label","Tooltip","cls","hoverDelay","hideDelay","forElement","anchorToTarget","trackMouse","forSelector","getHtml","activeTarget","_tipHtml","innerHTML","map","col","join","updateTimelineSummaries","_this$summaryColumn","summaryColumn","toggle","_this$_tip","ScheduleRange","completeview","currentview","daterange","immediatePromise","Promise","resolve","base","SchedulerExporterMixin","scrollRowIntoView","index","rowManager","scrollable","oldY","y","store","scrollTo","calculateTop","detacher","scroll","scrollTop","getRow","scrollToDate","date","scrollFired","promises","scrollStart","x","block","header","await","checkLog","all","cloneElement","clear","clonedEl","prepareComponent","currentOrientation","includeTimeline","scheduleRange","rangeStart","rangeEnd","visibleDateRange","waitForAnimations","infiniteScroll","setTimeSpan","svgCanvas","_oldEnableEventAnimations","enableEventAnimations","isHorizontalRendering","_oldScrollBuffer","scrollBuffer","_oldVerticalBuffer","verticalBufferSize","ignoreViewBox","exportMeta","fgCanvasEl","timeAxisEl","totalWidth","subGrids","normal","getDistanceBetweenDates","horizontalPages","Math","ceil","pageWidth","totalPages","verticalPages","scrollLeft","getCoordinateFromDate","timeAxisHeaders","timeAxisPlaceholders","headersColleted","forEachSelector","headerRow","createPlaceholder","Map","eventsPlaceholder","removeEachSelector","eventsBoxes","hasActiveFeature","columnLinesCanvas","columnLinesPlaceholder","columnLines","lines","majorLines","timeRangesHeaderCanvas","timeRangesBodyCanvas","timeRanges","timeRangesHeaderPlaceholder","body","timeRangesBodyPlaceholder","features","dependencies","fillDrawingCache","svgCanvasEl","getAttribute","dependencyCanvasEl","dependenciesPlaceholder","ns","betweenLesser","restoreState","waitForHorizontalScroll","restoreComponent","onRowsCollected","rows","enableDirectRendering","timeView","pageRangeStart","pageRangeEnd","getCurrentPageDateRange","renderHeaders","renderLines","renderRanges","renderEvents","rangeProcessed","collectLines","collectHeaders","collectRanges","collectEvents","timeSpanContains","getTime","horizontalPosition","pageStartX","pageEndX","normalGridX","locked","splitterWidth","getDateFromCoordinate","max","multiplier","prepareExportElement","headerId","footerId","el","forEach","selector","canvasEl","lastExportedRowBottom","height","marginLeft","headersCollected","headerRows","headersMap","tickIndex","set","outerHTML","String","headerCanvas","bodyCanvas","bgCanvas","backgroundCanvas","lineEl","contains","lineIndex","Number","line","replace","addedRows","normalRows","row","_resource$events","_resource$timeRanges","rowConfig","resource","getAt","dataIndex","eventsMap","events","isScheduled","getElementFromEventRecord","parentElement","Rectangle","from","offsetParent","timeRange","_client$features$reso","elId","resourceTimeRanges","generateElementId","syncIdMap","start","end","timeAxisView","timeAxisColumn","buildCells","document","resourceLayout","getResourceLayout","eventDOMConfigs","getEventDOMConfigForCurrentView","eventId","domConfigs","getColumnLinesDOMConfig","onlyChildren","getDOMConfig","i","buildPageHtml","values","placeHolder","mergedCellsHtml","placeHolderText","resources","positionRows","contentHtml","headers","Array","lineElements","concat","buildDependenciesHtml","getEventBox","box","get","isMilestone","translate","renderDependencies","dependencyFeature","draw","dependency","to","isDependencyVisible","fromBox","fromEvent","toBox","toEvent","drawDependency","clone","domSync","placeholder","MultiPageExporter","GridMultiPageExporter","stateNextPage","eventsHtml","entries","key","extras","MultiPageVerticalExporter","GridMultiPageVerticalExporter","estimateTotalPages","ScheduleRangeCombo","Combo","defaultConfig","editable","localizeDisplayFields","displayField","buildItems","initClass","SchedulerExportDialog","GridExportDialog","localeClass","items","scheduleRangeField","weight","onChange","widgetMap","rangesContainer","hidden","flex","filler","rangeStartField","labelWidth","rangeEndField","min","filler2","onLocaleChange","widget","Field","ref","applyInitialValues","rangesContainerItems","SinglePageExporter","GridSinglePageExporter","collectDependencies","translateRe","topRe","currentTop","rowTopDelta","PdfExport","GridPdfExport","exporters","dialogClass","defaultExportDialogConfig","ObjectHelper","copyProperties","buildExportConfig","columns","find","assign"],"mappings":"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CjC,IAAI,CAAC2D,UAAU,CAACC,OAAO,EAAE,CAAC,CAAClG,OAAO,CAAC,CAAC,CAACmG,GAAG,EAAE,CAACxa,IAAI,EAAEiZ,GAAG,CAAC,CAAC,KAAK;;UAE3EA,GAAG,CAACG,SAAS,CAAC,CAAC,EAAE8D,WAAW,CAAC;;UAE7B,IAAI,CAAC7N,UAAU,CAACwB,WAAW,CAACkE,GAAG,CAACE,MAAM,CAACuF,GAAG,CAAC,EAAEvB,GAAG,CAAC;;UAEjD3C,MAAM,CAACtP,IAAI,CAAChH,IAAI,CAAC2V,OAAO,CAACqH,KAAK,EAAG,QAAO/D,GAAG,CAACrM,CAAE,IAAG,CAAC,CAAC;SACtD,CAAC;QACFqQ,UAAU,IAAIxI,MAAM;OACvB,CAAC;;IAEN,OAAO;MAAE+D,SAAS;MAAElC;KAAQ;;AAEpC;AACAsG,kBAAkB,CAAC/b,MAAM,GAAG,oBAAoB;;ACvFhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,MAAMsc,SAAS,SAASC,WAAa,CAAC;EACjD,WAAWrhB,KAAKA,GAAG;IACf,OAAO,WAAW;;EAEtB,WAAWgf,aAAaA,GAAG;IACvB,OAAO;MACHsC,SAAS,EAAO,CAACT,kBAAkB,EAAEzC,iBAAiB,EAAEO,yBAAyB,CAAC;MAClF4C,WAAW,EAAKjC,qBAAqB;;AAEjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACYhN,aAAa,EAAG,cAAc;;AAE1C;AACA;AACA;AACA;MACYC,UAAU,EAAG,IAAI;;AAE7B;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;MACYC,QAAQ,EAAG;KACd;;EAEL,IAAIgP,yBAAyBA,GAAG;IAC5B,OAAOC,YAAY,CAACC,cAAc,CAAC,KAAK,CAACF,yBAAyB,EAAE,IAAI,EAAE,CAAC,eAAe,CAAC,CAAC;;EAEhGG,iBAAiBA,CAACjb,MAAM,EAAE;IACtBA,MAAM,GAAG,KAAK,CAACib,iBAAiB,CAACjb,MAAM,CAAC;IACxC,MAAM;MACF4L,aAAa;MACbC,UAAU;MACVC;KACH,GAAG,IAAI;;IAER,IAAI9L,MAAM,CAACkb,OAAO,IAAI,CAAClb,MAAM,CAACkb,OAAO,CAACC,IAAI,CAACrS,GAAG,IAAIA,GAAG,CAACvP,IAAI,KAAK,UAAU,CAAC,EAAE;MACxEyG,MAAM,CAACkb,OAAO,CAAC3W,IAAI,CAACvE,MAAM,CAACxB,MAAM,CAACqW,cAAc,CAACrS,EAAE,CAAC;;IAExD,OAAOuY,YAAY,CAACK,MAAM,CAAC;MACvBxP,aAAa;MACbC,UAAU;MACVC;KACH,EAAE9L,MAAM,CAAC;;AAElB;AACA0a,SAAS,CAACtc,MAAM,GAAG,WAAW;AAAEkI,kBAAkB,CAACC,eAAe,CAACmU,SAAS,EAAE,KAAK,EAAE,WAAW,CAAC;;;;"}