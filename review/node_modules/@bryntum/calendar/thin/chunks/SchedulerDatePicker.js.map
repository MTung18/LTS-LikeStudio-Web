{"version":3,"file":"SchedulerDatePicker.js","sources":["../../../../Scheduler/lib/Scheduler/data/util/recurrence/RecurrenceLegend.js","../../../../Scheduler/lib/Scheduler/feature/base/EditBase.js","../../../../Scheduler/lib/Scheduler/view/EventEditor.js","../../../../Scheduler/lib/Scheduler/view/recurrence/field/RecurrenceCombo.js","../../../../Scheduler/lib/Scheduler/view/recurrence/RecurrenceLegendButton.js","../../../../Scheduler/lib/Scheduler/view/recurrence/RecurrenceEditor.js","../../../../Scheduler/lib/Scheduler/feature/mixin/RecurringEventEdit.js","../../../../Scheduler/lib/Scheduler/widget/ResourceCombo.js","../../../../Scheduler/lib/Scheduler/feature/EventEdit.js","../../../../Scheduler/lib/Scheduler/widget/ResourceFilter.js","../../../../Scheduler/lib/Scheduler/widget/SchedulerDatePicker.js"],"sourcesContent":["import Localizable from '../../../../Core/localization/Localizable.js';\nimport DayRuleEncoder from './RecurrenceDayRuleEncoder.js';\nimport DateHelper from '../../../../Core/helper/DateHelper.js';\n\n/**\n * @module Scheduler/data/util/recurrence/RecurrenceLegend\n */\n\n/**\n * A static class allowing to get a human readable description of the provided recurrence.\n *\n * ```javascript\n * const event = new EventModel({ startDate : new Date(2018, 6, 3), endDate : new Date(2018, 6, 4) });\n * const recurrence = new RecurrenceModel({ frequency : 'WEEKLY', days : ['MO', 'TU', 'WE'] });\n * event.recurrence = recurrence;\n * // \"Weekly on  Mon, Tue and Wed\"\n * RecurrenceLegend.getLegend(recurrence);\n * ```\n * @mixes Core/localization/Localizable\n */\nexport default class RecurrenceLegend extends Localizable() {\n\n    static get $name() {\n        return 'RecurrenceLegend';\n    }\n\n    static get allDaysValueAsArray() {\n        return ['SU', 'MO', 'TU', 'WE', 'TH', 'FR', 'SA'];\n    }\n\n    static get allDaysValue() {\n        return this.allDaysValueAsArray.join(',');\n    }\n\n    static get workingDaysValue() {\n        return this.allDaysValueAsArray.filter((day, index) => !DateHelper.nonWorkingDays[index]).join(',');\n    }\n\n    static get nonWorkingDaysValue() {\n        return this.allDaysValueAsArray.filter((day, index) => DateHelper.nonWorkingDays[index]).join(',');\n    }\n\n    /**\n     * Returns the provided recurrence description. The recurrence might be assigned to a timespan model,\n     * in this case the timespan start date should be provided in the second argument.\n     * @param {Scheduler.model.RecurrenceModel} recurrenceRecurrence model.\n     * @param {Date} [timeSpanStartDate] The recurring timespan start date. Can be omitted if the recurrence is assigned\n     * to a timespan model (and the timespan has {@link Scheduler.model.TimeSpan#field-startDate} filled). Then start\n     * date will be retrieved from the model.\n     * @returns {String} The recurrence description.\n     */\n    static getLegend(recurrence, timeSpanStartDate) {\n        const\n            me                                                         = this,\n            { timeSpan, interval, days, monthDays, months, positions } = recurrence,\n            startDate                                                  = timeSpanStartDate || timeSpan.startDate,\n            tplData                                                    = { interval };\n\n        let fn;\n\n        switch (recurrence.frequency) {\n            case 'DAILY':\n                return interval === 1 ? me.L('L{Daily}') : me.L('L{Every {0} days}', tplData);\n\n            case 'WEEKLY':\n                if (days && days.length) {\n                    tplData.days = me.getDaysLegend(days);\n                }\n                else if (startDate) {\n                    tplData.days = DateHelper.getDayName(startDate.getDay());\n                }\n\n                return me.L(interval === 1 ? 'L{Weekly on {1}}' : 'L{Every {0} weeks on {1}}', tplData);\n\n            case 'MONTHLY':\n                if (days && days.length && positions && positions.length) {\n                    tplData.days = me.getDaysLegend(days, positions);\n                }\n                else if (monthDays && monthDays.length) {\n                    // sort dates to output in a proper order\n                    monthDays.sort((a, b) => a - b);\n\n                    tplData.days = me.arrayToText(monthDays);\n                }\n                else if (startDate) {\n                    tplData.days = startDate.getDate();\n                }\n\n                return me.L(interval === 1 ? 'L{Monthly on {1}}' : 'L{Every {0} months on {1}}', tplData);\n\n            case 'YEARLY':\n\n                if (days && days.length && positions && positions.length) {\n                    tplData.days = me.getDaysLegend(days, positions);\n                }\n                else {\n                    tplData.days = startDate.getDate();\n                }\n\n                if (months && months.length) {\n                    // sort months to output in a proper order\n                    months.sort((a, b) => a - b);\n\n                    if (months.length > 2) {\n                        fn = month => DateHelper.getMonthShortName(month - 1);\n                    }\n                    else {\n                        fn = month => DateHelper.getMonthName(month - 1);\n                    }\n\n                    tplData.months = me.arrayToText(months, fn);\n                }\n                else {\n                    tplData.months = DateHelper.getMonthName(startDate.getMonth());\n                }\n\n                return me.L(interval === 1 ? 'L{Yearly on {1} of {2}}' : 'L{Every {0} years on {1} of {2}}', tplData);\n        }\n    }\n\n    static getDaysLegend(days, positions) {\n        const\n            me      = this,\n            tplData = { position : '' };\n        let fn;\n\n        if (positions && positions.length) {\n            // Do not remove. Assertion strings for Localization sanity check.\n            // 'L{position1}'\n            // 'L{position2}'\n            // 'L{position3}'\n            // 'L{position4}'\n            // 'L{position5}'\n            // 'L{position-1}'\n            tplData.position = me.arrayToText(positions, position => me.L(`L{position${position}}`));\n        }\n\n        if (days.length) {\n            days.sort((a, b) => DayRuleEncoder.decodeDay(a)[0] - DayRuleEncoder.decodeDay(b)[0]);\n\n            switch (days.join(',')) {\n                case me.allDaysValue :\n                    tplData.days = me.L('L{day}');\n                    break;\n\n                case me.workingDaysValue :\n                    tplData.days = me.L('L{weekday}');\n                    break;\n\n                case me.nonWorkingDaysValue :\n                    tplData.days = me.L('L{weekend day}');\n                    break;\n\n                default :\n                    if (days.length > 2) {\n                        fn = day => DateHelper.getDayShortName(DayRuleEncoder.decodeDay(day)[0]);\n                    }\n                    else {\n                        fn = day => DateHelper.getDayName(DayRuleEncoder.decodeDay(day)[0]);\n                    }\n\n                    tplData.days = me.arrayToText(days, fn);\n            }\n        }\n\n        return me.L('L{daysFormat}', tplData);\n    }\n\n    // Converts array of items to a human readable list.\n    // For example: [1,2,3,4]\n    // to: \"1, 2, 3 and 4\"\n    static arrayToText(array, fn) {\n        if (fn) {\n            array = array.map(fn);\n        }\n\n        return array.join(', ').replace(/,(?=[^,]*$)/, this.L('L{ and }'));\n    }\n\n}\n","import InstancePlugin from '../../../Core/mixin/InstancePlugin.js';\nimport DateField from '../../../Core/widget/DateField.js';\nimport DateHelper from '../../../Core/helper/DateHelper.js';\nimport ObjectHelper from '../../../Core/helper/ObjectHelper.js';\nimport Config from '../../../Core/Config.js';\nimport Objects from '../../../Core/helper/util/Objects.js';\n\n/**\n * @module Scheduler/feature/base/EditBase\n */\n\nconst\n    DH             = DateHelper,\n    scheduleFields = ['startDate', 'endDate', 'resource', 'recurrenceRule'],\n    makeDate       = (fields) => {\n        // single field, update record directly\n        if (fields.length === 1) return fields[0].value;\n        // two fields, date + time\n        else if (fields.length === 2) {\n            const\n                [date, time] = fields[0] instanceof DateField ? fields : fields.reverse(),\n                dateValue    = DH.parse(date.value);\n\n            if (dateValue && time.value) {\n                dateValue.setHours(\n                    time.value.getHours(),\n                    time.value.getMinutes(),\n                    time.value.getSeconds(),\n                    time.value.getMilliseconds()\n                );\n            }\n\n            // Clone to not end up sharing dates\n            return dateValue ? DateHelper.clone(dateValue) : null;\n        }\n        // shouldn't happen...\n        return null;\n    },\n    copyTime       = (dateTo, dateFrom) => {\n        const d = new Date(dateTo.getTime());\n        d.setHours(dateFrom.getHours(), dateFrom.getMinutes());\n        return d;\n    },\n    adjustEndDate  = (startDate, startTime, me) => {\n        // The end datetime just moves in response to the changed start datetime, keeping the same duration.\n        if (startDate && startTime && me.endDateField && me.endTimeField) {\n            const newEndDate = DH.add(copyTime(me.startDateField.value, me.startTimeField.value), me.eventRecord.durationMS, 'milliseconds');\n            me.endDateField.value = newEndDate;\n            me.endTimeField.value = DH.clone(newEndDate);\n        }\n    };\n\n/**\n * Base class for EventEdit. Not to be used directly.\n *\n * @extends Core/mixin/InstancePlugin\n */\nexport default class EditBase extends InstancePlugin {\n    //region Config\n\n    static get configurable() {\n        return {\n            /**\n             * True to save and close this panel if ENTER is pressed in one of the input fields inside the panel.\n             * @config {Boolean}\n             * @default\n             * @category Editor\n             */\n            saveAndCloseOnEnter : true,\n\n            triggerEvent : null,\n\n            /**\n             * This config parameter is passed to the `startDateField` and `endDateField` constructor.\n             * @config {String}\n             * @default\n             * @category Editor widgets\n             */\n            dateFormat : 'L', // date format that uses browser locale\n\n            /**\n             * This config parameter is passed to the `startTimeField` and `endTimeField` constructor.\n             * @config {String}\n             * @default\n             * @category Editor widgets\n             */\n            timeFormat : 'LT', // date format that uses browser locale\n\n            /**\n             * Default editor configuration, which widgets it shows etc.\n             *\n             * This is the entry point into configuring any aspect of the editor.\n             *\n             * The {@link Core.widget.Container#config-items} configuration of a Container\n             * is *deeply merged* with its default `items` value. This means that you can specify\n             * an `editorConfig` object which configures the editor, or widgets inside the editor:\n             * ```javascript\n             * const scheduler = new Scheduler({\n             *     features : {\n             *         eventEdit  : {\n             *             editorConfig : {\n             *                 autoClose : false,\n             *                 modal     : true,\n             *                 cls       : 'editor-widget-cls',\n             *                 items : {\n             *                     resourceField : {\n             *                         hidden : true\n             *                     },\n             *                     // Add our own event owner field at the top of the form.\n             *                     // Weight -100 will make it sort top the top.\n             *                     ownerField : {\n             *                         weight : -100,\n             *                         type   : 'usercombo',\n             *                         name   : 'owner',\n             *                         label  : 'Owner'\n             *                     }\n             *                 },\n             *                 bbar : {\n             *                     items : {\n             *                         deleteButton : false\n             *                     }\n             *                 }\n             *             }\n             *         }\n             *     }\n             * });\n             * ```\n             * @config {PopupConfig}\n             * @category Editor\n             */\n            editorConfig : null,\n\n            /**\n             * An object to merge with the provided items config of the editor to override the\n             * configuration of provided fields, or add new fields.\n             *\n             * To remove existing items, set corresponding keys to `null`:\n             *\n             * ```javascript\n             * const scheduler = new Scheduler({\n             *     features : {\n             *         eventEdit  : {\n             *             items : {\n             *                 // Merged with provided config of the resource field\n             *                 resourceField : {\n             *                     label : 'Calendar'\n             *                 },\n             *                 recurrenceCombo : null,\n             *                 owner : {\n             *                     weight : -100, // Will sort above system-supplied fields which are weight 0\n             *                     type   : 'usercombo',\n             *                     name   : 'owner',\n             *                     label  : 'Owner'\n             *                 }\n             *             }\n             *         }\n             *     }\n             * });\n             *```\n             *\n             * The provided fields are called\n             *  - `nameField`\n             *  - `resourceField`\n             *  - `startDateField`\n             *  - `startTimeField`\n             *  - `endDateField`\n             *  - `endTimeField`\n             *  - `recurrenceCombo`\n             *  - `editRecurrenceButton`\n             * @config {Object<String,ContainerItemConfig|Boolean|null>}\n             * @category Editor widgets\n             */\n            items : null,\n\n            /**\n             * The week start day used in all date fields of the feature editor form by default.\n             * 0 means Sunday, 6 means Saturday.\n             * Defaults to the locale's week start day.\n             * @config {Number}\n             */\n            weekStartDay : null\n        };\n    }\n\n    //endregion\n\n    //region Init & destroy\n\n    construct(client, config) {\n        const me = this;\n\n        client.eventEdit = me;\n\n        super.construct(client, ObjectHelper.assign({\n            weekStartDay : client.weekStartDay\n        }, config));\n\n        me.clientListenersDetacher = client.ion({\n            [me.triggerEvent] : 'onActivateEditor',\n            dragCreateEnd     : 'onDragCreateEnd',\n\n            // Not fired at the Scheduler level.\n            // Calendar, which inherits this, implements this event.\n            eventAutoCreated : 'onEventAutoCreated',\n            thisObj          : me\n        });\n    }\n\n    doDestroy() {\n        this.clientListenersDetacher();\n\n        this._editor?.destroy();\n\n        super.doDestroy();\n    }\n\n    //endregion\n\n    //region Editing\n\n    // Not implemented at this level.\n    // Scheduler Editing relies on being called at point of event creation.\n    onEventAutoCreated() {}\n\n    changeEditorConfig(editorConfig) {\n        const { items } = this;\n\n        // Merge items which is an Object with the default editorConfig's items\n        if (items) {\n            editorConfig = Objects.clone(editorConfig);\n            editorConfig.items = Config.merge(items, editorConfig.items);\n        }\n\n        return editorConfig;\n    }\n\n    changeItems(items) {\n        this.cleanItemsConfig(items);\n        return items;\n    }\n\n    // Remove any items configured as === true which just means default config options\n    cleanItemsConfig(items) {\n        for (const ref in items) {\n            const itemCfg = items[ref];\n\n            if (itemCfg === true) {\n                delete items[ref];\n            }\n            else if (itemCfg?.items) {\n                this.cleanItemsConfig(itemCfg.items);\n            }\n        }\n    }\n\n    onDatesChange(params) {\n        const\n            me    = this,\n            field = params.source,\n            value = params.value;\n\n        // End date can never be less than start date\n        if (me.startDateField && me.endDateField) {\n            me.endDateField.min = me.startDateField.value;\n        }\n\n        if (me.endTimeField) {\n            // If the event starts and ends on the same day, the time fields need\n            // to have their min and max set against each other.\n            if (DH.isEqual(DH.clearTime(me.startDateField?.value), DH.clearTime(me.endDateField?.value))) {\n                me.endTimeField.min = me.startTimeField.value;\n            }\n            else {\n                me.endTimeField.min = null;\n            }\n        }\n\n        switch (field.ref) {\n            case 'startDateField':\n                me.startTimeField?.value && adjustEndDate(value, me.startTimeField.value, me);\n                break;\n\n            case 'startTimeField':\n                me.startDateField?.value && adjustEndDate(me.startDateField.value, value, me);\n                break;\n        }\n    }\n\n    //endregion\n\n    //region Save\n\n    async save() {\n        throw new Error('Implement in subclass');\n    }\n\n    get values() {\n        const\n            me          = this,\n            { editor }  = me,\n            startFields = [],\n            endFields   = [],\n            { values }  = editor;\n\n        // The standard values getter will produce (almost) what we want, however, there are some special fields that\n        // we need to take over. Remove those fields:\n        scheduleFields.forEach(f => delete values[f]);\n\n        editor.eachWidget(widget => {\n            const { name } = widget;\n\n            // If the widget is part of the recurrence editor, we don't gather it.\n            if (!name || widget.hidden || widget.up(w => w === me.recurrenceEditor)) {\n                delete values[name];\n                return;\n            }\n\n            switch (name) {\n                case 'startDate':\n                    startFields.push(widget);\n                    break;\n                case 'endDate':\n                    endFields.push(widget);\n                    break;\n                case 'resource':\n                    values[name] = widget.record;\n                    break;\n                case 'recurrenceRule':\n                    // If recurrence set to null, completely clear the recurrenceRule.\n                    // Otherwise it will still be perceived as recurring with the rule 'FREQ=none'\n                    values[name] = editor.widgetMap.recurrenceCombo?.value === 'none' ? '' : widget.value;\n                    break;\n                // Ignore other widgets and allow the standard values getter to provide them:\n                // default:\n                //     values[name] = widget.value;\n            }\n        }, true);\n\n        // if is changing from not allDay to allDay should consider time fields to not change them on makeDate\n        if (values.allDay && !me.eventRecord.allDay) {\n            startFields.push(me.startTimeField);\n            endFields.push(me.endTimeField);\n        }\n\n        // Handle fields being configured away\n        if (startFields.length) {\n            values.startDate = makeDate(startFields);\n        }\n        if (endFields.length) {\n            values.endDate = makeDate(endFields);\n        }\n\n        // Since there is no duration field in the editor,\n        // we don't need to recalc duration value on each date change.\n        // It's enough to return correct duration value in `values`,\n        // so the record will get updated with the correct data.\n        if (('startDate' in values) && ('endDate' in values)) {\n            values.duration = DH.diff(values.startDate, values.endDate, me.editor.record.durationUnit, true);\n        }\n\n        return values;\n    }\n\n    /**\n     * Template method, intended to be overridden. Called before the event record has been updated.\n     * @param {Scheduler.model.EventModel} eventRecord The event record\n     *\n     **/\n    onBeforeSave(eventRecord) {}\n\n    /**\n     * Template method, intended to be overridden. Called after the event record has been updated.\n     * @param {Scheduler.model.EventModel} eventRecord The event record\n     *\n     **/\n    onAfterSave(eventRecord) {}\n\n    /**\n     * Updates record being edited with values from the editor\n     * @private\n     */\n    updateRecord(record) {\n        const { values } = this;\n\n        // Clean resourceId / resources out of values when using assignment store, it will handle the assignment\n        if (this.assignmentStore) {\n            delete values.resource;\n        }\n\n        return record.set(values);\n    }\n\n    //endregion\n\n    //region Events\n\n    onBeforeEditorShow() {\n        const\n            { eventRecord, editor } = this.editingContext,\n            { nameField } = editor.widgetMap;\n\n        // Editing new event. Make sure user doesn't have to clear the input field.\n        // Record field value still should be there because a rendered event block\n        // looks bad with no text in it.\n        // nameField may have been configured away.\n        if (nameField && eventRecord.isCreating) {\n            // Avoid initial invalid because required state.\n            editor.assigningValues = true;\n            nameField.value = '';\n            editor.assigningValues = false;\n\n            // Show new event text as a placeholder\n            nameField._configuredPlaceholder = nameField.placeholder;\n            nameField.placeholder = eventRecord.name;\n        }\n    }\n\n    resetEditingContext() {\n        const me = this;\n\n        if (!me.editingContext) {\n            return;\n        }\n\n        const\n            { client }              = me,\n            { editor, eventRecord } = me.editingContext,\n            { eventStore }          = client,\n            { nameField }           = editor.widgetMap;\n\n        // This will remove the record from the store, *and* from the added bag, so no sync will take place.\n        if (eventRecord.isCreating) {\n            // Ensure that during the engine's async processing of the remove, the element is non-interactive.\n            // Mousedown on the just-created element itself passes through here, and the immediate mouseup\n            // after that instigates a click which will find no corresponding event.\n            if (client.isTimelineBase) {\n                me.editingContext.eventElement?.closest('[data-event-id]').classList.add('b-released');\n            }\n\n            eventStore.remove(eventRecord);\n\n            // Clear isCreating *after* removal.\n            // Store doesn't register as a removed record if isCreating is set\n            eventRecord.isCreating = false;\n        }\n\n        // Revert any placeholder that we may have set\n        // nameField may have been configured away.\n        if (nameField) {\n            nameField.placeholder = nameField._configuredPlaceholder;\n        }\n\n        client.element.classList.remove('b-eventeditor-editing');\n\n        // Reset context\n        me.targetEventElement = me.editingContext = editor._record = null;\n    }\n\n    onPopupKeyDown({ event }) {\n        const me = this;\n\n        if (!me.readOnly && event.key === 'Enter' && me.saveAndCloseOnEnter && event.target.tagName.toLowerCase() === 'input') {\n            // Need to prevent this key events from being fired on whatever receives focus after the editor is hidden\n            event.preventDefault();\n\n            // If enter key was hit in an input element of a start field, need to adjust end date fields (the same way as if #onDatesChange handler was called)\n            if (event.target.name === 'startDate') {\n                me.startTimeField && adjustEndDate(me.startDateField.value, me.startTimeField.value, me);\n            }\n\n            me.onSaveClick();\n        }\n    }\n\n    async onSaveClick() {\n        // TODO add new API on Container: blurFocusedField which manages this scenario\n        // of blurring active field just before hiding\n        this.editor.focus();\n\n        const saved = await this.save();\n\n        if (saved) {\n            this.editor.close();\n\n            /**\n             * Fires on the owning Scheduler after editor is closed by any action - save, delete or cancel\n             * @event afterEventEdit\n             * @on-owner\n             * @param {Scheduler.view.Scheduler} source The scheduler\n             */\n            this.client.trigger('afterEventEdit');\n        }\n        return saved;\n    }\n\n    async onDeleteClick() {\n        const removed = await this.deleteEvent();\n\n        if (removed) {\n            const { editor } = this;\n            // We expect deleteEvent will trigger close if autoClose is true and focus has moved out,\n            // otherwise need to call it manually\n            if (!editor.autoClose || editor.containsFocus) {\n                editor.close();\n            }\n            this.client.trigger('afterEventEdit');\n        }\n    }\n\n    onCancelClick() {\n        this.editor.close();\n        this.client.trigger('afterEventEdit');\n    }\n\n    //endregion\n}\n","import Store from '../../Core/data/Store.js';\nimport Popup from '../../Core/widget/Popup.js';\n\n/**\n * @module Scheduler/view/EventEditor\n */\n\n/**\n * Provided event editor dialog.\n *\n * @extends Core/widget/Popup\n * @private\n */\nexport default class EventEditor extends Popup {\n    // Factoryable type name\n    static get type() {\n        return 'eventeditor';\n    }\n\n    static get $name() {\n        return 'EventEditor';\n    }\n\n    static get configurable() {\n        return {\n            items     : [],\n            draggable : {\n                handleSelector : ':not(button,.b-field-inner)' // Ignore buttons and field inners\n            },\n            axisLock : 'flexible',\n\n            scrollable : {\n                // In case editor is very tall or window is small, make it scrollable\n                overflowY : true\n            },\n            readOnly : null,\n\n            /**\n             * A Function (or *name* of a function) which produces a customized Panel header based upon the event being edited.\n             * @config {Function|String}\n             * @param {Scheduler.model.EventModel} eventRecord The record being edited\n             * @returns {String} The Panel title.\n             */\n            titleRenderer : null\n        };\n    }\n\n    updateLocalization() {\n        super.updateLocalization(...arguments);\n\n        // Use this if there's no titleRenderer\n        this.initialTitle = this.title || '';\n    }\n\n    chainResourceStore() {\n        return this.eventEditFeature.resourceStore.chain(\n            record => !record.isSpecialRow,\n            null,\n            {\n                // It doesn't need to be a Project-based Store\n                storeClass              : Store,\n                // Need to show all records in the combo. Required in case resource store is a tree.\n                excludeCollapsedRecords : false\n            }\n        );\n    }\n\n    processWidgetConfig(widget) {\n        if (widget.type?.includes('date') && widget.weekStartDay == null) {\n            widget.weekStartDay = this.weekStartDay;\n        }\n\n        if (widget.type === 'extraItems') {\n            return false;\n        }\n\n        const\n            { eventEditFeature } = this,\n            fieldConfig          = {};\n\n        if (widget.ref === 'resourceField') {\n            const { store } = widget;\n\n            // Can't use store directly since it may be grouped and then contains irrelevant group records\n            widget.store = this.chainResourceStore();\n\n            // Allow the incoming widget's config to augment its store\n            if (store) {\n                widget.store.setConfig(store);\n            }\n\n            // When events are loaded with resourceId, we should only support single select.\n            // Only override this if the widget has not been explicitly configured\n            // with multiSelect.\n            if (!('multiSelect' in widget)) {\n                widget.multiSelect = !eventEditFeature.eventStore.usesSingleAssignment;\n            }\n        }\n\n        if ((widget.name === 'startDate' || widget.name === 'endDate') && widget.type === 'date') {\n            fieldConfig.format = eventEditFeature.dateFormat;\n        }\n\n        if ((widget.name === 'startDate' || widget.name === 'endDate') && widget.type === 'time') {\n            fieldConfig.format = eventEditFeature.timeFormat;\n        }\n\n        Object.assign(widget, fieldConfig);\n\n        return super.processWidgetConfig(widget);\n    }\n\n    onBeforeShow(...args) {\n        const\n            me               = this,\n            {\n                record,\n                titleRenderer\n            }                = me,\n            { deleteButton } = me.widgetMap;\n\n        // Hide delete button if we are readOnly or the event is in a create phase\n        // which means we are editing a dblclick-created or drag-created event.\n        if (deleteButton) {\n            deleteButton.hidden = me.readOnly || record.isCreating;\n        }\n\n        if (titleRenderer) {\n            me.title = me.callback(titleRenderer, me, [record]);\n        }\n        else {\n            me.title = me.initialTitle;\n        }\n\n        super.onBeforeShow?.(...args);\n    }\n\n    onInternalKeyDown(event) {\n        this.trigger('keyDown', { event });\n        super.onInternalKeyDown(event);\n    }\n\n    updateReadOnly(readOnly) {\n        const\n            {\n                deleteButton,\n                saveButton,\n                cancelButton\n            } = this.widgetMap;\n\n        super.updateReadOnly(readOnly);\n\n        if (deleteButton) {\n            deleteButton.hidden = readOnly;\n        }\n\n        if (saveButton) {\n            saveButton.hidden = readOnly;\n        }\n\n        if (cancelButton) {\n            cancelButton.hidden = readOnly;\n        }\n    }\n}\n\n// Register this widget type with its Factory\nEventEditor.initClass();\n","import RecurrenceFrequencyCombo from './RecurrenceFrequencyCombo.js';\n\n/**\n * @module Scheduler/view/recurrence/field/RecurrenceCombo\n */\n\n/**\n * A combobox field displaying the recurrence by either mode: `Daily`, `Weekly`, `Monthly` or `Yearly` if the recurrence\n * has no other non-default settings, or `Custom...` if the recurrence has custom setting applied.\n *\n * @extends Scheduler/view/recurrence/field/RecurrenceFrequencyCombo\n * @classType recurrencecombo\n */\nexport default class RecurrenceCombo extends RecurrenceFrequencyCombo {\n\n    static get $name() {\n        return 'RecurrenceCombo';\n    }\n\n    // Factoryable type name\n    static get type() {\n        return 'recurrencecombo';\n    }\n\n    static get defaultConfig() {\n        return {\n            customValue             : 'custom',\n            placeholder             : 'None',\n            // TODO: draw a splitting line\n            splitCls                : 'b-recurrencecombo-split',\n            items                   : true,\n            highlightExternalChange : false\n        };\n    }\n\n    buildItems() {\n        const me = this;\n\n        return [\n            { value : 'none', text : 'L{None}' },\n            ...super.buildItems(),\n            { value : me.customValue, text : 'L{Custom}', cls : me.splitCls }\n        ];\n    }\n\n    set value(value) {\n        // Use 'none' instead of falsy value\n        value = value || 'none';\n\n        super.value = value;\n    }\n\n    get value() {\n        return super.value;\n    }\n\n    set recurrence(recurrence) {\n        const me = this;\n\n        if (recurrence) {\n            me.value = me.isCustomRecurrence(recurrence) ? me.customValue : recurrence.frequency;\n        }\n        else {\n            me.value = null;\n        }\n    }\n\n    isCustomRecurrence(recurrence) {\n        const { interval, days, monthDays, months } = recurrence;\n\n        return Boolean(interval > 1 || (days && days.length) || (monthDays && monthDays.length) || (months && months.length));\n    }\n};\n\n// Register this widget type with its Factory\nRecurrenceCombo.initClass();\n","import Button from '../../../Core/widget/Button.js';\nimport RecurrenceLegend from '../../data/util/recurrence/RecurrenceLegend.js';\n\n/**\n * @module Scheduler/view/recurrence/RecurrenceLegendButton\n */\n\n/**\n * Class implementing a button which text displays the associated recurrence info in a human readable form.\n * @extends Core/widget/Button\n * @classType recurrencelegendbutton\n */\nexport default class RecurrenceLegendButton extends Button {\n\n    static get $name() {\n        return 'RecurrenceLegendButton';\n    }\n\n    // Factoryable type name\n    static get type() {\n        return 'recurrencelegendbutton';\n    }\n\n    static get defaultConfig() {\n        return {\n            localizableProperties : [],\n            recurrence            : null\n        };\n    }\n\n    /**\n     * Sets / gets the recurrence to display description for.\n     * @property {Scheduler.model.RecurrenceModel}\n     */\n    set recurrence(recurrence) {\n        this._recurrence = recurrence;\n        this.updateLegend();\n    }\n\n    get recurrence() {\n        return this._recurrence;\n    }\n\n    set eventStartDate(eventStartDate) {\n        this._eventStartDate = eventStartDate;\n        this.updateLegend();\n    }\n\n    get eventStartDate() {\n        return this._eventStartDate;\n    }\n\n    updateLegend() {\n        const { recurrence } = this;\n\n        this.text = recurrence ? RecurrenceLegend.getLegend(recurrence, this.eventStartDate) : '';\n    }\n\n    onLocaleChange() {\n        // on locale switch we update the button text to use proper language\n        this.updateLegend();\n    }\n\n    updateLocalization() {\n        this.onLocaleChange();\n        super.updateLocalization();\n    }\n}\n\n// Register this widget type with its Factory\nRecurrenceLegendButton.initClass();\n","import Popup from '../../../Core/widget/Popup.js';\nimport './RecurrenceEditorPanel.js';\n\n/**\n * @module Scheduler/view/recurrence/RecurrenceEditor\n */\n\n/**\n * Class implementing a dialog to edit a {@link Scheduler.model.RecurrenceModel recurrence model}. The class is used by\n * the {@link Scheduler.view.mixin.RecurringEvents recurring events} feature, and you normally don't need to instantiate\n * it.\n *\n * Before showing the dialog need to use {@link Core.widget.Container#property-record} to load a\n * {@link Scheduler.model.RecurrenceModel recurrence model} data into the editor fields. For example:\n *\n * ```javascript\n * // make the editor instance\n * const editor = new RecurrenceEditor();\n * // load recurrence model into it\n * editor.record = new RecurrenceModel({ frequency : \"WEEKLY\" });\n * // display the editor\n * editor.show();\n * ```\n *\n * @extends Core/widget/Popup\n * @classType recurrenceeditor\n */\nexport default class RecurrenceEditor extends Popup {\n\n    static get $name() {\n        return 'RecurrenceEditor';\n    }\n\n    // Factoryable type name\n    static get type() {\n        return 'recurrenceeditor';\n    }\n\n    static get configurable() {\n        return {\n            draggable : true,\n            closable  : true,\n            floating  : true,\n            cls       : 'b-recurrenceeditor',\n            title     : 'L{Repeat event}',\n            autoClose : true,\n            width     : 470,\n            items     : {\n                recurrenceEditorPanel : {\n                    type  : 'recurrenceeditorpanel',\n                    title : null\n                }\n            },\n            bbar : {\n                defaults : {\n                    localeClass : this\n                },\n                items : {\n                    foo : {\n                        type   : 'widget',\n                        cls    : 'b-label-filler',\n                        weight : 100\n                    },\n                    saveButton : {\n                        color   : 'b-green',\n                        text    : 'L{Save}',\n                        onClick : 'up.onSaveClick',\n                        weight  : 200\n                    },\n                    cancelButton : {\n                        color   : 'b-gray',\n                        text    : 'L{Object.Cancel}',\n                        onClick : 'up.onCancelClick',\n                        weight  : 300\n                    }\n                }\n            }\n        };\n    }\n\n    updateReadOnly(readOnly) {\n        super.updateReadOnly(readOnly);\n\n        // No save or cancel buttons. It's purely for information display when in readOnly mode\n        this.bbar.hidden = readOnly;\n    }\n\n    get recurrenceEditorPanel() {\n        return this.widgetMap.recurrenceEditorPanel;\n    }\n\n    // The following lines are added to satisfy the 904_unused localization test\n    // to let it know that these locales are used:\n    // 'L{DAILYintervalUnit}'\n    // 'L{WEEKLYintervalUnit}'\n    // 'L{MONTHLYintervalUnit}'\n    // 'L{YEARLYintervalUnit}'\n\n    updateRecord(record) {\n        this.recurrenceEditorPanel.record = record;\n    }\n\n    onSaveClick() {\n        const me = this;\n\n        if (me.saveHandler) {\n            me.saveHandler.call(me.thisObj || me, me, me.record);\n        }\n        else {\n            me.recurrenceEditorPanel.syncEventRecord();\n            me.close();\n        }\n    }\n\n    onCancelClick() {\n        const me = this;\n\n        if (me.cancelHandler) {\n            me.cancelHandler.call(me.thisObj || me, me, me.record);\n        }\n        else {\n            me.close();\n        }\n    }\n\n}\n\n// Register this widget type with its Factory\nRecurrenceEditor.initClass();\n","import Widget from '../../../Core/widget/Widget.js';\nimport Base from '../../../Core/Base.js';\nimport '../../view/recurrence/RecurrenceConfirmationPopup.js';\nimport '../../view/recurrence/field/RecurrenceCombo.js';\nimport '../../view/recurrence/RecurrenceLegendButton.js';\nimport '../../view/recurrence/RecurrenceEditor.js';\n\n/**\n * @module Scheduler/feature/mixin/RecurringEventEdit\n */\n\n/**\n * This mixin class provides recurring events functionality to the {@link Scheduler.feature.EventEdit event editor}.\n * @mixin\n */\nexport default Target => class RecurringEventEdit extends (Target || Base) {\n    static get $name() {\n        return 'RecurringEventEdit';\n    }\n\n    static get configurable() {\n        return {\n            recurringEventsItems : {\n                /**\n                 * Reference to the `Repeat` event field, if used\n                 * @member {Scheduler.view.recurrence.field.RecurrenceCombo} recurrenceCombo\n                 * @readonly\n                 */\n                recurrenceCombo : {\n                    type   : 'recurrencecombo',\n                    label  : 'L{EventEdit.Repeat}',\n                    ref    : 'recurrenceCombo',\n                    weight : 700\n                },\n                /**\n                 * Reference to the button that opens the event repeat settings dialog, if used\n                 * @member {Scheduler.view.recurrence.RecurrenceLegendButton} editRecurrenceButton\n                 * @readonly\n                 */\n                editRecurrenceButton : {\n                    type                 : 'recurrencelegendbutton',\n                    ref                  : 'editRecurrenceButton',\n                    name                 : 'recurrenceRule',\n                    color                : 'b-gray',\n                    menuIcon             : null,\n                    flex                 : 1,\n                    weight               : 800,\n                    ignoreParentReadOnly : true\n                }\n            },\n\n            /**\n             * Set to `false` to hide recurring fields in event editor, even if the\n             * {@link Scheduler.view.mixin.RecurringEvents#config-enableRecurringEvents Recurring Events} is `true`\n             * and a recurring event is being edited.\n             * @config {Boolean}\n             * @category Recurring\n             */\n            showRecurringUI : null\n        };\n    }\n\n    changeEditorConfig(editorConfig) {\n        editorConfig.items = { ...editorConfig.items, ...this.recurringEventsItems };\n\n        // EditBase inserts extraItems *after* all default items are in\n        editorConfig = super.changeEditorConfig(editorConfig);\n\n        return editorConfig;\n    }\n\n    construct(scheduler, config) {\n        super.construct(scheduler, config);\n\n        this.scheduler.ion({\n            beforeEventSave : 'onRecurrableEventBeforeSave',\n            thisObj         : this\n        });\n    }\n\n    doDestroy() {\n        this._recurrenceConfirmation?.destroy();\n        this._recurrenceEditor?.destroy();\n\n        super.doDestroy();\n    }\n\n    onEditorConstructed(editor) {\n        const me = this;\n\n        editor.ion({\n            hide    : me.onRecurringEventEditorHide,\n            thisObj : me\n        });\n\n        if (me.editRecurrenceButton) {\n            me.editRecurrenceButton.menu = me.recurrenceEditor;\n        }\n\n        me.recurrenceCombo?.ion({\n            change  : me.onRecurrenceComboChange,\n            thisObj : me\n        });\n    }\n\n    updateReadOnly(readOnly) {\n        if (this._recurrenceEditor) {\n            this._recurrenceEditor.readOnly = readOnly;\n        }\n    }\n\n    internalShowEditor() {\n        this.toggleRecurringFieldsVisibility(this.client.enableRecurringEvents && this.showRecurringUI !== false);\n    }\n\n    toggleRecurringFieldsVisibility(show = true) {\n        const methodName = show ? 'show' : 'hide';\n\n        this.editRecurrenceButton?.[methodName]?.();\n        this.recurrenceCombo?.[methodName]?.();\n    }\n\n    onRecurringEventEditorHide() {\n        if (this.recurrenceEditor?.isVisible) {\n            this.recurrenceEditor.hide();\n        }\n\n        if (this.recurrenceConfirmation?.isVisible) {\n            this.recurrenceConfirmation.hide();\n        }\n    }\n\n    // Builds RecurrenceModel to load into the recurrenceEditor\n    // It builds the model based on either:\n    // - recurrence rule string (if provided)\n    // - or the event being edited recurrence (if the event is repeating)\n    // - or simply make a recurrence model w/ default state (by default means: Frequency=Daily, Interval=1)\n    makeRecurrence(rule) {\n        const\n            event     = this.eventRecord,\n            eventCopy = event.copy();\n\n        let recurrence = event.recurrence;\n\n        if (!rule && recurrence) {\n            recurrence = recurrence.copy();\n        }\n        else {\n            recurrence = new event.recurrenceModel(rule ? { rule } : {});\n        }\n\n        // bind cloned recurrence to the cloned event\n        recurrence.timeSpan = eventCopy;\n        // update cloned event w/ start date from the UI field\n        eventCopy.setStartDate(this.values.startDate);\n\n        recurrence.suspendTimeSpanNotifying();\n\n        return recurrence;\n    }\n\n    onRecurrableEventBeforeSave({ eventRecord, context }) {\n        const me = this;\n\n        // Other views features may trigger beforeEventSave, so only react when *we* are editing.\n        if (me.isEditing && !eventRecord.isCreating && eventRecord.supportsRecurring &&\n                (eventRecord.isRecurring || eventRecord.isOccurrence)) {\n            me.recurrenceConfirmation.confirm({\n                actionType : 'update',\n                eventRecord,\n                changerFn() {\n                    context.finalize(true);\n                },\n                cancelFn() {\n                    context.finalize(false);\n                }\n            });\n\n            // signalizes that we plan to decide save or not asynchronously\n            context.async = true;\n        }\n    }\n\n    set recurrenceConfirmation(recurrenceConfirmation) {\n        this._recurrenceConfirmation = recurrenceConfirmation;\n    }\n\n    get recurrenceConfirmation() {\n        const me = this;\n\n        let recurrenceConfirmation = me._recurrenceConfirmation;\n\n        if (!recurrenceConfirmation || !recurrenceConfirmation.$$name) {\n            recurrenceConfirmation = Widget.create({\n                type  : 'recurrenceconfirmation',\n                owner : me.editor,\n                ...recurrenceConfirmation\n            });\n\n            me._recurrenceConfirmation = recurrenceConfirmation;\n        }\n\n        return recurrenceConfirmation;\n    }\n\n    set recurrenceEditor(recurrenceEditor) {\n        this._recurrenceEditor = recurrenceEditor;\n    }\n\n    get recurrenceEditor() {\n        const me = this;\n\n        let recurrenceEditor = me._recurrenceEditor;\n\n        // Recurrence editor is centered and modal.\n        if (!recurrenceEditor || !recurrenceEditor.$$name) {\n            me._recurrenceEditor = recurrenceEditor = Widget.create({\n                type         : 'recurrenceeditor',\n                autoShow     : false,\n                centered     : true,\n                modal        : true,\n                constrainTo  : globalThis,\n                anchor       : false,\n                rootElement  : me.rootElement,\n                saveHandler  : me.recurrenceEditorSaveHandler,\n                onBeforeShow : me.onBeforeShowRecurrenceEditor.bind(me),\n                thisObj      : me,\n                ...recurrenceEditor\n            });\n\n            // Must set *after* construction, otherwise it becomes the default state\n            // to reset readOnly back to.  Must use direct property access because\n            // getter consults state of editor.\n            recurrenceEditor.readOnly = me._readOnly;\n        }\n\n        return recurrenceEditor;\n    }\n\n    onBeforeShowRecurrenceEditor() {\n        const\n            me                                = this,\n            { recurrenceEditor, eventRecord } = me;\n\n        if (recurrenceEditor && eventRecord?.supportsRecurring) {\n            // if the event has no recurrence yet ..initialize it before showing recurrence editor\n            if (!me.recurrence) {\n                me.recurrence = me.makeRecurrence();\n            }\n\n            // update the cloned recurrence w/ up to date start date value\n            me.recurrence.timeSpan.setStartDate(me.values.startDate);\n\n            // load RecurrenceModel record into the recurrence editor\n            recurrenceEditor.record = me.recurrence;\n\n            // In case they drag it. Centered falls off if the widget has position set.\n            recurrenceEditor.centered = true;\n        }\n    }\n\n    loadRecurrenceData(recurrence) {\n        this.recurrence = recurrence;\n\n        this.updateRecurrenceFields(recurrence);\n    }\n\n    updateRecurrenceFields(recurrence) {\n        const\n            me                       = this,\n            { editRecurrenceButton } = me;\n\n        if (me.recurrenceCombo) {\n            me.recurrenceCombo.recurrence = recurrence;\n        }\n\n        // update the recurrence legend\n        if (editRecurrenceButton) {\n            editRecurrenceButton.recurrence = recurrence;\n            editRecurrenceButton.value = recurrence ? recurrence.rule : null;\n\n            if (recurrence && me.client.enableRecurringEvents && me.showRecurringUI !== false) {\n                editRecurrenceButton.show();\n            }\n            else {\n                editRecurrenceButton.hide();\n            }\n        }\n    }\n\n    onRecurrenceComboChange({ source, value, userAction }) {\n        if (userAction) {\n            const\n                me                   = this,\n                { recurrenceEditor } = me;\n\n            if (value === source.customValue) {\n                // if user picked \"Custom\" - show recurrence editor\n                // This will recurse through the change event into the opposite side\n                // of the value test which will call updateRecurrenceFields, where the\n                // assignment to the value of the recurrenceCombo will be a non-change.\n                // That will sync the state of the recurrenceButton.\n                me.recurrenceCombo.recurrence = me.makeRecurrence();\n\n                if (recurrenceEditor.centered) {\n                    recurrenceEditor.show();\n                }\n                else {\n                    recurrenceEditor.show((me.editRecurrenceButton || source).element);\n                }\n            }\n            // user has picked some frequency -> make a new recurrence based on it\n            else {\n                me.loadRecurrenceData(value && value !== 'none' ? me.makeRecurrence(`FREQ=${value}`) : null);\n            }\n        }\n    }\n\n    recurrenceEditorSaveHandler(editor, recurrence) {\n        // apply changes to the kept recurrence\n        editor.recurrenceEditorPanel.syncEventRecord(recurrence);\n\n        // update the recurrence related UI\n        this.updateRecurrenceFields(recurrence);\n\n        editor.close();\n    }\n\n    onDatesChange(...args) {\n        super.onDatesChange(...args);\n\n        if (!this.loadingRecord && this.editRecurrenceButton) {\n            const { startDate } = this.values;\n\n            if (startDate) {\n                this.editRecurrenceButton.eventStartDate = startDate;\n            }\n        }\n    }\n\n    internalLoadRecord(eventRecord) {\n        if (eventRecord?.supportsRecurring) {\n            this.loadRecurrenceData(eventRecord.recurrence ? this.makeRecurrence() : null);\n        }\n    }\n\n    updateRecord(record) {\n        // Special handling for when setting recurrence to \"None\". Since button gets hidden its value is not picked up\n        // by the normal flow.\n        if (record.recurrenceRule && !this.recurrence) {\n            record.recurrenceRule = null;\n        }\n\n        return super.updateRecord(record);\n    }\n};\n","import Combo from '../../Core/widget/Combo.js';\nimport DomHelper from '../../Core/helper/DomHelper.js';\n\n/**\n * @module Scheduler/widget/ResourceCombo\n */\n\n/**\n * A Combo subclass which selects resources, optionally displaying the {@link Scheduler.model.ResourceModel#field-eventColor}\n * of each resource in the picker and in the input area.\n *\n * {@inlineexample Scheduler/widget/ResourceCombo.js}\n *\n * @extends Core/widget/Combo\n * @classType resourceCombo\n * @inputfield\n */\nexport default class ResourceCombo extends Combo {\n    static get $name() {\n        return 'ResourceCombo';\n    }\n\n    // Factoryable type name\n    static get type() {\n        return 'resourcecombo';\n    }\n\n    static get configurable() {\n        return {\n            /**\n             * Show the {@link Scheduler.model.ResourceModel#field-eventColor event color} for each resource\n             * @config {Boolean}\n             * @default\n             */\n            showEventColor : false,\n\n            picker : {\n                cls : 'b-resourcecombo-picker',\n\n                itemIconTpl(record, i) {\n                    const\n                        { eventColor } = record,\n                        isStyleColor   = !DomHelper.isNamedColor(eventColor),\n                        style          = eventColor ? (isStyleColor ? ` style=\"color:${eventColor}\"` : '') : ' style=\"display:none\"',\n                        colorClass     = !eventColor || isStyleColor ? '' : ` b-sch-foreground-${eventColor}`;\n\n                    return `<div class=\"b-icon b-icon-square${colorClass}\"${style}></div>`;\n                }\n            }\n        };\n    }\n\n    changeShowEventColor(showEventColor) {\n        return Boolean(showEventColor);\n    }\n\n    updateShowEventColor(showEventColor) {\n        const\n            { _picker } = this,\n            methodName  = showEventColor ? 'add' : 'remove';\n\n        this.element.classList[methodName]('b-show-event-color');\n        _picker?.element.classList[methodName]('b-show-event-color');\n    }\n\n    changePicker(picker, oldPicker) {\n        picker = super.changePicker(picker, oldPicker);\n        picker?.element.classList[this.showEventColor ? 'add' : 'remove']('b-show-event-color');\n        return picker;\n    }\n\n    // Implementation needed at this level because it has two inner elements in its inputWrap\n    get innerElements() {\n        return [\n            {\n                class     : 'b-icon b-resource-icon b-icon-square b-hide-display',\n                reference : 'resourceIcon'\n            },\n            this.inputElement\n        ];\n    }\n\n    syncInputFieldValue() {\n        const\n            me            = this,\n            {\n                resourceIcon,\n                lastResourceIconCls\n            }             = me,\n            { classList } = resourceIcon,\n            eventColor    = me.selected?.eventColor ?? '';\n\n        super.syncInputFieldValue();\n\n        // Remove last colour whichever way it was done\n        resourceIcon.style.color = '';\n        lastResourceIconCls && classList.remove(lastResourceIconCls);\n        me.lastResourceIconCls = null;\n\n        if (eventColor) {\n            if (DomHelper.isNamedColor(eventColor)) {\n                me.lastResourceIconCls = `b-sch-foreground-${eventColor}`;\n                classList.add(me.lastResourceIconCls);\n            }\n            else {\n                resourceIcon.style.color = eventColor;\n            }\n            classList.remove('b-hide-display');\n        }\n        else {\n            classList.add('b-hide-display');\n        }\n    }\n}\n\n// Register this widget type with its Factory\nResourceCombo.initClass();\n","import EditBase from './base/EditBase.js';\nimport GridFeatureManager from '../../Grid/feature/GridFeatureManager.js';\nimport ObjectHelper from '../../Core/helper/ObjectHelper.js';\nimport '../view/EventEditor.js';\nimport Delayable from '../../Core/mixin/Delayable.js';\nimport RecurringEventEdit from './mixin/RecurringEventEdit.js';\nimport '../../Core/widget/TextField.js';\nimport '../../Scheduler/widget/ResourceCombo.js';\nimport TimeSpan from '../../Scheduler/model/TimeSpan.js';\nimport '../../Core/widget/DateField.js';\nimport '../../Core/widget/TimeField.js';\nimport '../../Core/widget/Button.js';\nimport Widget from '../../Core/widget/Widget.js';\nimport DateHelper from '../../Core/helper/DateHelper.js';\n\n/**\n * @module Scheduler/feature/EventEdit\n */\n\nconst punctuation = /[^\\w\\d]/g;\n\n/**\n * Feature that displays a popup containing widgets for editing event data.\n *\n * {@inlineexample Scheduler/feature/EventEdit.js}\n *\n * To customize its contents you can:\n *\n * * Reconfigure built in widgets by providing override configs in the {@link Scheduler.feature.base.EditBase#config-items} config.\n * * Change the date format of the date & time fields: {@link Scheduler.feature.base.EditBase#config-dateFormat} and {@link Scheduler.feature.base.EditBase#config-timeFormat }\n * * Configure provided widgets in the editor and add your own in the {@link Scheduler.feature.base.EditBase#config-items} config.\n * * Remove fields related to recurring events configuration (such as `recurrenceCombo`) by setting {@link Scheduler.feature.mixin.RecurringEventEdit#config-showRecurringUI} config to `false`.\n * * Advanced: Reconfigure the whole editor widget using {@link #config-editorConfig}\n *\n * ## Built in widgets\n *\n * The built in widgets are:\n *\n * | Widget ref             | Type                                                     | Weight | Description                                                    |\n * |------------------------|----------------------------------------------------------|--------|----------------------------------------------------------------|\n * | `nameField`            | {@link Core.widget.TextField}                            | 100    | Edit name                                                      |\n * | `resourceField`        | {@link Scheduler.widget.ResourceCombo}                   | 200    | Pick resource(s)                                               |\n * | `startDateField`       | {@link Core.widget.DateField}                            | 300    | Edit startDate (date part)                                     |\n * | `startTimeField`       | {@link Core.widget.TimeField}                            | 400    | Edit startDate (time part)                                     |\n * | `endDateField`         | {@link Core.widget.DateField}                            | 500    | Edit endDate (date part)                                       |\n * | `endTimeField`         | {@link Core.widget.TimeField}                            | 600    | Edit endDate (time part)                                       |\n * | `recurrenceCombo`      | {@link Scheduler.view.recurrence.field.RecurrenceCombo}  | 700    | Select recurrence rule (only visible if recurrence is used)    |\n * | `editRecurrenceButton` | {@link Scheduler.view.recurrence.RecurrenceLegendButton} | 800    | Edit the recurrence rule  (only visible if recurrence is used) |\n *\n * The built in buttons are:\n *\n * | Widget ref             | Type                                                                     | Weight | Description                                                    |\n * |------------------------|--------------------------------------------------------------------------|--------|----------------------------------------------------------------|\n * | `saveButton`           | {@link Core.widget.Button}                                               | 100    | Save event button on the bbar                                  |\n * | `deleteButton`         | {@link Core.widget.Button}                                               | 200    | Delete event button on the bbar                                |\n * | `cancelButton`         | {@link Core.widget.Button}                                               | 300    | Cancel event editing button on the bbar                        |\n *\n * ## Removing a built in item\n *\n * To remove a built in widget, specify its `ref` as `null` in the `items` config:\n *\n * ```javascript\n * const scheduler = new Scheduler({\n *     features : {\n *         eventEdit : {\n *             items : {\n *                 // Remove the start time field\n *                 startTimeField : null\n *             }\n *         }\n *     }\n * })\n * ```\n *\n * Bottom buttons may be hidden using `bbar` config passed to `editorConfig`:\n * ```javascript\n * const scheduler = new Scheduler({\n *     features : {\n *         eventEdit : {\n *             editorConfig : {\n *                 bbar : {\n *                     items : {\n *                         deleteButton : null\n *                     }\n *                 }\n *             }\n *         }\n *     }\n * })\n * ```\n *\n * To remove fields related to recurring events configuration (such as `recurrenceCombo`), set {@link Scheduler.feature.mixin.RecurringEventEdit#config-showRecurringUI} config to `false`.\n *\n * ## Customizing a built in widget\n *\n * To customize a built in widget, use its `ref` as the key in the `items` config and specify the configs you want\n * to change (they will merge with the widgets default configs):\n *\n * ```javascript\n * const scheduler = new Scheduler({\n *     features : {\n *         eventEdit : {\n *             items : {\n *                 // ref for an existing field\n *                 nameField : {\n *                     // Change its label\n *                     label : 'Description'\n *                 }\n *             }\n *         }\n *     }\n * })\n * ```\n *\n * ## Adding custom widgets\n *\n * To add a custom widget, add an entry to the `items` config. The `name` property links the input field to a field in\n * the loaded event record:\n *\n * ```javascript\n * const scheduler = new Scheduler({\n *     features : {\n *         eventEdit : {\n *             items : {\n *                 // Key to use as fields ref (for easier retrieval later)\n *                 color : {\n *                     type  : 'combo',\n *                     label : 'Color',\n *                     items : ['red', 'green', 'blue'],\n *                     // name will be used to link to a field in the event record when loading and saving in the editor\n *                     name  : 'eventColor'\n *                 }\n *             }\n *         }\n *     }\n * })\n * ```\n *\n * For more info on customizing the event editor, please see \"Customize event editor\" guide.\n *\n * This feature is **enabled** by default\n *\n * @mixes Scheduler/feature/mixin/RecurringEventEdit\n * @extends Scheduler/feature/base/EditBase\n * @demo Scheduler/eventeditor\n * @classtype eventEdit\n * @feature\n */\nexport default class EventEdit extends EditBase.mixin(RecurringEventEdit, Delayable) {\n    //region Config\n\n    static get $name() {\n        return 'EventEdit';\n    }\n\n    static get configurable() {\n        return {\n            /**\n             * The event that shall trigger showing the editor. Defaults to `eventdblclick`, set to `''` or null to\n             * disable editing of existing events.\n             * @config {String}\n             * @default\n             * @category Editor\n             */\n            triggerEvent : 'eventdblclick',\n\n            /**\n             * The data field in the model that defines the eventType.\n             * Applied as class (b-eventtype-xx) to the editors element, to allow showing/hiding fields depending on\n             * eventType. Dynamic toggling of fields in the editor is activated by adding an `eventTypeField` field to\n             * your widget:\n             *\n             * ```javascript\n             * const scheduler = new Scheduler({\n             *    features : {\n             *       eventEdit : {\n             *           items : {\n             *               eventTypeField : {\n             *                  type  : 'combo',\n             *                  name  : 'eventType',\n             *                  label : 'Type',\n             *                  items : ['Appointment', 'Internal', 'Meeting']\n             *               }\n             *           }\n             *        }\n             *     }\n             * });\n             * ```\n             * Note, your event model class also must declare this field:\n             * ```javascript\n             *  class MyEvent extends EventModel {\n             *      static get fields() {\n             *          return [\n             *              { name : 'eventType' }\n             *          ];\n             *      }\n             *  }\n             * ```\n             * @config {String}\n             * @default\n             * @category Editor\n             */\n            typeField : 'eventType',\n\n            /**\n             * The current {@link Scheduler.model.EventModel} record, which is being edited by the event editor.\n             * @property {Scheduler.model.EventModel}\n             * @readonly\n             */\n            eventRecord : null,\n\n            /**\n             * Specify `true` to put the editor in read only mode.\n             * @config {Boolean}\n             * @default false\n             */\n            readOnly : null,\n\n            /**\n             * The configuration for the internal editor widget. With this config you can control the *type*\n             * of editor (defaults to `Popup`) and which widgets to show,\n             * change the items in the `bbar`, or change whether the popup should be modal etc.\n             *\n             * ```javascript\n             * const scheduler = new Scheduler({\n             *     features : {\n             *         eventEdit  : {\n             *             editorConfig : {\n             *                 modal  : true,\n             *                 cls    : 'my-editor' // A CSS class,\n             *                 items  : {\n             *                     owner : {\n             *                         weight : -100, // Will sort above system-supplied fields which are weight 100 to 800\n             *                         type   : 'usercombo',\n             *                         name   : 'owner',\n             *                         label  : 'Owner'\n             *                     },\n             *                     agreement : {\n             *                         weight : 1000, // Will sort below system-supplied fields which are weight 100 to 800\n             *                         type   : 'checkbox',\n             *                         name   : 'agreement',\n             *                         label  : 'Agree to terms'\n             *                     },\n             *                     resourceField : {\n             *                         // Apply a special filter to limit the Combo's access\n             *                         // to resources.\n             *                         store  {\n             *                             filters : [{\n             *                                 filterBy(resource) {\n             *                                     return shouldShowResource(record);\n             *                                 }\n             *                             }]\n             *                         }\n             *                     }\n             *                 },\n             *                 bbar : {\n             *                     items : {\n             *                         deleteButton : {\n             *                             hidden : true\n             *                         }\n             *                     }\n             *                 }\n             *             }\n             *         }\n             *     }\n             * });\n             * ```\n             *\n             * Or to use your own custom editor:\n             *\n             * ```javascript\n             * const scheduler = new Scheduler({\n             *     features : {\n             *         eventEdit  : {\n             *             editorConfig : {\n             *                 type : 'myCustomEditorType'\n             *             }\n             *         }\n             *     }\n             * });\n             * ```\n             * @config {Object}\n             * @category Editor\n             */\n            editorConfig : {\n                type        : 'eventeditor',\n                title       : 'L{EventEdit.Edit event}',\n                closable    : true,\n                localeClass : this,\n\n                defaults : {\n                    localeClass : this\n                },\n                items : {\n                    /**\n                     * Reference to the name field, if used\n                     * @member {Core.widget.TextField} nameField\n                     * @readonly\n                     */\n                    nameField : {\n                        type      : 'text',\n                        label     : 'L{Name}',\n                        clearable : true,\n                        name      : 'name',\n                        weight    : 100,\n                        required  : true\n                    },\n                    /**\n                     * Reference to the resource field, if used\n                     * @member {Core.widget.Combo} resourceField\n                     * @readonly\n                     */\n                    resourceField : {\n                        type                    : 'resourcecombo',\n                        label                   : 'L{Resource}',\n                        name                    : 'resource',\n                        editable                : true,\n                        valueField              : 'id',\n                        displayField            : 'name',\n                        highlightExternalChange : false,\n                        destroyStore            : true,\n                        weight                  : 200\n                    },\n                    /**\n                     * Reference to the start date field, if used\n                     * @member {Core.widget.DateField} startDateField\n                     * @readonly\n                     */\n                    startDateField : {\n                        type             : 'date',\n                        cls              : 'b-inline',\n                        clearable        : false,\n                        required         : true,\n                        label            : 'L{Start}',\n                        name             : 'startDate',\n                        validateDateOnly : true,\n                        weight           : 300\n                    },\n                    /**\n                     * Reference to the start time field, if used\n                     * @member {Core.widget.TimeField} startTimeField\n                     * @readonly\n                     */\n                    startTimeField : {\n                        type      : 'time',\n                        clearable : false,\n                        required  : true,\n                        name      : 'startDate',\n                        cls       : 'b-match-label',\n                        weight    : 400\n                    },\n                    /**\n                     * Reference to the end date field, if used\n                     * @member {Core.widget.DateField} endDateField\n                     * @readonly\n                     */\n                    endDateField : {\n                        type             : 'date',\n                        cls              : 'b-inline',\n                        clearable        : false,\n                        required         : true,\n                        label            : 'L{End}',\n                        name             : 'endDate',\n                        validateDateOnly : true,\n                        weight           : 500\n                    },\n                    /**\n                     * Reference to the end time field, if used\n                     * @member {Core.widget.TimeField} endTimeField\n                     * @readonly\n                     */\n                    endTimeField : {\n                        type      : 'time',\n                        clearable : false,\n                        required  : true,\n                        name      : 'endDate',\n                        cls       : 'b-match-label',\n                        weight    : 600\n                    }\n                },\n\n                bbar : {\n                    // When readOnly, child buttons are hidden\n                    hideWhenEmpty : true,\n\n                    defaults : {\n                        localeClass : this\n                    },\n                    items : {\n                        /**\n                         * Reference to the save button, if used\n                         * @member {Core.widget.Button} saveButton\n                         * @readonly\n                         */\n                        saveButton : {\n                            color  : 'b-blue',\n                            cls    : 'b-raised',\n                            text   : 'L{Save}',\n                            weight : 100\n                        },\n                        /**\n                         * Reference to the delete button, if used\n                         * @member {Core.widget.Button} deleteButton\n                         * @readonly\n                         */\n                        deleteButton : {\n                            text   : 'L{Delete}',\n                            weight : 200\n                        },\n                        /**\n                         * Reference to the cancel button, if used\n                         * @member {Core.widget.Button} cancelButton\n                         * @readonly\n                         */\n                        cancelButton : {\n                            text   : 'L{Object.Cancel}',\n                            weight : 300\n                        }\n                    }\n                }\n            },\n\n            targetEventElement : null\n        };\n    }\n\n    static get pluginConfig() {\n        return {\n            chain : [\n                'populateEventMenu',\n                'onEventEnterKey',\n                'editEvent'\n            ]\n        };\n    }\n\n    //endregion\n\n    //region Init & destroy\n\n    construct(scheduler, config) {\n        // Default to the scheduler's state, but configs may override\n        this.readOnly = scheduler.readOnly;\n\n        super.construct(scheduler, config);\n\n        scheduler.ion({\n            projectChange : 'onChangeProject',\n            readOnly      : 'onClientReadOnlyToggle',\n            thisObj       : this\n        });\n    }\n\n    get scheduler() {\n        return this.client;\n    }\n\n    //endregion\n\n    //region Editing\n\n    /**\n     * Get/set readonly state\n     * @property {Boolean}\n     */\n    get readOnly() {\n        return this._editor ? this.editor.readOnly : this._readOnly;\n    }\n\n    updateReadOnly(readOnly) {\n        super.updateReadOnly(readOnly);\n\n        if (this._editor) {\n            this.editor.readOnly = readOnly;\n        }\n    }\n\n    onClientReadOnlyToggle({ readOnly }) {\n        this.readOnly = readOnly;\n    }\n\n    /**\n     * Returns the editor widget representing this feature\n     * @member {Core.widget.Popup}\n     */\n    get editor() {\n        const\n            me              = this,\n            editorListeners = {\n                beforehide : 'resetEditingContext',\n                beforeshow : 'onBeforeEditorShow',\n                keydown    : 'onPopupKeyDown',\n                thisObj    : me\n            };\n\n        let { _editor : editor } = me;\n\n        if (editor) {\n            return editor;\n        }\n\n        editor = me._editor = Widget.create(me.getEditorConfig());\n\n        // If the default Popup has been reconfigured to be static, add it as a child of our client.\n        if (!editor.floating && !editor.positioned) {\n            // If not configured with an appendTo, we add it as a child of our client.\n            if (!editor.element.parentNode) {\n                me.client.add(editor);\n            }\n            delete editorListeners.beforehide;\n            delete editorListeners.beforShow;\n            editorListeners.beforeToggleReveal = 'onBeforeEditorToggleReveal';\n        }\n\n        // Must set *after* construction, otherwise it becomes the default state\n        // to reset readOnly back to. Must use direct property access because\n        // getter consults state of editor.\n        editor.readOnly = me._readOnly;\n\n        if (editor.items.length === 0) {\n            console.warn('Event Editor configured without any `items`');\n        }\n\n        // add listeners programmatically so users cannot override them accidentally\n        editor.ion(editorListeners);\n\n        /**\n         * Fired before the editor will load the event record data into its input fields. This is useful if you\n         * want to modify the fields before data is loaded (e.g. set some input field to be readonly)\n         * @on-owner\n         * @event eventEditBeforeSetRecord\n         * @param {Core.widget.Container} source The editor widget\n         * @param {Scheduler.model.EventModel} record The record\n         */\n        me.scheduler.relayEvents(editor, ['beforeSetRecord'], 'eventEdit');\n\n        // assign widget variables, using widget name: startDate -> me.startDateField\n        // widgets with id set use that instead, id -> me.idField\n        Object.values(editor.widgetMap).forEach(widget => {\n            const ref = widget.ref || widget.id;\n            // don't overwrite if already defined\n            if (ref && !me[ref]) {\n                me[ref] = widget;\n\n                switch (widget.name) {\n                    case 'startDate':\n                    case 'endDate':\n                        widget.ion({ change : 'onDatesChange', thisObj : me });\n                        break;\n                }\n            }\n        });\n\n        // launch onEditorConstructed hook if provided\n        me.onEditorConstructed?.(editor);\n\n        me.eventTypeField?.ion({ change : 'onEventTypeChange', thisObj : me });\n\n        me.saveButton?.ion({ click : 'onSaveClick', thisObj : me });\n        me.deleteButton?.ion({ click : 'onDeleteClick', thisObj : me });\n        me.cancelButton?.ion({ click : 'onCancelClick', thisObj : me });\n\n        return editor;\n    }\n\n    getEditorConfig() {\n        const\n            me                 = this,\n            // must result in longest format, ie 2 digits for date and all time parts.\n            time               = new Date(2000, 12, 31, 23, 55, 55),\n            dateLength         = DateHelper.format(time, me.dateFormat).replace(punctuation, '').length,\n            timeLength         = DateHelper.format(time, me.timeFormat).replace(punctuation, '').length,\n            dateTimeLength     = dateLength + timeLength,\n            { cls, scheduler } = me,\n            result             = ObjectHelper.assign({\n                owner            : scheduler,\n                eventEditFeature : me,\n                weekStartDay     : me.weekStartDay,\n                align            : 'b-t',\n                id               : `${scheduler.id}-event-editor`,\n                autoShow         : false,\n                anchor           : true,\n                scrollAction     : 'realign',\n                constrainTo      : globalThis,\n                cls\n            }, me.editorConfig);\n\n        // User configuration may have included a render target which means the editor\n        // will not be floating.\n        if (Widget.prototype.getRenderContext(result)[0]) {\n            result.floating = false;\n        }\n\n        // If the default Popup has been reconfigured to be static, ensure it starts\n        // life as a visible but collapsed panel.\n        if (result.floating === false && !result.positioned) {\n            result.collapsible = {\n                type           : 'overlay',\n                direction      : 'right',\n                autoClose      : false,\n                tool           : null,\n                recollapseTool : null\n            };\n            result.collapsed = true;\n            result.hidden = result.anchor = false;\n            result.hide = function() {\n                this.collapsible.toggleReveal(false);\n            };\n        }\n\n        // Layout-affecting props must be available early so that appendTo ends up with\n        // correct layout.\n        result.onElementCreated = function({ element }) {\n            element.style.setProperty('--date-time-length', `${dateTimeLength}em`);\n            element.style.setProperty('--date-width-difference', `${(dateLength - timeLength) / 2}em`);\n        };\n        return result;\n    }\n\n    // Called from editEvent() to actually show the editor\n    internalShowEditor(eventRecord, resourceRecord, align = null) {\n        const\n            me            = this,\n            { scheduler } = me,\n            // Align to the element (b-sch-event) and not the wrapper\n            eventElement = align?.target?.nodeType === Element.ELEMENT_NODE\n                ? align.target\n                : scheduler.getElementFromEventRecord(eventRecord, resourceRecord),\n            isPartOfStore = eventRecord.isPartOfStore(scheduler.eventStore);\n\n        align = align ?? {\n            // Align to the element (b-sch-event) and not the wrapper\n            target : eventElement,\n            anchor : true\n        };\n\n        // Event not in current TimeAxis - cannot be edited without extending the TimeAxis.\n        // If there's no event element and the eventRecord is not in the store, we still\n        // edit centered on the Scheduler - we're adding a new event\n        if (align.target || !isPartOfStore || eventRecord.isCreating) {\n            /**\n             * Fires on the owning Scheduler before an event is displayed in an editor.\n             * This may be listened for to allow an application to take over event editing duties. Returning `false`\n             * stops the default editing UI from being shown.\n             * @event beforeEventEdit\n             * @on-owner\n             * @param {Scheduler.view.Scheduler} source The scheduler\n             * @param {Scheduler.feature.EventEdit} eventEdit The eventEdit feature\n             * @param {Scheduler.model.EventModel} eventRecord The record about to be shown in the event editor.\n             * @param {Scheduler.model.ResourceModel} resourceRecord The Resource record for the event. If the event\n             * is being created, it will not contain a resource, so this parameter specifies the resource the\n             * event is being created for.\n             * @param {HTMLElement} eventElement The element which represents the event in the scheduler display.\n             * @preventable\n             */\n            if (scheduler.trigger('beforeEventEdit', {\n                eventEdit : me,\n                eventRecord,\n                resourceRecord,\n                eventElement\n            }) === false) {\n                scheduler.element.classList.remove('b-eventeditor-editing');\n                return false;\n            }\n\n            me.resourceRecord = resourceRecord;\n\n            const { editor } = me;\n\n            me.editingContext = {\n                eventRecord,\n                resourceRecord,\n                eventElement,\n                editor,\n                isPartOfStore\n            };\n\n            super.internalShowEditor?.(eventRecord, resourceRecord, align);\n\n            if (me.typeField) {\n                me.toggleEventType(eventRecord.get(me.typeField));\n            }\n\n            me.loadRecord(eventRecord, resourceRecord);\n\n            // If it's a static child of the client which is collapsed, expand it.\n            // Floating components focusOnShow by default, this will need to be focused.\n            if (editor.collapsed) {\n                // The *initial* reveal does not animate unless the toggleReveal call is delayed.\n                editor.setTimeout(async() => {\n                    await editor.collapsible.toggleReveal(true);\n                    editor.focus();\n                }, 100);\n            }\n            // Honour alignment settings \"anchor\" and \"centered\" which may be injected from editorConfig.\n            else if (editor.centered || !editor.anchor || !editor.floating) {\n                editor.show();\n            }\n            else if (eventElement) {\n                me.targetEventElement = eventElement;\n                editor.showBy(align);\n            }\n            // We are adding an unrendered event. Display the editor centered\n            else {\n                editor.show();\n\n                // Must be done after show because show always reverts to its configured centered setting.\n                editor.updateCentered(true);\n            }\n\n            // Adjust time field step increment based on timeAxis resolution\n            const timeResolution = scheduler.timeAxisViewModel.timeResolution;\n\n            if (timeResolution.unit === 'hour' || timeResolution.unit === 'minute') {\n                const step = `${timeResolution.increment}${timeResolution.unit}`;\n                if (me.startTimeField) {\n                    me.startTimeField.step = step;\n                }\n                if (me.endTimeField) {\n                    me.endTimeField.step = step;\n                }\n            }\n\n            // Might end up here with the old listener still around in monkey test for stress demo in turbo mode.\n            // Some action happening during edit, but cannot track down how what is going on\n            me.detachListeners('changesWhileEditing');\n\n            scheduler.eventStore.ion({\n                change  : me.onChangeWhileEditing,\n                refresh : me.onChangeWhileEditing,\n                thisObj : me,\n                name    : 'changesWhileEditing'\n            });\n        }\n    }\n\n    onChangeWhileEditing() {\n        const me = this;\n        // If event was removed, cancel editing\n        if (me.isEditing && me.editingContext.isPartOfStore && !me.eventRecord.isPartOfStore(me.scheduler.eventStore)) {\n            me.onCancelClick();\n        }\n    }\n\n    // Fired in a listener so that it's after the auto-called onBeforeShow listeners so that\n    // subscribers to the beforeEventEditShow are called at exactly the correct lifecycle point.\n    onBeforeEditorShow() {\n        super.onBeforeEditorShow(...arguments);\n\n        /**\n         * Fires on the owning Scheduler when the editor for an event is available but before it is populated with\n         * data and shown. Allows manipulating fields etc.\n         * @event beforeEventEditShow\n         * @on-owner\n         * @param {Scheduler.view.Scheduler} source The scheduler\n         * @param {Scheduler.feature.EventEdit} eventEdit The eventEdit feature\n         * @param {Scheduler.model.EventModel} eventRecord The record about to be shown in the event editor.\n         * @param {Scheduler.model.ResourceModel} resourceRecord The Resource record for the event. If the event\n         * is being created, it will not contain a resource, so this parameter specifies the resource the\n         * event is being created for.\n         * @param {HTMLElement} eventElement The element which represents the event in the scheduler display.\n         * @param {Core.widget.Popup} editor The editor\n         */\n        this.scheduler.trigger('beforeEventEditShow', {\n            eventEdit : this,\n            ...this.editingContext\n        });\n    }\n\n    updateTargetEventElement(targetEventElement, oldTargetEventElement) {\n        targetEventElement?.classList.add('b-editing');\n        oldTargetEventElement?.classList.remove('b-editing');\n    }\n\n    /**\n     * Opens an editor for the passed event. This function is exposed on Scheduler and can be called as\n     * `scheduler.editEvent()`.\n     * @param {Scheduler.model.EventModel} eventRecord Event to edit\n     * @param {Scheduler.model.ResourceModel} [resourceRecord] The Resource record for the event.\n     * This parameter is needed if the event is newly created for a resource and has not been assigned, or when using\n     * multi assignment.\n     * @param {HTMLElement} [element] Element to anchor editor to (defaults to events element)\n     * @on-owner\n     */\n    editEvent(eventRecord, resourceRecord, element = null) {\n        const\n            me                  = this,\n            { simpleEventEdit } = me.client.features;\n\n        if (me.isEditing) {\n            // old editing flow already running, clean it up\n            me.resetEditingContext();\n        }\n\n        // If simple edit feature is active, use it when a new event is created\n        if (me.disabled || eventRecord.readOnly || (eventRecord.isCreating && simpleEventEdit?.enabled)) {\n            return;\n        }\n\n        // Implementations may be async, so the return value must always be propagated.\n        const result = me.doEditEvent(...arguments);\n\n        // The Promise being async allows a mouseover to trigger the event tip\n        // unless we add the editing class immediately (But only if we actually began editing).\n        if (me.isEditing) {\n            me.scheduler.element.classList.add('b-eventeditor-editing');\n        }\n\n        return result;\n    }\n\n    /**\n     * Returns true if the editor is currently active\n     * @readonly\n     * @property {Boolean}\n     */\n    get isEditing() {\n        const { _editor } = this;\n\n        return Boolean(\n            // Editor is not visible if it is collapsed and not expanded\n            _editor?.isVisible && !(_editor.collapsed && !_editor.revealed)\n        );\n    }\n\n    // editEvent is the single entry point in the base class.\n    // Subclass implementations of the action may differ, so are implemented in doEditEvent\n    doEditEvent(eventRecord, resourceRecord, element = null) {\n        const\n            me            = this,\n            { scheduler } = me,\n            isNewRecord   = eventRecord.isCreating;\n\n        if (!resourceRecord) {\n            // Need to handle resourceId for edge case when creating an event with resourceId and editing it before\n            // adding it to the EventStore\n            resourceRecord = eventRecord.resource || me.resourceStore.getById(eventRecord.resourceId);\n        }\n\n        if (isNewRecord) {\n            // Ensure temporal data fields are ready when the editor is shown\n            TimeSpan.prototype.normalize.call(eventRecord);\n        }\n\n        // If element is specified (call triggered by EventDragCreate)\n        // Then we can align to that, and no scrolling is necessary.\n        // If we are simply being asked to edit a new event which is not\n        // yet added, the editor is centered, and no scroll is necessary\n        if (element || isNewRecord) {\n            me.internalShowEditor(eventRecord, resourceRecord, element ? {\n                target : element\n            } : null);\n        }\n        else {\n            // Ensure event is in view before showing the editor.\n            // Note that we first need to extend the time axis to include\n            // currently out of range events.\n            scheduler.scrollResourceEventIntoView(resourceRecord, eventRecord, {\n                animate        : true,\n                edgeOffset     : 0,\n                extendTimeAxis : false\n            }).then(() => me.internalShowEditor(eventRecord, resourceRecord), () => scheduler.element.classList.remove('b-eventeditor-editing'));\n        }\n    }\n\n    /**\n     * Sets fields values from record being edited\n     * @private\n     */\n    loadRecord(eventRecord, resourceRecord) {\n        this.loadingRecord = true;\n\n        this.internalLoadRecord(eventRecord, resourceRecord);\n\n        this.loadingRecord = false;\n    }\n\n    get eventRecord() {\n        return this._editor?.record;\n    }\n\n    internalLoadRecord(eventRecord, resourceRecord) {\n        const\n            me                        = this,\n            { eventStore }            = me.client,\n            { editor, resourceField } = me;\n\n        me.resourceRecord = resourceRecord;\n\n        // Update chained store early, to have records in place when setting value below (avoids adding the resource to\n        // empty combo store, https://github.com/bryntum/support/issues/5378). It is not done automatically for\n        // grouping/trees or when project is replaced\n        if (resourceField && resourceField.store?.masterStore !== me.resourceStore) {\n            resourceField.store = editor.chainResourceStore();\n        }\n\n        editor.record = eventRecord;\n\n        if (resourceField) {\n            const resources = eventStore.assignmentStore.getResourcesForEvent(eventRecord);\n\n            // Flag on parent Container to indicate that initially blank fields are valid\n            editor.assigningValues = true;\n\n            // If this is an unassigned event, select the resource we've been provided\n            if (!eventRecord.isOccurrence && !eventStore.storage.includes(eventRecord, true) && resourceRecord) {\n                me.resourceField.value = resourceRecord[me.resourceField.valueField];\n            }\n            else if (me.assignmentStore) {\n                me.resourceField.value = resources.map((resource) => resource[me.resourceField.valueField]);\n            }\n            editor.assigningValues = false;\n        }\n\n        super.internalLoadRecord(eventRecord, resourceRecord);\n    }\n\n    toggleEventType(eventType) {\n        // expose eventType in dataset, for querying and styling\n        this.editor.element.dataset.eventType = eventType || '';\n\n        this.editor.eachWidget(widget => { // need {}'s here so we don't return false and end iteration\n            widget.dataset?.eventType && (widget.hidden = widget.dataset.eventType !== eventType);\n        });\n    }\n\n    //endregion\n\n    //region Save\n\n    async finalizeEventSave(eventRecord, resourceRecords, resolve, reject) {\n        const\n            me = this,\n            {\n                scheduler,\n                assignmentStore\n            }  = me;\n\n        const aborted = false;\n\n        // Prevent multiple commits from this flow\n        assignmentStore.suspendAutoCommit();\n\n        // Avoid multiple redraws, from event changes + assignment changes\n        scheduler.suspendRefresh();\n\n        me.onBeforeSave(eventRecord);\n\n        eventRecord.beginBatch();\n        me.updateRecord(eventRecord);\n        eventRecord.endBatch();\n\n        if (!eventRecord.isOccurrence) {\n            if (me.resourceField) {\n                assignmentStore.assignEventToResource(eventRecord, resourceRecords, null, true);\n            }\n        }\n        // An occurrence event record may have changed only resources value. In that case we'll never get into afterChange() method that\n        // apply changed data and make an event \"real\", because resources is not a field and a record won't be marked as dirty.\n        // We used temporary field to save updated resources list and get into afterChange() method.\n        else if (resourceRecords) {\n            eventRecord.set('resourceRecords', resourceRecords);\n        }\n\n        // If it was a provisional event, passed in here from drag-create or dblclick or contextmenu,\n        // it's now it's no longer a provisional event and will not be removed in resetEditingContext\n        // Also, when promoted to be permanent, auto syncing will kick in if configured.\n        eventRecord.isCreating = false;\n\n        if (!aborted) {\n            await scheduler.project.commitAsync();\n        }\n\n        assignmentStore.resumeAutoCommit();\n\n        // Redraw once\n        scheduler.resumeRefresh(true);\n\n        if (!aborted) {\n            /**\n             * Fires on the owning Scheduler after an event is successfully saved\n             * @event afterEventSave\n             * @on-owner\n             * @param {Scheduler.view.Scheduler} source The scheduler instance\n             * @param {Scheduler.model.EventModel} eventRecord The record about to be saved\n             */\n            scheduler.trigger('afterEventSave', { eventRecord });\n            me.onAfterSave(eventRecord);\n        }\n        resolve(aborted ? false : eventRecord);\n    }\n\n    /**\n     * Saves the changes (applies them to record if valid, if invalid editor stays open)\n     * @private\n     * @fires beforeEventSave\n     * @fires beforeEventAdd\n     * @fires afterEventSave\n     * @async\n     */\n    save() {\n        return new Promise((resolve, reject) => {\n            const\n                me                         = this,\n                { scheduler, eventRecord } = me;\n\n            if (!eventRecord || !me.editor.isValid) {\n                resolve(false);\n                return;\n            }\n\n            const\n                { eventStore, values } = me,\n                resourceRecords        = me.resourceField?.records || (me.resourceRecord ? [me.resourceRecord] : []);\n\n            // Check for potential overlap scenarios before saving. TODO needs to be indicated in the UI\n            if (!me.scheduler.allowOverlap && eventStore) {\n                let { startDate, endDate } = values;\n\n                // Should support using a duration field instead of the end date field\n                if (!endDate) {\n                    if ('duration' in values) {\n                        endDate = DateHelper.add(startDate, values.duration, values.durationUnit || eventRecord.durationUnit);\n                    }\n                    else if ('fullDuration' in values) {\n                        endDate = DateHelper.add(startDate, values.fullDuration);\n                    }\n                    else {\n                        endDate = eventRecord.endDate;\n                    }\n                }\n\n                const abort = resourceRecords.some(resource => {\n                    return !eventStore.isDateRangeAvailable(startDate, endDate, eventRecord, resource);\n                });\n\n                if (abort) {\n                    resolve(false);\n                    return;\n                }\n            }\n\n            const context = {\n                finalize(saveEvent) {\n                    try {\n                        if (saveEvent !== false) {\n                            me.finalizeEventSave(eventRecord, resourceRecords, resolve, reject);\n                        }\n                        else {\n                            resolve(false);\n                        }\n                    }\n                    catch (e) {\n                        reject(e);\n                    }\n                }\n            };\n\n            /**\n             * Fires on the owning Scheduler before an event is saved, return `false` to prevent the save.\n             * @event beforeEventSave\n             * @on-owner\n             * @param {Scheduler.view.Scheduler} source The scheduler instance\n             * @param {Scheduler.model.EventModel} eventRecord The record about to be saved\n             * @param {Scheduler.model.ResourceModel[]} resourceRecords The resources to which the event is assigned\n             * @param {Object} values The new values\n             * @param {Object} context Extended save context:\n             * @param {Boolean} [context.async] Set this to `true` in a listener to indicate that the listener will asynchronously decide to prevent or not the event save.\n             * @param {Function} context.finalize Function to call to finalize the save. Used when `async` is `true`. Provide `false` to the function to prevent the save.\n             * @preventable\n             */\n            if (scheduler.trigger('beforeEventSave', { eventRecord, resourceRecords, values, context }) === false) {\n                resolve(false);\n                return;\n            }\n            // truthy context.async means than a listener will decide to approve saving asynchronously\n            if (!context.async) {\n                context.finalize();\n            }\n        });\n    }\n\n    //endregion\n\n    //region Delete\n\n    /**\n     * Delete event being edited\n     * @fires beforeEventDelete\n     * @private\n     * @async\n     */\n    deleteEvent() {\n        this.detachListeners('changesWhileEditing');\n\n        return new Promise((resolve, reject) => {\n            const\n                me                      = this,\n                { eventRecord, editor } = me;\n\n            me.scheduler.removeEvents([eventRecord], removeRecord => {\n                // The reason it does it here is to move focus *before* it gets deleted,\n                // and then there's code in the delete to see that it's deleting the focused one,\n                // and jump forwards or backwards to move to the next or previous event\n                // See 'Should allow key activation' test in tests/view/mixins/EventNavigation.t.js\n                if (removeRecord && editor.containsFocus) {\n                    editor.revertFocus();\n                }\n\n                resolve(removeRecord);\n            }, editor);\n        });\n    }\n\n    //endregion\n\n    //region Stores\n\n    onChangeProject() {\n        // Release resource store on project change, it will be re-chained on next show\n        if (this.resourceField) {\n            this.resourceField.store = {}; // Cannot use null\n        }\n    }\n\n    get eventStore() {\n        return this.scheduler.project.eventStore;\n    }\n\n    get resourceStore() {\n        return this.scheduler.project.resourceStore;\n    }\n\n    get assignmentStore() {\n        return this.scheduler.project.assignmentStore;\n    }\n\n    //endregion\n\n    //endregion\n\n    //region Events\n\n    onActivateEditor({ eventRecord, resourceRecord, eventElement }) {\n        this.editEvent(eventRecord, resourceRecord, eventElement);\n    }\n\n    onDragCreateEnd({ eventRecord, resourceRecord, proxyElement }) {\n        this.editEvent(eventRecord, resourceRecord, proxyElement);\n    }\n\n    // chained from EventNavigation\n    onEventEnterKey({ assignmentRecord, eventRecord, target }) {\n        const\n            { client }  = this,\n            // Event can arrive from the wrap element in some products (such as Calendar)\n            // so in these cases, we must use querySelector to look *inside* the element.\n            element     = target[target.matches(client.eventSelector) ? 'querySelector' : 'closest'](client.eventInnerSelector);\n\n        if (assignmentRecord) {\n            this.editEvent(eventRecord, assignmentRecord.resource, element);\n        }\n        else if (eventRecord) {\n            this.editEvent(eventRecord, eventRecord.resource, element);\n        }\n    }\n\n    // Toggle fields visibility when changing eventType\n    onEventTypeChange({ value }) {\n        this.toggleEventType(value);\n    }\n\n    //endregion\n\n    //region Context menu\n\n    populateEventMenu({ eventRecord, resourceRecord, items }) {\n        if (!this.scheduler.readOnly && !this.disabled) {\n            items.editEvent = {\n                text        : 'L{EventEdit.Edit event}',\n                localeClass : this,\n                icon        : 'b-icon b-icon-edit',\n                weight      : 100,\n                disabled    : eventRecord.readOnly,\n                onItem      : () => {\n                    this.editEvent(eventRecord, resourceRecord);\n                }\n            };\n        }\n    }\n\n    //endregion\n\n    onBeforeEditorToggleReveal({ reveal }) {\n        // reveal true/false is analogous to show/hide\n        this[reveal ? 'onBeforeEditorShow' : 'resetEditingContext']();\n    }\n\n    resetEditingContext() {\n        this.detachListeners('changesWhileEditing');\n        super.resetEditingContext();\n        // Clear to prevent retaining project\n        this.resourceRecord = null;\n    }\n}\n\nGridFeatureManager.registerFeature(EventEdit, true, 'Scheduler');\nGridFeatureManager.registerFeature(EventEdit, false, ['SchedulerPro', 'ResourceHistogram']);\n\nEventEdit.initClass();\n","import List from '../../Core/widget/List.js';\nimport DomHelper from '../../Core/helper/DomHelper.js';\nimport StringHelper from '../../Core/helper/StringHelper.js';\nimport ArrayHelper from '../../Core/helper/ArrayHelper.js';\n\n/**\n * @module Scheduler/widget/ResourceFilter\n */\n\n/**\n * A List which allows selection of resources to filter a specified eventStore to only show\n * events for the selected resources.\n *\n * Because this widget maintains a state that can be changed through the UI, it offers some of the\n * API of an input field. It has a read only {@link #property-value} property, and it fires a\n * {@link #event-change} event.\n *\n * @extends Core/widget/List\n * @classType resourceFilter\n * @widget\n */\nexport default class ResourceFilter extends List {\n    static get $name() {\n        return 'ResourceFilter';\n    }\n\n    // Factoryable type name\n    static get type() {\n        return 'resourcefilter';\n    }\n\n    static get delayable() {\n        return {\n            applyFilter : 'raf'\n        };\n    }\n\n    static get configurable() {\n        return {\n            /**\n             * The {@link Scheduler.data.EventStore EventStore} to filter.\n             * Events for resources which are deselected in this List will be filtered out.\n             * @config {Scheduler.data.EventStore}\n             */\n            eventStore : null,\n\n            multiSelect            : true,\n            toggleAllIfCtrlPressed : true,\n            itemTpl                : record => StringHelper.encodeHtml(record.name || ''),\n\n            /**\n             * An optional filter function to apply when loading resources from the project's\n             * resource store. Defaults to loading all resources.\n             *\n             * **This is called using this `ResourceFilter` as the `this` object.**\n             * @config {Function}\n             * @default\n             */\n            masterFilter : () => true\n        };\n    }\n\n    itemIconTpl(record, i) {\n        const\n            { eventColor } = record,\n            // Named colors are applied using CSS\n            cls            = DomHelper.isNamedColor(eventColor) ? ` b-sch-foreground-${eventColor}` : '',\n            // CSS style color is used as is\n            style          = !cls && eventColor ? ` style=\"color:${eventColor}\"` : '';\n\n        return this.multiSelect ? `<div class=\"b-selected-icon b-icon${cls}\"${style}></div>` : '';\n    }\n\n    updateEventStore(eventStore) {\n        const\n            me                 = this,\n            // HACK: Temp workaround until List's store is dynamically updatable.\n            chainedStoreConfig = me.initialConfig.store?.isStore ? me.initialConfig.store.initialConfig : me.store?.config,\n            // Allow configuration of the filter for loading records from the master store.\n            { resourceStore }  = eventStore,\n            store              = me.store = resourceStore.chain(me.masterFilter, null, {\n                ...chainedStoreConfig,\n                syncOrder : true\n            }),\n            changeListeners    = {\n                change  : 'onStoreChange',\n                thisObj : me\n            };\n\n        // We need to sync selection and rendering on changes fired from master store\n        store.un(changeListeners);\n        resourceStore.ion(changeListeners);\n\n        if (!resourceStore.count) {\n            resourceStore.project.ion({\n                name    : 'project',\n                refresh : 'initFilter',\n                thisObj : me\n            });\n        }\n        else {\n            me.initFilter();\n        }\n    }\n\n    changeMasterFilter(masterFilter) {\n        // Cannot use bind, otherwise fillFromMaster's check for whether its a filter function fails.\n        const me = this;\n\n        return function(r) {\n            return masterFilter.call(me, r);\n        };\n    }\n\n    initFilter() {\n        const { eventStore, selected } = this;\n\n        if (eventStore.count && eventStore.resourceStore.count) {\n            // We default to all resources selected unless this was configured with\n            // an initialSelection. See List#changeSelection\n            if (!this.initialSelection) {\n                selected.add(this.store.getRange());\n            }\n            this.detachListeners('project');\n        }\n    }\n\n    onStoreRefresh({ source : store, action }) {\n        // We need to re-enable the filter if the store becomes filtered.\n        // We only disable the filter if we know that we have selected all available\n        // resources.\n        if (action === 'filter' && this.resourceFilter) {\n            const\n                { resourceFilter } = this,\n                { disabled }       = resourceFilter,\n                newDisabled        = !store.isFiltered && this.allSelected;\n\n            if (newDisabled !== disabled) {\n                resourceFilter.disabled = newDisabled;\n                this.applyFilter();\n            }\n        }\n        super.onStoreRefresh(...arguments);\n    }\n\n    onSelectionChange({ source : selected, added, removed }) {\n        // Filter disabled if all resources selected\n        const\n            me       = this,\n            // Only disable the filter if the allSelected method is seeing *all* of the\n            // records from its masterStore with no filtering.\n            disabled = !me.store.isFiltered && me.allSelected;\n\n        super.onSelectionChange(...arguments);\n\n        // If this is the first selection change triggered from the first project refresh\n        // in which all the resources are selected, then we ony need to apply the filters.\n        // if *not* all resources are selected, ie if added.length !== entire store length.\n        if (!me.resourceFilter) {\n            // Our client EventStore is filtered to only show events for our selected resources.\n            // Events without an associated resource are filtered into visibility.\n            // The addFilter function with silent param adds the filter but don't reevaluate filtering.\n            me.resourceFilter = me.eventStore.addFilter({\n                id       : `${me.id}-filter-instance`,\n                filterBy : e => !e.resource || me.selected.includes(e.resources),\n                disabled\n            }, added.length === me.store.count);\n\n            return;\n        }\n\n        // Filter disabled if all resources selected\n        me.resourceFilter.disabled = disabled;\n\n        // Have the client EventStore refresh its filtering but after a small delay so the List UI updates immediately.\n        me.applyFilter();\n\n        if (me.eventListeners.change) {\n            const\n                value    = selected.values,\n                oldValue = value.concat(removed);\n\n            ArrayHelper.remove(oldValue, added);\n\n            /**\n             * Fired when this widget's selection changes\n             * @event change\n             * @param {String} value - This field's value\n             * @param {String} oldValue - This field's previous value\n             * @param {Core.widget.Field} source - This ResourceFilter\n             */\n            me.triggerFieldChange({\n                value,\n                oldValue\n            });\n        }\n    }\n\n    /**\n     * An array encapsulating the currently selected resources.\n     * @member {Scheduler.model.ResourceModel[]}\n     * @readonly\n     */\n    get value() {\n        return this.selected.values;\n    }\n\n    applyFilter() {\n        this.eventStore.filter();\n    }\n}\n\n// Register this widget type with its Factory\nResourceFilter.initClass();\n","import DatePicker from '../../Core/widget/DatePicker.js';\nimport DateHelper from '../../Core/helper/DateHelper.js';\nimport DomHelper from '../../Core/helper/DomHelper.js';\nimport VersionHelper from '../../Core/helper/VersionHelper.js';\n\n/**\n * @module Scheduler/widget/SchedulerDatePicker\n */\n\n/**\n * A subclass of {@link Core.widget.DatePicker} which is able to show the presence of\n * events in its cells if configured with an {@link #config-eventStore}, and\n * {@link #config-showEvents} is set to a truthy value.\n *\n * The `datepicker` Widget type is implemented by this class when this class is imported, or built\n * into a bundle, and so any {@link Core.widget.DateField} may have its\n * {@link Core.widget.PickerField#config-picker} configured to use its capabilities of showing\n * the presence of events in its date cells.\n *\n * @classtype datepicker\n * @extends Core/widget/DatePicker\n * @inlineexample Scheduler/widget/SchedulerDatePicker.js\n * @widget\n */\nexport default class SchedulerDatePicker extends DatePicker {\n    static get $name() {\n        return 'SchedulerDatePicker';\n    }\n\n    static get type() {\n        return 'datepicker';\n    }\n\n    static get configurable() {\n        return {\n            /**\n             * How to show presence of events in the configured {@link #config-eventStore} in the\n             * day cells. Values may be:\n             *\n             * * `false` - Do not show events in cells.\n             * * `true` - Show a themeable bullet to indicate the presence of events for a date.\n             * * `'count'` - Show a themeable badge containing the event count for a date.\n             * @config {Boolean|'count'}\n             * @default false\n             */\n            showEvents : null,\n\n            /**\n             * The {@link Scheduler.data.EventStore event store} from which the in-cell event presence\n             * indicators are drawn.\n             * @config {Scheduler.data.EventStore}\n             */\n            eventStore : null\n        };\n    }\n\n    construct(config) {\n        // Handle deprecated events config. It is now showEvents.\n        // events conflicts with the events data which may be passed in\n        if ('events' in config) {\n            config = {\n                ...config,\n                showEvents : config.events\n            };\n            delete config.events;\n\n            VersionHelper.deprecate(VersionHelper['calendar'] ? 'Calendar' : 'Scheduler', '6.0.0', 'DatePicker#events should be configured as showEvents');\n        }\n        super.construct(config);\n    }\n\n    doRefresh() {\n        this.refreshEventsMap();\n        return super.doRefresh(...arguments);\n    }\n\n    updateShowEvents(showEvents, oldShowEvents) {\n        const\n            me            = this,\n            { classList } = me.contentElement;\n\n        let { eventStore } = me;\n\n        // Begin any animations in the next AF\n        me.requestAnimationFrame(() => {\n            me.element.classList.toggle('b-datepicker-with-events', Boolean(showEvents));\n            me.owner?.element.classList.toggle('b-datepicker-with-events', Boolean(showEvents));\n            showEvents && classList.add(`b-show-events-${showEvents}`);\n            classList.remove(`b-show-events-${oldShowEvents}`);\n        });\n\n        if (showEvents) {\n            if (!eventStore) {\n                const eventStoreOwner = me.up(w => w.eventStore);\n\n                if (eventStoreOwner) {\n                    eventStore = eventStoreOwner.eventStore;\n                }\n                else {\n                    throw new Error('DatePicker configured with events but no eventStore');\n                }\n            }\n        }\n        else {\n            me.eventsMap = null;\n        }\n        if (!me.isConfiguring) {\n            me.updateEventStore(eventStore);\n            me.doRefresh();\n        }\n    }\n\n    refreshEventsMap() {\n        const me = this;\n\n        if (me.showEvents) {\n            me.eventsMap = me.eventStore.getEventCounts({\n                startDate : me.startDate,\n                endDate   : me.endDate,\n                dateMap   : me.eventsMap\n            });\n        }\n    }\n\n    updateEventStore(eventStore) {\n        // Add a listener to refresh on any event change unless the listener is already added.\n        if (eventStore.findListener('change', 'refresh', this) === -1) {\n            eventStore?.[this.showEvents ? 'on' : 'un']?.({\n                change  : 'refresh',\n                thisObj : this\n            });\n        }\n    }\n\n    cellRenderer({ cell, date }) {\n        const\n            { showEvents } = this,\n            count          = this.eventCounts?.get?.(DateHelper.makeKey(date)),\n            isCount        = showEvents === 'count';\n\n        delete cell.dataset.btip;\n        if (count) {\n            if (!isCount && this.eventCountTip) {\n                cell.dataset.btip = this.L('L{ResourceInfoColumn.eventCountText}', count);\n            }\n            DomHelper.createElement({\n                dataset : {\n                    count\n                },\n                class : {\n                    [isCount ? 'b-cell-events-badge' : 'b-icon b-icon-circle'] : 1,\n                    [SchedulerDatePicker.getEventCountClass(count)]            : 1\n                },\n                parent                  : cell,\n                [isCount ? 'text' : ''] : count\n            });\n        }\n    }\n\n    static getEventCountClass(count) {\n        if (count) {\n            if (count < 4) {\n                return 'b-datepicker-1-to-3-events';\n            }\n            if (count < 7) {\n                return 'b-datepicker-4-to-6-events';\n            }\n            return 'b-calendar-7-or-more-events';\n        }\n        return '';\n    }\n\n    static setupClass(meta) {\n        // We take over the type name 'datepicker' when we are in the app\n        meta.replaceType = true;\n\n        super.setupClass(meta);\n    }\n}\n\n// Register this widget type with its Factory\nSchedulerDatePicker.initClass();\n"],"names":["RecurrenceLegend","Localizable","$name","allDaysValueAsArray","allDaysValue","join","workingDaysValue","filter","day","index","DateHelper","nonWorkingDays","nonWorkingDaysValue","getLegend","recurrence","timeSpanStartDate","me","timeSpan","interval","days","monthDays","months","positions","startDate","tplData","fn","frequency","L","length","getDaysLegend","getDayName","getDay","sort","a","b","arrayToText","getDate","month","getMonthShortName","getMonthName","getMonth","position","DayRuleEncoder","decodeDay","getDayShortName","array","map","replace","_$name","DH","scheduleFields","makeDate","fields","value","date","time","DateField","reverse","dateValue","parse","setHours","getHours","getMinutes","getSeconds","getMilliseconds","clone","copyTime","dateTo","dateFrom","d","Date","getTime","adjustEndDate","startTime","endDateField","endTimeField","newEndDate","add","startDateField","startTimeField","eventRecord","durationMS","EditBase","InstancePlugin","configurable","saveAndCloseOnEnter","triggerEvent","dateFormat","timeFormat","editorConfig","items","weekStartDay","construct","client","config","eventEdit","ObjectHelper","assign","clientListenersDetacher","ion","dragCreateEnd","eventAutoCreated","thisObj","doDestroy","_this$_editor","_editor","destroy","onEventAutoCreated","changeEditorConfig","Objects","Config","merge","changeItems","cleanItemsConfig","ref","itemCfg","onDatesChange","params","_me$startTimeField","_me$startDateField2","field","source","min","_me$startDateField","_me$endDateField","isEqual","clearTime","save","Error","values","editor","startFields","endFields","forEach","f","eachWidget","widget","_editor$widgetMap$rec","name","hidden","up","w","recurrenceEditor","push","record","widgetMap","recurrenceCombo","allDay","endDate","duration","diff","durationUnit","onBeforeSave","onAfterSave","updateRecord","assignmentStore","resource","set","onBeforeEditorShow","editingContext","nameField","isCreating","assigningValues","_configuredPlaceholder","placeholder","resetEditingContext","eventStore","isTimelineBase","_me$editingContext$ev","eventElement","closest","classList","remove","element","targetEventElement","_record","onPopupKeyDown","event","readOnly","key","target","tagName","toLowerCase","preventDefault","onSaveClick","focus","saved","close","trigger","onDeleteClick","removed","deleteEvent","autoClose","containsFocus","onCancelClick","EventEditor","Popup","type","draggable","handleSelector","axisLock","scrollable","overflowY","titleRenderer","updateLocalization","arguments","initialTitle","title","chainResourceStore","eventEditFeature","resourceStore","chain","isSpecialRow","storeClass","Store","excludeCollapsedRecords","processWidgetConfig","_widget$type","includes","fieldConfig","store","setConfig","multiSelect","usesSingleAssignment","format","Object","onBeforeShow","args","_super$onBeforeShow","deleteButton","callback","call","onInternalKeyDown","updateReadOnly","saveButton","cancelButton","initClass","RecurrenceCombo","RecurrenceFrequencyCombo","defaultConfig","customValue","splitCls","highlightExternalChange","buildItems","text","cls","isCustomRecurrence","Boolean","RecurrenceLegendButton","Button","localizableProperties","_recurrence","updateLegend","eventStartDate","_eventStartDate","onLocaleChange","RecurrenceEditor","closable","floating","width","recurrenceEditorPanel","bbar","defaults","localeClass","foo","weight","color","onClick","saveHandler","syncEventRecord","cancelHandler","Target","RecurringEventEdit","Base","recurringEventsItems","label","editRecurrenceButton","menuIcon","flex","ignoreParentReadOnly","showRecurringUI","_objectSpread","scheduler","beforeEventSave","_this$_recurrenceConf","_this$_recurrenceEdit","_recurrenceConfirmation","_recurrenceEditor","onEditorConstructed","_me$recurrenceCombo","hide","onRecurringEventEditorHide","menu","change","onRecurrenceComboChange","internalShowEditor","toggleRecurringFieldsVisibility","enableRecurringEvents","show","_this$editRecurrenceB","_this$editRecurrenceB2","_this$recurrenceCombo","_this$recurrenceCombo2","methodName","_this$recurrenceEdito","_this$recurrenceConfi","isVisible","recurrenceConfirmation","makeRecurrence","rule","eventCopy","copy","recurrenceModel","setStartDate","suspendTimeSpanNotifying","onRecurrableEventBeforeSave","context","isEditing","supportsRecurring","isRecurring","isOccurrence","confirm","actionType","changerFn","finalize","cancelFn","async","$$name","Widget","create","owner","autoShow","centered","modal","constrainTo","globalThis","anchor","rootElement","recurrenceEditorSaveHandler","onBeforeShowRecurrenceEditor","bind","_readOnly","loadRecurrenceData","updateRecurrenceFields","userAction","loadingRecord","internalLoadRecord","recurrenceRule","ResourceCombo","Combo","showEventColor","picker","itemIconTpl","i","eventColor","isStyleColor","DomHelper","isNamedColor","style","colorClass","changeShowEventColor","updateShowEventColor","_picker","changePicker","oldPicker","_picker2","innerElements","class","reference","inputElement","syncInputFieldValue","_me$selected$eventCol","_me$selected","resourceIcon","lastResourceIconCls","selected","punctuation","EventEdit","mixin","Delayable","typeField","clearable","required","resourceField","editable","valueField","displayField","destroyStore","validateDateOnly","hideWhenEmpty","pluginConfig","projectChange","onClientReadOnlyToggle","_me$onEditorConstruct","_me$eventTypeField","_me$saveButton","_me$deleteButton","_me$cancelButton","editorListeners","beforehide","beforeshow","keydown","getEditorConfig","positioned","parentNode","beforShow","beforeToggleReveal","console","warn","relayEvents","id","eventTypeField","click","dateLength","timeLength","dateTimeLength","result","align","scrollAction","prototype","getRenderContext","collapsible","direction","tool","recollapseTool","collapsed","toggleReveal","onElementCreated","setProperty","resourceRecord","_align","_align$target","_align2","nodeType","Element","ELEMENT_NODE","getElementFromEventRecord","isPartOfStore","_super$internalShowEd","toggleEventType","get","loadRecord","setTimeout","showBy","updateCentered","timeResolution","timeAxisViewModel","unit","step","increment","detachListeners","onChangeWhileEditing","refresh","updateTargetEventElement","oldTargetEventElement","editEvent","simpleEventEdit","features","disabled","enabled","doEditEvent","revealed","isNewRecord","getById","resourceId","TimeSpan","normalize","scrollResourceEventIntoView","animate","edgeOffset","extendTimeAxis","then","_resourceField$store","masterStore","resources","getResourcesForEvent","storage","eventType","dataset","_widget$dataset","finalizeEventSave","resourceRecords","resolve","reject","suspendAutoCommit","suspendRefresh","beginBatch","endBatch","assignEventToResource","project","commitAsync","resumeAutoCommit","resumeRefresh","Promise","_me$resourceField","isValid","records","allowOverlap","fullDuration","abort","some","isDateRangeAvailable","saveEvent","e","removeEvents","removeRecord","revertFocus","onChangeProject","onActivateEditor","onDragCreateEnd","proxyElement","onEventEnterKey","assignmentRecord","matches","eventSelector","eventInnerSelector","onEventTypeChange","populateEventMenu","icon","onItem","onBeforeEditorToggleReveal","reveal","GridFeatureManager","registerFeature","ResourceFilter","List","delayable","applyFilter","toggleAllIfCtrlPressed","itemTpl","StringHelper","encodeHtml","masterFilter","updateEventStore","_me$initialConfig$sto","_me$store","chainedStoreConfig","initialConfig","isStore","syncOrder","changeListeners","un","count","initFilter","changeMasterFilter","r","initialSelection","getRange","onStoreRefresh","action","resourceFilter","newDisabled","isFiltered","allSelected","onSelectionChange","added","addFilter","filterBy","eventListeners","oldValue","concat","ArrayHelper","triggerFieldChange","SchedulerDatePicker","DatePicker","showEvents","events","VersionHelper","deprecate","doRefresh","refreshEventsMap","updateShowEvents","oldShowEvents","contentElement","requestAnimationFrame","_me$owner","toggle","eventStoreOwner","eventsMap","isConfiguring","getEventCounts","dateMap","findListener","_eventStore","cellRenderer","cell","_this$eventCounts","_this$eventCounts$get","eventCounts","makeKey","isCount","btip","eventCountTip","createElement","getEventCountClass","parent","setupClass","meta","replaceType"],"mappings":";;;;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,MAAMA,gBAAgB,SAASC,WAAW,EAAE,CAAC;EACxD,WAAWC,KAAKA,GAAG;IACf,OAAO,kBAAkB;;EAE7B,WAAWC,mBAAmBA,GAAG;IAC7B,OAAO,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC;;EAErD,WAAWC,YAAYA,GAAG;IACtB,OAAO,IAAI,CAACD,mBAAmB,CAACE,IAAI,CAAC,GAAG,CAAC;;EAE7C,WAAWC,gBAAgBA,GAAG;IAC1B,OAAO,IAAI,CAACH,mBAAmB,CAACI,MAAM,CAAC,CAACC,GAAG,EAAEC,KAAK,KAAK,CAACC,UAAU,CAACC,cAAc,CAACF,KAAK,CAAC,CAAC,CAACJ,IAAI,CAAC,GAAG,CAAC;;EAEvG,WAAWO,mBAAmBA,GAAG;IAC7B,OAAO,IAAI,CAACT,mBAAmB,CAACI,MAAM,CAAC,CAACC,GAAG,EAAEC,KAAK,KAAKC,UAAU,CAACC,cAAc,CAACF,KAAK,CAAC,CAAC,CAACJ,IAAI,CAAC,GAAG,CAAC;;;AAG1G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI,OAAOQ,SAASA,CAACC,UAAU,EAAEC,iBAAiB,EAAE;IAC5C,MACIC,EAAE,GAA2D,IAAI;MACjE;QAAEC,QAAQ;QAAEC,QAAQ;QAAEC,IAAI;QAAEC,SAAS;QAAEC,MAAM;QAAEC;OAAW,GAAGR,UAAU;MACvES,SAAS,GAAoDR,iBAAiB,IAAIE,QAAQ,CAACM,SAAS;MACpGC,OAAO,GAAsD;QAAEN;OAAU;IAC7E,IAAIO,EAAE;IACN,QAAQX,UAAU,CAACY,SAAS;MACxB,KAAK,OAAO;QACR,OAAOR,QAAQ,KAAK,CAAC,GAAGF,EAAE,CAACW,CAAC,CAAC,UAAU,CAAC,GAAGX,EAAE,CAACW,CAAC,CAAC,mBAAmB,EAAEH,OAAO,CAAC;MACjF,KAAK,QAAQ;QACT,IAAIL,IAAI,IAAIA,IAAI,CAACS,MAAM,EAAE;UACrBJ,OAAO,CAACL,IAAI,GAAGH,EAAE,CAACa,aAAa,CAACV,IAAI,CAAC;SACxC,MACI,IAAII,SAAS,EAAE;UAChBC,OAAO,CAACL,IAAI,GAAGT,UAAU,CAACoB,UAAU,CAACP,SAAS,CAACQ,MAAM,EAAE,CAAC;;QAE5D,OAAOf,EAAE,CAACW,CAAC,CAACT,QAAQ,KAAK,CAAC,GAAG,kBAAkB,GAAG,2BAA2B,EAAEM,OAAO,CAAC;MAC3F,KAAK,SAAS;QACV,IAAIL,IAAI,IAAIA,IAAI,CAACS,MAAM,IAAIN,SAAS,IAAIA,SAAS,CAACM,MAAM,EAAE;UACtDJ,OAAO,CAACL,IAAI,GAAGH,EAAE,CAACa,aAAa,CAACV,IAAI,EAAEG,SAAS,CAAC;SACnD,MACI,IAAIF,SAAS,IAAIA,SAAS,CAACQ,MAAM,EAAE;;UAEpCR,SAAS,CAACY,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,GAAGC,CAAC,CAAC;UAC/BV,OAAO,CAACL,IAAI,GAAGH,EAAE,CAACmB,WAAW,CAACf,SAAS,CAAC;SAC3C,MACI,IAAIG,SAAS,EAAE;UAChBC,OAAO,CAACL,IAAI,GAAGI,SAAS,CAACa,OAAO,EAAE;;QAEtC,OAAOpB,EAAE,CAACW,CAAC,CAACT,QAAQ,KAAK,CAAC,GAAG,mBAAmB,GAAG,4BAA4B,EAAEM,OAAO,CAAC;MAC7F,KAAK,QAAQ;QACT,IAAIL,IAAI,IAAIA,IAAI,CAACS,MAAM,IAAIN,SAAS,IAAIA,SAAS,CAACM,MAAM,EAAE;UACtDJ,OAAO,CAACL,IAAI,GAAGH,EAAE,CAACa,aAAa,CAACV,IAAI,EAAEG,SAAS,CAAC;SACnD,MACI;UACDE,OAAO,CAACL,IAAI,GAAGI,SAAS,CAACa,OAAO,EAAE;;QAEtC,IAAIf,MAAM,IAAIA,MAAM,CAACO,MAAM,EAAE;;UAEzBP,MAAM,CAACW,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,GAAGC,CAAC,CAAC;UAC5B,IAAIb,MAAM,CAACO,MAAM,GAAG,CAAC,EAAE;YACnBH,EAAE,GAAGY,KAAK,IAAI3B,UAAU,CAAC4B,iBAAiB,CAACD,KAAK,GAAG,CAAC,CAAC;WACxD,MACI;YACDZ,EAAE,GAAGY,KAAK,IAAI3B,UAAU,CAAC6B,YAAY,CAACF,KAAK,GAAG,CAAC,CAAC;;UAEpDb,OAAO,CAACH,MAAM,GAAGL,EAAE,CAACmB,WAAW,CAACd,MAAM,EAAEI,EAAE,CAAC;SAC9C,MACI;UACDD,OAAO,CAACH,MAAM,GAAGX,UAAU,CAAC6B,YAAY,CAAChB,SAAS,CAACiB,QAAQ,EAAE,CAAC;;QAElE,OAAOxB,EAAE,CAACW,CAAC,CAACT,QAAQ,KAAK,CAAC,GAAG,yBAAyB,GAAG,kCAAkC,EAAEM,OAAO,CAAC;;;EAGjH,OAAOK,aAAaA,CAACV,IAAI,EAAEG,SAAS,EAAE;IAClC,MACIN,EAAE,GAAQ,IAAI;MACdQ,OAAO,GAAG;QAAEiB,QAAQ,EAAG;OAAI;IAC/B,IAAIhB,EAAE;IACN,IAAIH,SAAS,IAAIA,SAAS,CAACM,MAAM,EAAE;;;;;;;;MAQ/BJ,OAAO,CAACiB,QAAQ,GAAGzB,EAAE,CAACmB,WAAW,CAACb,SAAS,EAAEmB,QAAQ,IAAIzB,EAAE,CAACW,CAAC,CAAE,aAAYc,QAAS,GAAE,CAAC,CAAC;;IAE5F,IAAItB,IAAI,CAACS,MAAM,EAAE;MACbT,IAAI,CAACa,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKQ,wBAAc,CAACC,SAAS,CAACV,CAAC,CAAC,CAAC,CAAC,CAAC,GAAGS,wBAAc,CAACC,SAAS,CAACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACpF,QAAQf,IAAI,CAACd,IAAI,CAAC,GAAG,CAAC;QAClB,KAAKW,EAAE,CAACZ,YAAY;UAChBoB,OAAO,CAACL,IAAI,GAAGH,EAAE,CAACW,CAAC,CAAC,QAAQ,CAAC;UAC7B;QACJ,KAAKX,EAAE,CAACV,gBAAgB;UACpBkB,OAAO,CAACL,IAAI,GAAGH,EAAE,CAACW,CAAC,CAAC,YAAY,CAAC;UACjC;QACJ,KAAKX,EAAE,CAACJ,mBAAmB;UACvBY,OAAO,CAACL,IAAI,GAAGH,EAAE,CAACW,CAAC,CAAC,gBAAgB,CAAC;UACrC;QACJ;UACI,IAAIR,IAAI,CAACS,MAAM,GAAG,CAAC,EAAE;YACjBH,EAAE,GAAGjB,GAAG,IAAIE,UAAU,CAACkC,eAAe,CAACF,wBAAc,CAACC,SAAS,CAACnC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;WAC3E,MACI;YACDiB,EAAE,GAAGjB,GAAG,IAAIE,UAAU,CAACoB,UAAU,CAACY,wBAAc,CAACC,SAAS,CAACnC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;;UAEvEgB,OAAO,CAACL,IAAI,GAAGH,EAAE,CAACmB,WAAW,CAAChB,IAAI,EAAEM,EAAE,CAAC;;;IAGnD,OAAOT,EAAE,CAACW,CAAC,CAAC,eAAe,EAAEH,OAAO,CAAC;;;;;EAKzC,OAAOW,WAAWA,CAACU,KAAK,EAAEpB,EAAE,EAAE;IAC1B,IAAIA,EAAE,EAAE;MACJoB,KAAK,GAAGA,KAAK,CAACC,GAAG,CAACrB,EAAE,CAAC;;IAEzB,OAAOoB,KAAK,CAACxC,IAAI,CAAC,IAAI,CAAC,CAAC0C,OAAO,CAAC,aAAa,EAAE,IAAI,CAACpB,CAAC,CAAC,UAAU,CAAC,CAAC;;AAE1E;AACA3B,gBAAgB,CAACgD,MAAM,GAAG,kBAAkB;;AC7I5C;AACA;AACA;AACA,MACIC,EAAE,GAAevC,UAAU;EAC3BwC,cAAc,GAAG,CAAC,WAAW,EAAE,SAAS,EAAE,UAAU,EAAE,gBAAgB,CAAC;EACvEC,QAAQ,GAAUC,MAAM,IAAK;;IAEzB,IAAIA,MAAM,CAACxB,MAAM,KAAK,CAAC,EAAE,OAAOwB,MAAM,CAAC,CAAC,CAAC,CAACC,KAAK;;SAE1C,IAAID,MAAM,CAACxB,MAAM,KAAK,CAAC,EAAE;MAC1B,MACI,CAAC0B,IAAI,EAAEC,IAAI,CAAC,GAAGH,MAAM,CAAC,CAAC,CAAC,YAAYI,SAAS,GAAGJ,MAAM,GAAGA,MAAM,CAACK,OAAO,EAAE;QACzEC,SAAS,GAAMT,EAAE,CAACU,KAAK,CAACL,IAAI,CAACD,KAAK,CAAC;MACvC,IAAIK,SAAS,IAAIH,IAAI,CAACF,KAAK,EAAE;QACzBK,SAAS,CAACE,QAAQ,CACdL,IAAI,CAACF,KAAK,CAACQ,QAAQ,EAAE,EACrBN,IAAI,CAACF,KAAK,CAACS,UAAU,EAAE,EACvBP,IAAI,CAACF,KAAK,CAACU,UAAU,EAAE,EACvBR,IAAI,CAACF,KAAK,CAACW,eAAe,EAAE,CAC/B;;;MAGL,OAAON,SAAS,GAAGhD,UAAU,CAACuD,KAAK,CAACP,SAAS,CAAC,GAAG,IAAI;;;IAGzD,OAAO,IAAI;GACd;EACDQ,QAAQ,GAASA,CAACC,MAAM,EAAEC,QAAQ,KAAK;IACnC,MAAMC,CAAC,GAAG,IAAIC,IAAI,CAACH,MAAM,CAACI,OAAO,EAAE,CAAC;IACpCF,CAAC,CAACT,QAAQ,CAACQ,QAAQ,CAACP,QAAQ,EAAE,EAAEO,QAAQ,CAACN,UAAU,EAAE,CAAC;IACtD,OAAOO,CAAC;GACX;EACDG,aAAa,GAAIA,CAACjD,SAAS,EAAEkD,SAAS,EAAEzD,EAAE,KAAK;;IAE3C,IAAIO,SAAS,IAAIkD,SAAS,IAAIzD,EAAE,CAAC0D,YAAY,IAAI1D,EAAE,CAAC2D,YAAY,EAAE;MAC9D,MAAMC,UAAU,GAAG3B,EAAE,CAAC4B,GAAG,CAACX,QAAQ,CAAClD,EAAE,CAAC8D,cAAc,CAACzB,KAAK,EAAErC,EAAE,CAAC+D,cAAc,CAAC1B,KAAK,CAAC,EAAErC,EAAE,CAACgE,WAAW,CAACC,UAAU,EAAE,cAAc,CAAC;MAChIjE,EAAE,CAAC0D,YAAY,CAACrB,KAAK,GAAGuB,UAAU;MAClC5D,EAAE,CAAC2D,YAAY,CAACtB,KAAK,GAAGJ,EAAE,CAACgB,KAAK,CAACW,UAAU,CAAC;;GAEnD;AACL;AACA;AACA;AACA;AACA;AACe,MAAMM,QAAQ,SAASC,cAAc,CAAC;;EAEjD,WAAWC,YAAYA,GAAG;IACtB,OAAO;;AAEf;AACA;AACA;AACA;AACA;MACYC,mBAAmB,EAAG,IAAI;MAC1BC,YAAY,EAAG,IAAI;;AAE/B;AACA;AACA;AACA;AACA;MACYC,UAAU,EAAG,GAAG;;;AAE5B;AACA;AACA;AACA;AACA;MACYC,UAAU,EAAG,IAAI;;;AAE7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACYC,YAAY,EAAG,IAAI;;AAE/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACYC,KAAK,EAAG,IAAI;;AAExB;AACA;AACA;AACA;AACA;MACYC,YAAY,EAAG;KAClB;;;;EAILC,SAASA,CAACC,MAAM,EAAEC,MAAM,EAAE;IACtB,MAAM9E,EAAE,GAAG,IAAI;IACf6E,MAAM,CAACE,SAAS,GAAG/E,EAAE;IACrB,KAAK,CAAC4E,SAAS,CAACC,MAAM,EAAEG,YAAY,CAACC,MAAM,CAAC;MACxCN,YAAY,EAAGE,MAAM,CAACF;KACzB,EAAEG,MAAM,CAAC,CAAC;IACX9E,EAAE,CAACkF,uBAAuB,GAAGL,MAAM,CAACM,GAAG,CAAC;MACpC,CAACnF,EAAE,CAACsE,YAAY,GAAI,kBAAkB;MACtCc,aAAa,EAAO,iBAAiB;;;MAGrCC,gBAAgB,EAAG,oBAAoB;MACvCC,OAAO,EAAYtF;KACtB,CAAC;;EAENuF,SAASA,GAAG;IAAA,IAAAC,aAAA;IACR,IAAI,CAACN,uBAAuB,EAAE;IAC9B,CAAAM,aAAA,OAAI,CAACC,OAAO,cAAAD,aAAA,uBAAZA,aAAA,CAAcE,OAAO,EAAE;IACvB,KAAK,CAACH,SAAS,EAAE;;;;;;EAMrBI,kBAAkBA,GAAG;EACrBC,kBAAkBA,CAACnB,YAAY,EAAE;IAC7B,MAAM;MAAEC;KAAO,GAAG,IAAI;;IAEtB,IAAIA,KAAK,EAAE;MACPD,YAAY,GAAGoB,OAAO,CAAC5C,KAAK,CAACwB,YAAY,CAAC;MAC1CA,YA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AAY,CAACH,UAAU,CAAC,EAAE;QACpClV,EAAE,CAACsW,mBAAmB,GAAI,oBAAmBpB,UAAW,EAAC;QACzDvL,SAAS,CAAC9F,GAAG,CAAC7D,EAAE,CAACsW,mBAAmB,CAAC;OACxC,MACI;QACDD,YAAY,CAACf,KAAK,CAAC5F,KAAK,GAAGwF,UAAU;;MAEzCvL,SAAS,CAACC,MAAM,CAAC,gBAAgB,CAAC;KACrC,MACI;MACDD,SAAS,CAAC9F,GAAG,CAAC,gBAAgB,CAAC;;;AAG3C;AACA;AACA+Q,aAAa,CAAChH,SAAS,EAAE;AACzBgH,aAAa,CAAC5S,MAAM,GAAG,eAAe;;ACtFtC;AACA;AACA;AACA,MAAMwe,MAAMC,SAAS,SAASvS,QAAQ,CAACwS,KAAK,CAAC1G,kBAAkB,EAAE2G,SAAS,CAAC,CAAC;;EAEjF,WAAWzX,KAAKA,GAAG;IACf,OAAO,WAAW;;EAEtB,WAAWkF,YAAYA,GAAG;IACtB,OAAO;;AAEf;AACA;AACA;AACA;AACA;AACA;MACYE,YAAY,EAAG,eAAe;;AAE1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACYsS,SAAS,EAAG,WAAW;;AAEnC;AACA;AACA;AACA;MACY5S,WAAW,EAAG,IAAI;;AAE9B;AACA;AACA;AACA;MACYkG,QAAQ,EAAG,IAAI;;AAE3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAC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"}