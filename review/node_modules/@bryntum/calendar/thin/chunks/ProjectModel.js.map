{"version":3,"file":"ProjectModel.js","sources":["../../../../Engine/lib/Engine/vendor/later/later.js","../../../../chronograph/src/collection/Iterator.js","../../../../chronograph/src/class/Mixin.js","../../../../Engine/lib/Engine/scheduling/Types.js","../../../../Engine/lib/Engine/util/Constants.js","../../../../Engine/lib/Engine/util/Types.js","../../../../Engine/lib/Engine/calendar/CalendarCache.js","../../../../Engine/lib/Engine/util/StripDuplicates.js","../../../../Engine/lib/Engine/calendar/CalendarCacheInterval.js","../../../../Engine/lib/Engine/util/BinarySearch.js","../../../../Engine/lib/Engine/calendar/SortedMap.js","../../../../Engine/lib/Engine/calendar/IntervalCache.js","../../../../Engine/lib/Engine/calendar/CalendarCacheSingle.js","../../../../Engine/lib/Engine/quark/AbstractPartOfProjectGenericMixin.js","../../../../Engine/lib/Engine/quark/store/mixin/AbstractPartOfProjectStoreMixin.js","../../../../Engine/lib/Engine/quark/model/mixin/AbstractPartOfProjectModelMixin.js","../../../../Engine/lib/Engine/calendar/CalendarIntervalMixin.js","../../../../Engine/lib/Engine/calendar/CalendarIntervalStore.js","../../../../Engine/lib/Engine/calendar/UnspecifiedTimeIntervalModel.js","../../../../Engine/lib/Engine/quark/CorePartOfProjectGenericMixin.js","../../../../Engine/lib/Engine/quark/model/AbstractCalendarMixin.js","../../../../Engine/lib/Engine/quark/model/AbstractHasAssignmentsMixin.js","../../../../Engine/lib/Engine/quark/model/mixin/CorePartOfProjectModelMixin.js","../../../../Engine/lib/Engine/util/Functions.js","../../../../Engine/lib/Engine/quark/store/AbstractAssignmentStoreMixin.js","../../../../Engine/lib/Engine/quark/store/AbstractCalendarManagerStoreMixin.js","../../../../Engine/lib/Engine/quark/store/AbstractDependencyStoreMixin.js","../../../../Engine/lib/Engine/quark/store/AbstractEventStoreMixin.js","../../../../Engine/lib/Engine/quark/store/AbstractResourceStoreMixin.js","../../../../Engine/lib/Engine/quark/model/scheduler_core/CoreEventMixin.js","../../../../Engine/lib/Engine/quark/model/scheduler_core/CoreResourceMixin.js","../../../../Engine/lib/Engine/quark/model/scheduler_core/CoreAssignmentMixin.js","../../../../Engine/lib/Engine/quark/store/mixin/CorePartOfProjectStoreMixin.js","../../../../Engine/lib/Engine/quark/store/CoreAssignmentStoreMixin.js","../../../../Engine/lib/Engine/quark/model/scheduler_core/CoreCalendarMixin.js","../../../../Engine/lib/Engine/quark/store/CoreCalendarManagerStoreMixin.js","../../../../Engine/lib/Engine/quark/model/scheduler_core/CoreDependencyMixin.js","../../../../Engine/lib/Engine/quark/store/CoreDependencyStoreMixin.js","../../../../Engine/lib/Engine/quark/model/scheduler_core/CoreHasAssignmentsMixin.js","../../../../Engine/lib/Engine/quark/model/scheduler_core/CoreHasDependenciesMixin.js","../../../../Engine/lib/Engine/quark/model/scheduler_core/SchedulerCoreEvent.js","../../../../Engine/lib/Engine/quark/store/CoreEventStoreMixin.js","../../../../Engine/lib/Engine/quark/store/CoreResourceStoreMixin.js","../../../../Engine/lib/Engine/quark/model/AbstractProjectMixin.js","../../../../Engine/lib/Engine/quark/model/scheduler_core/SchedulerCoreProjectMixin.js","../../../../Scheduler/lib/Scheduler/crud/mixin/AbstractCrudManagerValidation.js","../../../../Scheduler/lib/Scheduler/crud/AbstractCrudManagerMixin.js","../../../../Scheduler/lib/Scheduler/crud/transport/AjaxTransport.js","../../../../Scheduler/lib/Scheduler/crud/encoder/JsonEncoder.js","../../../../Scheduler/lib/Scheduler/crud/mixin/CrudManagerView.js","../../../../Scheduler/lib/Scheduler/data/mixin/PartOfProject.js","../../../../Scheduler/lib/Scheduler/model/mixin/AssignmentModelMixin.js","../../../../Scheduler/lib/Scheduler/model/AssignmentModel.js","../../../../Scheduler/lib/Scheduler/data/mixin/AssignmentStoreMixin.js","../../../../Scheduler/lib/Scheduler/data/AssignmentStore.js","../../../../Scheduler/lib/Scheduler/data/mixin/ResourceStoreMixin.js","../../../../Scheduler/lib/Scheduler/model/mixin/ResourceModelMixin.js","../../../../Scheduler/lib/Scheduler/model/ResourceModel.js","../../../../Scheduler/lib/Scheduler/data/ResourceStore.js","../../../../Scheduler/lib/Scheduler/data/mixin/EventStoreMixin.js","../../../../Scheduler/lib/Scheduler/data/mixin/GetEventsMixin.js","../../../../Scheduler/lib/Scheduler/data/util/EventDayIndex.js","../../../../Scheduler/lib/Scheduler/data/mixin/DayIndexMixin.js","../../../../Scheduler/lib/Scheduler/data/mixin/SharedEventStoreMixin.js","../../../../Scheduler/lib/Scheduler/data/mixin/RecurringTimeSpansMixin.js","../../../../Scheduler/lib/Scheduler/data/mixin/RecurringEventsMixin.js","../../../../Scheduler/lib/Scheduler/model/mixin/TimeZonedDatesMixin.js","../../../../Scheduler/lib/Scheduler/model/TimeSpan.js","../../../../Scheduler/lib/Scheduler/data/util/recurrence/RecurrenceDayRuleEncoder.js","../../../../Scheduler/lib/Scheduler/data/util/recurrence/AbstractRecurrenceIterator.js","../../../../Scheduler/lib/Scheduler/data/util/recurrence/DailyRecurrenceIterator.js","../../../../Scheduler/lib/Scheduler/data/util/recurrence/WeeklyRecurrenceIterator.js","../../../../Scheduler/lib/Scheduler/data/util/recurrence/MonthlyRecurrenceIterator.js","../../../../Scheduler/lib/Scheduler/data/util/recurrence/YearlyRecurrenceIterator.js","../../../../Scheduler/lib/Scheduler/model/RecurrenceModel.js","../../../../Scheduler/lib/Scheduler/model/mixin/RecurringTimeSpan.js","../../../../Scheduler/lib/Scheduler/model/mixin/EventModelMixin.js","../../../../Scheduler/lib/Scheduler/model/EventModel.js","../../../../Scheduler/lib/Scheduler/data/EventStore.js","../../../../Scheduler/lib/Scheduler/model/DependencyBaseModel.js","../../../../Scheduler/lib/Scheduler/model/DependencyModel.js","../../../../Scheduler/lib/Scheduler/data/mixin/DependencyStoreMixin.js","../../../../Scheduler/lib/Scheduler/data/DependencyStore.js","../../../../Scheduler/lib/Scheduler/data/mixin/ProjectCrudManager.js","../../../../Scheduler/lib/Scheduler/model/mixin/ProjectModelCommon.js","../../../../Scheduler/lib/Scheduler/model/ResourceTimeRangeModel.js","../../../../Scheduler/lib/Scheduler/data/ResourceTimeRangeStore.js","../../../../Scheduler/lib/Scheduler/model/mixin/ProjectModelTimeZoneMixin.js","../../../../Scheduler/lib/Scheduler/model/mixin/ProjectModelMixin.js","../../../../Scheduler/lib/Scheduler/model/mixin/ProjectCurrentConfig.js","../../../../Scheduler/lib/Scheduler/data/util/ModelPersistencyManager.js","../../../../Scheduler/lib/Scheduler/model/ProjectModel.js"],"sourcesContent":["// @ts-nocheck\n\nconst diffSecond = (date, diff) => {\n    return new Date(\n        date.getFullYear(),\n        date.getMonth(),\n        date.getDate(),\n        date.getHours(),\n        date.getMinutes(),\n        date.getSeconds() + diff,\n        date.getMilliseconds()\n    );\n};\n\n/**\n * The code just copy/pasted from pre-built later.js file and made exported\n *\n * @private\n */\nexport const later = (function () {\n    \"use strict\";\n    var later = {\n        version: \"1.2.0\"\n    };\n    if (!Array.prototype.indexOf) {\n        Array.prototype.indexOf = function (searchElement) {\n            \"use strict\";\n            if (this == null) {\n                throw new TypeError();\n            }\n            var t = Object(this);\n            var len = t.length >>> 0;\n            if (len === 0) {\n                return -1;\n            }\n            var n = 0;\n            if (arguments.length > 1) {\n                n = Number(arguments[1]);\n                if (n != n) {\n                    n = 0;\n                }\n                else if (n != 0 && n != Infinity && n != -Infinity) {\n                    n = (n > 0 || -1) * Math.floor(Math.abs(n));\n                }\n            }\n            if (n >= len) {\n                return -1;\n            }\n            var k = n >= 0 ? n : Math.max(len - Math.abs(n), 0);\n            for (; k < len; k++) {\n                if (k in t && t[k] === searchElement) {\n                    return k;\n                }\n            }\n            return -1;\n        };\n    }\n    if (!String.prototype.trim) {\n        String.prototype.trim = function () {\n            return this.replace(/^\\s+|\\s+$/g, \"\");\n        };\n    }\n    later.array = {};\n    later.array.sort = function (arr, zeroIsLast) {\n        arr.sort(function (a, b) {\n            return +a - +b;\n        });\n        if (zeroIsLast && arr[0] === 0) {\n            arr.push(arr.shift());\n        }\n    };\n    later.array.next = function (val, values, extent) {\n        var cur, zeroIsLargest = extent[0] !== 0, nextIdx = 0;\n        for (var i = values.length - 1; i > -1; --i) {\n            cur = values[i];\n            if (cur === val) {\n                return cur;\n            }\n            if (cur > val || cur === 0 && zeroIsLargest && extent[1] > val) {\n                nextIdx = i;\n                continue;\n            }\n            break;\n        }\n        return values[nextIdx];\n    };\n    later.array.nextInvalid = function (val, values, extent) {\n        var min = extent[0], max = extent[1], len = values.length, zeroVal = values[len - 1] === 0 && min !== 0 ? max : 0, next = val, i = values.indexOf(val), start = next;\n        while (next === (values[i] || zeroVal)) {\n            next++;\n            if (next > max) {\n                next = min;\n            }\n            i++;\n            if (i === len) {\n                i = 0;\n            }\n            if (next === start) {\n                return undefined;\n            }\n        }\n        return next;\n    };\n    later.array.prev = function (val, values, extent) {\n        var cur, len = values.length, zeroIsLargest = extent[0] !== 0, prevIdx = len - 1;\n        for (var i = 0; i < len; i++) {\n            cur = values[i];\n            if (cur === val) {\n                return cur;\n            }\n            if (cur < val || cur === 0 && zeroIsLargest && extent[1] < val) {\n                prevIdx = i;\n                continue;\n            }\n            break;\n        }\n        return values[prevIdx];\n    };\n    later.array.prevInvalid = function (val, values, extent) {\n        var min = extent[0], max = extent[1], len = values.length, zeroVal = values[len - 1] === 0 && min !== 0 ? max : 0, next = val, i = values.indexOf(val), start = next;\n        while (next === (values[i] || zeroVal)) {\n            next--;\n            if (next < min) {\n                next = max;\n            }\n            i--;\n            if (i === -1) {\n                i = len - 1;\n            }\n            if (next === start) {\n                return undefined;\n            }\n        }\n        return next;\n    };\n    later.day = later.D = {\n        name: \"day\",\n        range: 86400,\n        val: function (d) {\n            return d.D || (d.D = later.date.getDate.call(d));\n        },\n        isValid: function (d, val) {\n            return later.D.val(d) === (val || later.D.extent(d)[1]);\n        },\n        extent: function (d) {\n            if (d.DExtent)\n                return d.DExtent;\n            var month = later.M.val(d), max = later.DAYS_IN_MONTH[month - 1];\n            if (month === 2 && later.dy.extent(d)[1] === 366) {\n                max = max + 1;\n            }\n            return d.DExtent = [1, max];\n        },\n        start: function (d) {\n            return d.DStart || (d.DStart = later.date.next(later.Y.val(d), later.M.val(d), later.D.val(d)));\n        },\n        end: function (d) {\n            return d.DEnd || (d.DEnd = later.date.prev(later.Y.val(d), later.M.val(d), later.D.val(d)));\n        },\n        next: function (d, val) {\n            val = val > later.D.extent(d)[1] ? 1 : val;\n            var month = later.date.nextRollover(d, val, later.D, later.M), DMax = later.D.extent(month)[1];\n            val = val > DMax ? 1 : val || DMax;\n            return later.date.next(later.Y.val(month), later.M.val(month), val);\n        },\n        prev: function (d, val) {\n            var month = later.date.prevRollover(d, val, later.D, later.M), DMax = later.D.extent(month)[1];\n            return later.date.prev(later.Y.val(month), later.M.val(month), val > DMax ? DMax : val || DMax);\n        }\n    };\n    later.dayOfWeekCount = later.dc = {\n        name: \"day of week count\",\n        range: 604800,\n        val: function (d) {\n            return d.dc || (d.dc = Math.floor((later.D.val(d) - 1) / 7) + 1);\n        },\n        isValid: function (d, val) {\n            return later.dc.val(d) === val || val === 0 && later.D.val(d) > later.D.extent(d)[1] - 7;\n        },\n        extent: function (d) {\n            return d.dcExtent || (d.dcExtent = [1, Math.ceil(later.D.extent(d)[1] / 7)]);\n        },\n        start: function (d) {\n            return d.dcStart || (d.dcStart = later.date.next(later.Y.val(d), later.M.val(d), Math.max(1, (later.dc.val(d) - 1) * 7 + 1 || 1)));\n        },\n        end: function (d) {\n            return d.dcEnd || (d.dcEnd = later.date.prev(later.Y.val(d), later.M.val(d), Math.min(later.dc.val(d) * 7, later.D.extent(d)[1])));\n        },\n        next: function (d, val) {\n            val = val > later.dc.extent(d)[1] ? 1 : val;\n            var month = later.date.nextRollover(d, val, later.dc, later.M), dcMax = later.dc.extent(month)[1];\n            val = val > dcMax ? 1 : val;\n            var next = later.date.next(later.Y.val(month), later.M.val(month), val === 0 ? later.D.extent(month)[1] - 6 : 1 + 7 * (val - 1));\n            if (next.getTime() <= d.getTime()) {\n                month = later.M.next(d, later.M.val(d) + 1);\n                return later.date.next(later.Y.val(month), later.M.val(month), val === 0 ? later.D.extent(month)[1] - 6 : 1 + 7 * (val - 1));\n            }\n            return next;\n        },\n        prev: function (d, val) {\n            var month = later.date.prevRollover(d, val, later.dc, later.M), dcMax = later.dc.extent(month)[1];\n            val = val > dcMax ? dcMax : val || dcMax;\n            return later.dc.end(later.date.prev(later.Y.val(month), later.M.val(month), 1 + 7 * (val - 1)));\n        }\n    };\n    later.dayOfWeek = later.dw = later.d = {\n        name: \"day of week\",\n        range: 86400,\n        val: function (d) {\n            return d.dw || (d.dw = later.date.getDay.call(d) + 1);\n        },\n        isValid: function (d, val) {\n            return later.dw.val(d) === (val || 7);\n        },\n        extent: function () {\n            return [1, 7];\n        },\n        start: function (d) {\n            return later.D.start(d);\n        },\n        end: function (d) {\n            return later.D.end(d);\n        },\n        next: function (d, val) {\n            val = val > 7 ? 1 : val || 7;\n            return later.date.next(later.Y.val(d), later.M.val(d), later.D.val(d) + (val - later.dw.val(d)) + (val <= later.dw.val(d) ? 7 : 0));\n        },\n        prev: function (d, val) {\n            val = val > 7 ? 7 : val || 7;\n            return later.date.prev(later.Y.val(d), later.M.val(d), later.D.val(d) + (val - later.dw.val(d)) + (val >= later.dw.val(d) ? -7 : 0));\n        }\n    };\n    later.dayOfYear = later.dy = {\n        name: \"day of year\",\n        range: 86400,\n        val: function (d) {\n            return d.dy || (d.dy = Math.ceil(1 + (later.D.start(d).getTime() - later.Y.start(d).getTime()) / later.DAY));\n        },\n        isValid: function (d, val) {\n            return later.dy.val(d) === (val || later.dy.extent(d)[1]);\n        },\n        extent: function (d) {\n            var year = later.Y.val(d);\n            return d.dyExtent || (d.dyExtent = [1, year % 4 ? 365 : 366]);\n        },\n        start: function (d) {\n            return later.D.start(d);\n        },\n        end: function (d) {\n            return later.D.end(d);\n        },\n        next: function (d, val) {\n            val = val > later.dy.extent(d)[1] ? 1 : val;\n            var year = later.date.nextRollover(d, val, later.dy, later.Y), dyMax = later.dy.extent(year)[1];\n            val = val > dyMax ? 1 : val || dyMax;\n            return later.date.next(later.Y.val(year), later.M.val(year), val);\n        },\n        prev: function (d, val) {\n            var year = later.date.prevRollover(d, val, later.dy, later.Y), dyMax = later.dy.extent(year)[1];\n            val = val > dyMax ? dyMax : val || dyMax;\n            return later.date.prev(later.Y.val(year), later.M.val(year), val);\n        }\n    };\n    later.hour = later.h = {\n        name: \"hour\",\n        range: 3600,\n        val: function (d) {\n            return d.h || (d.h = later.date.getHour.call(d));\n        },\n        isValid: function (d, val) {\n            return later.h.val(d) === val;\n        },\n        extent: function () {\n            return [0, 23];\n        },\n        start: function (d) {\n            return d.hStart || (d.hStart = later.date.next(later.Y.val(d), later.M.val(d), later.D.val(d), later.h.val(d)));\n        },\n        end: function (d) {\n            return d.hEnd || (d.hEnd = later.date.prev(later.Y.val(d), later.M.val(d), later.D.val(d), later.h.val(d)));\n        },\n        next: function (d, val) {\n            val = val > 23 ? 0 : val;\n            var next = later.date.next(later.Y.val(d), later.M.val(d), later.D.val(d) + (val <= later.h.val(d) ? 1 : 0), val);\n            if (!later.date.isUTC && next.getTime() <= d.getTime()) {\n                next = later.date.next(later.Y.val(next), later.M.val(next), later.D.val(next), val + 1);\n            }\n            return next;\n        },\n        prev: function (d, val) {\n            val = val > 23 ? 23 : val;\n            return later.date.prev(later.Y.val(d), later.M.val(d), later.D.val(d) + (val >= later.h.val(d) ? -1 : 0), val);\n        }\n    };\n    later.minute = later.m = {\n        name: \"minute\",\n        range: 60,\n        val: function (d) {\n            return d.m || (d.m = later.date.getMin.call(d));\n        },\n        isValid: function (d, val) {\n            return later.m.val(d) === val;\n        },\n        extent: function (d) {\n            return [0, 59];\n        },\n        start: function (d) {\n            return d.mStart || (d.mStart = later.date.next(later.Y.val(d), later.M.val(d), later.D.val(d), later.h.val(d), later.m.val(d)));\n        },\n        end: function (d) {\n            return d.mEnd || (d.mEnd = later.date.prev(later.Y.val(d), later.M.val(d), later.D.val(d), later.h.val(d), later.m.val(d)));\n        },\n        next: function (d, val) {\n            var m = later.m.val(d), s = later.s.val(d), inc = val > 59 ? 60 - m : val <= m ? 60 - m + val : val - m, next = new Date(d.getTime() + inc * later.MIN - s * later.SEC);\n            if (!later.date.isUTC && next.getTime() <= d.getTime()) {\n                next = new Date(d.getTime() + (inc + 120) * later.MIN - s * later.SEC);\n            }\n            return next;\n        },\n        prev: function (d, val) {\n            val = val > 59 ? 59 : val;\n            return later.date.prev(later.Y.val(d), later.M.val(d), later.D.val(d), later.h.val(d) + (val >= later.m.val(d) ? -1 : 0), val);\n        }\n    };\n    later.month = later.M = {\n        name: \"month\",\n        range: 2629740,\n        val: function (d) {\n            return d.M || (d.M = later.date.getMonth.call(d) + 1);\n        },\n        isValid: function (d, val) {\n            return later.M.val(d) === (val || 12);\n        },\n        extent: function () {\n            return [1, 12];\n        },\n        start: function (d) {\n            return d.MStart || (d.MStart = later.date.next(later.Y.val(d), later.M.val(d)));\n        },\n        end: function (d) {\n            return d.MEnd || (d.MEnd = later.date.prev(later.Y.val(d), later.M.val(d)));\n        },\n        next: function (d, val) {\n            val = val > 12 ? 1 : val || 12;\n            return later.date.next(later.Y.val(d) + (val > later.M.val(d) ? 0 : 1), val);\n        },\n        prev: function (d, val) {\n            val = val > 12 ? 12 : val || 12;\n            return later.date.prev(later.Y.val(d) - (val >= later.M.val(d) ? 1 : 0), val);\n        }\n    };\n    later.second = later.s = {\n        name: \"second\",\n        range: 1,\n        val: function (d) {\n            return d.s || (d.s = later.date.getSec.call(d));\n        },\n        isValid: function (d, val) {\n            return later.s.val(d) === val;\n        },\n        extent: function () {\n            return [0, 59];\n        },\n        start: function (d) {\n            return d;\n        },\n        end: function (d) {\n            return d;\n        },\n        next: function (d, val) {\n            var s = later.s.val(d), inc = val > 59 ? 60 - s : val <= s ? 60 - s + val : val - s, next = new Date(d.getTime() + inc * later.SEC);\n            if (!later.date.isUTC && next.getTime() <= d.getTime()) {\n                next = new Date(d.getTime() + (inc + 7200) * later.SEC);\n            }\n            return next;\n        },\n        prev: function (d, val, cache) {\n            val = val > 59 ? 59 : val;\n            return later.date.prev(later.Y.val(d), later.M.val(d), later.D.val(d), later.h.val(d), later.m.val(d) + (val >= later.s.val(d) ? -1 : 0), val);\n        }\n    };\n    later.time = later.t = {\n        name: \"time\",\n        range: 1,\n        val: function (d) {\n            return d.t || (d.t = later.h.val(d) * 3600 + later.m.val(d) * 60 + later.s.val(d));\n        },\n        isValid: function (d, val) {\n            return later.t.val(d) === val;\n        },\n        extent: function () {\n            return [0, 86399];\n        },\n        start: function (d) {\n            return d;\n        },\n        end: function (d) {\n            return d;\n        },\n        next: function (d, val) {\n            val = val > 86399 ? 0 : val;\n            var next = later.date.next(later.Y.val(d), later.M.val(d), later.D.val(d) + (val <= later.t.val(d) ? 1 : 0), 0, 0, val);\n            if (!later.date.isUTC && next.getTime() < d.getTime()) {\n                next = later.date.next(later.Y.val(next), later.M.val(next), later.D.val(next), later.h.val(next), later.m.val(next), val + 7200);\n            }\n            return next;\n        },\n        prev: function (d, val) {\n            val = val > 86399 ? 86399 : val;\n            return later.date.next(later.Y.val(d), later.M.val(d), later.D.val(d) + (val >= later.t.val(d) ? -1 : 0), 0, 0, val);\n        }\n    };\n    later.weekOfMonth = later.wm = {\n        name: \"week of month\",\n        range: 604800,\n        val: function (d) {\n            return d.wm || (d.wm = (later.D.val(d) + (later.dw.val(later.M.start(d)) - 1) + (7 - later.dw.val(d))) / 7);\n        },\n        isValid: function (d, val) {\n            return later.wm.val(d) === (val || later.wm.extent(d)[1]);\n        },\n        extent: function (d) {\n            return d.wmExtent || (d.wmExtent = [1, (later.D.extent(d)[1] + (later.dw.val(later.M.start(d)) - 1) + (7 - later.dw.val(later.M.end(d)))) / 7]);\n        },\n        start: function (d) {\n            return d.wmStart || (d.wmStart = later.date.next(later.Y.val(d), later.M.val(d), Math.max(later.D.val(d) - later.dw.val(d) + 1, 1)));\n        },\n        end: function (d) {\n            return d.wmEnd || (d.wmEnd = later.date.prev(later.Y.val(d), later.M.val(d), Math.min(later.D.val(d) + (7 - later.dw.val(d)), later.D.extent(d)[1])));\n        },\n        next: function (d, val) {\n            val = val > later.wm.extent(d)[1] ? 1 : val;\n            var month = later.date.nextRollover(d, val, later.wm, later.M), wmMax = later.wm.extent(month)[1];\n            val = val > wmMax ? 1 : val || wmMax;\n            return later.date.next(later.Y.val(month), later.M.val(month), Math.max(1, (val - 1) * 7 - (later.dw.val(month) - 2)));\n        },\n        prev: function (d, val) {\n            var month = later.date.prevRollover(d, val, later.wm, later.M), wmMax = later.wm.extent(month)[1];\n            val = val > wmMax ? wmMax : val || wmMax;\n            return later.wm.end(later.date.next(later.Y.val(month), later.M.val(month), Math.max(1, (val - 1) * 7 - (later.dw.val(month) - 2))));\n        }\n    };\n    later.weekOfYear = later.wy = {\n        name: \"week of year (ISO)\",\n        range: 604800,\n        val: function (d) {\n            if (d.wy)\n                return d.wy;\n            var wThur = later.dw.next(later.wy.start(d), 5), YThur = later.dw.next(later.Y.prev(wThur, later.Y.val(wThur) - 1), 5);\n            return d.wy = 1 + Math.ceil((wThur.getTime() - YThur.getTime()) / later.WEEK);\n        },\n        isValid: function (d, val) {\n            return later.wy.val(d) === (val || later.wy.extent(d)[1]);\n        },\n        extent: function (d) {\n            if (d.wyExtent)\n                return d.wyExtent;\n            var year = later.dw.next(later.wy.start(d), 5), dwFirst = later.dw.val(later.Y.start(year)), dwLast = later.dw.val(later.Y.end(year));\n            return d.wyExtent = [1, dwFirst === 5 || dwLast === 5 ? 53 : 52];\n        },\n        start: function (d) {\n            return d.wyStart || (d.wyStart = later.date.next(later.Y.val(d), later.M.val(d), later.D.val(d) - (later.dw.val(d) > 1 ? later.dw.val(d) - 2 : 6)));\n        },\n        end: function (d) {\n            return d.wyEnd || (d.wyEnd = later.date.prev(later.Y.val(d), later.M.val(d), later.D.val(d) + (later.dw.val(d) > 1 ? 8 - later.dw.val(d) : 0)));\n        },\n        next: function (d, val) {\n            val = val > later.wy.extent(d)[1] ? 1 : val;\n            var wyThur = later.dw.next(later.wy.start(d), 5), year = later.date.nextRollover(wyThur, val, later.wy, later.Y);\n            if (later.wy.val(year) !== 1) {\n                year = later.dw.next(year, 2);\n            }\n            var wyMax = later.wy.extent(year)[1], wyStart = later.wy.start(year);\n            val = val > wyMax ? 1 : val || wyMax;\n            return later.date.next(later.Y.val(wyStart), later.M.val(wyStart), later.D.val(wyStart) + 7 * (val - 1));\n        },\n        prev: function (d, val) {\n            var wyThur = later.dw.next(later.wy.start(d), 5), year = later.date.prevRollover(wyThur, val, later.wy, later.Y);\n            if (later.wy.val(year) !== 1) {\n                year = later.dw.next(year, 2);\n            }\n            var wyMax = later.wy.extent(year)[1], wyEnd = later.wy.end(year);\n            val = val > wyMax ? wyMax : val || wyMax;\n            return later.wy.end(later.date.next(later.Y.val(wyEnd), later.M.val(wyEnd), later.D.val(wyEnd) + 7 * (val - 1)));\n        }\n    };\n    later.year = later.Y = {\n        name: \"year\",\n        range: 31556900,\n        val: function (d) {\n            return d.Y || (d.Y = later.date.getYear.call(d));\n        },\n        isValid: function (d, val) {\n            return later.Y.val(d) === val;\n        },\n        extent: function () {\n            return [1970, 2099];\n        },\n        start: function (d) {\n            return d.YStart || (d.YStart = later.date.next(later.Y.val(d)));\n        },\n        end: function (d) {\n            return d.YEnd || (d.YEnd = later.date.prev(later.Y.val(d)));\n        },\n        next: function (d, val) {\n            return val > later.Y.val(d) && val <= later.Y.extent()[1] ? later.date.next(val) : later.NEVER;\n        },\n        prev: function (d, val) {\n            return val < later.Y.val(d) && val >= later.Y.extent()[0] ? later.date.prev(val) : later.NEVER;\n        }\n    };\n    later.fullDate = later.fd = {\n        name: \"full date\",\n        range: 1,\n        val: function (d) {\n            return d.fd || (d.fd = d.getTime());\n        },\n        isValid: function (d, val) {\n            return later.fd.val(d) === val;\n        },\n        extent: function () {\n            return [0, 3250368e7];\n        },\n        start: function (d) {\n            return d;\n        },\n        end: function (d) {\n            return d;\n        },\n        next: function (d, val) {\n            return later.fd.val(d) < val ? new Date(val) : later.NEVER;\n        },\n        prev: function (d, val) {\n            return later.fd.val(d) > val ? new Date(val) : later.NEVER;\n        }\n    };\n    later.modifier = {};\n    later.modifier.after = later.modifier.a = function (constraint, values) {\n        var value = values[0];\n        return {\n            name: \"after \" + constraint.name,\n            range: (constraint.extent(new Date())[1] - value) * constraint.range,\n            val: constraint.val,\n            isValid: function (d, val) {\n                return this.val(d) >= value;\n            },\n            extent: constraint.extent,\n            start: constraint.start,\n            end: constraint.end,\n            next: function (startDate, val) {\n                if (val != value)\n                    val = constraint.extent(startDate)[0];\n                return constraint.next(startDate, val);\n            },\n            prev: function (startDate, val) {\n                val = val === value ? constraint.extent(startDate)[1] : value - 1;\n                return constraint.prev(startDate, val);\n            }\n        };\n    };\n    later.modifier.before = later.modifier.b = function (constraint, values) {\n        var value = values[values.length - 1];\n        return {\n            name: \"before \" + constraint.name,\n            range: constraint.range * (value - 1),\n            val: constraint.val,\n            isValid: function (d, val) {\n                return this.val(d) < value;\n            },\n            extent: constraint.extent,\n            start: constraint.start,\n            end: constraint.end,\n            next: function (startDate, val) {\n                val = val === value ? constraint.extent(startDate)[0] : value;\n                return constraint.next(startDate, val);\n            },\n            prev: function (startDate, val) {\n                val = val === value ? value - 1 : constraint.extent(startDate)[1];\n                return constraint.prev(startDate, val);\n            }\n        };\n    };\n    later.compile = function (schedDef) {\n        var constraints = [], constraintsLen = 0, tickConstraint;\n        for (var key in schedDef) {\n            var nameParts = key.split(\"_\"), name = nameParts[0], mod = nameParts[1], vals = schedDef[key], constraint = mod ? later.modifier[mod](later[name], vals) : later[name];\n            constraints.push({\n                constraint: constraint,\n                vals: vals\n            });\n            constraintsLen++;\n        }\n        constraints.sort(function (a, b) {\n            var ra = a.constraint.range, rb = b.constraint.range;\n            return rb < ra ? -1 : rb > ra ? 1 : 0;\n        });\n        tickConstraint = constraints[constraintsLen - 1].constraint;\n        function compareFn(dir) {\n            return dir === \"next\" ? function (a, b) {\n                return a.getTime() > b.getTime();\n            } : function (a, b) {\n                return b.getTime() > a.getTime();\n            };\n        }\n        return {\n            start: function (dir, startDate) {\n                var next = startDate, nextVal = later.array[dir], maxAttempts = 1e3, done;\n                while (maxAttempts-- && !done && next) {\n                    done = true;\n                    for (var i = 0; i < constraintsLen; i++) {\n                        var constraint = constraints[i].constraint, curVal = constraint.val(next), extent = constraint.extent(next), newVal = nextVal(curVal, constraints[i].vals, extent);\n                        if (!constraint.isValid(next, newVal)) {\n                            next = constraint[dir](next, newVal);\n                            done = false;\n                            break;\n                        }\n                    }\n                }\n                if (next !== later.NEVER) {\n                    next = dir === \"next\" ? tickConstraint.start(next) : tickConstraint.end(next);\n                }\n                return next;\n            },\n            end: function (dir, startDate) {\n                var result, nextVal = later.array[dir + \"Invalid\"], compare = compareFn(dir);\n                for (var i = constraintsLen - 1; i >= 0; i--) {\n                    var constraint = constraints[i].constraint, curVal = constraint.val(startDate), extent = constraint.extent(startDate), newVal = nextVal(curVal, constraints[i].vals, extent), next;\n                    if (newVal !== undefined) {\n                        next = constraint[dir](startDate, newVal);\n                        if (next && (!result || compare(result, next))) {\n                            result = next;\n                        }\n                    }\n                }\n                return result;\n            },\n            tick: function (dir, date) {\n                return new Date(dir === \"next\" ? tickConstraint.end(date).getTime() + later.SEC : tickConstraint.start(date).getTime() - later.SEC);\n            },\n            // PATCH\n            tickSafe: function (dir, date) {\n                return dir === \"next\"\n                    ? diffSecond(tickConstraint.end(date), 1)\n                    : diffSecond(tickConstraint.start(date), -1)\n                ;\n            },\n            // EOF PATCH\n            tickStart: function (date) {\n                return tickConstraint.start(date);\n            }\n        };\n    };\n    later.schedule = function (sched) {\n        if (!sched)\n            throw new Error(\"Missing schedule definition.\");\n        if (!sched.schedules)\n            throw new Error(\"Definition must include at least one schedule.\");\n        var schedules = [], schedulesLen = sched.schedules.length, exceptions = [], exceptionsLen = sched.exceptions ? sched.exceptions.length : 0;\n        for (var i = 0; i < schedulesLen; i++) {\n            schedules.push(later.compile(sched.schedules[i]));\n        }\n        for (var j = 0; j < exceptionsLen; j++) {\n            exceptions.push(later.compile(sched.exceptions[j]));\n        }\n        function getInstances(dir, count, startDate, endDate, isRange) {\n            var compare = compareFn(dir), loopCount = count, maxAttempts = 1e6, schedStarts = [], exceptStarts = [], next, end, results = [], isForward = dir === \"next\", lastResult, rStart = isForward ? 0 : 1, rEnd = isForward ? 1 : 0;\n            startDate = startDate ? new Date(startDate) : new Date();\n            if (!startDate || !startDate.getTime())\n                throw new Error(\"Invalid start date.\");\n            setNextStarts(dir, schedules, schedStarts, startDate);\n            setRangeStarts(dir, exceptions, exceptStarts, startDate);\n            while (maxAttempts-- && loopCount && (next = findNext(schedStarts, compare))) {\n                if (endDate && compare(next, endDate)) {\n                    break;\n                }\n                if (exceptionsLen) {\n                    updateRangeStarts(dir, exceptions, exceptStarts, next);\n                    if (end = calcRangeOverlap(dir, exceptStarts, next)) {\n                        updateNextStarts(dir, schedules, schedStarts, end);\n                        continue;\n                    }\n                }\n                if (isRange) {\n                    var maxEndDate = calcMaxEndDate(exceptStarts, compare);\n                    end = calcEnd(dir, schedules, schedStarts, next, maxEndDate);\n                    var r = isForward ? [new Date(Math.max(startDate, next)), end ? new Date(endDate ? Math.min(end, endDate) : end) : undefined] : [end ? new Date(endDate ? Math.max(endDate, end.getTime() + later.SEC) : end.getTime() + later.SEC) : undefined, new Date(Math.min(startDate, next.getTime() + later.SEC))];\n                    if (lastResult && r[rStart].getTime() === lastResult[rEnd].getTime()) {\n                        lastResult[rEnd] = r[rEnd];\n                        loopCount++;\n                    }\n                    else {\n                        lastResult = r;\n                        results.push(lastResult);\n                    }\n                    if (!end)\n                        break;\n                    updateNextStarts(dir, schedules, schedStarts, end);\n                }\n                else {\n                    results.push(isForward ? new Date(Math.max(startDate, next)) : getStart(schedules, schedStarts, next, endDate));\n                    tickStarts(dir, schedules, schedStarts, next);\n                }\n                loopCount--;\n            }\n            for (var i = 0, len = results.length; i < len; i++) {\n                var result = results[i];\n                results[i] = Object.prototype.toString.call(result) === \"[object Array]\" ? [cleanDate(result[0]), cleanDate(result[1])] : cleanDate(result);\n            }\n            return results.length === 0 ? later.NEVER : count === 1 ? results[0] : results;\n        }\n        function cleanDate(d) {\n            if (d instanceof Date && !isNaN(d.valueOf())) {\n                return new Date(d);\n            }\n            return undefined;\n        }\n        function setNextStarts(dir, schedArr, startsArr, startDate) {\n            for (var i = 0, len = schedArr.length; i < len; i++) {\n                startsArr[i] = schedArr[i].start(dir, startDate);\n            }\n        }\n        function updateNextStarts(dir, schedArr, startsArr, startDate) {\n            var compare = compareFn(dir);\n            for (var i = 0, len = schedArr.length; i < len; i++) {\n                if (startsArr[i] && !compare(startsArr[i], startDate)) {\n                    startsArr[i] = schedArr[i].start(dir, startDate);\n                }\n            }\n        }\n        function setRangeStarts(dir, schedArr, rangesArr, startDate) {\n            var compare = compareFn(dir);\n            for (var i = 0, len = schedArr.length; i < len; i++) {\n                var nextStart = schedArr[i].start(dir, startDate);\n                if (!nextStart) {\n                    rangesArr[i] = later.NEVER;\n                }\n                else {\n                    rangesArr[i] = [nextStart, schedArr[i].end(dir, nextStart)];\n                }\n            }\n        }\n        function updateRangeStarts(dir, schedArr, rangesArr, startDate) {\n            var compare = compareFn(dir);\n            for (var i = 0, len = schedArr.length; i < len; i++) {\n                if (rangesArr[i] && !compare(rangesArr[i][0], startDate)) {\n                    var nextStart = schedArr[i].start(dir, startDate);\n                    if (!nextStart) {\n                        rangesArr[i] = later.NEVER;\n                    }\n                    else {\n                        rangesArr[i] = [nextStart, schedArr[i].end(dir, nextStart)];\n                    }\n                }\n            }\n        }\n        function tickStarts(dir, schedArr, startsArr, startDate) {\n            for (var i = 0, len = schedArr.length; i < len; i++) {\n                if (startsArr[i] && startsArr[i].getTime() === startDate.getTime()) {\n                    // PATCH\n                    const newStart = schedArr[i].start(dir, schedArr[i].tick(dir, startDate));\n\n                    // if the calculated `newStart` is the same as previous, this is probably\n                    // an endless loop caused by the DST shift (the browser won't halt because later.js\n                    // has a limit of 100000 iterations, but the calculated schedules will be all wrong)\n                    if (newStart !== later.NEVER && newStart.getTime() === startsArr[i].getTime()) {\n                        // in such case we use our own \"safe\" implementation of the \"tick\" method\n                        // which performs symbolic date manipulation\n                        // (instead of advancing on milliseconds since epoch timeaxis)\n                        // the former seems to be slower, that's why we only switch to it\n                        // in the case of infinite loop\n                        startsArr[i] = schedArr[i].start(dir, schedArr[i].tickSafe(dir, startDate));\n                    } else {\n                        startsArr[i] = newStart\n                    }\n                    // EOF PATCH\n                }\n            }\n        }\n        function getStart(schedArr, startsArr, startDate, minEndDate) {\n            var result;\n            for (var i = 0, len = startsArr.length; i < len; i++) {\n                if (startsArr[i] && startsArr[i].getTime() === startDate.getTime()) {\n                    var start = schedArr[i].tickStart(startDate);\n                    if (minEndDate && start < minEndDate) {\n                        return minEndDate;\n                    }\n                    if (!result || start > result) {\n                        result = start;\n                    }\n                }\n            }\n            return result;\n        }\n        function calcRangeOverlap(dir, rangesArr, startDate) {\n            var compare = compareFn(dir), result;\n            for (var i = 0, len = rangesArr.length; i < len; i++) {\n                var range = rangesArr[i];\n                if (range && !compare(range[0], startDate) && (!range[1] || compare(range[1], startDate))) {\n                    if (!result || compare(range[1], result)) {\n                        result = range[1];\n                    }\n                }\n            }\n            return result;\n        }\n        function calcMaxEndDate(exceptsArr, compare) {\n            var result;\n            for (var i = 0, len = exceptsArr.length; i < len; i++) {\n                if (exceptsArr[i] && (!result || compare(result, exceptsArr[i][0]))) {\n                    result = exceptsArr[i][0];\n                }\n            }\n            return result;\n        }\n        function calcEnd(dir, schedArr, startsArr, startDate, maxEndDate) {\n            var compare = compareFn(dir), result;\n            for (var i = 0, len = schedArr.length; i < len; i++) {\n                var start = startsArr[i];\n                if (start && start.getTime() === startDate.getTime()) {\n                    var end = schedArr[i].end(dir, start);\n                    if (maxEndDate && (!end || compare(end, maxEndDate))) {\n                        return maxEndDate;\n                    }\n                    if (!result || compare(end, result)) {\n                        result = end;\n                    }\n                }\n            }\n            return result;\n        }\n        function compareFn(dir) {\n            return dir === \"next\" ? function (a, b) {\n                return !b || a.getTime() > b.getTime();\n            } : function (a, b) {\n                return !a || b.getTime() > a.getTime();\n            };\n        }\n        function findNext(arr, compare) {\n            var next = arr[0];\n            for (var i = 1, len = arr.length; i < len; i++) {\n                if (arr[i] && compare(next, arr[i])) {\n                    next = arr[i];\n                }\n            }\n            return next;\n        }\n        return {\n            isValid: function (d) {\n                return getInstances(\"next\", 1, d, d) !== later.NEVER;\n            },\n            next: function (count, startDate, endDate) {\n                return getInstances(\"next\", count || 1, startDate, endDate);\n            },\n            prev: function (count, startDate, endDate) {\n                return getInstances(\"prev\", count || 1, startDate, endDate);\n            },\n            nextRange: function (count, startDate, endDate) {\n                return getInstances(\"next\", count || 1, startDate, endDate, true);\n            },\n            prevRange: function (count, startDate, endDate) {\n                return getInstances(\"prev\", count || 1, startDate, endDate, true);\n            }\n        };\n    };\n    later.setTimeout = function (fn, sched) {\n        var s = later.schedule(sched), t;\n        if (fn) {\n            scheduleTimeout();\n        }\n        function scheduleTimeout() {\n            var now = Date.now(), next = s.next(2, now);\n            if (!next[0]) {\n                t = undefined;\n                return;\n            }\n            var diff = next[0].getTime() - now;\n            if (diff < 1e3) {\n                diff = next[1] ? next[1].getTime() - now : 1e3;\n            }\n            if (diff < 2147483647) {\n                t = setTimeout(fn, diff);\n            }\n            else {\n                t = setTimeout(scheduleTimeout, 2147483647);\n            }\n        }\n        return {\n            isDone: function () {\n                return !t;\n            },\n            clear: function () {\n                clearTimeout(t);\n            }\n        };\n    };\n    later.setInterval = function (fn, sched) {\n        if (!fn) {\n            return;\n        }\n        var t = later.setTimeout(scheduleTimeout, sched), done = t.isDone();\n        function scheduleTimeout() {\n            if (!done) {\n                fn();\n                t = later.setTimeout(scheduleTimeout, sched);\n            }\n        }\n        return {\n            isDone: function () {\n                return t.isDone();\n            },\n            clear: function () {\n                done = true;\n                t.clear();\n            }\n        };\n    };\n    later.date = {};\n    later.date.timezone = function (useLocalTime) {\n        later.date.build = useLocalTime ? function (Y, M, D, h, m, s) {\n            return new Date(Y, M, D, h, m, s);\n        } : function (Y, M, D, h, m, s) {\n            return new Date(Date.UTC(Y, M, D, h, m, s));\n        };\n        var get = useLocalTime ? \"get\" : \"getUTC\", d = Date.prototype;\n        later.date.getYear = d[get + \"FullYear\"];\n        later.date.getMonth = d[get + \"Month\"];\n        later.date.getDate = d[get + \"Date\"];\n        later.date.getDay = d[get + \"Day\"];\n        later.date.getHour = d[get + \"Hours\"];\n        later.date.getMin = d[get + \"Minutes\"];\n        later.date.getSec = d[get + \"Seconds\"];\n        later.date.isUTC = !useLocalTime;\n    };\n    later.date.UTC = function () {\n        later.date.timezone(false);\n    };\n    later.date.localTime = function () {\n        later.date.timezone(true);\n    };\n    later.date.UTC();\n    later.SEC = 1e3;\n    later.MIN = later.SEC * 60;\n    later.HOUR = later.MIN * 60;\n    later.DAY = later.HOUR * 24;\n    later.WEEK = later.DAY * 7;\n    later.DAYS_IN_MONTH = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n    later.NEVER = 0;\n    later.date.next = function (Y, M, D, h, m, s) {\n        return later.date.build(Y, M !== undefined ? M - 1 : 0, D !== undefined ? D : 1, h || 0, m || 0, s || 0);\n    };\n    later.date.nextRollover = function (d, val, constraint, period) {\n        var cur = constraint.val(d), max = constraint.extent(d)[1];\n        return (val || max) <= cur || val > max ? new Date(period.end(d).getTime() + later.SEC) : period.start(d);\n    };\n    later.date.prev = function (Y, M, D, h, m, s) {\n        var len = arguments.length;\n        M = len < 2 ? 11 : M - 1;\n        D = len < 3 ? later.D.extent(later.date.next(Y, M + 1))[1] : D;\n        h = len < 4 ? 23 : h;\n        m = len < 5 ? 59 : m;\n        s = len < 6 ? 59 : s;\n        return later.date.build(Y, M, D, h, m, s);\n    };\n    later.date.prevRollover = function (d, val, constraint, period) {\n        var cur = constraint.val(d);\n        return val >= cur || !val ? period.start(period.prev(d, period.val(d) - 1)) : period.start(d);\n    };\n    later.parse = {};\n    later.parse.cron = function (expr, hasSeconds) {\n        var NAMES = {\n            JAN: 1,\n            FEB: 2,\n            MAR: 3,\n            APR: 4,\n            MAY: 5,\n            JUN: 6,\n            JUL: 7,\n            AUG: 8,\n            SEP: 9,\n            OCT: 10,\n            NOV: 11,\n            DEC: 12,\n            SUN: 1,\n            MON: 2,\n            TUE: 3,\n            WED: 4,\n            THU: 5,\n            FRI: 6,\n            SAT: 7\n        };\n        var REPLACEMENTS = {\n            \"* * * * * *\": \"0/1 * * * * *\",\n            \"@YEARLY\": \"0 0 1 1 *\",\n            \"@ANNUALLY\": \"0 0 1 1 *\",\n            \"@MONTHLY\": \"0 0 1 * *\",\n            \"@WEEKLY\": \"0 0 * * 0\",\n            \"@DAILY\": \"0 0 * * *\",\n            \"@HOURLY\": \"0 * * * *\"\n        };\n        var FIELDS = {\n            s: [0, 0, 59],\n            m: [1, 0, 59],\n            h: [2, 0, 23],\n            D: [3, 1, 31],\n            M: [4, 1, 12],\n            Y: [6, 1970, 2099],\n            d: [5, 1, 7, 1]\n        };\n        function getValue(value, offset, max) {\n            return isNaN(value) ? NAMES[value] || null : Math.min(+value + (offset || 0), max || 9999);\n        }\n        function cloneSchedule(sched) {\n            var clone = {}, field;\n            for (field in sched) {\n                if (field !== \"dc\" && field !== \"d\") {\n                    clone[field] = sched[field].slice(0);\n                }\n            }\n            return clone;\n        }\n        function add(sched, name, min, max, inc) {\n            var i = min;\n            if (!sched[name]) {\n                sched[name] = [];\n            }\n            while (i <= max) {\n                if (sched[name].indexOf(i) < 0) {\n                    sched[name].push(i);\n                }\n                i += inc || 1;\n            }\n            sched[name].sort(function (a, b) {\n                return a - b;\n            });\n        }\n        function addHash(schedules, curSched, value, hash) {\n            if (curSched.d && !curSched.dc || curSched.dc && curSched.dc.indexOf(hash) < 0) {\n                schedules.push(cloneSchedule(curSched));\n                curSched = schedules[schedules.length - 1];\n            }\n            add(curSched, \"d\", value, value);\n            add(curSched, \"dc\", hash, hash);\n        }\n        function addWeekday(s, curSched, value) {\n            var except1 = {}, except2 = {};\n            if (value === 1) {\n                add(curSched, \"D\", 1, 3);\n                add(curSched, \"d\", NAMES.MON, NAMES.FRI);\n                add(except1, \"D\", 2, 2);\n                add(except1, \"d\", NAMES.TUE, NAMES.FRI);\n                add(except2, \"D\", 3, 3);\n                add(except2, \"d\", NAMES.TUE, NAMES.FRI);\n            }\n            else {\n                add(curSched, \"D\", value - 1, value + 1);\n                add(curSched, \"d\", NAMES.MON, NAMES.FRI);\n                add(except1, \"D\", value - 1, value - 1);\n                add(except1, \"d\", NAMES.MON, NAMES.THU);\n                add(except2, \"D\", value + 1, value + 1);\n                add(except2, \"d\", NAMES.TUE, NAMES.FRI);\n            }\n            s.exceptions.push(except1);\n            s.exceptions.push(except2);\n        }\n        function addRange(item, curSched, name, min, max, offset) {\n            var incSplit = item.split(\"/\"), inc = +incSplit[1], range = incSplit[0];\n            if (range !== \"*\" && range !== \"0\") {\n                var rangeSplit = range.split(\"-\");\n                min = getValue(rangeSplit[0], offset, max);\n                max = getValue(rangeSplit[1], offset, max) || max;\n            }\n            add(curSched, name, min, max, inc);\n        }\n        function parse(item, s, name, min, max, offset) {\n            var value, split, schedules = s.schedules, curSched = schedules[schedules.length - 1];\n            if (item === \"L\") {\n                item = min - 1;\n            }\n            if ((value = getValue(item, offset, max)) !== null) {\n                add(curSched, name, value, value);\n            }\n            else if ((value = getValue(item.replace(\"W\", \"\"), offset, max)) !== null) {\n                addWeekday(s, curSched, value);\n            }\n            else if ((value = getValue(item.replace(\"L\", \"\"), offset, max)) !== null) {\n                addHash(schedules, curSched, value, min - 1);\n            }\n            else if ((split = item.split(\"#\")).length === 2) {\n                value = getValue(split[0], offset, max);\n                addHash(schedules, curSched, value, getValue(split[1]));\n            }\n            else {\n                addRange(item, curSched, name, min, max, offset);\n            }\n        }\n        function isHash(item) {\n            return item.indexOf(\"#\") > -1 || item.indexOf(\"L\") > 0;\n        }\n        function itemSorter(a, b) {\n            return isHash(a) && !isHash(b) ? 1 : a - b;\n        }\n        function parseExpr(expr) {\n            var schedule = {\n                schedules: [{}],\n                exceptions: []\n            }, components = expr.replace(/(\\s)+/g, \" \").split(\" \"), field, f, component, items;\n            for (field in FIELDS) {\n                f = FIELDS[field];\n                component = components[f[0]];\n                if (component && component !== \"*\" && component !== \"?\") {\n                    items = component.split(\",\").sort(itemSorter);\n                    var i, length = items.length;\n                    for (i = 0; i < length; i++) {\n                        parse(items[i], schedule, field, f[1], f[2], f[3]);\n                    }\n                }\n            }\n            return schedule;\n        }\n        function prepareExpr(expr) {\n            var prepared = expr.toUpperCase();\n            return REPLACEMENTS[prepared] || prepared;\n        }\n        var e = prepareExpr(expr);\n        return parseExpr(hasSeconds ? e : \"0 \" + e);\n    };\n    later.parse.recur = function () {\n        var schedules = [], exceptions = [], cur, curArr = schedules, curName, values, every, modifier, applyMin, applyMax, i, last;\n        function add(name, min, max) {\n            name = modifier ? name + \"_\" + modifier : name;\n            if (!cur) {\n                curArr.push({});\n                cur = curArr[0];\n            }\n            if (!cur[name]) {\n                cur[name] = [];\n            }\n            curName = cur[name];\n            if (every) {\n                values = [];\n                for (i = min; i <= max; i += every) {\n                    values.push(i);\n                }\n                last = {\n                    n: name,\n                    x: every,\n                    c: curName.length,\n                    m: max\n                };\n            }\n            values = applyMin ? [min] : applyMax ? [max] : values;\n            var length = values.length;\n            for (i = 0; i < length; i += 1) {\n                var val = values[i];\n                if (curName.indexOf(val) < 0) {\n                    curName.push(val);\n                }\n            }\n            values = every = modifier = applyMin = applyMax = 0;\n        }\n        return {\n            schedules: schedules,\n            exceptions: exceptions,\n            on: function () {\n                values = arguments[0] instanceof Array ? arguments[0] : arguments;\n                return this;\n            },\n            every: function (x) {\n                every = x || 1;\n                return this;\n            },\n            after: function (x) {\n                modifier = \"a\";\n                values = [x];\n                return this;\n            },\n            before: function (x) {\n                modifier = \"b\";\n                values = [x];\n                return this;\n            },\n            first: function () {\n                applyMin = 1;\n                return this;\n            },\n            last: function () {\n                applyMax = 1;\n                return this;\n            },\n            time: function () {\n                for (var i = 0, len = values.length; i < len; i++) {\n                    var split = values[i].split(\":\");\n                    if (split.length < 3)\n                        split.push(0);\n                    values[i] = +split[0] * 3600 + +split[1] * 60 + +split[2];\n                }\n                add(\"t\");\n                return this;\n            },\n            second: function () {\n                add(\"s\", 0, 59);\n                return this;\n            },\n            minute: function () {\n                add(\"m\", 0, 59);\n                return this;\n            },\n            hour: function () {\n                add(\"h\", 0, 23);\n                return this;\n            },\n            dayOfMonth: function () {\n                add(\"D\", 1, applyMax ? 0 : 31);\n                return this;\n            },\n            dayOfWeek: function () {\n                add(\"d\", 1, 7);\n                return this;\n            },\n            onWeekend: function () {\n                values = [1, 7];\n                return this.dayOfWeek();\n            },\n            onWeekday: function () {\n                values = [2, 3, 4, 5, 6];\n                return this.dayOfWeek();\n            },\n            dayOfWeekCount: function () {\n                add(\"dc\", 1, applyMax ? 0 : 5);\n                return this;\n            },\n            dayOfYear: function () {\n                add(\"dy\", 1, applyMax ? 0 : 366);\n                return this;\n            },\n            weekOfMonth: function () {\n                add(\"wm\", 1, applyMax ? 0 : 5);\n                return this;\n            },\n            weekOfYear: function () {\n                add(\"wy\", 1, applyMax ? 0 : 53);\n                return this;\n            },\n            month: function () {\n                add(\"M\", 1, 12);\n                return this;\n            },\n            year: function () {\n                add(\"Y\", 1970, 2450);\n                return this;\n            },\n            fullDate: function () {\n                for (var i = 0, len = values.length; i < len; i++) {\n                    values[i] = values[i].getTime();\n                }\n                add(\"fd\");\n                return this;\n            },\n            customModifier: function (id, vals) {\n                var custom = later.modifier[id];\n                if (!custom)\n                    throw new Error(\"Custom modifier \" + id + \" not recognized!\");\n                modifier = id;\n                values = arguments[1] instanceof Array ? arguments[1] : [arguments[1]];\n                return this;\n            },\n            customPeriod: function (id) {\n                var custom = later[id];\n                if (!custom)\n                    throw new Error(\"Custom time period \" + id + \" not recognized!\");\n                add(id, custom.extent(new Date())[0], custom.extent(new Date())[1]);\n                return this;\n            },\n            startingOn: function (start) {\n                return this.between(start, last.m);\n            },\n            between: function (start, end) {\n                cur[last.n] = cur[last.n].splice(0, last.c);\n                every = last.x;\n                add(last.n, start, end);\n                return this;\n            },\n            and: function () {\n                cur = curArr[curArr.push({}) - 1];\n                return this;\n            },\n            except: function () {\n                curArr = exceptions;\n                cur = null;\n                return this;\n            }\n        };\n    };\n    later.parse.text = function (str) {\n        var recur = later.parse.recur, pos = 0, input = \"\", error;\n        var TOKENTYPES = {\n            eof: /^$/,\n            fullDate: /^(\\d\\d\\d\\d-\\d\\d-\\d\\dt\\d\\d:\\d\\d:\\d\\d)\\b/,\n            rank: /^((\\d\\d\\d\\d)|([2-5]?1(st)?|[2-5]?2(nd)?|[2-5]?3(rd)?|(0|[1-5]?[4-9]|[1-5]0|1[1-3])(th)?))\\b/,\n            time: /^((([0]?[1-9]|1[0-2]):[0-5]\\d(\\s)?(am|pm))|(([0]?\\d|1\\d|2[0-3]):[0-5]\\d))\\b/,\n            dayName: /^((sun|mon|tue(s)?|wed(nes)?|thu(r(s)?)?|fri|sat(ur)?)(day)?)\\b/,\n            monthName: /^(jan(uary)?|feb(ruary)?|ma((r(ch)?)?|y)|apr(il)?|ju(ly|ne)|aug(ust)?|oct(ober)?|(sept|nov|dec)(ember)?)\\b/,\n            yearIndex: /^(\\d\\d\\d\\d)\\b/,\n            every: /^every\\b/,\n            after: /^after\\b/,\n            before: /^before\\b/,\n            second: /^(s|sec(ond)?(s)?)\\b/,\n            minute: /^(m|min(ute)?(s)?)\\b/,\n            hour: /^(h|hour(s)?)\\b/,\n            day: /^(day(s)?( of the month)?)\\b/,\n            dayInstance: /^day instance\\b/,\n            dayOfWeek: /^day(s)? of the week\\b/,\n            dayOfYear: /^day(s)? of the year\\b/,\n            weekOfYear: /^week(s)?( of the year)?\\b/,\n            weekOfMonth: /^week(s)? of the month\\b/,\n            weekday: /^weekday\\b/,\n            weekend: /^weekend\\b/,\n            month: /^month(s)?\\b/,\n            year: /^year(s)?\\b/,\n            between: /^between (the)?\\b/,\n            start: /^(start(ing)? (at|on( the)?)?)\\b/,\n            at: /^(at|@)\\b/,\n            and: /^(,|and\\b)/,\n            except: /^(except\\b)/,\n            also: /(also)\\b/,\n            first: /^(first)\\b/,\n            last: /^last\\b/,\n            \"in\": /^in\\b/,\n            of: /^of\\b/,\n            onthe: /^on the\\b/,\n            on: /^on\\b/,\n            through: /(-|^(to|through)\\b)/\n        };\n        var NAMES = {\n            jan: 1,\n            feb: 2,\n            mar: 3,\n            apr: 4,\n            may: 5,\n            jun: 6,\n            jul: 7,\n            aug: 8,\n            sep: 9,\n            oct: 10,\n            nov: 11,\n            dec: 12,\n            sun: 1,\n            mon: 2,\n            tue: 3,\n            wed: 4,\n            thu: 5,\n            fri: 6,\n            sat: 7,\n            \"1st\": 1,\n            fir: 1,\n            \"2nd\": 2,\n            sec: 2,\n            \"3rd\": 3,\n            thi: 3,\n            \"4th\": 4,\n            \"for\": 4\n        };\n        function t(start, end, text, type) {\n            return {\n                startPos: start,\n                endPos: end,\n                text: text,\n                type: type\n            };\n        }\n        function peek(expected) {\n            var scanTokens = expected instanceof Array ? expected : [expected], whiteSpace = /\\s+/, token, curInput, m, scanToken, start, len;\n            scanTokens.push(whiteSpace);\n            start = pos;\n            while (!token || token.type === whiteSpace) {\n                len = -1;\n                curInput = input.substring(start);\n                token = t(start, start, input.split(whiteSpace)[0]);\n                var i, length = scanTokens.length;\n                for (i = 0; i < length; i++) {\n                    scanToken = scanTokens[i];\n                    m = scanToken.exec(curInput);\n                    if (m && m.index === 0 && m[0].length > len) {\n                        len = m[0].length;\n                        token = t(start, start + len, curInput.substring(0, len), scanToken);\n                    }\n                }\n                if (token.type === whiteSpace) {\n                    start = token.endPos;\n                }\n            }\n            return token;\n        }\n        function scan(expectedToken) {\n            var token = peek(expectedToken);\n            pos = token.endPos;\n            return token;\n        }\n        function parseThroughExpr(tokenType) {\n            var start = +parseTokenValue(tokenType), end = checkAndParse(TOKENTYPES.through) ? +parseTokenValue(tokenType) : start, nums = [];\n            for (var i = start; i <= end; i++) {\n                nums.push(i);\n            }\n            return nums;\n        }\n        function parseRanges(tokenType) {\n            var nums = parseThroughExpr(tokenType);\n            while (checkAndParse(TOKENTYPES.and)) {\n                nums = nums.concat(parseThroughExpr(tokenType));\n            }\n            return nums;\n        }\n        function parseEvery(r) {\n            var num, period, start, end;\n            if (checkAndParse(TOKENTYPES.weekend)) {\n                r.on(NAMES.sun, NAMES.sat).dayOfWeek();\n            }\n            else if (checkAndParse(TOKENTYPES.weekday)) {\n                r.on(NAMES.mon, NAMES.tue, NAMES.wed, NAMES.thu, NAMES.fri).dayOfWeek();\n            }\n            else {\n                num = parseTokenValue(TOKENTYPES.rank);\n                r.every(num);\n                period = parseTimePeriod(r);\n                if (checkAndParse(TOKENTYPES.start)) {\n                    num = parseTokenValue(TOKENTYPES.rank);\n                    r.startingOn(num);\n                    parseToken(period.type);\n                }\n                else if (checkAndParse(TOKENTYPES.between)) {\n                    start = parseTokenValue(TOKENTYPES.rank);\n                    if (checkAndParse(TOKENTYPES.and)) {\n                        end = parseTokenValue(TOKENTYPES.rank);\n                        r.between(start, end);\n                    }\n                }\n            }\n        }\n        function parseOnThe(r) {\n            if (checkAndParse(TOKENTYPES.first)) {\n                r.first();\n            }\n            else if (checkAndParse(TOKENTYPES.last)) {\n                r.last();\n            }\n            else {\n                r.on(parseRanges(TOKENTYPES.rank));\n            }\n            parseTimePeriod(r);\n        }\n        function parseScheduleExpr(str) {\n            pos = 0;\n            input = str;\n            error = -1;\n            var r = recur();\n            while (pos < input.length && error < 0) {\n                var token = parseToken([TOKENTYPES.every, TOKENTYPES.after, TOKENTYPES.before, TOKENTYPES.onthe, TOKENTYPES.on, TOKENTYPES.of, TOKENTYPES[\"in\"], TOKENTYPES.at, TOKENTYPES.and, TOKENTYPES.except, TOKENTYPES.also]);\n                switch (token.type) {\n                    case TOKENTYPES.every:\n                        parseEvery(r);\n                        break;\n                    case TOKENTYPES.after:\n                        if (peek(TOKENTYPES.time).type !== undefined) {\n                            r.after(parseTokenValue(TOKENTYPES.time));\n                            r.time();\n                        }\n                        else if (peek(TOKENTYPES.fullDate).type !== undefined) {\n                            r.after(parseTokenValue(TOKENTYPES.fullDate));\n                            r.fullDate();\n                        }\n                        else {\n                            r.after(parseTokenValue(TOKENTYPES.rank));\n                            parseTimePeriod(r);\n                        }\n                        break;\n                    case TOKENTYPES.before:\n                        if (peek(TOKENTYPES.time).type !== undefined) {\n                            r.before(parseTokenValue(TOKENTYPES.time));\n                            r.time();\n                        }\n                        else if (peek(TOKENTYPES.fullDate).type !== undefined) {\n                            r.before(parseTokenValue(TOKENTYPES.fullDate));\n                            r.fullDate();\n                        }\n                        else {\n                            r.before(parseTokenValue(TOKENTYPES.rank));\n                            parseTimePeriod(r);\n                        }\n                        break;\n                    case TOKENTYPES.onthe:\n                        parseOnThe(r);\n                        break;\n                    case TOKENTYPES.on:\n                        r.on(parseRanges(TOKENTYPES.dayName)).dayOfWeek();\n                        break;\n                    case TOKENTYPES.of:\n                        r.on(parseRanges(TOKENTYPES.monthName)).month();\n                        break;\n                    case TOKENTYPES[\"in\"]:\n                        r.on(parseRanges(TOKENTYPES.yearIndex)).year();\n                        break;\n                    case TOKENTYPES.at:\n                        r.on(parseTokenValue(TOKENTYPES.time)).time();\n                        while (checkAndParse(TOKENTYPES.and)) {\n                            r.on(parseTokenValue(TOKENTYPES.time)).time();\n                        }\n                        break;\n                    case TOKENTYPES.and:\n                        break;\n                    case TOKENTYPES.also:\n                        r.and();\n                        break;\n                    case TOKENTYPES.except:\n                        r.except();\n                        break;\n                    default:\n                        error = pos;\n                }\n            }\n            return {\n                schedules: r.schedules,\n                exceptions: r.exceptions,\n                error: error\n            };\n        }\n        function parseTimePeriod(r) {\n            var timePeriod = parseToken([TOKENTYPES.second, TOKENTYPES.minute, TOKENTYPES.hour, TOKENTYPES.dayOfYear, TOKENTYPES.dayOfWeek, TOKENTYPES.dayInstance, TOKENTYPES.day, TOKENTYPES.month, TOKENTYPES.year, TOKENTYPES.weekOfMonth, TOKENTYPES.weekOfYear]);\n            switch (timePeriod.type) {\n                case TOKENTYPES.second:\n                    r.second();\n                    break;\n                case TOKENTYPES.minute:\n                    r.minute();\n                    break;\n                case TOKENTYPES.hour:\n                    r.hour();\n                    break;\n                case TOKENTYPES.dayOfYear:\n                    r.dayOfYear();\n                    break;\n                case TOKENTYPES.dayOfWeek:\n                    r.dayOfWeek();\n                    break;\n                case TOKENTYPES.dayInstance:\n                    r.dayOfWeekCount();\n                    break;\n                case TOKENTYPES.day:\n                    r.dayOfMonth();\n                    break;\n                case TOKENTYPES.weekOfMonth:\n                    r.weekOfMonth();\n                    break;\n                case TOKENTYPES.weekOfYear:\n                    r.weekOfYear();\n                    break;\n                case TOKENTYPES.month:\n                    r.month();\n                    break;\n                case TOKENTYPES.year:\n                    r.year();\n                    break;\n                default:\n                    error = pos;\n            }\n            return timePeriod;\n        }\n        function checkAndParse(tokenType) {\n            var found = peek(tokenType).type === tokenType;\n            if (found) {\n                scan(tokenType);\n            }\n            return found;\n        }\n        function parseToken(tokenType) {\n            var t = scan(tokenType);\n            if (t.type) {\n                t.text = convertString(t.text, tokenType);\n            }\n            else {\n                error = pos;\n            }\n            return t;\n        }\n        function parseTokenValue(tokenType) {\n            return parseToken(tokenType).text;\n        }\n        function convertString(str, tokenType) {\n            var output = str;\n            switch (tokenType) {\n                case TOKENTYPES.time:\n                    var parts = str.split(/(:|am|pm)/), hour = parts[3] === \"pm\" && parts[0] < 12 ? parseInt(parts[0], 10) + 12 : parts[0], min = parts[2].trim();\n                    output = (hour.length === 1 ? \"0\" : \"\") + hour + \":\" + min;\n                    break;\n                case TOKENTYPES.rank:\n                    output = parseInt(/^\\d+/.exec(str)[0], 10);\n                    break;\n                case TOKENTYPES.monthName:\n                case TOKENTYPES.dayName:\n                    output = NAMES[str.substring(0, 3)];\n                    break;\n                case TOKENTYPES.fullDate:\n                    output = new Date(str.toUpperCase());\n                    break;\n                }\n            return output;\n        }\n        return parseScheduleExpr(str.toLowerCase());\n    };\n    return later;\n})();\n// Set the local time mode for \"later\" library\nlater.date.localTime();\nexport default later;\n","//---------------------------------------------------------------------------------------------------------------------\n/**\n * Given a single `Iterable`, returns an array of 2 iterables, mirroring the original one (which should not be used anymore).\n *\n * For example:\n *\n *     const gen = function* () { yield 1; yield 2; yield 3 }\n *\n *     const [ iterable1, iterable2 ] = split(gen())\n *     const [ iter1, iter2 ] = [\n *         iterable1[ Symbol.iterator ](),\n *         iterable2[ Symbol.iterator ]()\n *     ]\n *\n *     iter1.next() // 1\n *     iter2.next() // 1\n *     iter2.next() // 2\n *     iter2.next() // 3\n *     iter1.next() // 2\n *     iter1.next() // 3\n *     iter1.next() // done\n *     iter2.next() // done\n *\n * @param iterable\n */\nexport function split(iterable) {\n    const gen1Pending = [];\n    const gen2Pending = [];\n    let iterator;\n    const gen1 = function* () {\n        if (!iterator)\n            iterator = iterable[Symbol.iterator]();\n        while (true) {\n            if (gen1Pending.length) {\n                yield* gen1Pending;\n                gen1Pending.length = 0;\n            }\n            if (!iterator)\n                break;\n            const { value, done } = iterator.next();\n            if (done) {\n                iterator = null;\n                iterable = null;\n                break;\n            }\n            gen2Pending.push(value);\n            yield value;\n        }\n    };\n    const gen2 = function* () {\n        if (!iterator)\n            iterator = iterable[Symbol.iterator]();\n        while (true) {\n            if (gen2Pending.length) {\n                yield* gen2Pending;\n                gen2Pending.length = 0;\n            }\n            if (!iterator)\n                break;\n            const { value, done } = iterator.next();\n            if (done) {\n                iterator = null;\n                iterable = null;\n                break;\n            }\n            gen1Pending.push(value);\n            yield value;\n        }\n    };\n    return [gen1(), gen2()];\n}\n//---------------------------------------------------------------------------------------------------------------------\nexport function* inBatchesBySize(iterator, batchSize) {\n    if (batchSize < 0)\n        throw new Error(\"Batch size needs to a natural number\");\n    batchSize = batchSize | 0;\n    const runningBatch = [];\n    for (const el of iterator) {\n        if (runningBatch.length === batchSize) {\n            yield runningBatch;\n            runningBatch.length = 0;\n        }\n        runningBatch.push(el);\n    }\n    if (runningBatch.length > 0)\n        yield runningBatch;\n}\n//---------------------------------------------------------------------------------------------------------------------\nexport function* filter(iterator, func) {\n    let i = 0;\n    for (const el of iterator) {\n        if (func(el, i++))\n            yield el;\n    }\n}\n//---------------------------------------------------------------------------------------------------------------------\nexport function* drop(iterator, howMany) {\n    let i = 0;\n    for (const el of iterator) {\n        if (++i > howMany)\n            yield el;\n    }\n}\n//---------------------------------------------------------------------------------------------------------------------\nexport function every(iterator, func) {\n    let i = 0;\n    for (const el of iterator) {\n        if (!func(el, i++))\n            return false;\n    }\n    return true;\n}\n//---------------------------------------------------------------------------------------------------------------------\nexport function some(iterator, func) {\n    let i = 0;\n    for (const el of iterator) {\n        if (func(el, i++))\n            return true;\n    }\n    return false;\n}\n//---------------------------------------------------------------------------------------------------------------------\nexport function* map(iterator, func) {\n    let i = 0;\n    for (const el of iterator)\n        yield func(el, i++);\n}\n//---------------------------------------------------------------------------------------------------------------------\nexport function reduce(iterator, func, initialAcc) {\n    let i = 0;\n    let acc = initialAcc;\n    for (const el of iterator) {\n        acc = func(acc, el, i++);\n    }\n    return acc;\n}\n//---------------------------------------------------------------------------------------------------------------------\nexport function* uniqueOnly(iterator) {\n    const seen = new Set();\n    for (const el of iterator) {\n        if (!seen.has(el)) {\n            seen.add(el);\n            yield el;\n        }\n    }\n}\n//---------------------------------------------------------------------------------------------------------------------\nexport function* uniqueOnlyBy(iterator, func) {\n    const seen = new Set();\n    for (const el of iterator) {\n        const uniqueBy = func(el);\n        if (!seen.has(uniqueBy)) {\n            seen.add(uniqueBy);\n            yield el;\n        }\n    }\n}\n//---------------------------------------------------------------------------------------------------------------------\nexport function* reverse(iterator) {\n    const all = Array.from(iterator);\n    for (let i = all.length - 1; i >= 0; i--)\n        yield all[i];\n}\n//---------------------------------------------------------------------------------------------------------------------\nexport function* takeWhile(iterator, func) {\n    let i = 0;\n    for (const el of iterator) {\n        if (func(el, i++))\n            yield el;\n        else\n            return;\n    }\n}\n//---------------------------------------------------------------------------------------------------------------------\nexport function* takeUntilIncluding(iterator, func) {\n    let i = 0;\n    for (const el of iterator) {\n        yield el;\n        if (func(el, i++))\n            return;\n    }\n}\n//---------------------------------------------------------------------------------------------------------------------\nexport function* takeUntilExcluding(iterator, func) {\n    let i = 0;\n    for (const el of iterator) {\n        if (func(el, i++))\n            return;\n        yield el;\n    }\n}\n//---------------------------------------------------------------------------------------------------------------------\nexport function* concat(...iterators) {\n    for (let i = 0; i < iterators.length; i++)\n        yield* iterators[i];\n}\n//---------------------------------------------------------------------------------------------------------------------\nexport function* concatIterable(iteratorsProducer) {\n    for (const iterator of iteratorsProducer)\n        yield* iterator;\n}\n//---------------------------------------------------------------------------------------------------------------------\n// just a chained syntax sugar class\n// note, that we either use a combination of `this.derive()` + this.iterable (which will clear the `this.iterable`)\n// or, use just `this` as iterable, which will also clear the iterator\n//\nexport class ChainedIteratorClass {\n    constructor(iterable) {\n        this.iterable = undefined;\n        if (!iterable)\n            throw new Error(\"Require an iterable instance for chaining\");\n        this.iterable = iterable;\n    }\n    derive(iterable) {\n        this.iterable = undefined;\n        return new ChainedIteratorClass(iterable);\n    }\n    copy() {\n        const [iter1, iter2] = split(this.iterable);\n        this.iterable = iter2;\n        return new ChainedIteratorClass(iter1);\n    }\n    split() {\n        const [iter1, iter2] = split(this.iterable);\n        return [new ChainedIteratorClass(iter1), this.derive(iter2)];\n    }\n    inBatchesBySize(batchSize) {\n        return this.derive(inBatchesBySize(this.iterable, batchSize));\n    }\n    filter(func) {\n        return this.derive(filter(this.iterable, func));\n    }\n    drop(howMany) {\n        return this.derive(drop(this.iterable, howMany));\n    }\n    map(func) {\n        return this.derive(map(this.iterable, func));\n    }\n    reduce(func, initialAcc) {\n        return reduce(this, func, initialAcc);\n    }\n    concat() {\n        //@ts-ignore\n        return this.derive(concatIterable(this.iterable));\n    }\n    uniqueOnly() {\n        return this.derive(uniqueOnly(this.iterable));\n    }\n    uniqueOnlyBy(func) {\n        return this.derive(uniqueOnlyBy(this.iterable, func));\n    }\n    every(func) {\n        return every(this, func);\n    }\n    some(func) {\n        return some(this, func);\n    }\n    takeWhile(func) {\n        return this.derive(takeWhile(this.iterable, func));\n    }\n    *[Symbol.iterator]() {\n        let iterable = this.iterable;\n        if (!iterable)\n            throw new Error(\"Chained iterator already exhausted or used to derive the new one\");\n        // practice shows, that cleaning up the iterable after yourself helps garbage collector a lot\n        this.iterable = undefined;\n        yield* iterable;\n        // yes, we really want to avoid memory leaks\n        iterable = undefined;\n    }\n    toArray() {\n        return Array.from(this);\n    }\n    sort(order) {\n        return Array.from(this).sort(order);\n    }\n    toSet() {\n        return new Set(this);\n    }\n    toMap() {\n        //@ts-ignore\n        return new Map(this);\n    }\n    // toMap<K, V> () : T extends [ K, V ] ? Map<K, V> : never  {\n    //     return new Map<K, V>(this.iterable as (T extends [ K, V ] ? Iterable<T> : never)) as (T extends [ K, V ] ? Map<K, V> : never)\n    // }\n    flush() {\n        for (const element of this) { }\n    }\n    memoize() {\n        return new MemoizedIteratorClass(this);\n    }\n}\nexport const ChainedIterator = (iterator) => new ChainedIteratorClass(iterator);\nexport const CI = ChainedIterator;\n//---------------------------------------------------------------------------------------------------------------------\nexport class MemoizedIteratorClass extends ChainedIteratorClass {\n    constructor() {\n        super(...arguments);\n        this.elements = [];\n        this.$iterator = undefined;\n    }\n    set iterable(iterable) {\n        this.$iterable = iterable;\n    }\n    get iterable() {\n        return this;\n    }\n    derive(iterable) {\n        return new ChainedIteratorClass(iterable);\n    }\n    *[Symbol.iterator]() {\n        const elements = this.elements;\n        if (this.$iterable) {\n            if (!this.$iterator)\n                this.$iterator = this.$iterable[Symbol.iterator]();\n            let iterator = this.$iterator;\n            let alreadyConsumed = elements.length;\n            // yield the 1st batch \"efficiently\"\n            if (alreadyConsumed > 0)\n                yield* elements;\n            while (true) {\n                if (elements.length > alreadyConsumed) {\n                    // wonder if `yield* elements.slice(alreadyConsumed)` is more performant or not\n                    for (let i = alreadyConsumed; i < elements.length; i++)\n                        yield elements[i];\n                    alreadyConsumed = elements.length;\n                }\n                if (!iterator)\n                    break;\n                const { value, done } = iterator.next();\n                if (done) {\n                    iterator = this.$iterator = null;\n                    this.$iterable = null;\n                }\n                else {\n                    elements.push(value);\n                    alreadyConsumed++;\n                    yield value;\n                }\n            }\n        }\n        else {\n            yield* elements;\n        }\n    }\n}\nexport const MemoizedIterator = (iterator) => new MemoizedIteratorClass(iterator);\nexport const MI = MemoizedIterator;\n","import { CI, MI } from \"../collection/Iterator.js\";\n//---------------------------------------------------------------------------------------------------------------------\nconst MixinInstanceOfProperty = Symbol('MixinIdentity');\nconst MixinStateProperty = Symbol('MixinStateProperty');\n//---------------------------------------------------------------------------------------------------------------------\nclass MixinWalkDepthState {\n    constructor() {\n        this.baseEl = undefined;\n        this.sourceEl = undefined;\n        this.$elementsByTopoLevel = undefined;\n        this.$topoLevels = undefined;\n        this.linearizedByTopoLevelsSource = MI(this.linearizedByTopoLevels());\n    }\n    static new(props) {\n        const me = new this();\n        props && Object.assign(me, props);\n        return me;\n    }\n    get topoLevels() {\n        if (this.$topoLevels !== undefined)\n            return this.$topoLevels;\n        return this.$topoLevels = this.buildTopoLevels();\n    }\n    buildTopoLevels() {\n        return Array.from(this.elementsByTopoLevel.keys()).sort((level1, level2) => level1 - level2);\n    }\n    get elementsByTopoLevel() {\n        if (this.$elementsByTopoLevel !== undefined)\n            return this.$elementsByTopoLevel;\n        return this.$elementsByTopoLevel = this.buildElementsByTopoLevel();\n    }\n    getOrCreateLevel(map, topoLevel) {\n        let elementsAtLevel = map.get(topoLevel);\n        if (!elementsAtLevel) {\n            elementsAtLevel = [];\n            map.set(topoLevel, elementsAtLevel);\n        }\n        return elementsAtLevel;\n    }\n    buildElementsByTopoLevel() {\n        let maxTopoLevel = 0;\n        const baseElements = this.baseEl ? CI(this.baseEl.walkDepthState.elementsByTopoLevel.values()).concat().toSet() : new Set();\n        const map = CI(this.sourceEl.requirements)\n            .map(mixin => mixin.walkDepthState.elementsByTopoLevel)\n            .concat()\n            .reduce((elementsByTopoLevel, [topoLevel, mixins]) => {\n            if (topoLevel > maxTopoLevel)\n                maxTopoLevel = topoLevel;\n            this.getOrCreateLevel(elementsByTopoLevel, topoLevel).push(mixins);\n            return elementsByTopoLevel;\n        }, new Map());\n        this.getOrCreateLevel(map, maxTopoLevel + 1).push([this.sourceEl]);\n        return CI(map).map(([level, elements]) => {\n            return [level, CI(elements).concat().uniqueOnly().filter(mixin => !baseElements.has(mixin)).sort((mixin1, mixin2) => mixin1.id - mixin2.id)];\n        }).toMap();\n    }\n    *linearizedByTopoLevels() {\n        yield* CI(this.topoLevels).map(level => this.elementsByTopoLevel.get(level)).concat();\n    }\n}\n// Note: 65535 mixins only, because of the hashing function implementation (String.fromCharCode)\nlet MIXIN_ID = 1;\n//---------------------------------------------------------------------------------------------------------------------\nexport const identity = a => class extends a {\n};\n// export type IdentityMixin<Base extends object>         = < T extends AnyConstructor<Base>>(base : T) => T\n//\n// export const IdentityMixin             = <Base extends object>() : IdentityMixin<Base> => identity\n//---------------------------------------------------------------------------------------------------------------------\nexport class ZeroBaseClass {\n}\n//---------------------------------------------------------------------------------------------------------------------\nclass MixinState {\n    constructor() {\n        this.id = MIXIN_ID++;\n        this.requirements = [];\n        this.baseClass = ZeroBaseClass;\n        this.identitySymbol = undefined;\n        this.mixinLambda = identity;\n        this.walkDepthState = undefined;\n        // private $hash               : MixinHash             = ''\n        this.$minimalClass = undefined;\n        this.name = '';\n    }\n    static new(props) {\n        const me = new this();\n        props && Object.assign(me, props);\n        me.walkDepthState = MixinWalkDepthState.new({ sourceEl: me, baseEl: getMixinState(me.baseClass) });\n        //------------------\n        const mixinLambda = me.mixinLambda;\n        const symbol = me.identitySymbol = Symbol(mixinLambda.name);\n        const mixinLambdaWrapper = Object.assign(function (base) {\n            const extendedClass = mixinLambda(base);\n            extendedClass.prototype[symbol] = true;\n            return extendedClass;\n        }, {\n            [MixinInstanceOfProperty]: symbol,\n            [MixinStateProperty]: me\n        });\n        Object.defineProperty(mixinLambdaWrapper, Symbol.hasInstance, { value: isInstanceOfStatic });\n        me.mixinLambda = mixinLambdaWrapper;\n        return me;\n    }\n    get minimalClass() {\n        if (this.$minimalClass !== undefined)\n            return this.$minimalClass;\n        return this.$minimalClass = this.buildMinimalClass();\n    }\n    // get hash () : MixinHash {\n    //     if (this.$hash !== '') return this.$hash\n    //\n    //     return this.$hash = this.buildHash()\n    // }\n    // buildHash () : MixinHash {\n    //     return String.fromCharCode(...this.walkDepthState.linearizedByTopoLevelsSource.map(mixin => mixin.id))\n    // }\n    getBaseClassMixinId(baseClass) {\n        const constructor = this.constructor;\n        const mixinId = constructor.baseClassesIds.get(baseClass);\n        if (mixinId !== undefined)\n            return mixinId;\n        const newId = MIXIN_ID++;\n        constructor.baseClassesIds.set(baseClass, newId);\n        return newId;\n    }\n    buildMinimalClass() {\n        const self = this.constructor;\n        let baseCls = this.baseClass;\n        const minimalClassConstructor = this.walkDepthState.linearizedByTopoLevelsSource.reduce((acc, mixin) => {\n            const { cls, hash } = acc;\n            const nextHash = hash + String.fromCharCode(mixin.id);\n            let wrapperCls = self.minimalClassesByLinearHash.get(nextHash);\n            if (!wrapperCls) {\n                wrapperCls = mixin.mixinLambda(cls);\n                mixin.name = wrapperCls.name;\n                self.minimalClassesByLinearHash.set(nextHash, wrapperCls);\n            }\n            acc.cls = wrapperCls;\n            acc.hash = nextHash;\n            return acc;\n        }, { cls: baseCls, hash: String.fromCharCode(this.getBaseClassMixinId(baseCls)) }).cls;\n        const minimalClass = Object.assign(minimalClassConstructor, {\n            [MixinInstanceOfProperty]: this.identitySymbol,\n            [MixinStateProperty]: this,\n            mix: this.mixinLambda,\n            derive: (base) => Mixin([minimalClass, base], base => class extends base {\n            }),\n            $: this,\n            toString: this.toString.bind(this)\n        });\n        Object.defineProperty(minimalClass, Symbol.hasInstance, { value: isInstanceOfStatic });\n        return minimalClass;\n    }\n    toString() {\n        return this.walkDepthState.linearizedByTopoLevelsSource.reduce((acc, mixin) => `${mixin.name}(${acc})`, this.baseClass.name);\n    }\n}\nMixinState.minimalClassesByLinearHash = new Map();\nMixinState.baseClassesIds = new Map();\n//endregion type helpers\n//---------------------------------------------------------------------------------------------------------------------\nconst isMixinClass = (func) => {\n    return Object.getPrototypeOf(func.prototype).constructor.hasOwnProperty(MixinStateProperty);\n};\nconst getMixinState = (func) => {\n    return Object.getPrototypeOf(func.prototype).constructor[MixinStateProperty];\n};\n//---------------------------------------------------------------------------------------------------------------------\nconst mixin = (required, mixinLambda) => {\n    let baseClass;\n    if (required.length > 0) {\n        const lastRequirement = required[required.length - 1];\n        // absence of `[ MixinStateProperty ]` indicates its a regular class and not a mixin class\n        // avoid assigning ZeroBaseClass - it will be applied as default at the end\n        if (!isMixinClass(lastRequirement) && lastRequirement !== ZeroBaseClass)\n            baseClass = lastRequirement;\n    }\n    const requirements = [];\n    required.forEach((requirement, index) => {\n        const mixinState = requirement[MixinStateProperty];\n        if (mixinState !== undefined) {\n            const currentBaseClass = mixinState.baseClass;\n            // ignore ZeroBaseClass - since those are compatible with any other base class\n            if (currentBaseClass !== ZeroBaseClass) {\n                if (baseClass) {\n                    // already found a base class from requirements earlier\n                    if (baseClass !== currentBaseClass) {\n                        const currentIsSub = currentBaseClass.prototype.isPrototypeOf(baseClass.prototype);\n                        const currentIsSuper = baseClass.prototype.isPrototypeOf(currentBaseClass.prototype);\n                        if (!currentIsSub && !currentIsSuper)\n                            throw new Error(\"Base class mismatch\");\n                        baseClass = currentIsSuper ? currentBaseClass : baseClass;\n                    }\n                }\n                else\n                    // first base class from requirements\n                    baseClass = currentBaseClass;\n            }\n            requirements.push(mixinState);\n        }\n        else {\n            if (index !== required.length - 1)\n                throw new Error(\"Base class should be provided as the last element of the requirements array\");\n        }\n    });\n    //------------------\n    const mixinState = MixinState.new({\n        requirements,\n        mixinLambda: mixinLambda,\n        baseClass: baseClass || ZeroBaseClass\n    });\n    return mixinState.minimalClass;\n};\n//---------------------------------------------------------------------------------------------------------------------\n// this function works both with default mixin class and mixin application function\n// it supplied internally as [Symbol.hasInstance] for the default mixin class and mixin application function\nconst isInstanceOfStatic = function (instance) {\n    return Boolean(instance && instance[this[MixinInstanceOfProperty]]);\n};\n//---------------------------------------------------------------------------------------------------------------------\n/**\n * This is the `instanceof` analog for the classes created with [[Mixin]] helper. It also provides [typeguard](https://www.typescriptlang.org/docs/handbook/advanced-types.html#user-defined-type-guards).\n *\n * There's no strict need to use it, as the native `instanceof` is also supported for the mixins created with the [[Mixin]] helper and also provides\n * typeguarding.\n *\n * @param instance Any value, normally an instance of the mixin class\n * @param func The constructor function of the class, created with [[Mixin]]\n */\nexport const isInstanceOf = (instance, func) => {\n    return Boolean(instance && instance[func[MixinInstanceOfProperty]]);\n};\n//---------------------------------------------------------------------------------------\n/**\n * This function allows you to create mixin classes. Mixin classes solves the well-known problem with \"classical\" single-class inheritance,\n * in which class hierarchy must form a tree. When using mixins, class hierarchy becomes an arbitrary acyclic graph.\n *\n * Another view on mixins is that, if \"classical\" class is a point (a vertice of the graph), mixin class is an arrow between the points\n * (an edge in the graph, or rather, a description of the edge).\n *\n * Some background information about the mixin pattern can be found [here](https://mariusschulz.com/blog/typescript-2-2-mixin-classes)\n * and [here](https://www.bryntum.com/blog/the-mixin-pattern-in-typescript-all-you-need-to-know/).\n *\n * The pattern, being described here, is the evolution of the previous work, and main advantage is that it solves the compilation error\n * for circular references.\n *\n * Mixin definition. Requirements\n * ------------------------------\n *\n * The pattern looks like:\n *\n *     class Mixin1 extends Mixin(\n *         [],\n *         (base : AnyConstructor) =>\n *\n *         class Mixin1 extends base {\n *             prop1        : string\n *             method1 () : string {\n *                 return this.prop1\n *             }\n *             static static1 : number\n *         }\n *     ){}\n *\n * The core of the definition above is the mixin lambda - a function which receives a base class as its argument and returns a class,\n * extending the base class with additional properties.\n *\n * The example above creates a mixin `Mixin1` which has no requirements. Requirements are the other mixins,\n * which needs to be included in the base class of this mixin.\n *\n * There's also a special type of the requirement,\n * called \"base class requirement\". It is optional and can only appear as the last argument of the requirements\n * array. It does not have to be a mixin, created with the `Mixin` function, but can be any JS class. This requirement\n * specifies, that the base class of this mixin should be a subclass of the given class (or that class itself).\n *\n * The requirements of the mixin needs to be listed 3 times:\n * - as an array of constructor functions, in the 1st argument of the `Mixin` function\n * - as an instance type intersection, in the 1st type argument for the [[AnyConstructor]] type\n * - as an static type intersection, in the 2nd type argument for the [[AnyConstructor]] type\n *\n * For example, `Mixin2` requires `Mixin1`:\n *\n *     class Mixin2 extends Mixin(\n *         [ Mixin1 ],\n *         (base : AnyConstructor<Mixin1, typeof Mixin1>) =>\n *\n *         class Mixin2 extends base {\n *         }\n *     ){}\n *\n * And `Mixin3` requires both `Mixin1` and `Mixin2` (even that its redundant, since `Mixin2` already requires `Mixin1`,\n * but suppose we don't know the implementation details of the `Mixin2`):\n *\n *     class Mixin3 extends Mixin(\n *         [ Mixin1, Mixin2 ],\n *         (base : AnyConstructor<Mixin1 & Mixin2, typeof Mixin1 & typeof Mixin2>) =>\n *\n *         class Mixin3 extends base {\n *         }\n *     ){}\n *\n * Now, `Mixin4` requires `Mixin3`, plus, it requires the base class to be `SomeBaseClass`:\n *\n *     class SomeBaseClass {}\n *\n *     class Mixin4 extends Mixin(\n *         [ Mixin3, SomeBaseClass ],\n *         (base : AnyConstructor<\n *             Mixin3 & SomeBaseClass, typeof Mixin3 & typeof SomeBaseClass\n *         >) =>\n *\n *         class Mixin4 extends base {\n *         }\n *     ){}\n *\n * As already briefly mentioned, the requirements are \"scanned\" deep and included only once. Also all minimal classes are cached -\n * for example the creation of the Mixin3 will reuse the minimal class of the Mixin2 instead of creating a new intermediate class.\n * This means that all edges of the mixin dependencies graph are created only once (up to the base class).\n *\n * Requirements can not form cycles - that will generate both compilation error and run-time stack overflow.\n *\n * The typing for the `Mixin` function will provide a compilation error, if the requirements don't match, e.g. some requirement is\n * listed in the array, but missed in the types. This protects you from trivial mistakes. However, the typing is done up to 10 requirements only.\n * If you need more than 10 requirements for the mixin, use the [[MixinAny]] function, which is an exact analog of `Mixin`, but without\n * this type-level protection for requirements mismatch.\n *\n * It is possible to simplify the type of the `base` argument a bit, by using the [[ClassUnion]] helper. However, it seems in certain edge cases\n * it may lead to compilation errors. If your scenarios are not so complex you should give it a try. Using the [[ClassUnion]] helper, the\n * `Mixin3` can be defined as:\n *\n *     class Mixin3 extends Mixin(\n *         [ Mixin1, Mixin2 ],\n *         (base : ClassUnion<typeof Mixin1, typeof Mixin2>) =>\n *\n *         class Mixin3 extends base {\n *         }\n *     ){}\n *\n * Note, that due to this [issue](https://github.com/Microsoft/TypeScript/issues/7342), if you use decorators in your mixin class,\n * the declaration needs to be slightly more verbose (can not use compact notation for the arrow functions):\n *\n *     class Mixin2 extends Mixin(\n *         [ Mixin1 ],\n *         (base : AnyConstructor<Mixin1, typeof Mixin1>) => {\n *             class Mixin2 extends base {\n *                 @decorator\n *                 prop2 : string\n *             }\n *             return Mixin2\n *         }\n *     ){}\n *\n * As you noticed, the repeating listing of the requirements is somewhat verbose. Suggestions how the pattern can be improved\n * are [very welcomed](mailto:nickolay8@gmail.com).\n *\n * Mixin instantiation. Mixin constructor. `instanceof`\n * --------------------------------\n *\n * You can instantiate any mixin class just by using its constructor:\n *\n *     const instance1 = new Mixin1()\n *     const instance2 = new Mixin2()\n *\n * As explained in details [here](https://mariusschulz.com/blog/typescript-2-2-mixin-classes), mixin constructor should accept variable number of arguments\n * with the `any` type. This is simply because the mixin is supposed to be applicable to any other base class, which may have its own type\n * of the constructor arguments.\n *\n *     class Mixin2 extends Mixin(\n *         [ Mixin1 ],\n *         (base : AnyConstructor<Mixin1, typeof Mixin1>) => {\n *             class Mixin2 extends base {\n *                 prop2 : string\n *\n *                 constructor (...args: any[]) {\n *                     super(...args)\n *                     this.prop2 = ''\n *                 }\n *             }\n *             return Mixin2\n *         }\n *     ){}\n *\n * In other words, its not possible to provide any type-safety for mixin instantiation using regular class constructor.\n *\n * However, if we change the way we create class instances a little, we can get the type-safety back. For that,\n * we need to use a \"uniform\" class constructor - a constructor which has the same form for all classes. The [[Base]] class\n * provides such constructor as its static [[Base.new|new]] method. The usage of `Base` class is not required - you can use\n * any other base class.\n *\n * The `instanceof` operator works as expected for instances of the mixin classes. It also takes into account all the requirements.\n * For example:\n *\n *     const instance2 = new Mixin2()\n *\n *     const isMixin2 = instance2 instanceof Mixin2 // true\n *     const isMixin1 = instance2 instanceof Mixin1 // true, since Mixin2 requires Mixin1\n *\n * See also [[isInstanceOf]].\n *\n * \"Manual\" class derivation\n * --------------------------------\n *\n * You have defined a mixin using the `Mixin` function. Now you want to apply it to some base class to get the \"specific\" class to be able\n * to instantiate it. As described above - you don't have to, you can instantiate it directly.\n *\n * Sometimes however, you still want to derive the class \"manually\". For that, you can use static methods `mix` and `derive`, available\n * on all mixins.\n *\n * The `mix` method provides a direct access to the mixin lambda. It does not take requirements into account - that's the implementor's responsibility.\n * The `derive` method is something like \"accumulated\" mixin lambda - mixin lambda with all requirements.\n *\n * Both `mix` and `derive` provide the reasonably typed outcome.\n *\n *     class Mixin1 extends Mixin(\n *         [],\n *         (base : AnyConstructor) =>\n *\n *         class Mixin1 extends base {\n *             prop1        : string\n *         }\n *     ){}\n *\n *     class Mixin2 extends Mixin(\n *         [ Mixin1 ],\n *         (base : AnyConstructor<Mixin1, typeof Mixin1>) =>\n *\n *         class Mixin2 extends base {\n *             prop2        : string\n *         }\n *     ){}\n *\n *     const ManualMixin1 = Mixin1.mix(Object)\n *     const ManualMixin2 = Mixin2.mix(Mixin1.mix(Object))\n *\n *     const AnotherManualMixin1 = Mixin1.derive(Object)\n *     const AnotherManualMixin2 = Mixin2.derive(Object)\n *\n * Generics\n * --------\n *\n * Using generics with mixins is tricky because TypeScript does not have higher-kinded types and type inference for generics. Still some form\n * of generic arguments is possible, using the interface merging trick.\n *\n * Here's the pattern:\n *\n * ```ts\n * class Duplicator<Element> extends Mixin(\n *     [],\n *     (base : AnyConstructor) =>\n *\n *     class Duplicator extends base {\n *         Element                 : any\n *\n *         duplicate (value : this[ 'Element' ]) : this[ 'Element' ][] {\n *             return [ value, value ]\n *         }\n *     }\n * ){}\n *\n * interface Duplicator<Element> {\n *     Element : Element\n * }\n *\n * const dup = new Duplicator<boolean>()\n *\n * dup.duplicate('foo') // TS2345: Argument of type '\"foo\"' is not assignable to parameter of type 'boolean'.\n * ```\n *\n * In the example above, we've defined a generic argument `Element` for the outer mixin class, but in fact, that argument is not used anywhere in the\n * nested class definition in the mixin lambda. Instead, in the nested class, we define a property `Element`, which plays the role of the\n * generic argument.\n *\n * Mixin class methods then can refer to the generic type as `this[ 'Element' ]`.\n *\n * The generic arguments of the outer and nested classes are tied together in the additional interface declaration, which, by TypeScript rules\n * is merged together with the class definition. In this declaration, we specify that property `Element` has type of the `Element` generic argument.\n *\n * Limitations\n * ---------\n *\n * The most important limitation we found (which affect the old pattern as well) is the compilation error, which will be issued for\n * the private/protected methods, when compiling with declarations emitting (*.d.ts files generation).\n *\n * This is a [well-known problem](https://github.com/microsoft/TypeScript/issues/35822) in the TypeScript world – the *.d.ts files do not represent\n * the internal data structures of the TypeScript compiler well. Instead they use some simplified syntax, optimized for human editing.\n * This is why the compiler may generate false positives in the incremental compilation mode – it uses *.d.ts files internally.\n *\n * This can be a show-stopper for the people that use declaration files (usually for publishing). Keep in mind though, that you can always\n * publish actual TypeScript sources along with the generated JavaScript files, instead of publishing JavaScript + declarations files.\n *\n */\nexport const Mixin = mixin;\n/**\n * This is an exact analog of the [[Mixin]] function, but without type-level protection for requirements mismatch.\n * It supports unlimited number of requirements.\n */\nexport const MixinAny = mixin;\n","/**\n * The enumeration for the time units\n */\nexport var TimeUnit;\n(function (TimeUnit) {\n    TimeUnit[\"Millisecond\"] = \"millisecond\";\n    TimeUnit[\"Second\"] = \"second\";\n    TimeUnit[\"Minute\"] = \"minute\";\n    TimeUnit[\"Hour\"] = \"hour\";\n    TimeUnit[\"Day\"] = \"day\";\n    TimeUnit[\"Week\"] = \"week\";\n    TimeUnit[\"Month\"] = \"month\";\n    TimeUnit[\"Quarter\"] = \"quarter\";\n    TimeUnit[\"Year\"] = \"year\";\n})(TimeUnit || (TimeUnit = {}));\n/**\n * The enumeration for the supported constraint types\n */\nexport var ConstraintType;\n(function (ConstraintType) {\n    /**\n     * \"Must start on\" constraint.\n     * Restricts an event to start on a [[HasDateConstraintMixin.constraintDate|specified date]].\n     * The constraint cannot be used for a summary event.\n     */\n    ConstraintType[\"MustStartOn\"] = \"muststarton\";\n    /**\n     * \"Must finish on\" constraint.\n     * Restricts an event to finish on a [[HasDateConstraintMixin.constraintDate|specified date]].\n     * The constraint cannot be used for a summary event.\n     */\n    ConstraintType[\"MustFinishOn\"] = \"mustfinishon\";\n    /**\n     * \"Start no earlier than\" constraint.\n     * Restricting an event to start on or after a [[HasDateConstraintMixin.constraintDate|specified date]].\n     */\n    ConstraintType[\"StartNoEarlierThan\"] = \"startnoearlierthan\";\n    /**\n     * \"Start no later than\" constraint.\n     * Restricting an event to start on or before a [[HasDateConstraintMixin.constraintDate|specified date]].\n     *\n     * The constraint cannot be used for a summary task.\n     */\n    ConstraintType[\"StartNoLaterThan\"] = \"startnolaterthan\";\n    /**\n     * \"Finish no earlier than\" constraint.\n     * Restricting an event to finish on or after a [[HasDateConstraintMixin.constraintDate|specified date]].\n     *\n     * The constraint cannot be used for a summary task.\n     */\n    ConstraintType[\"FinishNoEarlierThan\"] = \"finishnoearlierthan\";\n    /**\n     * \"Finish no later than\" constraint.\n     * Restricting an event to finish on or before a [[HasDateConstraintMixin.constraintDate|specified date]].\n     */\n    ConstraintType[\"FinishNoLaterThan\"] = \"finishnolaterthan\";\n})(ConstraintType || (ConstraintType = {}));\n/**\n * The enumeration for the supported scheduling modes\n */\nexport var SchedulingMode;\n(function (SchedulingMode) {\n    SchedulingMode[\"Normal\"] = \"Normal\";\n    SchedulingMode[\"FixedDuration\"] = \"FixedDuration\";\n    SchedulingMode[\"FixedEffort\"] = \"FixedEffort\";\n    SchedulingMode[\"FixedUnits\"] = \"FixedUnits\";\n})(SchedulingMode || (SchedulingMode = {}));\n/**\n * The enumeration for the dependency validation result\n */\nexport var DependencyValidationResult;\n(function (DependencyValidationResult) {\n    /**\n     * Dependency has no errors\n     */\n    DependencyValidationResult[DependencyValidationResult[\"NoError\"] = 0] = \"NoError\";\n    /**\n     * Indicates that the validated dependency builds a cycle\n     */\n    DependencyValidationResult[DependencyValidationResult[\"CyclicDependency\"] = 1] = \"CyclicDependency\";\n    /**\n     * Indicates that a dependency with the same predecessor and successor as validated one's already exists\n     */\n    DependencyValidationResult[DependencyValidationResult[\"DuplicatingDependency\"] = 2] = \"DuplicatingDependency\";\n})(DependencyValidationResult || (DependencyValidationResult = {}));\n/**\n * The enumeration for the supported dependency types\n */\nexport var DependencyType;\n(function (DependencyType) {\n    /**\n     * Start-to-Start (_SS_)\n     *\n     * With this dependency type, the succeeding event is delayed to start not earlier than the preceding event starts.\n     */\n    DependencyType[DependencyType[\"StartToStart\"] = 0] = \"StartToStart\";\n    /**\n     * Start-to-Finish (_SF_)\n     *\n     * The finish of the succeeding event is constrained by the start of the preceding event.\n     * So the successor cannot finish before the predecessor starts.\n     */\n    DependencyType[DependencyType[\"StartToEnd\"] = 1] = \"StartToEnd\";\n    /**\n     * Finish-to-Start (_FS_)\n     *\n     * This type of dependency, restricts the dependent event to not start earlier than the preceding event finishes.\n     */\n    DependencyType[DependencyType[\"EndToStart\"] = 2] = \"EndToStart\";\n    /**\n     * Finish-to-Finish (_FF_)\n     *\n     * The succeeding event cannot finish before the completion of the preceding event.\n     */\n    DependencyType[DependencyType[\"EndToEnd\"] = 3] = \"EndToEnd\";\n})(DependencyType || (DependencyType = {}));\n/**\n * The enumeration for the supported sources of the calendar for the dependency.\n */\nexport var DependenciesCalendar;\n(function (DependenciesCalendar) {\n    DependenciesCalendar[\"Project\"] = \"Project\";\n    DependenciesCalendar[\"FromEvent\"] = \"FromEvent\";\n    DependenciesCalendar[\"ToEvent\"] = \"ToEvent\";\n})(DependenciesCalendar || (DependenciesCalendar = {}));\n/**\n * Engine provides with different project types, the enumeration describes the types currently available\n */\nexport var ProjectType;\n(function (ProjectType) {\n    ProjectType[ProjectType[\"SchedulerBasic\"] = 1] = \"SchedulerBasic\";\n    ProjectType[ProjectType[\"SchedulerPro\"] = 2] = \"SchedulerPro\";\n    ProjectType[ProjectType[\"Gantt\"] = 3] = \"Gantt\";\n})(ProjectType || (ProjectType = {}));\n/**\n * The enumeration for the scheduling direction\n */\nexport var Direction;\n(function (Direction) {\n    /**\n     * Forward (or As Soon As Possible (ASAP)) scheduling.\n     */\n    Direction[\"Forward\"] = \"Forward\";\n    /**\n     * Backward (or As Late As Possible (ALAP)) scheduling.\n     */\n    Direction[\"Backward\"] = \"Backward\";\n    Direction[\"None\"] = \"None\";\n})(Direction || (Direction = {}));\nexport var ConstraintIntervalSide;\n(function (ConstraintIntervalSide) {\n    ConstraintIntervalSide[\"Start\"] = \"Start\";\n    ConstraintIntervalSide[\"End\"] = \"End\";\n})(ConstraintIntervalSide || (ConstraintIntervalSide = {}));\n","// http://ecma-international.org/ecma-262/5.1/#sec-15.9.1.1\n/**\n * Minimal date representable with native Date class\n */\nexport const MIN_DATE = new Date(-8640000000000000);\n/**\n * Maximal date representable with native Date class\n */\nexport const MAX_DATE = new Date(8640000000000000);\nexport const isDateFinite = (date) => {\n    if (!date)\n        return false;\n    const time = date.getTime();\n    return time !== MIN_DATE.getTime() && time !== MAX_DATE.getTime();\n};\n","/**\n * The date intervals in the scheduling engine are always inclusive on one end and opened on another.\n * The \"opened\" end is not considered to be a part of the interval.\n *\n * Depending from the scheduling direction (forward/backward) this property may need to be inverted.\n *\n * This enum specifies what edge of the interval is inclusive.\n */\nexport var EdgeInclusion;\n(function (EdgeInclusion) {\n    EdgeInclusion[EdgeInclusion[\"Left\"] = 0] = \"Left\";\n    EdgeInclusion[EdgeInclusion[\"Right\"] = 1] = \"Right\";\n})(EdgeInclusion || (EdgeInclusion = {}));\n","import DateHelper from \"../../Core/helper/DateHelper.js\";\nimport { TimeUnit } from \"../scheduling/Types.js\";\nimport { MAX_DATE, MIN_DATE } from \"../util/Constants.js\";\nimport { EdgeInclusion } from \"../util/Types.js\";\n/**\n * The enum type for result of [[forEachAvailabilityInterval]].\n */\nexport var CalendarIteratorResult;\n(function (CalendarIteratorResult) {\n    /**\n     * Indicates the iteration has completed by iterating the whole given timespan or has reached the MAX_DATE or MIN_DATE.\n     */\n    CalendarIteratorResult[CalendarIteratorResult[\"FullRangeIterated\"] = 0] = \"FullRangeIterated\";\n    /**\n     * Indicates the iteration has been stopped by returning `false` from the iterator.\n     */\n    CalendarIteratorResult[CalendarIteratorResult[\"StoppedByIterator\"] = 1] = \"StoppedByIterator\";\n    /**\n     * Indicates the iteration has exceeded the `maxRange` option\n     */\n    CalendarIteratorResult[CalendarIteratorResult[\"MaxCacheExtendCyclesReached\"] = 2] = \"MaxCacheExtendCyclesReached\";\n    /**\n     * Indicates the iteration has exceeded the `maxRange` option\n     */\n    CalendarIteratorResult[CalendarIteratorResult[\"MaxRangeReached\"] = 3] = \"MaxRangeReached\";\n})(CalendarIteratorResult || (CalendarIteratorResult = {}));\n/**\n * Calendar cache.\n */\nexport class CalendarCache {\n    constructor(config) {\n        this.cacheFilledStartDate = MAX_DATE;\n        this.cacheFilledEndDate = MIN_DATE;\n        this.intervalsCachingChunkDuration = 30;\n        this.intervalsCachingChunkUnit = TimeUnit.Day;\n        this.maxCacheExtendCycles = 1000;\n        // max range for the iteration - 5 years\n        this.maxRange = 5 * 365 * 24 * 60 * 60 * 1000;\n        config && Object.assign(this, config);\n    }\n    includeWrappingRangeFrom(cache, startDate, endDate) {\n        cache.ensureCacheFilledForInterval(startDate, endDate);\n        this.intervalCache.includeWrappingRange(cache.intervalCache, startDate, endDate);\n    }\n    // after this method, we guarantee, that for every point between `startDate` and `endDate` (_inclusive_)\n    // we'll have a final representation of the cache, that is, we'll be able to get an interval to which this point belongs\n    // _both_ for forward and backward directions\n    ensureCacheFilledForInterval(startDate, endDate) {\n        const cacheFilledStartDateN = this.cacheFilledStartDate.getTime();\n        const cacheFilledEndDateN = this.cacheFilledEndDate.getTime();\n        if (cacheFilledStartDateN !== MAX_DATE.getTime()) {\n            const startDateN = startDate.getTime();\n            const endDateN = endDate.getTime();\n            if (cacheFilledStartDateN <= startDateN && endDateN <= cacheFilledEndDateN)\n                return;\n            // asked to cache an interval which is to the left from the cached area - extend to the right\n            if (endDateN <= cacheFilledStartDateN) {\n                endDate = new Date(cacheFilledStartDateN - 1);\n            }\n            else if (startDateN >= cacheFilledEndDateN) {\n                startDate = new Date(cacheFilledEndDateN + 1);\n            }\n            else if (cacheFilledStartDateN <= startDateN && startDateN <= cacheFilledEndDateN) {\n                startDate = new Date(cacheFilledEndDateN + 1);\n            }\n            else if (cacheFilledStartDateN <= endDateN && endDateN <= cacheFilledEndDateN) {\n                endDate = new Date(cacheFilledStartDateN - 1);\n            }\n            else {\n                this.ensureCacheFilledForInterval(startDate, new Date(cacheFilledStartDateN - 1));\n                this.ensureCacheFilledForInterval(new Date(cacheFilledEndDateN + 1), endDate);\n                return;\n            }\n        }\n        if (cacheFilledStartDateN === MAX_DATE.getTime() || startDate.getTime() < cacheFilledEndDateN) {\n            this.cacheFilledStartDate = startDate;\n        }\n        if (cacheFilledEndDateN === MIN_DATE.getTime() || cacheFilledEndDateN < endDate.getTime()) {\n            this.cacheFilledEndDate = endDate;\n        }\n        this.fillCache(startDate, endDate);\n    }\n    fillCache(_1 /* startDate */, _2 /* endDate */) {\n        throw new Error(\"Abstract method\");\n    }\n    clear() {\n        this.cacheFilledStartDate = MAX_DATE;\n        this.cacheFilledEndDate = MIN_DATE;\n        this.intervalCache.clear();\n    }\n    /**\n     * The core iterator method of the calendar cache.\n     *\n     * @param options The options for iterator. Should contain at least one of the `startDate`/`endDate` properties\n     * which indicates what timespan to examine for availability intervals. If one of boundaries is not provided\n     * iterator function should return `false` at some point, to avoid infinite loops.\n     *\n     * Another recognized option is `isForward`, which indicates the direction in which to iterate through the timespan.\n     *\n     * Another recognized option is `maxRange`, which indicates the maximum timespan for this iterator (in milliseconds). When iterator\n     * exceeds this timespan, the iteration is stopped and [[CalendarIteratorResult.MaxRangeReached]] value is returned.\n     * Default value is 5 years.\n     *\n     * @param func The iterator function to call. It will be called for every distinct set of availability intervals, found\n     * in the given timespan. All the intervals, which are \"active\" for current interval are collected in the 3rd argument\n     * for this function. If iterator returns `false` (checked with `===`) the iteration stops.\n     *\n     * @param scope The scope (`this` value) to execute the iterator in.\n     */\n    forEachAvailabilityInterval(options, func, scope) {\n        scope = scope || this;\n        const startDate = options.startDate;\n        const endDate = options.endDate;\n        const startDateN = startDate && startDate.getTime();\n        const endDateN = endDate && endDate.getTime();\n        const maxRange = options.maxRange ?? this.maxRange;\n        // `isForward = true` by default\n        const isForward = options.isForward !== false;\n        if (isForward ? !startDate : !endDate) {\n            throw new Error(\"At least `startDate` or `endDate` is required, depending from the `isForward` option\");\n        }\n        const intervalCache = this.intervalCache;\n        let cacheCursorDate = isForward ? startDate : endDate;\n        let cursorDate = isForward ? startDate : endDate;\n        const rangeStart = cursorDate.getTime();\n        // this is generally an endless loop, but we artificially limit it to `maxCacheExtendCycles` iterations\n        // to avoid freezing in unforeseen edge cases\n        for (let cycle = 1; cycle < this.maxCacheExtendCycles; cycle++) {\n            if (isForward) {\n                this.ensureCacheFilledForInterval(cacheCursorDate, endDate || DateHelper.add(cacheCursorDate, this.intervalsCachingChunkDuration, this.intervalsCachingChunkUnit));\n            }\n            else {\n                this.ensureCacheFilledForInterval(startDate || DateHelper.add(cacheCursorDate, -this.intervalsCachingChunkDuration, this.intervalsCachingChunkUnit), cacheCursorDate);\n            }\n            let interval = intervalCache.getIntervalOf(cursorDate, isForward ? EdgeInclusion.Left : EdgeInclusion.Right);\n            while (interval) {\n                const intervalStartDate = interval.startDate;\n                const intervalEndDate = interval.endDate;\n                // out of requested range - all done\n                if ((isForward && endDateN && intervalStartDate.getTime() >= endDateN)\n                    ||\n                        (!isForward && startDateN && intervalEndDate.getTime() <= startDateN)) {\n                    return CalendarIteratorResult.FullRangeIterated;\n                }\n                if ((isForward && intervalStartDate.getTime() - rangeStart >= maxRange)\n                    ||\n                        (!isForward && rangeStart - intervalEndDate.getTime() >= maxRange)) {\n                    return CalendarIteratorResult.MaxRangeReached;\n                }\n                // we are out of cached area, need to extend the cache\n                if ((isForward && intervalStartDate.getTime() > this.cacheFilledEndDate.getTime())\n                    ||\n                        (!isForward && intervalEndDate.getTime() < this.cacheFilledStartDate.getTime())) {\n                    break;\n                }\n                // save the last processed point, from which we should start after cache will be extended\n                cursorDate = isForward ? intervalEndDate : intervalStartDate;\n                // adjust to start / end date limits in iterator\n                const countFrom = startDateN && intervalStartDate.getTime() < startDateN ? startDate : intervalStartDate;\n                const countTill = endDateN && intervalEndDate.getTime() > endDateN ? endDate : intervalEndDate;\n                if (func.call(scope, countFrom, countTill, interval.cacheInterval) === false) {\n                    // indicates premature exit if iterator returns `false`\n                    return CalendarIteratorResult.StoppedByIterator;\n                }\n                interval = isForward ? intervalCache.getNextInterval(interval) : intervalCache.getPrevInterval(interval);\n            }\n            if (isForward && cursorDate.getTime() === MAX_DATE.getTime() || !isForward && cursorDate.getTime() === MIN_DATE.getTime()) {\n                return CalendarIteratorResult.FullRangeIterated;\n            }\n            cacheCursorDate = isForward ? this.cacheFilledEndDate : this.cacheFilledStartDate;\n        }\n        return CalendarIteratorResult.MaxCacheExtendCyclesReached;\n    }\n}\n","export const stripDuplicates = (array) => Array.from(new Set(array));\n","import { stripDuplicates } from \"../util/StripDuplicates.js\";\n/**\n * A class, that represent a cached set of availability intervals. One can use the [[getIsWorking]] method\n * to determine if this set intervals represents working time or non-working.\n */\nexport class CalendarCacheInterval {\n    constructor(config) {\n        this.intervals = [];\n        config && Object.assign(this, config);\n        if (!this.calendar)\n            throw new Error(\"Required attribute `calendar` is missing\");\n    }\n    includeInterval(interval) {\n        if (this.intervals.indexOf(interval) == -1) {\n            const copy = this.intervals.slice();\n            copy.push(interval);\n            return new CalendarCacheInterval({ intervals: copy, calendar: this.calendar });\n        }\n        else\n            return this;\n    }\n    combineWith(interval) {\n        return new CalendarCacheInterval({ intervals: this.intervals.concat(interval.intervals), calendar: this.calendar });\n    }\n    /**\n     * Returns the working status of this intervals set. It is determined as a working status\n     * of the most prioritized interval (intervals are prioritized from child to parent)\n     */\n    getIsWorking() {\n        if (this.isWorking != null)\n            return this.isWorking;\n        const intervals = this.intervals = this.normalizeIntervals(this.intervals);\n        // return the value of the interval with the highest priority\n        return this.isWorking = intervals[0].isWorking;\n    }\n    normalizeIntervals(intervals) {\n        const filtered = stripDuplicates(intervals);\n        // sort in decreasing order\n        filtered.sort((interval1, interval2) => interval2.getPriorityField() - interval1.getPriorityField());\n        return filtered;\n    }\n}\n","// Generic binary search\nexport const binarySearch = (value, array, comparator = (a, b) => a - b) => {\n    let left = 0;\n    let right = array.length;\n    while (left < right) {\n        // | 0 to make it integer, faster according to: https://jsperf.com/or-vs-floor/2\n        const mid = (left + right) / 2 | 0;\n        const compare = comparator(value, array[mid]);\n        if (compare === 0)\n            return { found: true, index: mid };\n        else if (compare < 0)\n            right = mid;\n        else\n            left = mid + 1;\n    }\n    return { found: false, index: right };\n};\n","import { binarySearch } from \"../util/BinarySearch.js\";\nexport var IndexPosition;\n(function (IndexPosition) {\n    IndexPosition[IndexPosition[\"Exact\"] = 0] = \"Exact\";\n    IndexPosition[IndexPosition[\"Next\"] = 1] = \"Next\";\n})(IndexPosition || (IndexPosition = {}));\n// TODO store keys and values in a single array of \"entries\"? less memory movement during insert/delete in theory\nexport class SortedMap {\n    constructor(comparator) {\n        this.keys = [];\n        this.values = [];\n        this.comparator = comparator || ((a, b) => a - b);\n    }\n    set(key, value) {\n        const search = binarySearch(key, this.keys, this.comparator);\n        if (search.found) {\n            this.values[search.index] = value;\n        }\n        else {\n            this.keys.splice(search.index, 0, key);\n            this.values.splice(search.index, 0, value);\n        }\n        return search.index;\n    }\n    // you need to know what you are doing when using this method\n    insertAt(index, key, value) {\n        this.keys.splice(index, 0, key);\n        this.values.splice(index, 0, value);\n    }\n    setValueAt(index, value) {\n        this.values[index] = value;\n    }\n    get(key) {\n        const search = binarySearch(key, this.keys, this.comparator);\n        return search.found ? this.values[search.index] : undefined;\n    }\n    getEntryAt(index) {\n        return index < this.keys.length ? { key: this.keys[index], value: this.values[index] } : undefined;\n    }\n    getKeyAt(index) {\n        return this.keys[index];\n    }\n    getValueAt(index) {\n        return this.values[index];\n    }\n    delete(key) {\n        const search = binarySearch(key, this.keys, this.comparator);\n        if (search.found)\n            this.deleteAt(search.index);\n    }\n    size() {\n        return this.keys.length;\n    }\n    deleteAt(index) {\n        this.keys.splice(index, 1);\n        this.values.splice(index, 1);\n    }\n    indexOfKey(key) {\n        const search = binarySearch(key, this.keys, this.comparator);\n        return {\n            found: search.found ? IndexPosition.Exact : IndexPosition.Next,\n            index: search.index\n        };\n    }\n    map(func) {\n        const keys = this.keys;\n        const values = this.values;\n        const result = [];\n        for (let i = 0; i < keys.length; i++)\n            result.push(func(values[i], keys[i], i));\n        return result;\n    }\n    getAllEntries() {\n        return this.map((value, key) => { return { value, key }; });\n    }\n    clear() {\n        this.keys.length = 0;\n        this.values.length = 0;\n    }\n}\n","import { MAX_DATE, MIN_DATE } from \"../util/Constants.js\";\nimport { EdgeInclusion } from \"../util/Types.js\";\nimport { IndexPosition, SortedMap } from \"./SortedMap.js\";\nexport class IntervalCache {\n    constructor(config) {\n        this.points = new SortedMap((a, b) => a.getTime() - b.getTime());\n        this.leftInfinityKey = MIN_DATE;\n        this.rightInfinityKey = MAX_DATE;\n        Object.assign(this, config);\n        if (this.emptyInterval === undefined || !this.combineIntervalsFn)\n            throw new Error(\"All of `emptyPoint`, `combineIntervalsFn` are required\");\n        this.points.set(this.leftInfinityKey, this.emptyInterval);\n    }\n    size() {\n        return this.points.size();\n    }\n    indexOf(date) {\n        return this.points.indexOfKey(date);\n    }\n    getDateAt(index) {\n        return this.points.getKeyAt(index);\n    }\n    getPointAt(index) {\n        return this.points.getValueAt(index);\n    }\n    getIntervalOf(date, edgeInclusion = EdgeInclusion.Left) {\n        // the `index` here is guaranteed to be > 0, because at index 0 there's a `emptyPoint`\n        let { found, index } = this.indexOf(date);\n        let startDateIndex;\n        if (edgeInclusion === EdgeInclusion.Left) {\n            startDateIndex = found === IndexPosition.Exact ? index : index - 1;\n        }\n        else {\n            startDateIndex = index - 1;\n        }\n        return this.getIntervalWithStartDateIndex(startDateIndex);\n    }\n    getPrevInterval(interval) {\n        if (interval.startDateIndex === 0)\n            return null;\n        return this.getIntervalWithStartDateIndex(interval.startDateIndex - 1);\n    }\n    getNextInterval(interval) {\n        if (interval.startDateIndex >= this.size() - 1)\n            return null;\n        return this.getIntervalWithStartDateIndex(interval.startDateIndex + 1);\n    }\n    getIntervalWithStartDateIndex(startDateIndex) {\n        return {\n            startDateIndex: startDateIndex,\n            startDate: this.getDateAt(startDateIndex),\n            endDate: startDateIndex + 1 < this.size() ? this.getDateAt(startDateIndex + 1) : this.rightInfinityKey,\n            cacheInterval: this.getPointAt(startDateIndex)\n        };\n    }\n    addInterval(startDate, endDate, extendInterval) {\n        const points = this.points;\n        // there is always \"leftInfinityKey\" empty point, so `index >= 0`\n        const { found, index } = points.indexOfKey(startDate);\n        let curIndex;\n        let lastUpdatedPoint;\n        if (found == IndexPosition.Exact) {\n            const inclusion = extendInterval(lastUpdatedPoint = points.getValueAt(index));\n            points.setValueAt(index, inclusion);\n            curIndex = index + 1;\n        }\n        else {\n            const inclusion = extendInterval(lastUpdatedPoint = points.getValueAt(index - 1));\n            points.insertAt(index, startDate, inclusion);\n            curIndex = index + 1;\n        }\n        while (curIndex < points.size()) {\n            const curDate = points.getKeyAt(curIndex);\n            if (curDate.getTime() >= endDate.getTime())\n                break;\n            const inclusion = extendInterval(lastUpdatedPoint = points.getValueAt(curIndex));\n            points.setValueAt(curIndex, inclusion);\n            curIndex++;\n        }\n        if (curIndex === points.size()) {\n            points.insertAt(points.size(), endDate, this.emptyInterval);\n        }\n        else {\n            const curDate = points.getKeyAt(curIndex);\n            if (curDate.getTime() === endDate.getTime()) {\n                // we advanced till some point, which matches `endDate` config\n                // this point will setup a new label, no need to add an explicit end date point,\n                // we are done, do nothing\n            }\n            else {\n                points.insertAt(curIndex, endDate, lastUpdatedPoint);\n            }\n        }\n    }\n    includeWrappingRange(intervalCache, startDate, endDate) {\n        let interval = intervalCache.getIntervalOf(startDate);\n        while (interval) {\n            this.addInterval(interval.startDate, interval.endDate, existingInterval => this.combineIntervalsFn(existingInterval, interval.cacheInterval));\n            if (interval.endDate.getTime() > endDate.getTime())\n                break;\n            interval = intervalCache.getNextInterval(interval);\n        }\n    }\n    getSummary() {\n        return this.points.map((label, date) => { return { label, date }; });\n    }\n    clear() {\n        this.points.clear();\n        this.points.set(this.leftInfinityKey, this.emptyInterval);\n    }\n}\n","import later from \"../vendor/later/later.js\";\nimport { CalendarCache } from \"./CalendarCache.js\";\nimport { CalendarCacheInterval } from \"./CalendarCacheInterval.js\";\nimport { IntervalCache } from \"./IntervalCache.js\";\nimport DateHelper from \"../../Core/helper/DateHelper.js\";\nimport TimeZoneHelper from \"../../Core/helper/TimeZoneHelper.js\";\nexport class CalendarCacheSingle extends CalendarCache {\n    constructor(config) {\n        super(config);\n        this.staticIntervalsCached = false;\n        if (!this.unspecifiedTimeInterval)\n            throw new Error(\"Required attribute `unspecifiedTimeInterval` is missing\");\n        this.intervalCache = new IntervalCache({\n            emptyInterval: new CalendarCacheInterval({\n                intervals: [this.unspecifiedTimeInterval],\n                calendar: this.calendar\n            }),\n            combineIntervalsFn: (interval1, interval2) => {\n                return interval1.combineWith(interval2);\n            }\n        });\n    }\n    fillCache(startDate, endDate) {\n        if (!this.staticIntervalsCached) {\n            this.cacheStaticIntervals();\n            this.staticIntervalsCached = true;\n        }\n        if (this.parentCache)\n            this.includeWrappingRangeFrom(this.parentCache, startDate, endDate);\n        const startDateN = startDate.getTime();\n        const endDateN = endDate.getTime();\n        const timeZone = this.calendar.project?.timeZone;\n        if (startDateN > endDateN)\n            throw new Error(\"Invalid cache fill interval\");\n        this.forEachRecurrentInterval(interval => {\n            const startSchedule = interval.getStartDateSchedule();\n            const endSchedule = interval.getEndDateSchedule();\n            let wrappingStartDate = startSchedule.prev(1, startDate);\n            let wrappingEndDate;\n            if (endSchedule === 'EOD') {\n                const nextEndDate = startSchedule.next(1, endDate);\n                if (nextEndDate !== later.NEVER) {\n                    wrappingEndDate = DateHelper.getStartOfNextDay(nextEndDate, true);\n                }\n                else {\n                    wrappingEndDate = later.NEVER;\n                }\n            }\n            else {\n                wrappingEndDate = endSchedule.next(1, endDate);\n            }\n            // if the `startDate` is an occurrence in the interval's schedule, we need to advance one point prior\n            // this is to provide the backward-scheduling information for the `startDate` point\n            if (wrappingStartDate !== later.NEVER && wrappingStartDate.getTime() === startDateN) {\n                const wrappingStartDates = startSchedule.prev(2, startDate);\n                if (wrappingStartDates !== later.NEVER && wrappingStartDates.length === 2)\n                    wrappingStartDate = wrappingStartDates[1];\n            }\n            if (wrappingEndDate !== later.NEVER && wrappingEndDate.getTime() === endDateN) {\n                const wrappingEndDates = endSchedule.next(2, endDate);\n                if (wrappingEndDates !== later.NEVER && wrappingEndDates.length === 2)\n                    wrappingEndDate = wrappingEndDates[1];\n            }\n            const startDates = startSchedule.next(Infinity, wrappingStartDate !== later.NEVER ? wrappingStartDate : startDate, wrappingEndDate !== later.NEVER ? new Date(wrappingEndDate.getTime() - 1) : endDate);\n            // schedule is empty for the interval of interest, do nothing\n            if (startDates === later.NEVER)\n                return;\n            // at this point `startDates` is a non-empty array\n            const endDates = endSchedule === 'EOD' ? startDates.map(date => DateHelper.getStartOfNextDay(date, true)) : endSchedule.next(Infinity, new Date(startDates[0].getTime() + 1), wrappingEndDate !== later.NEVER ? wrappingEndDate : endDate);\n            if (endDates === later.NEVER)\n                return;\n            if (endDates.length > startDates.length) {\n                // safe to ignore \"extra\" end dates\n                endDates.length = startDates.length;\n            }\n            else if (endDates.length < startDates.length) {\n                // monkey patch\n                startDates.length = endDates.length;\n                // throw new Error(\"Recurrent interval inconsistency: \" + interval + \", caching startDate: \" + startDate + \", caching endDate: \" + endDate)\n            }\n            startDates.forEach((startDate, index) => {\n                let recStartDate = startDate;\n                let recEndDate = endDates[index];\n                // Adjust calendar intervals when changing time zone\n                if (timeZone != null) {\n                    recStartDate = TimeZoneHelper.toTimeZone(recStartDate, timeZone);\n                    recEndDate = TimeZoneHelper.toTimeZone(recEndDate, timeZone);\n                }\n                // if (recStartDate.getTime() > recEndDate.getTime())\n                //     throw new Error(\"Recurrent interval inconsistency: \" + interval + \", startDate: \" + startDate + \", endDate: \" + endDates[ index ])\n                this.intervalCache.addInterval(recStartDate, recEndDate, existingCacheInterval => existingCacheInterval.includeInterval(interval));\n            });\n        });\n    }\n    clear() {\n        this.staticIntervalsCached = false;\n        super.clear();\n    }\n    cacheStaticIntervals() {\n        this.forEachStaticInterval(interval => {\n            const timeZone = this.calendar.project?.timeZone;\n            let { startDate, endDate } = interval;\n            // Adjust calendar intervals when changing time zone\n            if (timeZone != null) {\n                startDate = TimeZoneHelper.toTimeZone(startDate, timeZone);\n                endDate = TimeZoneHelper.toTimeZone(endDate, timeZone);\n            }\n            this.intervalCache.addInterval(startDate, endDate, existingCacheInterval => existingCacheInterval.includeInterval(interval));\n        });\n    }\n    forEachStaticInterval(func) {\n        this.intervalStore.forEach((interval) => {\n            if (interval.isStatic())\n                func(interval);\n        });\n    }\n    forEachRecurrentInterval(func) {\n        this.intervalStore.forEach((interval) => {\n            if (interval.isRecurrent())\n                func(interval);\n        });\n    }\n}\n","import { Mixin } from \"../../ChronoGraph/class/BetterMixin.js\";\n/**\n * This a base generic mixin for every class, that belongs to a project.\n *\n * It just provides getter/setter for the `project` property, along with some convenience methods\n * to access the project's stores.\n */\nexport class AbstractPartOfProjectGenericMixin extends Mixin([], (base) => {\n    const superProto = base.prototype;\n    class AbstractPartOfProjectGenericMixin extends base {\n        async commitAsync() {\n            return this.project.commitAsync();\n        }\n        set project(project) {\n            this.$project = project;\n        }\n        get project() {\n            return this.$project;\n        }\n        calculateProject() {\n            throw new Error(\"Implement me\");\n        }\n        /**\n         * The method to set the [[AbstractProjectMixin|project]] instance, this entity belongs to.\n         */\n        setProject(project) {\n            return this.project = project;\n        }\n        /**\n         * The method to get the [[AbstractProjectMixin|project]] instance, this entity belongs to.\n         */\n        getProject() {\n            if (this.project)\n                return this.project;\n            return this.setProject(this.calculateProject());\n        }\n        /**\n         * Convenience method to get the instance of the assignment store in the [[AbstractProjectMixin|project]] instance, this entity belongs to.\n         */\n        getAssignmentStore() {\n            const project = this.getProject();\n            return project?.assignmentStore;\n        }\n        /**\n         * Convenience method to get the instance of the dependency store in the [[AbstractProjectMixin|project]] instance, this entity belongs to.\n         */\n        getDependencyStore() {\n            const project = this.getProject();\n            return project?.dependencyStore;\n        }\n        /**\n         * Convenience method to get the instance of the event store in the [[AbstractProjectMixin|project]] instance, this entity belongs to.\n         */\n        getEventStore() {\n            const project = this.getProject();\n            return project?.eventStore;\n        }\n        /**\n         * Convenience method to get the instance of the resource store in the [[AbstractProjectMixin|project]] instance, this entity belongs to.\n         */\n        getResourceStore() {\n            const project = this.getProject();\n            return project?.resourceStore;\n        }\n        /**\n         * Convenience method to get the instance of the calendar manager store in the [[AbstractProjectMixin|project]] instance, this entity belongs to.\n         */\n        getCalendarManagerStore() {\n            const project = this.getProject();\n            return project?.calendarManagerStore;\n        }\n    }\n    return AbstractPartOfProjectGenericMixin;\n}) {\n}\n","import { Mixin } from \"../../../../ChronoGraph/class/BetterMixin.js\";\nimport { AbstractPartOfProjectGenericMixin } from \"../../AbstractPartOfProjectGenericMixin.js\";\nimport Store from \"../../../../Core/data/Store.js\";\n/**\n * This an abstract mixin for every Store, that belongs to a project.\n *\n * The store with this mixin, supposes, that it will be \"joining\" the project, a reference to which is saved\n * and made available for all models.\n */\nexport class AbstractPartOfProjectStoreMixin extends Mixin([\n    AbstractPartOfProjectGenericMixin,\n    Store\n], (base) => {\n    const superProto = base.prototype;\n    class AbstractPartOfProjectStoreMixin extends base {\n        constructor() {\n            super(...arguments);\n            this.isLoadingData = false;\n            this.disableHasLoadedDataToCommitFlag = false;\n        }\n        //region Async event triggering\n        // NOTE: Tested in Scheduler (EventStore.t.js)\n        construct(config = {}) {\n            config.asyncEvents = {\n                add: true,\n                remove: true,\n                removeAll: true,\n                change: true,\n                refresh: true,\n                replace: true,\n                move: true,\n                update: true\n            };\n            return superProto.construct.call(this, config);\n        }\n        // Override for event triggering, to allow triggering events before and after some async operation.\n        // The \"before\" events are prefix, the \"after\" are not.\n        trigger(eventName, param) {\n            const me = this, { asyncEvents, project } = me, asyncEvent = asyncEvents?.[eventName], asyncAction = asyncEvent && (asyncEvent === true || asyncEvent[param.action]);\n            if (!asyncAction) {\n                // Trigger as usual\n                return superProto.trigger.call(me, eventName, param);\n            }\n            // Trigger prefixed before event\n            superProto.trigger.call(me, `${eventName}PreCommit`, { ...param });\n            // Event that did not invalidate engine, for example \"update\"\n            if (!project || project.isEngineReady() && !project.isWritingData) {\n                // Trigger \"original\" event\n                superProto.trigger.call(me, eventName, param);\n            }\n            else if (!me.eventsSuspended && project) {\n                // Instead of making n auto-destroying listeners (which takes enormous amount of time), we make a single\n                // one and queue all the events. When dataReady event is triggered we trigger those events\n                // https://github.com/bryntum/support/issues/3154\n                if (!project.dataReadyDetacher) {\n                    project.queuedDataReadyEvents = [];\n                    // Wait for commit without triggering one, otherwise we would affect commit scheduling\n                    project.dataReadyDetacher = project.ion({\n                        dataReady() {\n                            // Trigger \"original\" event\n                            this.queuedDataReadyEvents.forEach(([superProto, scope, eventName, param]) => {\n                                superProto.trigger.call(scope, eventName, param);\n                            });\n                            project.queuedDataReadyEvents = null;\n                            project.dataReadyDetacher();\n                            project.dataReadyDetacher = null;\n                        },\n                        once: true\n                    });\n                }\n                project.queuedDataReadyEvents.push([superProto, me, eventName, param]);\n            }\n            // No way of handling other return values in this scenario, wont work for preventable events\n            return true;\n        }\n        //endregion\n        calculateProject() {\n            // project is supposed to be provided for stores from outside\n            return this.project;\n        }\n        setStoreData(data) {\n            // Loading data sets hasLoadedDataToCommit flag.\n            // So we treat the 1st commit after data loading as the initial one\n            if (this.project && !(this.syncDataOnLoad || this.disableHasLoadedDataToCommitFlag)) {\n                this.project.hasLoadedDataToCommit = true;\n            }\n            this.isLoadingData = true;\n            superProto.setStoreData.call(this, data);\n            this.isLoadingData = false;\n            this.project?.trigger('storeRefresh', { store: this });\n        }\n        // Override to postpone auto commits to after project commit, makes sure records are unmodified after commit\n        async doAutoCommit() {\n            if (this.suspendCount <= 0 && this.project && !this.project.isEngineReady()) {\n                // TODO: Ask nick about this, I could not get mixin order correct for this to work\n                // @ts-ignore\n                await this.project.commitAsync();\n            }\n            superProto.doAutoCommit.call(this);\n        }\n        async addAsync(records, silent) {\n            const result = this.add(records, silent);\n            await this.project.commitAsync();\n            return result;\n        }\n        async insertAsync(index, records, silent) {\n            const result = this.insert(index, records, silent);\n            await this.project.commitAsync();\n            return result;\n        }\n        async loadDataAsync(data) {\n            this.data = data;\n            await this.project.commitAsync();\n        }\n    }\n    return AbstractPartOfProjectStoreMixin;\n}) {\n}\n","import { Mixin } from \"../../../../ChronoGraph/class/BetterMixin.js\";\nimport { AbstractPartOfProjectStoreMixin } from \"../../store/mixin/AbstractPartOfProjectStoreMixin.js\";\nimport { AbstractPartOfProjectGenericMixin } from \"../../AbstractPartOfProjectGenericMixin.js\";\nimport Model from \"../../../../Core/data/Model.js\";\nimport { isInstanceOf } from '../../../../ChronoGraph/class/BetterMixin.js';\n/**\n * This an abstract mixin for every Model that belongs to a project.\n *\n * The model with this mixin, supposes that it will be \"joining\" a store that is already part of a project,\n * so that such model can take a reference to the project from it.\n *\n * It provides 2 template methods [[joinProject]] and [[leaveProject]], which can be overridden in other mixins.\n */\nexport class AbstractPartOfProjectModelMixin extends Mixin([AbstractPartOfProjectGenericMixin, Model], (base) => {\n    const superProto = base.prototype;\n    class AbstractPartOfProjectModelMixin extends base {\n        joinStore(store) {\n            let joinedProject = null;\n            // Joining a store that is not part of project (for example a chained store) should not affect engine\n            if (isInstanceOf(store, AbstractPartOfProjectStoreMixin)) {\n                const project = store.getProject();\n                if (project && !this.getProject()) {\n                    this.setProject(project);\n                    joinedProject = project;\n                }\n            }\n            superProto.joinStore.call(this, store);\n            // Join directly only if not repopulating the store, in which case we will be joined later after\n            // graph has been recreated\n            if (joinedProject && !joinedProject.isRepopulatingStores)\n                this.joinProject();\n        }\n        unjoinStore(store, isReplacing = false) {\n            superProto.unjoinStore.call(this, store, isReplacing);\n            const project = this.getProject();\n            const isLeavingProjectStore = (isInstanceOf(store, AbstractPartOfProjectStoreMixin)) && project === store.getProject();\n            // Leave project when unjoining from store, but do not bother if the project is being destroyed or if\n            // the dataset is being replaced\n            if (project && !project.isDestroying && !project.isRepopulatingStores && isLeavingProjectStore) {\n                this.leaveProject(isReplacing);\n                this.setProject(null);\n            }\n            // @ts-ignore\n            if (isLeavingProjectStore)\n                this.graph = null;\n        }\n        /**\n         * Template method, which is called when model is joining the project (through joining some store that\n         * has already joined the project)\n         */\n        joinProject() { }\n        /**\n         * Template method, which is called when model is leaving the project (through leaving some store usually)\n         */\n        leaveProject(isReplacing = false) { }\n        calculateProject() {\n            const store = this.stores.find(s => (isInstanceOf(s, AbstractPartOfProjectStoreMixin)) && !!s.getProject());\n            return store?.getProject();\n        }\n        async setAsync(fieldName, value, silent) {\n            const result = this.set(fieldName, value, silent);\n            await this.project?.commitAsync();\n            return result;\n        }\n        async getAsync(fieldName) {\n            await this.project?.commitAsync();\n            return this.get(fieldName);\n        }\n        get isStmRestoring() {\n            const project = this.getProject();\n            return project?.isRestoringData || project?.stm.isRestoring || false;\n        }\n    }\n    return AbstractPartOfProjectModelMixin;\n}) {\n}\n","import { Mixin } from \"../../ChronoGraph/class/BetterMixin.js\";\nimport later from \"../vendor/later/later.js\";\nimport { AbstractPartOfProjectModelMixin } from \"../quark/model/mixin/AbstractPartOfProjectModelMixin.js\";\n/**\n * This is a calendar interval mixin.\n *\n * Can be either a static time interval (if [[startDate]]/[[endDate]] are specified) or recurrent time interval\n * ([[recurrentStartDate]]/[[recurrentEndDate]]).\n *\n * By default it defines a non-working period ([[isWorking]] field has default value `false`),\n * but can also define an explicit working time, for example to override some previous period.\n *\n * You probably don't need to create instances of this mixin directly, instead you pass its configuration object to the [[AbstractCalendarMixin.addInterval]]\n */\nexport class CalendarIntervalMixin extends Mixin([AbstractPartOfProjectModelMixin], (base) => {\n    const superProto = base.prototype;\n    class CalendarIntervalMixin extends base {\n        static get fields() {\n            return [\n                'name',\n                { name: 'startDate', type: 'date' },\n                { name: 'endDate', type: 'date' },\n                'recurrentStartDate',\n                'recurrentEndDate',\n                'cls',\n                'iconCls',\n                { name: 'isWorking', type: 'boolean', defaultValue: false },\n                { name: 'priority', type: 'number' }\n            ];\n        }\n        getCalendar() {\n            return this.stores[0].calendar;\n        }\n        resetPriority() {\n            this.priorityField = null;\n            this.getCalendar().getDepth();\n        }\n        // not just `getPriority` to avoid clash with auto-generated getter in the subclasses\n        getPriorityField() {\n            if (this.priorityField != null)\n                return this.priorityField;\n            // 0 - 10000 interval is reserved for \"unspecified time\" intervals\n            // then 10000 - 10100, 10100-10200, ... etc intervals are for the calendars at depth 0, 1, ... etc\n            let base = 10000 + this.getCalendar().getDepth() * 100;\n            let priority = this.priority;\n            if (priority == null) {\n                // recurrent intervals are considered \"base\" and have lower priority\n                // static intervals are considered special case overrides and have higher priority\n                priority = this.isRecurrent() ? 20 : 30;\n            }\n            // intervals from parent calendars will have lower priority\n            return this.priorityField = base + priority;\n        }\n        /**\n         * Whether this interval is recurrent (both [[recurrentStartDate]] and [[recurrentEndDate]] are present and parsed correctly\n         * by the `later` library)\n         */\n        isRecurrent() {\n            return Boolean(this.recurrentStartDate && this.recurrentEndDate && this.getStartDateSchedule() && this.getEndDateSchedule());\n        }\n        /**\n         * Whether this interval is static - both [[startDate]] and [[endDate]] are present.\n         */\n        isStatic() {\n            return Boolean(this.startDate && this.endDate);\n        }\n        /**\n         * Helper method to parse [[recurrentStartDate]] and [[recurrentEndDate]] field values.\n         * @param {Object|String} schedule Recurrence schedule\n         * @returns {Object} Processed schedule ready to be used by later.schedule() method.\n         * @private\n         */\n        parseDateSchedule(value) {\n            let schedule = value;\n            if (value && value !== Object(value)) {\n                schedule = later.parse.text(value);\n                if (schedule !== Object(schedule) || schedule.error >= 0) {\n                    // can be provided as JSON text\n                    try {\n                        schedule = JSON.parse(value);\n                    }\n                    catch (e) {\n                        return null;\n                    }\n                }\n            }\n            return schedule;\n        }\n        getStartDateSchedule() {\n            if (this.startDateSchedule)\n                return this.startDateSchedule;\n            const schedule = this.parseDateSchedule(this.recurrentStartDate);\n            return this.startDateSchedule = later.schedule(schedule);\n        }\n        getEndDateSchedule() {\n            if (this.endDateSchedule)\n                return this.endDateSchedule;\n            if (this.recurrentEndDate === 'EOD')\n                return 'EOD';\n            const schedule = this.parseDateSchedule(this.recurrentEndDate);\n            return this.endDateSchedule = later.schedule(schedule);\n        }\n    }\n    return CalendarIntervalMixin;\n}) {\n}\n","import { Mixin } from \"../../ChronoGraph/class/BetterMixin.js\";\nimport { CalendarIntervalMixin } from \"./CalendarIntervalMixin.js\";\nimport { AbstractPartOfProjectStoreMixin } from \"../quark/store/mixin/AbstractPartOfProjectStoreMixin.js\";\n/**\n * This a collection of {@link #CalendarIntervalMixin} items. Its a dumb collection though, the \"real\" calendar\n * is a [[AbstractCalendarMixin]] model, which is part of the [[AbstractCalendarManagerStoreMixin]].\n */\nexport class CalendarIntervalStore extends Mixin([AbstractPartOfProjectStoreMixin], (base) => {\n    const superProto = base.prototype;\n    class CalendarIntervalStore extends base {\n        constructor() {\n            super(...arguments);\n            this.disableHasLoadedDataToCommitFlag = true;\n        }\n        static get defaultConfig() {\n            return {\n                modelClass: CalendarIntervalMixin\n            };\n        }\n    }\n    return CalendarIntervalStore;\n}) {\n}\n","import { Mixin } from \"../../ChronoGraph/class/BetterMixin.js\";\nimport { CalendarIntervalMixin } from \"./CalendarIntervalMixin.js\";\n// TODO if we would be doing just:\n//      export class UnspecifiedTimeIntervalModel extends CalendarIntervalMixin ...\n// then an instance of the `CalendarIntervalMixin` `c` would : `c instanceof UnspecifiedTimeIntervalModel`,\n// because it inherit the `hasInstance` symbol\n// need to figure out how it can be handled\n// Calendar interval model denoting unspecified interval\nexport class UnspecifiedTimeIntervalModel extends Mixin([CalendarIntervalMixin], (base) => {\n    const superProto = base.prototype;\n    class UnspecifiedTimeIntervalModel extends base {\n        // TODO: why it overrides the method, is it configured with calendar instance directly?\n        getCalendar() {\n            return this.calendar;\n        }\n        // NOTE: See parent class implementation for further comments\n        getPriorityField() {\n            if (this.priorityField != null)\n                return this.priorityField;\n            return this.priorityField = this.getCalendar().getDepth();\n        }\n    }\n    return UnspecifiedTimeIntervalModel;\n}) {\n}\n","import { Mixin } from \"../../ChronoGraph/class/BetterMixin.js\";\nimport { AbstractPartOfProjectGenericMixin } from \"./AbstractPartOfProjectGenericMixin.js\";\n/**\n * This a base generic mixin for every class, that belongs to a scheduler_core project.\n *\n * It just provides getter/setter for the `project` property, along with some convenience methods\n * to access the project's stores.\n */\nexport class CorePartOfProjectGenericMixin extends Mixin([AbstractPartOfProjectGenericMixin], (base) => {\n    const superProto = base.prototype;\n    class CorePartOfProjectGenericMixin extends base {\n        //region Store getters\n        get eventStore() {\n            return this.project?.eventStore;\n        }\n        get resourceStore() {\n            return this.project?.resourceStore;\n        }\n        get assignmentStore() {\n            return this.project?.assignmentStore;\n        }\n        get dependencyStore() {\n            return this.project?.dependencyStore;\n        }\n        get calendarManagerStore() {\n            return this.project?.calendarManagerStore;\n        }\n        //endregion\n        //region Entity getters\n        /**\n         * Convenience method to get the instance of event by its id.\n         */\n        getEventById(id) {\n            return this.eventStore?.getById(id);\n        }\n        /**\n         * Convenience method to get the instance of dependency by its id.\n         */\n        getDependencyById(id) {\n            return this.dependencyStore?.getById(id);\n        }\n        /**\n         * Convenience method to get the instance of resource by its id.\n         */\n        getResourceById(id) {\n            return this.resourceStore?.getById(id);\n        }\n        /**\n         * Convenience method to get the instance of assignment by its id.\n         */\n        getAssignmentById(id) {\n            return this.assignmentStore?.getById(id);\n        }\n        /**\n         * Convenience method to get the instance of calendar by its id.\n         */\n        getCalendarById(id) {\n            return this.calendarManagerStore?.getById(id);\n        }\n    }\n    return CorePartOfProjectGenericMixin;\n}) {\n}\n","import { Mixin } from \"../../../ChronoGraph/class/BetterMixin.js\";\nimport { CalendarIntervalStore } from \"../../calendar/CalendarIntervalStore.js\";\nimport { CalendarIteratorResult } from \"../../calendar/CalendarCache.js\";\nimport { TimeUnit } from \"../../scheduling/Types.js\";\nimport { CalendarCacheSingle } from \"../../calendar/CalendarCacheSingle.js\";\nimport { UnspecifiedTimeIntervalModel } from \"../../calendar/UnspecifiedTimeIntervalModel.js\";\nimport DateHelper from \"../../../Core/helper/DateHelper.js\";\nimport { AbstractPartOfProjectModelMixin } from \"./mixin/AbstractPartOfProjectModelMixin.js\";\n/**\n * Calendar for project scheduling, mixed by CoreCalendarMixin and BaseCalendarMixin. It is used to mark certain time\n * intervals as \"non-working\" and ignore them during scheduling.\n *\n * The calendar consists from several [[CalendarIntervalMixin|intervals]]. The intervals can be either static or recurrent.\n */\nexport class AbstractCalendarMixin extends Mixin([AbstractPartOfProjectModelMixin], (base) => {\n    const superProto = base.prototype;\n    class CalendarMixin extends base {\n        constructor() {\n            super(...arguments);\n            this.version = 1;\n        }\n        // intervalStore            : CalendarIntervalStore\n        static get fields() {\n            return [\n                { name: 'version', type: 'number' },\n                'name',\n                { name: 'unspecifiedTimeIsWorking', type: 'boolean', defaultValue: true },\n                { name: 'intervals', type: 'store', subStore: true },\n                'cls',\n                'iconCls'\n            ];\n        }\n        get intervalStoreClass() {\n            return CalendarIntervalStore;\n        }\n        get intervalStore() {\n            // @ts-ignore\n            return this.meta.intervalsStore;\n        }\n        // Not a typo, name is generated from the fields name = intervals\n        initIntervalsStore(config) {\n            config.storeClass = this.intervalStoreClass;\n            // @ts-ignore\n            config.modelClass = this.getDefaultConfiguration().calendarIntervalModelClass || this.intervalStoreClass.defaultConfig.modelClass;\n            config.calendar = this;\n        }\n        // this method is called when the new value for the `intervals` field of this model is assigned\n        // the type of the `intervals` field is \"store\" that's why this magic\n        processIntervalsStoreData(intervals) {\n            this.bumpVersion();\n        }\n        isDefault() {\n            const project = this.getProject();\n            if (project) {\n                return this === project.defaultCalendar;\n            }\n            return false;\n        }\n        // TODO: move to Model?\n        getDepth() {\n            return this.childLevel + 1;\n        }\n        /**\n         * The core iterator method of the calendar.\n         *\n         * @param options The options for iterator. Should contain at least one of the `startDate`/`endDate` properties\n         * which indicates what timespan to examine for availability intervals. If one of boundaries is not provided\n         * iterator function should return `false` at some point, to avoid infinite loops.\n         *\n         * Another recognized option is `isForward`, which indicates the direction in which to iterate through the timespan.\n         *\n         * @param func The iterator function to call. It will be called for every distinct set of availability intervals, found\n         * in the given timespan. All the intervals, which are \"active\" for current interval are collected in the 3rd argument\n         * for this function - [[CalendarCacheInterval|calendarCacheInterval]]. If iterator returns `false` (checked with `===`)\n         * the iteration stops.\n         *\n         * @param scope The scope (`this` value) to execute the iterator in.\n         */\n        forEachAvailabilityInterval(options, func, scope) {\n            const maxRange = this.getProject().maxCalendarRange;\n            if (maxRange) {\n                options = Object.assign({ maxRange }, options);\n            }\n            return this.calendarCache.forEachAvailabilityInterval(options, func, scope);\n        }\n        /**\n         * This method starts at the given `date` and moves forward or backward in time, depending on `isForward`.\n         * It stops moving as soon as it accumulates the `durationMs` milliseconds of working time and returns the date\n         * at which it has stopped and remaining duration - the [[AccumulateWorkingTimeResult]] object.\n         *\n         * Normally, the remaining duration will be 0, indicating the full `durationMs` has been accumulated.\n         * However, sometimes, calendar might not be able to accumulate enough working time due to various reasons,\n         * like if it does not contain enough working time - this case will be indicated with remaining duration bigger than 0.\n         *\n         * @param date\n         * @param durationMs\n         * @param isForward\n         */\n        accumulateWorkingTime(date, durationMs, isForward) {\n            // if duration is 0 - return the same date\n            if (durationMs === 0)\n                return { finalDate: new Date(date), remainingDurationInMs: 0 };\n            if (isNaN(durationMs))\n                throw new Error(\"Invalid duration\");\n            let finalDate = date;\n            const adjustDurationToDST = this.getProject().adjustDurationToDST;\n            this.forEachAvailabilityInterval(isForward ? { startDate: date, isForward: true } : { endDate: date, isForward: false }, (intervalStartDate, intervalEndDate, calendarCacheInterval) => {\n                let result = true;\n                if (calendarCacheInterval.getIsWorking()) {\n                    let diff = intervalEndDate.getTime() - intervalStartDate.getTime();\n                    if (durationMs <= diff) {\n                        if (adjustDurationToDST) {\n                            const dstDiff = isForward\n                                ? intervalStartDate.getTimezoneOffset() - (new Date(intervalStartDate.getTime() + durationMs)).getTimezoneOffset()\n                                : (new Date(intervalEndDate.getTime() - durationMs)).getTimezoneOffset() - intervalEndDate.getTimezoneOffset();\n                            durationMs -= dstDiff * 60 * 1000;\n                        }\n                        finalDate = isForward\n                            ? new Date(intervalStartDate.getTime() + durationMs)\n                            : new Date(intervalEndDate.getTime() - durationMs);\n                        durationMs = 0;\n                        result = false;\n                    }\n                    else {\n                        if (adjustDurationToDST) {\n                            const dstDiff = intervalStartDate.getTimezoneOffset() - intervalEndDate.getTimezoneOffset();\n                            diff += dstDiff * 60 * 1000;\n                        }\n                        finalDate = isForward ? intervalEndDate : intervalStartDate;\n                        durationMs -= diff;\n                    }\n                }\n                return result;\n            });\n            return { finalDate: new Date(finalDate), remainingDurationInMs: durationMs };\n        }\n        /**\n         * Calculate the working time duration between the 2 dates, in milliseconds.\n         *\n         * @param {Date} startDate\n         * @param {Date} endDate\n         * @param {Boolean} [allowNegative] Method ignores negative values by default, returning 0. Set to true to get\n         * negative duration.\n         */\n        calculateDurationMs(startDate, endDate, allowNegative = false) {\n            let duration = 0;\n            const multiplier = startDate.getTime() <= endDate.getTime() || !allowNegative ? 1 : -1;\n            if (multiplier < 0) {\n                [startDate, endDate] = [endDate, startDate];\n            }\n            const adjustDurationToDST = this.getProject().adjustDurationToDST;\n            this.forEachAvailabilityInterval({ startDate: startDate, endDate: endDate }, (intervalStartDate, intervalEndDate, calendarCacheInterval) => {\n                if (calendarCacheInterval.getIsWorking()) {\n                    duration += intervalEndDate.getTime() - intervalStartDate.getTime();\n                    if (adjustDurationToDST) {\n                        const dstDiff = intervalStartDate.getTimezoneOffset() - intervalEndDate.getTimezoneOffset();\n                        duration += dstDiff * 60 * 1000;\n                    }\n                }\n            });\n            return duration * multiplier;\n        }\n        /**\n         * Calculate the end date of the time interval which starts at `startDate` and has `durationMs` working time duration\n         * (in milliseconds).\n         *\n         * @param startDate\n         * @param durationMs\n         */\n        calculateEndDate(startDate, durationMs) {\n            // the method goes forward by default ..unless a negative duration provided\n            const isForward = durationMs >= 0;\n            const res = this.accumulateWorkingTime(startDate, Math.abs(durationMs), isForward);\n            return res.remainingDurationInMs === 0 ? res.finalDate : null;\n        }\n        /**\n         * Calculate the start date of the time interval which ends at `endDate` and has `durationMs` working time duration\n         * (in milliseconds).\n         *\n         * @param endDate\n         * @param durationMs\n         */\n        calculateStartDate(endDate, durationMs) {\n            // the method goes backwards by default ..unless a negative duration provided\n            const isForward = durationMs <= 0;\n            const res = this.accumulateWorkingTime(endDate, Math.abs(durationMs), isForward);\n            return res.remainingDurationInMs === 0 ? res.finalDate : null;\n        }\n        /**\n         * Returns the earliest point at which a working period of time starts, following the given date.\n         * Can be the date itself, if it comes on the working time.\n         *\n         * @param date The date after which to skip the non-working time.\n         * @param isForward Whether the \"following\" means forward in time or backward.\n         */\n        skipNonWorkingTime(date, isForward = true) {\n            let workingDate;\n            const res = this.forEachAvailabilityInterval(isForward ? { startDate: date, isForward: true } : { endDate: date, isForward: false }, (intervalStartDate, intervalEndDate, calendarCacheInterval) => {\n                if (calendarCacheInterval.getIsWorking()) {\n                    workingDate = isForward ? intervalStartDate : intervalEndDate;\n                    return false;\n                }\n            });\n            if (res === CalendarIteratorResult.MaxRangeReached || res === CalendarIteratorResult.FullRangeIterated)\n                return 'empty_calendar';\n            return workingDate ? new Date(workingDate) : new Date(date);\n        }\n        /**\n         * This method adds a single [[CalendarIntervalMixin]] to the internal collection of the calendar\n         */\n        addInterval(interval) {\n            return this.addIntervals([interval]);\n        }\n        /**\n         * This method adds an array of [[CalendarIntervalMixin]] to the internal collection of the calendar\n         */\n        addIntervals(intervals) {\n            this.bumpVersion();\n            return this.intervalStore.add(intervals);\n        }\n        /**\n         * This method removes a single [[CalendarIntervalMixin]] from the internal collection of the calendar\n         */\n        removeInterval(interval) {\n            return this.removeIntervals([interval]);\n        }\n        /**\n         * This method removes an array of [[CalendarIntervalMixin]] from the internal collection of the calendar\n         */\n        removeIntervals(intervals) {\n            this.bumpVersion();\n            return this.intervalStore.remove(intervals);\n        }\n        /**\n         * This method removes all intervals from the internal collection of the calendar\n         */\n        clearIntervals(silent) {\n            if (!silent) {\n                this.bumpVersion();\n            }\n            return this.intervalStore.removeAll(silent);\n        }\n        bumpVersion() {\n            this.clearCache();\n            this.version++;\n        }\n        get calendarCache() {\n            if (this.$calendarCache !== undefined)\n                return this.$calendarCache;\n            const unspecifiedTimeInterval = new UnspecifiedTimeIntervalModel({\n                isWorking: this.unspecifiedTimeIsWorking\n            });\n            unspecifiedTimeInterval.calendar = this;\n            return this.$calendarCache = new CalendarCacheSingle({\n                calendar: this,\n                unspecifiedTimeInterval: unspecifiedTimeInterval,\n                intervalStore: this.intervalStore,\n                parentCache: this.parent && !this.parent.isRoot ? this.parent.calendarCache : null\n            });\n        }\n        clearCache() {\n            // not strictly needed, we just help garbage collector\n            this.$calendarCache && this.$calendarCache.clear();\n            this.$calendarCache = undefined;\n        }\n        resetPriorityOfAllIntervals() {\n            this.traverse((calendar) => {\n                calendar.intervalStore.forEach((interval) => interval.resetPriority());\n            });\n        }\n        insertChild(child, before, silent) {\n            let res = superProto.insertChild.call(this, ...arguments);\n            if (!Array.isArray(res)) {\n                res = [res];\n            }\n            // invalidate cache of the child record, since now it should take parent into account\n            res.forEach((r) => {\n                r.bumpVersion();\n                r.resetPriorityOfAllIntervals();\n            });\n            return res;\n        }\n        joinProject() {\n            superProto.joinProject.call(this);\n            this.intervalStore.setProject(this.getProject());\n        }\n        leaveProject() {\n            superProto.leaveProject.call(this);\n            this.intervalStore.setProject(null);\n            this.clearCache();\n        }\n        doDestroy() {\n            this.leaveProject();\n            this.intervalStore.destroy();\n            super.doDestroy();\n        }\n        isDayHoliday(day) {\n            const startDate = DateHelper.clearTime(day), endDate = DateHelper.getNext(day, TimeUnit.Day);\n            let hasWorkingTime = false;\n            this.forEachAvailabilityInterval({ startDate, endDate, isForward: true }, (_intervalStartDate, _intervalEndDate, calendarCacheInterval) => {\n                hasWorkingTime = calendarCacheInterval.getIsWorking();\n                return !hasWorkingTime;\n            });\n            return !hasWorkingTime;\n        }\n        // TODO: tests\n        getDailyHolidaysRanges(startDate, endDate) {\n            const result = [];\n            startDate = DateHelper.clearTime(startDate);\n            while (startDate < endDate) {\n                if (this.isDayHoliday(startDate)) {\n                    result.push({\n                        startDate,\n                        endDate: DateHelper.getStartOfNextDay(startDate, true, true)\n                    });\n                }\n                startDate = DateHelper.getNext(startDate, TimeUnit.Day);\n            }\n            return result;\n        }\n        /**\n         * Returns working time ranges between the provided dates.\n         * @param startDate Start of the period to get ranges from.\n         * @param endDate End of the period to get ranges from.\n         *\n         * @param {Date} startDate\n         * @param {Date} endDate\n         */\n        getWorkingTimeRanges(startDate, endDate) {\n            const result = [];\n            this.forEachAvailabilityInterval({ startDate, endDate, isForward: true }, (intervalStartDate, intervalEndDate, calendarCacheInterval) => {\n                if (calendarCacheInterval.getIsWorking()) {\n                    const entry = calendarCacheInterval.intervals[0];\n                    result.push({\n                        name: entry.name,\n                        startDate: intervalStartDate,\n                        endDate: intervalEndDate\n                    });\n                }\n            });\n            return result;\n        }\n        /**\n         * Returns non-working time ranges between the provided dates.\n         * @param startDate Start of the period to get ranges from.\n         * @param endDate End of the period to get ranges from.\n         *\n         * @param {Date} startDate\n         * @param {Date} endDate\n         */\n        getNonWorkingTimeRanges(startDate, endDate) {\n            const result = [];\n            this.forEachAvailabilityInterval({ startDate, endDate, isForward: true }, (intervalStartDate, intervalEndDate, calendarCacheInterval) => {\n                if (!calendarCacheInterval.getIsWorking()) {\n                    const entry = calendarCacheInterval.intervals[0];\n                    result.push({\n                        name: entry.name,\n                        iconCls: entry.iconCls,\n                        cls: entry.cls,\n                        startDate: intervalStartDate,\n                        endDate: intervalEndDate\n                    });\n                }\n            });\n            return result;\n        }\n        /**\n         * Checks if there is a working time interval in the provided time range (or when just startDate is provided,\n         * checks if the date is contained inside a working time interval in this calendar)\n         * @param startDate\n         * @param [endDate]\n         * @param [fullyContained] Pass true to check if the range is fully covered by a single continuous working time block\n         */\n        isWorkingTime(startDate, endDate, fullyContained) {\n            if (fullyContained) {\n                let found;\n                const res = this.forEachAvailabilityInterval({ startDate, endDate, isForward: true }, (intervalStartDate, intervalEndDate, calendarCacheInterval) => {\n                    if (calendarCacheInterval.getIsWorking() && intervalStartDate <= startDate && intervalEndDate >= endDate) {\n                        found = true;\n                        return false;\n                    }\n                });\n                if (res === CalendarIteratorResult.MaxRangeReached || res === CalendarIteratorResult.FullRangeIterated)\n                    return false;\n                return found;\n            }\n            else {\n                // Can be Date | null | 'empty_calendar'\n                const workingTimeStart = this.skipNonWorkingTime(startDate);\n                return workingTimeStart && workingTimeStart !== 'empty_calendar' ? (endDate ? workingTimeStart < endDate : workingTimeStart.getTime() === startDate.getTime()) : false;\n            }\n        }\n    }\n    return CalendarMixin;\n}) {\n}\n","import { Mixin } from \"../../../ChronoGraph/class/Mixin.js\";\nimport { AbstractPartOfProjectModelMixin } from './mixin/AbstractPartOfProjectModelMixin.js';\n/**\n * This is a mixin enabling events to handle assignments. It is mixed by CoreHasAssignmentsMixin and\n * BaseHasAssignmentsMixin. It provides a collection of all assignments, which reference this event.\n *\n * Doesn't affect scheduling.\n */\nexport class AbstractHasAssignmentsMixin extends Mixin([AbstractPartOfProjectModelMixin], (base) => {\n    const superProto = base.prototype;\n    class HasAssignmentsMixin extends base {\n        /**\n         * If a given resource is assigned to this task, returns a [[BaseAssignmentMixin]] instance for it.\n         * Otherwise returns `null`\n         */\n        getAssignmentFor(resource) {\n            // Bucket `assigned` might not be set up yet when using delayed calculations\n            for (const assignment of this.assigned ?? []) {\n                if (assignment.resource === resource)\n                    return assignment;\n            }\n            return null;\n        }\n        isAssignedTo(resource) {\n            return Boolean(this.getAssignmentFor(resource));\n        }\n        /**\n         * A method which assigns a resource to the current event\n         */\n        async assign(resource) {\n            //<debug>\n            // Preconditions:\n            if (this.getAssignmentFor(resource))\n                throw new Error('Resource can\\'t be assigned twice to the same task');\n            //</debug>\n            const assignmentCls = this.project.assignmentStore.modelClass;\n            this.addAssignment(new assignmentCls({\n                event: this,\n                resource: resource\n            }));\n            return this.commitAsync();\n        }\n        /**\n         * A method which unassigns a resource from the current event\n         */\n        async unassign(resource) {\n            const assignment = this.getAssignmentFor(resource);\n            //<debug>\n            if (!assignment)\n                throw new Error(`Can't unassign resource \\`${resource}\\` from task \\`${this}\\` - resource is not assigned to the task!`);\n            //</debug>\n            this.removeAssignment(assignment);\n            return this.commitAsync();\n        }\n        leaveProject() {\n            // `this.assigned` will be empty if model is added to project and then removed immediately\n            // w/o any propagations\n            // @ts-ignore\n            if (this.isInActiveTransaction && this.assigned) {\n                const eventStore = this.getEventStore();\n                // to batch the assignments removal, we don't remove the assignments right away, but instead\n                // add them for the batched removal to the `assignmentsForRemoval` property of the event store\n                this.assigned.forEach(assignment => eventStore.assignmentsForRemoval.add(assignment));\n            }\n            superProto.leaveProject.call(this, ...arguments);\n        }\n        remove() {\n            if (this.parent) {\n                // need to get the event store in advance, because after removal the project reference will be cleared (all that is what provide\n                // references to all stores\n                const eventStore = this.getEventStore();\n                superProto.remove.call(this);\n                eventStore && eventStore.afterEventRemoval();\n            }\n            else {\n                return superProto.remove.call(this);\n            }\n        }\n        // template methods, overridden in scheduling modes mixins\n        // should probably be named something like \"onEventAssignmentAdded\"\n        // should be a listener for the `add` event of the assignment store instead\n        addAssignment(assignment) {\n            this.getProject().assignmentStore.add(assignment);\n            return assignment;\n        }\n        // should be a listener for the `remove` event of the assignment store instead\n        removeAssignment(assignment) {\n            this.getProject().assignmentStore.remove(assignment);\n            return assignment;\n        }\n    }\n    return HasAssignmentsMixin;\n}) {\n}\n","import { Mixin } from \"../../../../ChronoGraph/class/BetterMixin.js\";\nimport { CorePartOfProjectGenericMixin } from \"../../CorePartOfProjectGenericMixin.js\";\nimport Model from \"../../../../Core/data/Model.js\";\nimport { AbstractPartOfProjectModelMixin } from \"./AbstractPartOfProjectModelMixin.js\";\n/**\n * This a mixin for every Model that belongs to a scheduler_core project.\n *\n * It adds functions needed to calculate invalidated fields on project commit.\n */\nexport class CorePartOfProjectModelMixin extends Mixin([\n    AbstractPartOfProjectModelMixin,\n    CorePartOfProjectGenericMixin,\n    Model\n], (base) => {\n    const superProto = base.prototype;\n    class CorePartOfProjectModelMixin extends base {\n        constructor() {\n            super(...arguments);\n            // Flag set during calculation\n            this.$isCalculating = false;\n            // Proposed changes\n            this.$changed = {};\n            // Value before proposed change, for buckets that need to update data early\n            this.$beforeChange = {};\n        }\n        get isInActiveTransaction() {\n            return true;\n        }\n        // Invalidate record upon joining project, leads to a buffered commit\n        joinProject() {\n            this.invalidate();\n        }\n        // Trigger a buffered commit when leaving the project\n        leaveProject(isReplacing = false) {\n            superProto.leaveProject.call(this, isReplacing);\n            this.project?.bufferedCommitAsync();\n        }\n        /**\n         * Invalidates this record, queueing it for calculation on project commit.\n         */\n        invalidate() {\n            this.project?.invalidate(this);\n        }\n        /**\n         * Used to retrieve the proposed (before 'dataReady') or current (after 'dataReady') value for a field.\n         * If there is no proposed change, it is functionally equal to a normal `record.get()` call.\n         */\n        getCurrentOrProposed(fieldName) {\n            if (fieldName in this.$changed && this.$changed[fieldName] !== true) {\n                return this.$changed[fieldName];\n            }\n            return this.get(fieldName) ?? null;\n        }\n        /**\n         * Determines if the specified field has a value or not, value can be either current or proposed.\n         */\n        hasCurrentOrProposed(fieldName) {\n            return ((fieldName in this.$changed) && this.$changed[fieldName] != true) || this.get(fieldName) != null;\n        }\n        /**\n         * Propose changes, to be considered during calculation. Also invalidates the record.\n         */\n        propose(changes) {\n            // @ts-ignore\n            if (this.project || this.recurringTimeSpan?.project) {\n                const keys = Object.keys(changes);\n                for (let i = 0; i < keys.length; i++) {\n                    const key = keys[i];\n                    this.$changed[key] = changes[key];\n                }\n                this.invalidate();\n            }\n            else {\n                // If no project, behave as a normal model would\n                this.set(changes);\n            }\n        }\n        /**\n         * Similar to propose, but with more options. Mostly used by buckets, since they need data to update early.\n         */\n        setChanged(field, value, invalidate = true, setData = false) {\n            const me = this;\n            me.$changed[field] = value;\n            // Buckets need to keep data up to date immediately\n            if (setData) {\n                if (!(field in me.$beforeChange)) {\n                    me.$beforeChange[field] = me.get(field);\n                }\n                me.setData(field, value);\n            }\n            invalidate && me.invalidate();\n        }\n        /**\n         * Hook called before project refresh, override and calculate required changes in subclasses\n         */\n        calculateInvalidated() { }\n        /**\n         * Called after project refresh, before dataReady. Announce updated data\n         */\n        finalizeInvalidated(silent = false) {\n            const me = this;\n            me.$isCalculating = true;\n            if (!silent) {\n                // First silently revert any data change (used by buckets), otherwise it wont be detected by `set()`\n                me.setData(me.$beforeChange);\n                // Then do a proper set\n                me.set(me.$changed);\n            }\n            else {\n                me.setData(me.$changed);\n            }\n            me.$changed = {};\n            me.$beforeChange = {};\n            me.$isCalculating = false;\n        }\n    }\n    return CorePartOfProjectModelMixin;\n}) {\n}\n","import { CI } from \"../../ChronoGraph/collection/Iterator.js\";\nexport const isNotNumber = (value) => Number(value) !== value;\nexport const CIFromSetOrArrayOrValue = (value) => {\n    if (value instanceof Set || value instanceof Array)\n        return CI(value);\n    return CI([value]);\n};\nexport const delay = (value) => new Promise(resolve => setTimeout(resolve, value));\nexport const format = (format, ...values) => {\n    return format.replace(/{(\\d+)}/g, (match, number) => typeof values[number] !== 'undefined' ? values[number] : match);\n};\n","import { Mixin } from \"../../../ChronoGraph/class/Mixin.js\";\nimport { AbstractPartOfProjectStoreMixin } from \"./mixin/AbstractPartOfProjectStoreMixin.js\";\nimport { CIFromSetOrArrayOrValue } from \"../../util/Functions.js\";\n// Shared functionality for CoreAssignmentStore & ChronoAssignmentStore\nexport class AbstractAssignmentStoreMixin extends Mixin([AbstractPartOfProjectStoreMixin], (base) => {\n    const superProto = base.prototype;\n    class AbstractAssignmentStoreMixin extends base {\n        constructor() {\n            super(...arguments);\n            this.assignmentsForRemoval = new Set();\n            this.allAssignmentsForRemoval = false;\n        }\n        remove(records, silent) {\n            this.assignmentsForRemoval = CIFromSetOrArrayOrValue(records).toSet();\n            const res = superProto.remove.call(this, records, silent);\n            this.assignmentsForRemoval.clear();\n            return res;\n        }\n        removeAll(silent) {\n            this.allAssignmentsForRemoval = true;\n            const res = superProto.removeAll.call(this, silent);\n            this.allAssignmentsForRemoval = false;\n            return res;\n        }\n    }\n    return AbstractAssignmentStoreMixin;\n}) {\n}\n","import { Mixin } from \"../../../ChronoGraph/class/Mixin.js\";\nimport { AbstractPartOfProjectStoreMixin } from \"./mixin/AbstractPartOfProjectStoreMixin.js\";\n// Shared functionality for CoreCalendarManagerStoreMixin & ChronoCalendarManagerStoreMixin\nexport class AbstractCalendarManagerStoreMixin extends Mixin([AbstractPartOfProjectStoreMixin], (base) => {\n    const superProto = base.prototype;\n    class AbstractCalendarManagerStoreMixin extends base {\n        // special handling to destroy calendar models as part of destroying this store\n        doDestroy() {\n            const records = [];\n            // When chained, traverse can be called on destroyed nodes.\n            if (!this.rootNode?.isDestroyed) {\n                this.traverse(record => records.push(record));\n            }\n            super.doDestroy();\n            records.forEach(record => record.destroy());\n        }\n    }\n    return AbstractCalendarManagerStoreMixin;\n}) {\n}\n","import { Mixin } from \"../../../ChronoGraph/class/Mixin.js\";\nimport { AbstractPartOfProjectStoreMixin } from \"./mixin/AbstractPartOfProjectStoreMixin.js\";\nimport { CIFromSetOrArrayOrValue } from '../../util/Functions.js';\n// Shared functionality for CoreDependencyStore & ChronoDependencyStore\nexport class AbstractDependencyStoreMixin extends Mixin([AbstractPartOfProjectStoreMixin], (base) => {\n    const superProto = base.prototype;\n    class AbstractDependencyStoreMixin extends base {\n        constructor() {\n            super(...arguments);\n            this.dependenciesForRemoval = new Set();\n            this.allDependenciesForRemoval = false;\n        }\n        remove(records, silent) {\n            this.dependenciesForRemoval = CIFromSetOrArrayOrValue(records).toSet();\n            const res = superProto.remove.call(this, records, silent);\n            this.dependenciesForRemoval.clear();\n            return res;\n        }\n        removeAll(silent) {\n            this.allDependenciesForRemoval = true;\n            const res = superProto.removeAll.call(this, silent);\n            this.allDependenciesForRemoval = false;\n            return res;\n        }\n    }\n    return AbstractDependencyStoreMixin;\n}) {\n}\n","import { Mixin } from \"../../../ChronoGraph/class/Mixin.js\";\nimport { AbstractPartOfProjectStoreMixin } from \"./mixin/AbstractPartOfProjectStoreMixin.js\";\nconst dataAddRemoveActions = {\n    splice: 1,\n    clear: 1\n};\n// Shared functionality for CoreEventStore & ChronoEventStore\nexport class AbstractEventStoreMixin extends Mixin([AbstractPartOfProjectStoreMixin], (base) => {\n    const superProto = base.prototype;\n    class AbstractEventStoreMixin extends base {\n        constructor() {\n            super(...arguments);\n            this.assignmentsForRemoval = new Set();\n            // TODO it seems this property is no longer used\n            // need to remove and probably do the same for `assignmentsForRemoval`\n            this.dependenciesForRemoval = new Set();\n        }\n        // we need `onDataChange` for `syncDataOnLoad` option to work\n        onDataChange(event) {\n            // remove from a filter action must be ignored.\n            const isAddRemove = dataAddRemoveActions[event.action];\n            super.onDataChange(event);\n            if (isAddRemove && event.removed?.length)\n                this.afterEventRemoval();\n        }\n        // it seems `onDataChange` is not triggered for `remove` with `silent` flag\n        remove(records, silent) {\n            const res = superProto.remove.call(this, records, silent);\n            this.afterEventRemoval();\n            return res;\n        }\n        // it seems `onDataChange` is not triggered for `TreeStore#removeAll()`\n        removeAll(silent) {\n            const res = superProto.removeAll.call(this, silent);\n            this.afterEventRemoval();\n            return res;\n        }\n        onNodeRemoveChild(parent, children, index, flags) {\n            // @ts-ignore\n            const removed = superProto.onNodeRemoveChild.call(this, ...arguments);\n            this.afterEventRemoval();\n            return removed;\n        }\n        afterEventRemoval() {\n            const { assignmentsForRemoval, dependenciesForRemoval } = this;\n            // Can be called from `set data` during construction\n            if (!assignmentsForRemoval)\n                return;\n            // ORDER IS IMPORTANT!\n            // First remove assignments\n            const assignmentStore = this.getAssignmentStore();\n            if (assignmentStore && !assignmentStore.allAssignmentsForRemoval && assignmentsForRemoval.size) {\n                const toRemove = [...assignmentsForRemoval].filter(assignment => !assignmentStore.assignmentsForRemoval.has(assignment));\n                toRemove.length > 0 && assignmentStore.remove(toRemove);\n            }\n            assignmentsForRemoval.clear();\n            // Then remove dependencies\n            const dependencyStore = this.getDependencyStore();\n            if (dependencyStore && !dependencyStore.allDependenciesForRemoval && dependenciesForRemoval.size) {\n                const toRemove = [...dependenciesForRemoval].filter(dependency => !dependencyStore.dependenciesForRemoval.has(dependency));\n                toRemove.length > 0 && dependencyStore.remove(toRemove);\n            }\n            dependenciesForRemoval.clear();\n        }\n        processRecord(eventRecord, isDataset = false) {\n            if (!this.project?.isRepopulatingStores) {\n                const existingRecord = this.getById(eventRecord.id);\n                const isReplacing = existingRecord && existingRecord !== eventRecord;\n                //@ts-ignore\n                if (isReplacing && existingRecord.assigned) {\n                    // TODO: Type\n                    //@ts-ignore\n                    for (const assignment of existingRecord.assigned) {\n                        assignment.event = eventRecord;\n                    }\n                }\n            }\n            return eventRecord;\n        }\n    }\n    return AbstractEventStoreMixin;\n}) {\n}\n","import { Mixin } from \"../../../ChronoGraph/class/Mixin.js\";\nimport { AbstractPartOfProjectStoreMixin } from \"./mixin/AbstractPartOfProjectStoreMixin.js\";\nconst dataAddRemoveActions = {\n    splice: 1,\n    clear: 1\n};\n// Shared functionality for CoreResourceStore & ChronoResourceStore\nexport class AbstractResourceStoreMixin extends Mixin([AbstractPartOfProjectStoreMixin], (base) => {\n    const superProto = base.prototype;\n    class AbstractResourceStoreMixin extends base {\n        constructor() {\n            super(...arguments);\n            this.assignmentsForRemoval = new Set();\n        }\n        // we need `onDataChange` for `syncDataOnLoad` option to work\n        onDataChange(event) {\n            // remove from a filter action must be ignored.\n            const isAddRemove = dataAddRemoveActions[event.action];\n            super.onDataChange(event);\n            if (isAddRemove && event.removed?.length)\n                this.afterResourceRemoval();\n        }\n        // it seems `onDataChange` is not triggered for `remove` with `silent` flag\n        remove(records, silent) {\n            const res = superProto.remove.call(this, records, silent);\n            this.afterResourceRemoval();\n            return res;\n        }\n        // it seems `onDataChange` is not triggered for `TreeStore#removeAll()`\n        removeAll(silent) {\n            const res = superProto.removeAll.call(this, silent);\n            this.afterResourceRemoval();\n            return res;\n        }\n        afterResourceRemoval() {\n            // TODO: Ask nick, have tried making it get correct type by changing AbstractProjectMixin. But no luck\n            const assignmentStore = this.getAssignmentStore();\n            if (assignmentStore && !assignmentStore.allAssignmentsForRemoval) {\n                const assignmentsForRemoval = [...this.assignmentsForRemoval].filter(assignment => !assignmentStore.assignmentsForRemoval.has(assignment));\n                assignmentsForRemoval.length > 0 && assignmentStore.remove(assignmentsForRemoval);\n            }\n            this.assignmentsForRemoval.clear();\n        }\n        processRecord(resourceRecord, isDataset = false) {\n            const existingRecord = this.getById(resourceRecord.id);\n            const isReplacing = existingRecord && existingRecord !== resourceRecord;\n            if (isReplacing) {\n                // TODO: There is no ResourceMixin at the lowest level, cannot type correctly without it\n                //@ts-ignore\n                for (const assignment of existingRecord.assigned || []) {\n                    assignment.resource = resourceRecord;\n                }\n            }\n            return resourceRecord;\n        }\n    }\n    return AbstractResourceStoreMixin;\n}) {\n}\n","import { Mixin } from \"../../../../ChronoGraph/class/BetterMixin.js\";\nimport { CorePartOfProjectModelMixin } from \"../mixin/CorePartOfProjectModelMixin.js\";\nimport DateHelper from \"../../../../Core/helper/DateHelper.js\";\n/**\n * Core event entity mixin type.\n *\n * At this level event is only aware about its dates\n * The functionality, related to the assignments etc is provided in other mixins.\n */\nexport class CoreEventMixin extends Mixin([CorePartOfProjectModelMixin], (base) => {\n    const superProto = base.prototype;\n    class CoreEventMixin extends base {\n        constructor() {\n            super(...arguments);\n            this._startDate = null;\n            this._endDate = null;\n            this._duration = null;\n        }\n        // Proper engine defines these fields since they enter graph, thus we need them\n        static get fields() {\n            return [\n                { name: 'startDate', type: 'date' },\n                { name: 'endDate', type: 'date' },\n                { name: 'duration', type: 'number' },\n                { name: 'durationUnit', type: 'durationunit', defaultValue: 'day' }\n            ];\n        }\n        // Getters return current or proposed value\n        get startDate() { return this._startDate ?? this.get('startDate') ?? null; }\n        get endDate() { return this._endDate ?? this.get('endDate') ?? null; }\n        get duration() { return this._duration ?? this.get('duration') ?? null; }\n        // Route all setting through applyXX (setStartDate, startDate = , set('startDate'), batching)\n        set startDate(value) { this.proposeStartDate(value); }\n        set endDate(value) { this.proposeEndDate(value); }\n        set duration(value) { this.proposeDuration(value); }\n        //region Edge case normalization\n        inSet(field, value, silent, fromRelationUpdate, skipAccessors) {\n            const me = this;\n            // Catch \"normal\" set calls\n            if (me.project && !me.project.isWritingData && typeof field !== 'string' && !skipAccessors) {\n                // Flag fields as changed even if we are given a no-change value, to let calculations take decision on\n                // whether to keep duration or not\n                if ('startDate' in field && !('startDate' in me.$changed)) {\n                    me.$changed.startDate = true;\n                    me.invalidate();\n                }\n                if ('endDate' in field && !('endDate' in me.$changed)) {\n                    me.$changed.endDate = true;\n                    me.invalidate();\n                }\n            }\n            // @ts-ignore\n            return superProto.inSet.call(me, field, value, silent, fromRelationUpdate, skipAccessors);\n        }\n        //endregion\n        //region StartDate\n        getStartDate() {\n            return this.startDate;\n        }\n        proposeStartDate(startDate, keepDuration = !('endDate' in this.$changed)) {\n            if (this.inSetting || startDate?.getTime() !== this.startDate?.getTime()) {\n                this._startDate = startDate;\n                this.propose({ startDate, keepDuration });\n            }\n        }\n        async setStartDate(startDate, keepDuration = true) {\n            this.proposeStartDate(startDate, keepDuration);\n            return this.project?.commitAsync();\n        }\n        //endregion\n        //region EndDate\n        getEndDate() {\n            return this.endDate;\n        }\n        proposeEndDate(endDate, keepDuration = false) {\n            if (this.inSetting || endDate?.getTime() !== this.endDate?.getTime()) {\n                this._endDate = endDate;\n                this.propose({ endDate, keepDuration });\n            }\n        }\n        async setEndDate(endDate, keepDuration = false) {\n            this.proposeEndDate(endDate, keepDuration);\n            return this.project?.commitAsync();\n        }\n        //endregion\n        //region Duration\n        getDuration() {\n            return this.duration;\n        }\n        proposeDuration(duration, unit, keepStart = true) {\n            this._duration = duration;\n            this.propose({ duration, keepStart });\n            if (unit)\n                this.propose({ durationUnit: unit });\n        }\n        async setDuration(duration, unit, keepStart = true) {\n            this.proposeDuration(duration, unit, keepStart);\n            return this.project?.commitAsync();\n        }\n        getDurationUnit() {\n            return this.durationUnit;\n        }\n        //endregion\n        // When joining as part of inline data, store is available. If joining through load, it is passed\n        joinProject() {\n            const me = this;\n            const changed = me.$changed;\n            const startDate = me.getCurrentOrProposed('startDate');\n            const endDate = me.getCurrentOrProposed('endDate');\n            const duration = me.getCurrentOrProposed('duration');\n            // Initial values should be considered changed, to be normalized\n            if (startDate != null)\n                changed.startDate = me._startDate = startDate;\n            if (endDate != null)\n                changed.endDate = me._endDate = endDate;\n            if (duration != null)\n                changed.duration = me._duration = duration;\n            // Resolve assignments when event joins project after load\n            if (me.eventStore && !me.eventStore.isLoadingData) {\n                const unresolved = me.assignmentStore?.storage.findItem('event', null);\n                if (unresolved) {\n                    // To avoid n² iterations over raw assignments we cache them by raw eventId, which saves us\n                    // some iterations over the storage\n                    // https://github.com/bryntum/support/issues/3141\n                    const cachedAssignments = me.assignmentStore?.storage.findItem('eventId', me.id);\n                    if (cachedAssignments) {\n                        for (const assignment of cachedAssignments) {\n                            assignment.setChanged('event', me);\n                        }\n                    }\n                    else {\n                        for (const assignment of unresolved) {\n                            if (assignment.getCurrentOrProposed('event') === me.id) {\n                                assignment.setChanged('event', me);\n                            }\n                        }\n                    }\n                }\n            }\n            superProto.joinProject.call(me);\n        }\n        // Mimic how proper engine applies values\n        applyValue(useProp, key, value, skipAccessors, field) {\n            // @ts-ignore\n            if (this.project || this.recurringTimeSpan?.project) {\n                if (key === 'startDate' || key == 'duration' || key === 'endDate') {\n                    useProp = true;\n                    // Update cached value\n                    this['_' + key] = value;\n                }\n                if (skipAccessors) {\n                    useProp = false;\n                }\n            }\n            superProto.applyValue.call(this, useProp, key, value, skipAccessors, field);\n        }\n        // Catch changes from batches etc. In which case it is sometimes expected for data to be available directly\n        afterChange(toSet, wasSet, silent, fromRelationUpdate, skipAccessors) {\n            if (!this.$isCalculating && !skipAccessors) {\n                // In certain scenarios data is expected to be available of the bat, messy!\n                this.setData({\n                    startDate: this.getCurrentOrProposed('startDate'),\n                    endDate: this.getCurrentOrProposed('endDate'),\n                    duration: this.getCurrentOrProposed('duration'),\n                    durationUnit: this.getCurrentOrProposed('durationUnit')\n                });\n            }\n            superProto.afterChange.call(this, toSet, wasSet, silent, fromRelationUpdate, skipAccessors);\n        }\n        // Normalizes dates & duration\n        calculateInvalidated() {\n            const me = this;\n            const changed = me.$changed;\n            const changedStart = 'startDate' in changed;\n            const changedEnd = 'endDate' in changed;\n            const changedDuration = 'duration' in changed;\n            const { startDate, endDate, duration, keepDuration, keepStart } = changed;\n            let calculate = null;\n            // Only start changed\n            if (changedStart && !changedEnd && !changedDuration) {\n                // Also null end when nulling start (keeping duration)\n                if (startDate === null) {\n                    changed.endDate = null;\n                }\n                // Start after end without keeping duration -> move end to start\n                else if (me.hasCurrentOrProposed('endDate') && startDate > me.getCurrentOrProposed('endDate') && !keepDuration) {\n                    changed.endDate = startDate;\n                    changed.duration = 0;\n                }\n                // Start changed and we either have a duration that we want to keep or no end -> calculate end\n                else if (me.hasCurrentOrProposed('duration') && (keepDuration || !me.hasCurrentOrProposed('endDate'))) {\n                    calculate = 'endDate';\n                }\n                // Start change and we have an end already -> calculate duration\n                else if (me.hasCurrentOrProposed('endDate')) {\n                    calculate = 'duration';\n                }\n            }\n            // Only end changed\n            else if (!changedStart && changedEnd && !changedDuration) {\n                // Also null start when nulling end (keeping duration)\n                if (endDate === null) {\n                    changed.startDate = null;\n                }\n                // End before start without keeping duration -> move start to end\n                else if (me.hasCurrentOrProposed('startDate') && !keepDuration && endDate !== true && endDate < me.getCurrentOrProposed('startDate')) {\n                    changed.startDate = endDate;\n                    changed.duration = 0;\n                }\n                // End changed and we either have a duration that we want to keep or no start -> calculate start\n                else if (me.hasCurrentOrProposed('duration') && (keepDuration || !me.hasCurrentOrProposed('startDate'))) {\n                    calculate = 'startDate';\n                }\n                // End changed and we have a start already -> calculate duration\n                else if (me.hasCurrentOrProposed('startDate')) {\n                    calculate = 'duration';\n                }\n            }\n            // Only duration changed\n            else if (!changedStart && !changedEnd && changedDuration) {\n                // Also null end when nulling duration (keeping start)\n                if (duration === null) {\n                    changed.endDate = null;\n                }\n                // Duration changed and we either have a start that we want to keep or no end -> calculate end\n                else if (me.hasCurrentOrProposed('startDate') && (keepStart || !me.hasCurrentOrProposed('endDate'))) {\n                    if (keepStart && changed.duration < 0) {\n                        changed.duration = 0;\n                    }\n                    calculate = 'endDate';\n                }\n                // Duration changed and we have an end already -> calculate start\n                else if (me.hasCurrentOrProposed('endDate')) {\n                    calculate = 'startDate';\n                }\n            }\n            // Start and end change, affect duration\n            else if (changedStart && changedEnd && !changedDuration) {\n                // Both nulled, null duration\n                if (startDate === null && endDate === null) {\n                    changed.duration = null;\n                }\n                // Other cases -> calculate duration\n                else {\n                    calculate = 'duration';\n                }\n            }\n            // Start and duration change -> calculate end\n            else if (changedStart && !changedEnd && changedDuration) {\n                calculate = 'endDate';\n            }\n            // End and duration changed -> calculate start\n            else if (!changedStart && changedEnd && changedDuration) {\n                calculate = 'startDate';\n            }\n            // All changed -> calculate whichever is null or by default end to be sure things add up\n            else if (changedStart && changedEnd && changedDuration) {\n                if (duration == null) {\n                    calculate = 'duration';\n                }\n                else if (startDate == null) {\n                    calculate = 'startDate';\n                }\n                else {\n                    calculate = 'endDate';\n                }\n            }\n            // Normalize if needed\n            const currentOrProposedStartDate = me.getCurrentOrProposed('startDate');\n            const currentOrProposedEndDate = me.getCurrentOrProposed('endDate');\n            const currentOrProposedDuration = me.getCurrentOrProposed('duration');\n            const currentOrProposedDurationUnit = me.getCurrentOrProposed('durationUnit');\n            let hourDuration, targetDuration;\n            switch (calculate) {\n                case 'startDate':\n                    changed.startDate = DateHelper.add(currentOrProposedEndDate, -currentOrProposedDuration, currentOrProposedDurationUnit);\n                    break;\n                case 'endDate':\n                    // convert proposed duration to hours to safely add over DST\n                    hourDuration = DateHelper.as('hour', currentOrProposedDuration, currentOrProposedDurationUnit);\n                    // convert calculated duration to task duration in task duration unit\n                    targetDuration = DateHelper.as(currentOrProposedDurationUnit, hourDuration, 'h');\n                    changed.endDate = DateHelper.add(currentOrProposedStartDate, targetDuration, currentOrProposedDurationUnit);\n                    break;\n                case 'duration':\n                    // convert proposed duration to hours to safely add over DST\n                    hourDuration = DateHelper.diff(currentOrProposedStartDate, currentOrProposedEndDate, 'h');\n                    // convert calculated duration to task duration in task duration unit\n                    changed.duration = DateHelper.as(currentOrProposedDurationUnit, hourDuration, 'h');\n                    break;\n            }\n            if ('startDate' in changed && changed.startDate !== true)\n                this._startDate = changed.startDate;\n            if ('endDate' in changed && changed.endDate !== true)\n                this._endDate = changed.endDate;\n            if ('duration' in changed && changed.duration !== true)\n                this._duration = changed.duration;\n            delete changed.keepDuration;\n            delete changed.keepStart;\n        }\n    }\n    return CoreEventMixin;\n}) {\n}\n","import { Mixin } from \"../../../../ChronoGraph/class/BetterMixin.js\";\nimport { CorePartOfProjectModelMixin } from \"../mixin/CorePartOfProjectModelMixin.js\";\n/**\n * Core resource model class.\n */\nexport class CoreResourceMixin extends Mixin([CorePartOfProjectModelMixin], (base) => {\n    const superProto = base.prototype;\n    class CoreResourceMixin extends base {\n        get assigned() {\n            return this.project?.assignmentStore.getResourcesAssignments(this);\n        }\n        joinProject() {\n            // Set up assignment -> resource mapping when joining store after assignment (skip during load)\n            // (note that there is no resourceStore yet when loading inline data, thus the first part of the condition)\n            if (this.resourceStore && !this.resourceStore.isLoadingData) {\n                this.assignmentStore?.query(a => a.get('resource') === this.id).forEach(unresolved => unresolved.setChanged('resource', this));\n            }\n            superProto.joinProject.call(this);\n        }\n        leaveProject(isReplacing = false) {\n            // `this.assigned` will be empty if model is added to project and then removed immediately\n            // w/o any propagations\n            // when replacing a resource, the assignments should be left intact\n            if (this.assigned && !isReplacing) {\n                const resourceStore = this.resourceStore;\n                // to batch the assignments removal, we don't remove the assignments right away, but instead\n                // add them for the batched removal to the `assignmentsForRemoval` property of the event store\n                this.assigned.forEach(assignment => resourceStore.assignmentsForRemoval.add(assignment));\n            }\n            superProto.leaveProject.call(this);\n        }\n        applyValue(useProp, key, value, skipAccessor, field) {\n            // Changing id on a resource should update resourceId on its assignments\n            // (note that field might not exist, if user supplies data for undefined fields)\n            if (field?.name === 'id') {\n                this.assigned.forEach(assignment => {\n                    assignment.set('resourceId', value);\n                });\n            }\n            superProto.applyValue.call(this, useProp, key, value, skipAccessor, field);\n        }\n    }\n    return CoreResourceMixin;\n}) {\n}\n","import { Mixin, isInstanceOf } from \"../../../../ChronoGraph/class/BetterMixin.js\";\nimport { CorePartOfProjectModelMixin } from \"../mixin/CorePartOfProjectModelMixin.js\";\nimport { CoreEventMixin } from \"./CoreEventMixin.js\";\nimport { CoreResourceMixin } from \"./CoreResourceMixin.js\";\n/**\n * Core assignment model class. It just contains references to the [[CoreEventMixin|event]] and [[CoreResourceMixin|resource]] being assigned.\n */\nexport class CoreAssignmentMixin extends Mixin([CorePartOfProjectModelMixin], (base) => {\n    const superProto = base.prototype;\n    class CoreAssignmentMixin extends base {\n        // Fields declared in the Model way, existing decorators all assume ChronoGraph is used\n        static get fields() {\n            return [\n                // isEqual required to properly detect changed resource / event\n                { name: 'resource', isEqual: (a, b) => a === b, persist: false },\n                { name: 'event', isEqual: (a, b) => a === b, persist: false }\n            ];\n        }\n        // Resolve early + update indices to have buckets ready before commit\n        setChanged(field, value, invalidate) {\n            const { assignmentStore, eventStore, resourceStore, project } = this;\n            let update = false;\n            if (field === 'event') {\n                const event = isInstanceOf(value, CoreEventMixin) ? value : eventStore?.$master.getById(value);\n                if (event)\n                    update = true;\n                value = event || value;\n            }\n            if (field === 'resource') {\n                const resource = isInstanceOf(value, CoreResourceMixin) ? value : resourceStore?.$master.getById(value);\n                if (resource)\n                    update = true;\n                value = resource || value;\n            }\n            // Passing true as last arg, bucket expected to work before commit\n            superProto.setChanged.call(this, field, value, invalidate, true);\n            // Update on resolve, if this is a single operation and record is part of project (might be standalone record)\n            if (assignmentStore && update && !project.isPerformingCommit && !assignmentStore.isLoadingData && !resourceStore.isLoadingData && !assignmentStore.skipInvalidateIndices) {\n                assignmentStore.invalidateIndices();\n            }\n        }\n        // Resolve event and resource when joining project\n        joinProject() {\n            superProto.joinProject.call(this);\n            this.setChanged('event', this.get('event'));\n            this.setChanged('resource', this.get('resource'));\n        }\n        // Resolved resource & event as part of commit\n        // Normally done earlier in setChanged, but stores might not have been available yet at that point\n        calculateInvalidated() {\n            // Changed values, should be used instead of current where available\n            let { event = this.event, resource = this.resource } = this.$changed;\n            if (event !== null && !(isInstanceOf(event, CoreEventMixin))) {\n                const resolved = this.eventStore?.getById(event);\n                if (resolved)\n                    this.setChanged('event', resolved, false);\n            }\n            if (resource !== null && !(isInstanceOf(resource, CoreResourceMixin))) {\n                const resolved = this.resourceStore?.getById(resource);\n                if (resolved)\n                    this.setChanged('resource', resolved, false);\n            }\n        }\n        // resourceId and eventId required to be available for new datasets\n        finalizeInvalidated(silent) {\n            const changed = this.$changed;\n            if ('resource' in changed) {\n                changed.resourceId = changed.resource?.isModel ? changed.resource.id : changed.resource;\n            }\n            if ('event' in changed) {\n                changed.eventId = changed.event?.isModel ? changed.event.id : changed.event;\n            }\n            superProto.finalizeInvalidated.call(this, silent);\n        }\n        //region Event\n        set event(event) {\n            this.setChanged('event', event);\n        }\n        get event() {\n            const event = this.get('event');\n            // Engine returns null instead of id when unresolved\n            return event?.id != null ? event : null;\n        }\n        //endregion\n        //region Resource\n        set resource(resource) {\n            this.setChanged('resource', resource);\n        }\n        get resource() {\n            const resource = this.get('resource');\n            // Engine returns null instead of id when unresolved\n            return resource?.id != null ? resource : null;\n        }\n    }\n    return CoreAssignmentMixin;\n}) {\n}\n","import { Mixin } from \"../../../../ChronoGraph/class/BetterMixin.js\";\nimport { CorePartOfProjectGenericMixin } from \"../../CorePartOfProjectGenericMixin.js\";\nimport Store from \"../../../../Core/data/Store.js\";\nimport { AbstractPartOfProjectStoreMixin } from \"./AbstractPartOfProjectStoreMixin.js\";\n/**\n * This a mixin for every Store, that belongs to a scheduler_core project.\n */\nexport class CorePartOfProjectStoreMixin extends Mixin([\n    AbstractPartOfProjectStoreMixin,\n    CorePartOfProjectGenericMixin,\n    Store\n], (base) => {\n    const superProto = base.prototype;\n    class CorePartOfProjectStoreMixin extends base {\n        setProject(project) {\n            const result = superProto.setProject.call(this, project);\n            if (project)\n                this.joinProject(project);\n            return result;\n        }\n        joinProject(project) { }\n        onCommitAsync() { }\n    }\n    return CorePartOfProjectStoreMixin;\n}) {\n}\n","import { CoreAssignmentMixin } from \"../model/scheduler_core/CoreAssignmentMixin.js\";\nimport { Mixin } from \"../../../ChronoGraph/class/BetterMixin.js\";\nimport { CorePartOfProjectStoreMixin } from \"./mixin/CorePartOfProjectStoreMixin.js\";\nimport { AbstractAssignmentStoreMixin } from \"./AbstractAssignmentStoreMixin.js\";\nconst emptySet = new Set();\n/**\n * A store mixin class, that represent collection of all assignments in the [[SchedulerCoreProjectMixin|project]].\n */\nexport class CoreAssignmentStoreMixin extends Mixin([AbstractAssignmentStoreMixin, CorePartOfProjectStoreMixin], (base) => {\n    const superProto = base.prototype;\n    class CoreAssignmentStoreMixin extends base {\n        constructor() {\n            super(...arguments);\n            this.skipInvalidateIndices = false;\n        }\n        static get defaultConfig() {\n            return {\n                modelClass: CoreAssignmentMixin,\n                storage: {\n                    extraKeys: [\n                        { property: 'event', unique: false },\n                        { property: 'resource', unique: false },\n                        { property: 'eventId', unique: false }\n                    ]\n                }\n            };\n        }\n        set data(value) {\n            this.allAssignmentsForRemoval = true;\n            super.data = value;\n            this.allAssignmentsForRemoval = false;\n        }\n        getEventsAssignments(event) {\n            return this.storage.findItem('event', event, true) || emptySet;\n        }\n        getResourcesAssignments(resource) {\n            return this.storage.findItem('resource', resource.$original, true) || emptySet;\n        }\n        updateIndices() {\n            this.storage.rebuildIndices();\n        }\n        invalidateIndices() {\n            this.storage.invalidateIndices();\n        }\n        afterLoadData() {\n            this.eventStore && this.linkAssignments(this.eventStore, 'event');\n            this.resourceStore && this.linkAssignments(this.resourceStore, 'resource');\n        }\n        // Link events/resources to assignments, called when those stores are populated or joined to project\n        linkAssignments(store, modelName) {\n            // If we are passed a chained store, the ultimate source of truth is the masterStore\n            store = store.masterStore || store;\n            const unresolved = this.count && this.storage.findItem(modelName, null, true);\n            if (unresolved) {\n                for (const assignment of unresolved) {\n                    const record = store.getById(assignment.getCurrentOrProposed(modelName));\n                    if (record)\n                        assignment.setChanged(modelName, record);\n                }\n                this.invalidateIndices();\n            }\n        }\n        // Unlink events/resources from assignments, called when those stores are cleared\n        unlinkAssignments(modelName) {\n            // Invalidate links to events/resources, need to link to new records so set it back to the id (might be resource or resourceId)\n            // As assignment.resource returns null if it's an id, need to check for that in data\n            this.forEach(assignment => assignment.setChanged(modelName, assignment[modelName]?.id ?? assignment?.getData(modelName) ?? assignment[modelName + 'Id']));\n            this.invalidateIndices();\n        }\n        onCommitAsync() {\n            this.updateIndices();\n        }\n    }\n    return CoreAssignmentStoreMixin;\n}) {\n}\n","import { CorePartOfProjectModelMixin } from '../mixin/CorePartOfProjectModelMixin.js';\nimport { Mixin } from \"../../../../ChronoGraph/class/BetterMixin.js\";\nimport { AbstractCalendarMixin } from \"../AbstractCalendarMixin.js\";\n/**\n * The calendar for project scheduling, it is used to mark certain time intervals as \"non-working\" and ignore them during scheduling.\n *\n * The calendar consists from several [[CalendarIntervalMixin|intervals]]. The intervals can be either static or recurrent.\n */\nexport class CoreCalendarMixin extends Mixin([AbstractCalendarMixin, CorePartOfProjectModelMixin], (base) => {\n    const superProto = base.prototype;\n    class CoreCalendarMixin extends base {\n    }\n    return CoreCalendarMixin;\n}) {\n}\n","import { Mixin } from \"../../../ChronoGraph/class/BetterMixin.js\";\nimport { CorePartOfProjectStoreMixin } from './mixin/CorePartOfProjectStoreMixin.js';\nimport { CoreCalendarMixin } from '../model/scheduler_core/CoreCalendarMixin.js';\nimport { AbstractCalendarManagerStoreMixin } from \"./AbstractCalendarManagerStoreMixin.js\";\n/**\n * A store mixin class, that represent collection of all calendars in the [[SchedulerCoreProjectMixin|project]].\n */\nexport class CoreCalendarManagerStoreMixin extends Mixin([AbstractCalendarManagerStoreMixin, CorePartOfProjectStoreMixin], (base) => {\n    const superProto = base.prototype;\n    class CoreCalendarManagerStoreMixin extends base {\n        static get defaultConfig() {\n            return {\n                tree: true,\n                modelClass: CoreCalendarMixin\n            };\n        }\n    }\n    return CoreCalendarManagerStoreMixin;\n}) {\n}\n","import { CorePartOfProjectModelMixin } from \"../mixin/CorePartOfProjectModelMixin.js\";\nimport { Mixin } from \"../../../../ChronoGraph/class/BetterMixin.js\";\nimport { CoreEventMixin } from \"./CoreEventMixin.js\";\nimport { isInstanceOf } from '../../../../ChronoGraph/class/Mixin.js';\nexport class CoreDependencyMixin extends Mixin([CorePartOfProjectModelMixin], (base) => {\n    const superProto = base.prototype;\n    class CoreDependencyMixin extends base {\n        static get fields() {\n            return [\n                { name: 'fromEvent', isEqual: (a, b) => a === b, persist: false },\n                { name: 'toEvent', isEqual: (a, b) => a === b, persist: false }\n            ];\n        }\n        // Resolve early + update indices to have buckets ready before commit\n        setChanged(field, value, invalidate) {\n            let update = false;\n            if (field === 'fromEvent' || field === 'toEvent') {\n                const event = isInstanceOf(value, CoreEventMixin) ? value : this.eventStore?.getById(value);\n                if (event)\n                    update = true;\n                value = event || value;\n            }\n            superProto.setChanged.call(this, field, value, invalidate, true);\n            if (update && !this.project.isPerformingCommit && !this.dependencyStore?.isLoadingData) {\n                // TODO: Improve Collection indexing to handle smaller updates\n                this.dependencyStore?.invalidateIndices();\n            }\n        }\n        // Resolve events when joining project\n        joinProject() {\n            superProto.joinProject.call(this);\n            // Initial values should be considered changed, to be normalized\n            // (needs to pass through setChanged for early normalization expected for buckets)\n            this.setChanged('fromEvent', this.get('fromEvent'));\n            this.setChanged('toEvent', this.get('toEvent'));\n        }\n        // Resolved events as part of commit\n        // Normally done earlier in setChanged, but stores might not have been available yet at that point\n        calculateInvalidated() {\n            // Changed values, should be used instead of current where available\n            let { fromEvent, toEvent } = this.$changed;\n            if (fromEvent !== null && !(isInstanceOf(fromEvent, CoreEventMixin))) {\n                const resolved = this.eventStore?.getById(fromEvent);\n                if (resolved)\n                    this.$changed.fromEvent = resolved;\n            }\n            if (toEvent !== null && !(isInstanceOf(toEvent, CoreEventMixin))) {\n                const resolved = this.eventStore?.getById(toEvent);\n                if (resolved)\n                    this.$changed.toEvent = resolved;\n            }\n        }\n        //region Events\n        // Not using \"propose\" mechanism from CoreEventMixin, because buckets are expected to be up to date right away\n        set fromEvent(fromEvent) {\n            this.setChanged('fromEvent', fromEvent);\n        }\n        get fromEvent() {\n            const fromEvent = this.get('fromEvent');\n            // Engine returns null instead of id when unresolved\n            return fromEvent?.id != null ? fromEvent : null;\n        }\n        set toEvent(toEvent) {\n            this.setChanged('toEvent', toEvent);\n        }\n        get toEvent() {\n            const toEvent = this.get('toEvent');\n            // Engine returns null instead of id when unresolved\n            return toEvent?.id != null ? toEvent : null;\n        }\n    }\n    return CoreDependencyMixin;\n}) {\n}\n","import { Mixin } from \"../../../ChronoGraph/class/BetterMixin.js\";\nimport { CorePartOfProjectStoreMixin } from \"./mixin/CorePartOfProjectStoreMixin.js\";\nimport { CoreDependencyMixin } from \"../model/scheduler_core/CoreDependencyMixin.js\";\nimport { AbstractDependencyStoreMixin } from \"./AbstractDependencyStoreMixin.js\";\nconst emptySet = new Set();\n/**\n * A store mixin class, that represent collection of all dependencies in the [[SchedulerCoreProjectMixin|project]].\n */\nexport class CoreDependencyStoreMixin extends Mixin([AbstractDependencyStoreMixin, CorePartOfProjectStoreMixin], (base) => {\n    const superProto = base.prototype;\n    class CoreDependencyStoreMixin extends base {\n        constructor() {\n            super(...arguments);\n            this.dependenciesForRemoval = new Set();\n            this.allDependenciesForRemoval = false;\n        }\n        static get defaultConfig() {\n            return {\n                modelClass: CoreDependencyMixin,\n                storage: {\n                    extraKeys: [\n                        { property: 'fromEvent', unique: false },\n                        { property: 'toEvent', unique: false }\n                    ]\n                }\n            };\n        }\n        getIncomingDepsForEvent(event) {\n            return this.storage.findItem('toEvent', event) || emptySet;\n        }\n        getOutgoingDepsForEvent(event) {\n            return this.storage.findItem('fromEvent', event) || emptySet;\n        }\n        set data(value) {\n            this.allDependenciesForRemoval = true;\n            super.data = value;\n            this.allDependenciesForRemoval = false;\n        }\n        updateIndices() {\n            this.storage.rebuildIndices();\n        }\n        invalidateIndices() {\n            this.storage.invalidateIndices();\n        }\n        onCommitAsync() {\n            this.updateIndices();\n        }\n    }\n    return CoreDependencyStoreMixin;\n}) {\n}\n","import { Mixin } from \"../../../../ChronoGraph/class/BetterMixin.js\";\nimport { CoreEventMixin } from \"./CoreEventMixin.js\";\nimport ObjectHelper from \"../../../../Core/helper/ObjectHelper.js\";\nimport { AbstractHasAssignmentsMixin } from '../AbstractHasAssignmentsMixin.js';\n/**\n * This is a mixin, which can be applied to the [[CoreEventMixin]]. It provides the collection of all assignments,\n * which reference this event.\n *\n * Doesn't affect scheduling.\n */\nexport class CoreHasAssignmentsMixin extends Mixin([CoreEventMixin, AbstractHasAssignmentsMixin], (base) => {\n    const superProto = base.prototype;\n    class CoreHasAssignmentsMixin extends base {\n        get assigned() {\n            return this.project?.assignmentStore.getEventsAssignments(this) ?? this.$cachedAssignments;\n        }\n        leaveProject(isReplacing = false) {\n            // Expected to still be able to return assignments when removed from project\n            this.$cachedAssignments = this.assigned;\n            super.leaveProject(isReplacing);\n        }\n        applyValue(useProp, key, value, skipAccessor, field) {\n            // Changing id on an event should update resourceId on its assignments\n            if (key === 'id') {\n                this.assigned?.forEach(assignment => assignment.set('eventId', value));\n            }\n            superProto.applyValue.call(this, useProp, key, value, skipAccessor, field);\n        }\n        copy(newId = null, deep = null) {\n            const copy = superProto.copy.call(this, newId, deep);\n            // If deep is everything but object - use default behavior, which is to invoke accessors\n            // If deep is an object, check if it has certain field disabled\n            if ((ObjectHelper.isObject(deep) && !deep.skipFieldIdentifiers) || !ObjectHelper.isObject(deep)) {\n                // Copy current assignments, used for occurrences\n                copy.$cachedAssignments = this.assigned;\n            }\n            return copy;\n        }\n    }\n    return CoreHasAssignmentsMixin;\n}) {\n}\n","import { Mixin } from \"../../../../ChronoGraph/class/BetterMixin.js\";\nimport { CoreEventMixin } from \"./CoreEventMixin.js\";\n/**\n * This is a mixin, which can be applied to the [[CoreEventMixin]]. It provides the collection of all dependencies,\n * which reference this event.\n *\n * Doesn't affect scheduling.\n */\nexport class CoreHasDependenciesMixin extends Mixin([CoreEventMixin], (base) => {\n    const superProto = base.prototype;\n    class CoreHasDependenciesMixin extends base {\n        get outgoingDeps() {\n            return this.project.dependencyStore.getOutgoingDepsForEvent(this);\n        }\n        get incomingDeps() {\n            return this.project.dependencyStore.getIncomingDepsForEvent(this);\n        }\n        leaveProject() {\n            const eventStore = this.eventStore;\n            // the buckets may be empty if a model is removed from the project immediately after adding\n            // (without propagation)\n            if (this.outgoingDeps) {\n                this.outgoingDeps.forEach(dependency => eventStore.dependenciesForRemoval.add(dependency));\n            }\n            if (this.incomingDeps) {\n                this.incomingDeps.forEach(dependency => eventStore.dependenciesForRemoval.add(dependency));\n            }\n            superProto.leaveProject.call(this);\n        }\n    }\n    return CoreHasDependenciesMixin;\n}) {\n}\n","import { Mixin } from '../../../../ChronoGraph/class/BetterMixin.js';\nimport { CoreEventMixin } from './CoreEventMixin.js';\nimport { CoreHasAssignmentsMixin } from \"./CoreHasAssignmentsMixin.js\";\nimport { CoreHasDependenciesMixin } from './CoreHasDependenciesMixin.js';\n/**\n * This is an event class, [[SchedulerCoreProjectMixin]] is working with.\n * It is constructed as [[CoreEventMixin]], enhanced with [[CoreHasAssignmentsMixin]] and [[CoreHasDependenciesMixin]]\n */\nexport class SchedulerCoreEvent extends Mixin([\n    CoreEventMixin,\n    CoreHasAssignmentsMixin,\n    CoreHasDependenciesMixin\n], (base) => {\n    const superProto = base.prototype;\n    class SchedulerCoreEvent extends base {\n    }\n    return SchedulerCoreEvent;\n}) {\n}\n","import { Mixin } from \"../../../ChronoGraph/class/BetterMixin.js\";\nimport { SchedulerCoreEvent } from \"../model/scheduler_core/SchedulerCoreEvent.js\";\nimport { CorePartOfProjectStoreMixin } from \"./mixin/CorePartOfProjectStoreMixin.js\";\nimport { AbstractEventStoreMixin } from \"./AbstractEventStoreMixin.js\";\n/**\n * A store mixin class, that represent collection of all events in the [[SchedulerCoreProjectMixin|project]].\n */\nexport class CoreEventStoreMixin extends Mixin([AbstractEventStoreMixin, CorePartOfProjectStoreMixin], (base) => {\n    const superProto = base.prototype;\n    class CoreEventStoreMixin extends base {\n        static get defaultConfig() {\n            return {\n                modelClass: SchedulerCoreEvent\n            };\n        }\n        joinProject() {\n            this.assignmentStore?.linkAssignments(this, 'event');\n        }\n        afterLoadData() {\n            this.afterEventRemoval();\n            this.assignmentStore?.linkAssignments(this, 'event');\n        }\n    }\n    return CoreEventStoreMixin;\n}) {\n}\n// /**\n//  * The tree store version of [[EventStoreMixin]].\n//  */\n// export class EventTreeStoreMixin extends Mixin(\n//     [ EventStoreMixin ],\n//     (base : AnyConstructor<EventStoreMixin, typeof EventStoreMixin>) => {\n//\n//     const superProto : InstanceType<typeof base> = base.prototype\n//\n//\n//         class EventTreeStoreMixin extends base {\n//             rootNode            : SchedulerBasicProjectMixin\n//\n//             buildRootNode () : object {\n//                 return this.getProject() || {}\n//             }\n//\n//\n//             static get defaultConfig () : object {\n//                 return {\n//                     tree        : true\n//                 }\n//             }\n//         }\n//\n//         return EventTreeStoreMixin\n//     }){}\n//\n","import { Mixin } from \"../../../ChronoGraph/class/BetterMixin.js\";\nimport { CorePartOfProjectStoreMixin } from \"./mixin/CorePartOfProjectStoreMixin.js\";\nimport { CoreResourceMixin } from \"../model/scheduler_core/CoreResourceMixin.js\";\nimport { AbstractResourceStoreMixin } from \"./AbstractResourceStoreMixin.js\";\n/**\n * A store mixin class, that represent collection of all resources in the [[SchedulerCoreProjectMixin|project]].\n */\nexport class CoreResourceStoreMixin extends Mixin([AbstractResourceStoreMixin, CorePartOfProjectStoreMixin], (base) => {\n    const superProto = base.prototype;\n    class CoreResourceStoreMixin extends base {\n        static get defaultConfig() {\n            return {\n                modelClass: CoreResourceMixin\n            };\n        }\n        joinProject() {\n            this.assignmentStore?.linkAssignments(this, 'resource');\n        }\n        afterLoadData() {\n            this.assignmentStore?.linkAssignments(this, 'resource');\n        }\n        clear(removing) {\n            superProto.clear.call(this, removing);\n            this.assignmentStore?.unlinkAssignments('resource');\n        }\n    }\n    return CoreResourceStoreMixin;\n}) {\n}\n","import { Mixin } from \"../../../ChronoGraph/class/BetterMixin.js\";\nimport Delayable from \"../../../Core/mixin/Delayable.js\";\nimport Events from \"../../../Core/mixin/Events.js\";\nimport Model from \"../../../Core/data/Model.js\";\nexport class EventsWrapper extends Mixin([], Events) {\n}\nexport class DelayableWrapper extends Mixin([], Delayable) {\n}\n/**\n * This is an abstract project, which just lists the available stores.\n *\n * The actual project classes are [[SchedulerCoreProjectMixin]], [[SchedulerBasicProjectMixin]],\n * [[SchedulerProProjectMixin]], [[GanttProjectMixin]].\n */\nexport class AbstractProjectMixin extends Mixin([\n    EventsWrapper,\n    DelayableWrapper,\n    Model\n], (base) => {\n    const superProto = base.prototype;\n    class AbstractProjectMixin extends base {\n        constructor() {\n            super(...arguments);\n            // this flag is set, when we are \"restoring\" the data from the rejected transaction and stm is disabled\n            // this involves removing the records added in that transaction (and adding removed records back, which is TODO)\n            // normally, stm is used for that, however, it might be disabled\n            this.isRestoringData = false;\n        }\n        get isRepopulatingStores() {\n            return false;\n        }\n        get isInitialCommit() {\n            return !this.isInitialCommitPerformed || this.hasLoadedDataToCommit;\n        }\n        construct(config = {}) {\n            // Define default values for these flags here\n            // if defined where declared then TS compiles them this way:\n            // constructor() {\n            //     super(...arguments)\n            //     this.isInitialCommitPerformed   = false\n            //     this.isLoadingInlineData        = false\n            //     this.isWritingData              = false\n            //\n            // }\n            // which messes the flags values for inline data loading (since it's async)\n            this.isInitialCommitPerformed = false;\n            this.isLoadingInlineData = false;\n            this.isWritingData = false;\n            this.hasLoadedDataToCommit = false;\n            const silenceInitialCommit = ('silenceInitialCommit' in config) ? config.silenceInitialCommit : true;\n            const adjustDurationToDST = ('adjustDurationToDST' in config) ? config.adjustDurationToDST : false;\n            // 5 years roughly === 5 * 365 * 24 * 60 * 60 * 1000\n            this.maxCalendarRange = ('maxCalendarRange' in config) ? config.maxCalendarRange : 157680000000;\n            // delete configs otherwise super.construct() call treat them as fields and makes accessors for them\n            delete config.maxCalendarRange;\n            delete config.silenceInitialCommit;\n            delete config.adjustDurationToDST;\n            superProto.construct.call(this, config);\n            this.silenceInitialCommit = silenceInitialCommit;\n            this.adjustDurationToDST = adjustDurationToDST;\n        }\n        // Template method called when a stores dataset is replaced. Implemented in SchedulerBasicProjectMixin\n        repopulateStore(store) { }\n        // Template method called when replica should be repopulated. Implemented in SchedulerBasicProjectMixin\n        repopulateReplica() { }\n        deferUntilRepopulationIfNeeded(deferId, func, args) {\n            // no deferring at this level (happens in projects using engine)\n            func(...args);\n        }\n        // Template method called when a store is attached to the project\n        attachStore(store) { }\n        // Template method called when a store is detached to the project\n        detachStore(store) { }\n        async commitAsync() {\n            throw new Error(\"Abstract method called\");\n        }\n        // Different implementations for Core and Basic engines\n        isEngineReady() {\n            throw new Error(\"Abstract method called\");\n        }\n        getStm() {\n            throw new Error(\"Abstract method called\");\n        }\n    }\n    return AbstractProjectMixin;\n}) {\n}\n","import { Mixin } from \"../../../../ChronoGraph/class/BetterMixin.js\";\nimport { SchedulerCoreEvent } from \"./SchedulerCoreEvent.js\";\nimport Store from \"../../../../Core/data/Store.js\";\nimport Model from \"../../../../Core/data/Model.js\";\nimport Delayable from \"../../../../Core/mixin/Delayable.js\";\nimport { CoreEventStoreMixin } from \"../../store/CoreEventStoreMixin.js\";\nimport { CoreAssignmentMixin } from \"./CoreAssignmentMixin.js\";\nimport { CoreAssignmentStoreMixin } from \"../../store/CoreAssignmentStoreMixin.js\";\nimport { CoreResourceMixin } from \"./CoreResourceMixin.js\";\nimport { CoreResourceStoreMixin } from \"../../store/CoreResourceStoreMixin.js\";\nimport { CorePartOfProjectGenericMixin } from \"../../CorePartOfProjectGenericMixin.js\";\nimport { CoreDependencyStoreMixin } from \"../../store/CoreDependencyStoreMixin.js\";\nimport { CoreDependencyMixin } from \"./CoreDependencyMixin.js\";\nimport { CoreCalendarMixin } from './CoreCalendarMixin.js';\nimport { CoreCalendarManagerStoreMixin } from '../../store/CoreCalendarManagerStoreMixin.js';\nimport { delay } from \"../../../util/Functions.js\";\nimport StateTrackingManager from \"../../../../Core/data/stm/StateTrackingManager.js\";\nimport { AbstractProjectMixin } from \"../AbstractProjectMixin.js\";\nimport ObjectHelper from \"../../../../Core/helper/ObjectHelper.js\";\nexport class DelayableWrapper extends Mixin([], Delayable) {\n}\n/**\n * This is a project, implementing _basic scheduling_ as [[SchedulerBasicProjectMixin]] does.\n * Yet this class does not use _chronograph_ based engine.\n */\nexport class SchedulerCoreProjectMixin extends Mixin([\n    AbstractProjectMixin,\n    CorePartOfProjectGenericMixin,\n    DelayableWrapper,\n    Model\n], (base) => {\n    const superProto = base.prototype;\n    class SchedulerCoreProjectMixin extends base {\n        static get configurable() {\n            return {\n                stm: {},\n                eventStore: {},\n                assignmentStore: {},\n                resourceStore: {},\n                dependencyStore: {},\n                calendarManagerStore: {},\n                eventModelClass: SchedulerCoreEvent,\n                assignmentModelClass: CoreAssignmentMixin,\n                resourceModelClass: CoreResourceMixin,\n                dependencyModelClass: CoreDependencyMixin,\n                calendarModelClass: CoreCalendarMixin,\n                eventStoreClass: CoreEventStoreMixin,\n                assignmentStoreClass: CoreAssignmentStoreMixin,\n                resourceStoreClass: CoreResourceStoreMixin,\n                dependencyStoreClass: CoreDependencyStoreMixin,\n                calendarManagerStoreClass: CoreCalendarManagerStoreMixin,\n                assignmentsData: null,\n                calendarsData: null,\n                dependenciesData: null,\n                eventsData: null,\n                resourcesData: null\n            };\n        }\n        //endregion\n        //region Init\n        construct(config = {}) {\n            const me = this;\n            // Cannot be created with declaration, because of how TS is compiled to JS. Ends up after `construct()`\n            me.$invalidated = new Set();\n            // Define default values for these flags here\n            // if defined where declared then TS compiles them this way:\n            // constructor() {\n            //     super(...arguments)\n            //     this.isPerformingCommit   = false\n            //     this.silenceInitialCommit = true\n            //     this.ongoing              = Promise.resolve()\n            // }\n            // which messes the flags values for inline data loading (since it's async)\n            me.isPerformingCommit = false;\n            me.silenceInitialCommit = true;\n            me.ongoing = Promise.resolve();\n            if (config.eventStore && !config.assignmentStore) {\n                const eventStore = config.eventStore.masterStore || config.eventStore;\n                // In this case we must ingest the assignment store from the eventStore. Chaining it to not accidentally\n                // destroy the original store\n                if (eventStore.assignmentStore?.isAssignmentStore) {\n                    config.assignmentStore = eventStore.assignmentStore;\n                    me.isSharingAssignmentStore = true;\n                }\n            }\n            superProto.construct.call(me, config);\n            // not part of the CalendarManagerStore intentionally, not persisted\n            me.defaultCalendar = new me.calendarManagerStore.modelClass({\n                unspecifiedTimeIsWorking: me.unspecifiedTimeIsWorking\n            });\n            me.defaultCalendar.project = me;\n            const { calendarsData, eventsData, dependenciesData, resourcesData, assignmentsData } = me;\n            const hasInlineData = Boolean(calendarsData || eventsData || dependenciesData || resourcesData || assignmentsData);\n            if (hasInlineData) {\n                me.loadInlineData({\n                    calendarsData,\n                    eventsData,\n                    dependenciesData,\n                    resourcesData,\n                    assignmentsData\n                });\n                delete me.calendarsData;\n                delete me.eventsData;\n                delete me.dependenciesData;\n                delete me.resourcesData;\n                delete me.assignmentsData;\n            }\n            else {\n                // Trigger initial commit\n                me.bufferedCommitAsync();\n            }\n        }\n        doDestroy() {\n            const me = this;\n            me.eventStore?.destroy();\n            me.dependencyStore?.destroy();\n            me.assignmentStore?.destroy();\n            me.resourceStore?.destroy();\n            me.calendarManagerStore?.destroy();\n            me.defaultCalendar.destroy();\n            me.stm?.destroy();\n            superProto.doDestroy.call(this);\n        }\n        /**\n         * This method loads the \"raw\" data into the project. The loading is basically happening by\n         * assigning the individual data entries to the `data` property of the corresponding store.\n         *\n         * @param data\n         */\n        async loadInlineData(data) {\n            const me = this;\n            me.isLoadingInlineData = true;\n            if (data.calendarsData) {\n                me.calendarManagerStore.data = data.calendarsData;\n            }\n            if (data.resourcesData) {\n                me.resourceStore.data = data.resourcesData;\n            }\n            if (data.assignmentsData) {\n                me.assignmentStore.data = data.assignmentsData;\n            }\n            if (data.eventsData) {\n                me.eventStore.data = data.eventsData;\n            }\n            if (data.tasksData) {\n                me.eventStore.data = data.tasksData;\n            }\n            if (data.dependenciesData) {\n                me.dependencyStore.data = data.dependenciesData;\n            }\n            await me.commitLoad();\n            me.isLoadingInlineData = false;\n            return;\n        }\n        //endregion\n        //region Join\n        async commitLoad() {\n            await this.commitAsync();\n            // Might have been destroyed during the async operation above\n            if (!this.isDestroyed)\n                this.trigger('load');\n        }\n        joinStoreRecords(store) {\n            const fn = (record) => {\n                record.setProject(this);\n                record.joinProject();\n            };\n            if (store.rootNode) {\n                store.rootNode.traverse(fn);\n            }\n            else {\n                store.forEach(fn);\n            }\n        }\n        unJoinStoreRecords(store) {\n            const fn = (record) => {\n                record.leaveProject();\n                record.setProject(this);\n            };\n            if (store.rootNode) {\n                store.rootNode.traverse(node => {\n                    // do not unjoin/leave project for the root node, which is the project itself\n                    if (node !== store.rootNode)\n                        fn(node);\n                });\n            }\n            else {\n                store.forEach(fn);\n            }\n        }\n        //endregion\n        //region EventStore\n        resolveStoreAndModelClass(name, config) {\n            // storeClass from supplied config or our properties\n            const storeClass = config?.storeClass || this[`${name}StoreClass`];\n            // modelClass from supplied config\n            let modelClass = config?.modelClass;\n            if (!modelClass) {\n                // or from storeClass.modelClass if customized\n                // @ts-ignore\n                if (this.getDefaultConfiguration()[`${name}ModelClass`] !== storeClass.getDefaultConfiguration().modelClass) {\n                    modelClass = storeClass.getDefaultConfiguration().modelClass;\n                }\n                // and if none of the above, use from our properties\n                else {\n                    modelClass = this[`${name}ModelClass`];\n                }\n            }\n            return { storeClass, modelClass };\n        }\n        setEventStore(eventStore) {\n            this.eventStore = eventStore;\n        }\n        changeEventStore(eventStore, oldStore) {\n            const me = this, { stm } = me;\n            me.detachStore(oldStore);\n            if (!(eventStore instanceof Store)) {\n                const { storeClass, modelClass } = me.resolveStoreAndModelClass('event', eventStore);\n                eventStore = new storeClass(ObjectHelper.assign({\n                    modelClass,\n                    project: me,\n                    stm\n                }, eventStore));\n            }\n            else {\n                eventStore.project = me;\n                stm.addStore(eventStore);\n                me.joinStoreRecords(eventStore);\n            }\n            if (oldStore && stm.hasStore(oldStore)) {\n                stm.removeStore(oldStore);\n                me.unJoinStoreRecords(oldStore);\n                const { assignmentsForRemoval } = oldStore;\n                // remap the assignment\n                assignmentsForRemoval.forEach(assignment => {\n                    const oldEvent = assignment.event;\n                    if (oldEvent) {\n                        const newEvent = eventStore.getById(oldEvent.id);\n                        if (newEvent) {\n                            assignment.event = newEvent;\n                            // keep the assignment\n                            assignmentsForRemoval.delete(assignment);\n                        }\n                    }\n                });\n                oldStore.afterEventRemoval();\n            }\n            eventStore.setProject(me);\n            return eventStore;\n        }\n        updateEventStore(eventStore, oldStore) {\n            this.attachStore(eventStore);\n            this.trigger('eventStoreChange', { store: eventStore });\n        }\n        //endregion\n        //region AssignmentStore\n        setAssignmentStore(assignmentStore) {\n            this.assignmentStore = assignmentStore;\n        }\n        changeAssignmentStore(assignmentStore, oldStore) {\n            const me = this, { stm } = me;\n            me.detachStore(oldStore);\n            if (oldStore && stm.hasStore(oldStore)) {\n                stm.removeStore(oldStore);\n                me.unJoinStoreRecords(oldStore);\n            }\n            if (!(assignmentStore instanceof Store)) {\n                const { storeClass, modelClass } = me.resolveStoreAndModelClass('assignment', assignmentStore);\n                assignmentStore = new storeClass(ObjectHelper.assign({\n                    modelClass,\n                    project: me,\n                    stm\n                }, assignmentStore));\n            }\n            else {\n                assignmentStore.project = me;\n                stm.addStore(assignmentStore);\n                me.joinStoreRecords(assignmentStore);\n            }\n            assignmentStore.setProject(me);\n            return assignmentStore;\n        }\n        updateAssignmentStore(assignmentStore, oldStore) {\n            this.attachStore(assignmentStore);\n            this.trigger('assignmentStoreChange', { store: assignmentStore });\n        }\n        //endregion\n        //region ResourceStore\n        setResourceStore(resourceStore) {\n            this.resourceStore = resourceStore;\n        }\n        changeResourceStore(resourceStore, oldStore) {\n            const me = this, { stm } = me;\n            me.detachStore(oldStore);\n            if (!(resourceStore instanceof Store)) {\n                const { storeClass, modelClass } = me.resolveStoreAndModelClass('resource', resourceStore);\n                resourceStore = new storeClass(ObjectHelper.assign({\n                    modelClass,\n                    project: me,\n                    stm\n                }, resourceStore));\n            }\n            else {\n                resourceStore.project = me;\n                stm.addStore(resourceStore);\n                me.joinStoreRecords(resourceStore);\n            }\n            if (oldStore && stm.hasStore(oldStore)) {\n                stm.removeStore(oldStore);\n                me.unJoinStoreRecords(oldStore);\n                const { assignmentsForRemoval } = oldStore;\n                // remap the assignment\n                assignmentsForRemoval.forEach(assignment => {\n                    const oldResource = assignment.resource;\n                    if (oldResource) {\n                        const newResource = resourceStore.getById(oldResource.id);\n                        if (newResource) {\n                            assignment.resource = newResource;\n                            // keep the assignment\n                            assignmentsForRemoval.delete(assignment);\n                        }\n                    }\n                });\n                oldStore.afterResourceRemoval();\n            }\n            resourceStore.setProject(me);\n            return resourceStore;\n        }\n        updateResourceStore(resourceStore, oldStore) {\n            this.attachStore(resourceStore);\n            this.trigger('resourceStoreChange', { store: resourceStore });\n        }\n        //endregion\n        //region DependencyStore\n        setDependencyStore(dependencyStore) {\n            this.dependencyStore = dependencyStore;\n        }\n        changeDependencyStore(dependencyStore, oldStore) {\n            const me = this;\n            me.detachStore(oldStore);\n            if (!(dependencyStore instanceof Store)) {\n                const { storeClass, modelClass } = me.resolveStoreAndModelClass('dependency', dependencyStore);\n                dependencyStore = new storeClass(ObjectHelper.assign({\n                    modelClass,\n                    project: me,\n                    stm: me.stm\n                }, dependencyStore));\n            }\n            else {\n                dependencyStore.project = me;\n                me.stm.addStore(dependencyStore);\n                me.joinStoreRecords(dependencyStore);\n            }\n            return dependencyStore;\n        }\n        updateDependencyStore(dependencyStore, oldStore) {\n            this.attachStore(dependencyStore);\n            this.trigger('dependencyStoreChange', { store: dependencyStore });\n        }\n        //endregion\n        //region CalendarManagerStore\n        setCalendarManagerStore(calendarManagerStore) {\n            this.calendarManagerStore = calendarManagerStore;\n        }\n        changeCalendarManagerStore(calendarManagerStore, oldStore) {\n            const me = this;\n            me.detachStore(oldStore);\n            if (!(calendarManagerStore instanceof Store)) {\n                // @ts-ignore\n                const storeClass = calendarManagerStore?.storeClass || me.calendarManagerStoreClass;\n                // @ts-ignore\n                const modelClass = calendarManagerStore?.modelClass || storeClass.getDefaultConfiguration().modelClass || me.calendarModelClass;\n                calendarManagerStore = new storeClass(ObjectHelper.assign({\n                    modelClass,\n                    project: me,\n                    stm: me.stm\n                }, calendarManagerStore));\n            }\n            else {\n                me.stm.addStore(calendarManagerStore);\n            }\n            calendarManagerStore.setProject(me);\n            return calendarManagerStore;\n        }\n        updateCalendarManagerStore(calendarManagerStore, oldStore) {\n            this.attachStore(calendarManagerStore);\n            this.trigger('calendarManagerStoreChange', { store: calendarManagerStore });\n        }\n        //endregion\n        //region Calendar\n        get calendar() {\n            return this.$calendar || this.defaultCalendar;\n        }\n        set calendar(calendar) {\n            this.$calendar = calendar;\n        }\n        get effectiveCalendar() {\n            return this.calendar;\n        }\n        //endregion\n        //region Add records\n        async addEvent(event) {\n            this.eventStore.add(event);\n            return this.commitAsync();\n        }\n        async addAssignment(assignment) {\n            this.assignmentStore.add(assignment);\n            return this.commitAsync();\n        }\n        async addResource(resource) {\n            this.resourceStore.add(resource);\n            return this.commitAsync();\n        }\n        async addDependency(dependency) {\n            this.dependencyStore.add(dependency);\n            return this.commitAsync();\n        }\n        //endregion\n        //region Auto commit\n        // Buffer commitAsync using setTimeout. Not using `buffer` on purpose, for performance reasons and to better\n        // mimic how graph does it\n        bufferedCommitAsync() {\n            if (!this.hasPendingAutoCommit) {\n                this.setTimeout({\n                    fn: 'commitAsync',\n                    delay: 10\n                });\n            }\n        }\n        get hasPendingAutoCommit() {\n            return this.hasTimeout('commitAsync');\n        }\n        unScheduleAutoCommit() {\n            this.clearTimeout('commitAsync');\n        }\n        //endregion\n        //region Commit\n        async commitAsync() {\n            if (this.isPerformingCommit)\n                return this.ongoing;\n            return this.ongoing = this.doCommitAsync();\n        }\n        async doCommitAsync() {\n            const me = this;\n            me.isPerformingCommit = true;\n            // Cancel any outstanding commit\n            me.unScheduleAutoCommit();\n            await delay(0);\n            if (!me.isDestroyed) {\n                // Calculate all invalidated records, updates their data silently\n                for (const record of me.$invalidated) {\n                    record.calculateInvalidated();\n                }\n                const { isInitialCommit, silenceInitialCommit } = me;\n                // apply changes silently if this is initial commit and \"silenceInitialCommit\" option is enabled\n                const silenceCommit = isInitialCommit && silenceInitialCommit;\n                // Notify stores that care about commit (internal)\n                me.assignmentStore.onCommitAsync();\n                me.dependencyStore.onCommitAsync();\n                me.isInitialCommitPerformed = true;\n                me.hasLoadedDataToCommit = false;\n                me.isPerformingCommit = false;\n                const stores = [me.assignmentStore, me.dependencyStore, me.eventStore, me.resourceStore, me.calendarManagerStore];\n                stores.forEach(store => store.suspendAutoCommit?.());\n                me.isWritingData = true;\n                // \"Real\" project triggers refresh before data is written back to records\n                me.trigger('refresh', { isInitialCommit, isCalculated: true });\n                // If we are not announcing changes, take a cheaper path\n                if (silenceCommit) {\n                    for (const record of me.$invalidated) {\n                        record.finalizeInvalidated(true);\n                    }\n                }\n                else {\n                    // Two loops looks a bit weird, but needed since editing assignment might affect event etc.\n                    // And we do only want a single update in the end\n                    // 1. Start batches and perform all calculations\n                    for (const record of me.$invalidated) {\n                        record.beginBatch(true);\n                        record.finalizeInvalidated();\n                    }\n                    // 2. End batches, announcing changes (unless initial commit)\n                    for (const record of me.$invalidated) {\n                        record.endBatch(false, true);\n                    }\n                }\n                me.isWritingData = false;\n                me.$invalidated.clear();\n                // Mimic real projects events\n                me.trigger('dataReady');\n                stores.forEach(store => store.resumeAutoCommit?.());\n                // Chrono version triggers \"dataReady\" only if there were no commit rejection\n                // (in case of a rejection it triggers \"commitRejected\" event)\n                // but in both cases it triggers \"commitFinalized\" afterwards\n                me.trigger('commitFinalized');\n                return true;\n            }\n        }\n        async propagateAsync() {\n            return this.commitAsync();\n        }\n        // Called when a record invalidates itself, queues it for calculation\n        invalidate(record) {\n            this.$invalidated.add(record);\n            this.bufferedCommitAsync();\n        }\n        // this does not account for possible scheduling conflicts\n        async isValidDependency() {\n            return true;\n        }\n        //endregion\n        //region STM\n        getStm() {\n            return this.stm;\n        }\n        /**\n         * State tracking manager instance the project relies on\n         */\n        set stm(stm) {\n            stm = this.$stm = new StateTrackingManager(ObjectHelper.assign({\n                disabled: true\n            }, stm));\n            stm.ion({\n                // Propagate on undo/redo\n                restoringStop: async () => {\n                    // Disable STM meanwhile to not pick it up as a new STM transaction\n                    stm.disable();\n                    await this.commitAsync();\n                    if (!this.isDestroyed) {\n                        stm.enable();\n                        this.trigger('stateRestoringDone');\n                    }\n                }\n            });\n        }\n        get stm() {\n            return this.$stm;\n        }\n        //endregion\n        isEngineReady() {\n            return !this.hasPendingAutoCommit && !this.isPerformingCommit && this.isInitialCommitPerformed;\n        }\n    }\n    //region Config\n    SchedulerCoreProjectMixin.applyConfigs = true;\n    return SchedulerCoreProjectMixin;\n}) {\n}\n","/**\n * @module Scheduler/crud/mixin/AbstractCrudManagerValidation\n */\n\n/**\n * Mixin proving responses validation API to Crud Manager.\n * @mixin\n */\nexport default Target => class AbstractCrudManagerValidation extends Target {\n\n    static get $name() {\n        return 'AbstractCrudManagerValidation';\n    }\n\n    static get configurable() {\n        return {\n            /**\n             * This config validates the response structure for requests made by the Crud Manager.\n             * When `true`, the Crud Manager checks every parsed response structure for errors\n             * and if the response format is invalid, a warning is logged to the browser console.\n             *\n             * The config is intended to help developers implementing backend integration.\n             *\n             * @config {Boolean}\n             * @default\n             * @category CRUD\n             */\n            validateResponse : true,\n\n            /**\n             * When `true` treats parsed responses without `success` property as successful.\n             * In this mode a parsed response is treated as invalid if it has explicitly set `success : false`.\n             * @config {Boolean}\n             * @default\n             * @category CRUD\n             */\n            skipSuccessProperty : true,\n\n            crudLoadValidationWarningPrefix : 'CrudManager load response error(s):',\n\n            crudSyncValidationWarningPrefix : 'CrudManager sync response error(s):',\n\n            supportShortSyncResponseNote : 'Note: Please consider enabling \"supportShortSyncResponse\" option to allow less detailed sync responses (https://bryntum.com/products/scheduler/docs/api/Scheduler/crud/AbstractCrudManagerMixin#config-supportShortSyncResponse)',\n\n            disableValidationNote : 'Note: To disable this validation please set the \"validateResponse\" config to false'\n        };\n    }\n\n    get crudLoadValidationMandatoryStores() {\n        return [];\n    }\n\n    getStoreLoadResponseWarnings(storeInfo, responded, expectedResponse) {\n        const\n            messages        = [],\n            { storeId }     = storeInfo,\n            mandatoryStores = this.crudLoadValidationMandatoryStores,\n            result          = { [storeId] : {} };\n\n        // if the store section is responded\n        if (responded) {\n            if (!responded.rows) {\n                messages.push(`- \"${storeId}\" store section should have a \"rows\" property with an array of the store records.`);\n\n                result[storeId].rows = ['...'];\n            }\n        }\n        // if the store is mandatory\n        else if (mandatoryStores?.includes(storeId)) {\n            messages.push(`- No \"${storeId}\" store section found. It should contain the store data.`);\n\n            result[storeId].rows = ['...'];\n        }\n\n        // extend expected response w/ this store part\n        if (messages.length) {\n            Object.assign(expectedResponse, result);\n        }\n\n        return messages;\n    }\n\n    getLoadResponseWarnings(response) {\n        const\n            messages         = [],\n            expectedResponse = {};\n\n        if (!this.skipSuccessProperty) {\n            expectedResponse.success = true;\n        }\n\n        // iterate stores to check properties validity\n        this.forEachCrudStore((store, storeId, storeInfo) => {\n            messages.push(...this.getStoreLoadResponseWarnings(storeInfo, response?.[storeId], expectedResponse));\n        });\n\n        if (messages.length) {\n            messages.push('Please adjust your response to look like this:\\n' +\n                JSON.stringify(expectedResponse, null, 4).replace(/\"\\.\\.\\.\"/g, '...'));\n\n            messages.push(this.disableValidationNote);\n        }\n\n        return messages;\n    }\n\n    validateLoadResponse(response) {\n        const messages = this.getLoadResponseWarnings(response);\n\n        if (messages.length) {\n            console.warn(this.crudLoadValidationWarningPrefix + '\\n' + messages.join('\\n'));\n        }\n    }\n\n    getStoreSyncResponseWarnings(storeInfo, requested, responded, expectedResponse) {\n        const\n            messages         = [],\n            missingRows      = [],\n            missingRemoved   = [],\n            { storeId }      = storeInfo,\n            result           = { [storeId] : {} },\n            phantomIdField   = storeInfo.phantomIdField || this.phantomIdField,\n            { modelClass }   = storeInfo.store,\n            { idField }      = modelClass,\n            respondedRows    = responded?.rows || [],\n            respondedRemoved = responded?.removed || [];\n\n        let showSupportShortSyncResponseNote = false;\n\n        // if added records were passed in the request they should be mentioned in the response\n        if (requested?.added) {\n            missingRows.push(\n                ...requested.added.filter(record => {\n                    return !respondedRows.find(row => row[phantomIdField] == record[phantomIdField]) &&\n                        !respondedRemoved.find(row => row[phantomIdField] == record[phantomIdField] || row[idField] == record[phantomIdField]);\n                }).map(record => ({ [phantomIdField] : record[phantomIdField], [idField] : '...' }))\n            );\n\n            if (missingRows.length) {\n                const missingIds = missingRows.map(row => '#' + row[phantomIdField]).join(', ');\n\n                messages.push(`- \"${storeId}\" store \"rows\" section should mention added record(s) ${missingIds} sent in the request. ` +\n                    'It should contain the added records identifiers (both phantom and \"real\" ones assigned by the backend).');\n            }\n        }\n\n        // if short responses are enabled\n        if (this.supportShortSyncResponse) {\n            // if the data is not object, will return error\n            if (!missingRows.length && responded) {\n                if (typeof responded !== 'object' || Array.isArray(responded)) {\n                    messages.push(`- \"${storeId}\" store section should be an Object.`);\n                    result[storeId]['...'] = '...';\n                }\n\n                // for request to edit records, if rows is present, it must be an array\n                if (responded.rows && !Array.isArray(responded.rows)) {\n                    messages.push(`- \"${storeId}\" store \"rows\" section should be an array`);\n                    missingRows.push('...');\n                }\n\n                // removed if presented must be an array\n                if (responded.removed && !Array.isArray(responded.removed)) {\n                    messages.push(`- \"${storeId}\" store \"removed\" section should be an array:`);\n                    missingRemoved.push('...');\n                }\n            }\n        }\n        // if short responses are disabled\n        else {\n            // if updated records were passed in the request they should be mentioned in the response\n            if (requested?.updated) {\n                const missingUpdatedRows = requested.updated.filter(record => !respondedRows.find(row => row[idField] == record[idField]))\n                    .map(record => ({ [idField] : record[idField] }));\n\n                missingRows.push(...missingUpdatedRows);\n\n                if (missingUpdatedRows.length) {\n                    const missingIds = missingUpdatedRows.map(row => '#' + row[idField]).join(', ');\n\n                    messages.push(`- \"${storeId}\" store \"rows\" section should mention updated record(s) ${missingIds} sent in the request. ` +\n                        `It should contain the updated record identifiers.`);\n\n                    showSupportShortSyncResponseNote = true;\n                }\n\n            }\n\n            if (missingRows.length) {\n                missingRows.push('...');\n            }\n\n            // if removed records were passed in the request they should be mentioned in the response\n            if (requested?.removed) {\n                missingRemoved.push(\n                    ...requested.removed.filter(record => !respondedRows.find(row => row[idField] == record[idField]))\n                        .map(record => ({ [idField] : record[idField] }))\n                );\n\n                if (missingRemoved.length) {\n                    const missingIds = missingRemoved.map(row => '#' + row[idField]).join(', ');\n\n                    messages.push(`- \"${storeId}\" store \"removed\" section should mention removed record(s) ${missingIds} sent in the request. ` +\n                        `It should contain the removed record identifiers.`);\n\n                    result[storeId].removed = missingRemoved;\n                    missingRemoved.push('...');\n\n                    showSupportShortSyncResponseNote = true;\n                }\n            }\n\n        }\n\n        if (missingRows.length) {\n            result[storeId].rows = missingRows;\n        }\n\n        // get rid of store section if no rows/removed there\n        if (!messages.length) {\n            delete result[storeId];\n        }\n\n        // extend expected response w/ this store part\n        Object.assign(expectedResponse, result);\n\n        return { messages, showSupportShortSyncResponseNote };\n    }\n\n    getSyncResponseWarnings(response, requestDesc) {\n        const\n            messages         = [],\n            expectedResponse = {},\n            request          = requestDesc.pack;\n\n        if (!this.skipSuccessProperty) {\n            expectedResponse.success = true;\n        }\n\n        let showSupportShortSyncResponseNote = false;\n\n        // iterate stores to check properties validity\n        this.forEachCrudStore((store, storeId, storeInfo) => {\n            const warnings = this.getStoreSyncResponseWarnings(storeInfo, request?.[storeId], response[storeId], expectedResponse);\n\n            showSupportShortSyncResponseNote = showSupportShortSyncResponseNote || warnings.showSupportShortSyncResponseNote;\n\n            messages.push(...warnings.messages);\n        });\n\n        if (messages.length) {\n            messages.push('Please adjust your response to look like this:\\n' +\n                JSON.stringify(expectedResponse, null, 4).replace(/\"\\.\\.\\.\":\\s*\"\\.\\.\\.\"/g, ',,,').replace(/\"\\.\\.\\.\"/g, '...'));\n\n            if (showSupportShortSyncResponseNote) {\n                messages.push(this.supportShortSyncResponseNote);\n            }\n\n            messages.push(this.disableValidationNote);\n        }\n\n        return messages;\n    }\n\n    validateSyncResponse(response, request) {\n        const messages = this.getSyncResponseWarnings(response, request);\n\n        if (messages.length) {\n            console.warn(this.crudSyncValidationWarningPrefix + '\\n' + messages.join('\\n'));\n        }\n    }\n};\n","import Store from '../../Core/data/Store.js';\nimport Delayable from '../../Core/mixin/Delayable.js';\nimport ObjectHelper from '../../Core/helper/ObjectHelper.js';\nimport StringHelper from '../../Core/helper/StringHelper.js';\nimport ArrayHelper from '../../Core/helper/ArrayHelper.js';\nimport Objects from '../../Core/helper/util/Objects.js';\nimport Base from '../../Core/Base.js';\nimport Events from '../../Core/mixin/Events.js';\nimport AbstractCrudManagerValidation from './mixin/AbstractCrudManagerValidation.js';\n\n/**\n * @module Scheduler/crud/AbstractCrudManagerMixin\n */\n\nexport class AbstractCrudManagerError extends Error {}\n\nexport class CrudManagerRequestError extends AbstractCrudManagerError {\n    constructor(cfg = {}) {\n        super(cfg.message || cfg.request && StringHelper.capitalize(cfg.request?.type) + ' failed' || 'Crud Manager request failed');\n        Object.assign(this, cfg);\n        this.action = this.request?.type;\n    }\n}\n\nconst\n    storeSortFn     = function(lhs, rhs, sortProperty) {\n        // TODO: get rid of these StoreDescriptors. Just use Stores.\n        if (lhs.store) {\n            lhs = lhs.store;\n        }\n        if (rhs.store) {\n            rhs = rhs.store;\n        }\n\n        lhs = lhs[sortProperty] || 0;\n        rhs = rhs[sortProperty] || 0;\n        return (lhs < rhs) ? -1 : ((lhs > rhs) ? 1 : 0);\n    },\n\n    // Sorter function to keep stores in loadPriority order\n    storeLoadSortFn = function(lhs, rhs) {\n        return storeSortFn(lhs, rhs, 'loadPriority');\n    },\n\n    // Sorter function to keep stores in syncPriority order\n    storeSyncSortFn = function(lhs, rhs) {\n        return storeSortFn(lhs, rhs, 'syncPriority');\n    };\n\n/**\n * An abstract mixin that supplies most of the CrudManager functionality.\n * It implements basic mechanisms of collecting stores to organize batch communication with a server.\n * It does not contain methods related to _data transfer_ nor _encoding_.\n * These methods are to be provided in sub-classes.\n * Out of the box there are mixins implementing {@link Scheduler/crud/transport/AjaxTransport support of AJAX for data transferring}\n * and {@link Scheduler/crud/encoder/JsonEncoder JSON for data encoding system}.\n * For example this is how we make a model that will implement CrudManager protocol and use AJAX/JSON to pass the data\n * to the server:\n *\n * ```javascript\n * class SystemSettings extends JsonEncode(AjaxTransport(AbstractCrudManagerMixin(Model))) {\n *     ...\n * }\n * ```\n *\n * ## Data transfer and encoding methods\n *\n * These are methods that must be provided by subclasses of this class:\n *\n * - {@link #function-sendRequest}\n * - {@link #function-cancelRequest}\n * - {@link #function-encode}\n * - {@link #function-decode}\n *\n * @mixin\n * @mixes Core/mixin/Delayable\n * @mixes Core/mixin/Events\n * @mixes Scheduler/crud/mixin/AbstractCrudManagerValidation\n * @abstract\n */\nexport default Target => {\n\n    // Trigger $meta calculation to get up-to-date is \"isXXX\" flags\n    // (kinky construction to avoid production minification faced in Angular https://github.com/bryntum/support/issues/2889)\n    Target.$$meta = Target.$meta;\n\n    const mixins = [];\n\n    // These two mixins are mixed in the Scheduling Engine code ..but in its own way\n    // so that Base.mixin() cannot understand that they are already there and applies them 2nd time\n    if (!Target.isEvents) {\n        mixins.push(Events);\n    }\n    if (!Target.isDelayable) {\n        mixins.push(Delayable);\n    }\n\n    mixins.push(AbstractCrudManagerValidation);\n\n    return class AbstractCrudManagerMixin extends (Target || Base).mixin(...mixins) {\n\n        /**\n         * Fires before server response gets applied to the stores. Return `false` to prevent data applying.\n         * This event can be used for server data preprocessing. To achieve it user can modify the `response` object.\n         * @event beforeResponseApply\n         * @param {Scheduler.crud.AbstractCrudManager} source The CRUD manager.\n         * @param {'sync'|'load'} requestType The request type (`sync` or `load`).\n         * @param {Object} response The decoded server response object.\n         */\n\n        /**\n         * Fires before loaded data get applied to the stores. Return `false` to prevent data applying.\n         * This event can be used for server data preprocessing. To achieve it user can modify the `response` object.\n         * @event beforeLoadApply\n         * @param {Scheduler.crud.AbstractCrudManager} source The CRUD manager.\n         * @param {Object} response The decoded server response object.\n         * @param {Object} options Options provided to the {@link #function-load} method.\n         */\n        /**\n         * Fires before sync response data get applied to the stores. Return `false` to prevent data applying.\n         * This event can be used for server data preprocessing. To achieve it user can modify the `response` object.\n         * @event beforeSyncApply\n         * @param {Scheduler.crud.AbstractCrudManager} source The CRUD manager.\n         * @param {Object} response The decoded server response object.\n         */\n\n        static get $name() {\n            return 'AbstractCrudManagerMixin';\n        }\n\n        //region Default config\n\n        static get defaultConfig() {\n            return {\n                /**\n                 * The server revision stamp.\n                 * The _revision stamp_ is a number which should be incremented after each server-side change.\n                 * This property reflects the current version of the data retrieved from the server and gets updated\n                 * after each {@link #function-load} and {@link #function-sync} call.\n                 * @property {Number}\n                 * @readonly\n                 * @category CRUD\n                 */\n                crudRevision : null,\n\n                /**\n                 * A list of registered stores whose server communication will be collected into a single batch.\n                 * Each store is represented by a _store descriptor_.\n                 * @member {CrudManagerStoreDescriptor[]} crudStores\n                 * @category CRUD\n                 */\n\n                /**\n                 * Sets the list of stores controlled by the CRUD manager.\n                 *\n                 * When adding a store to the CrudManager, make sure the server response format is correct for `load`\n                 * and `sync` requests. Learn more in the\n                 * [Working with data](#Scheduler/guides/data/crud_manager.md#loading-data) guide.\n                 *\n                 * Store can be provided by itself, its storeId or as a _store descriptor_.\n                 * @config {Core.data.Store[]|String[]|CrudManagerStoreDescriptor[]}\n                 * @category CRUD\n                 */\n                crudStores : [],\n\n                /**\n                 * Name of a store property to retrieve store identifiers from. Make sure you have an instance of a\n                 * store to use it by id. Store identifier is used as a container name holding corresponding store data\n                 * while transferring them to/from the server. By default, `storeId` property is used. And in case a\n                 * container identifier has to differ this config can be used:\n                 *\n                 * ```javascript\n                 * class CatStore extends Store {\n                 *     static configurable = {\n                 *         // store id is \"meow\" but for sending/receiving store data\n                 *         // we want to have \"cats\" container in JSON, so we create a new property \"storeIdForCrud\"\n                 *         id             : 'meow',\n                 *         storeIdForCrud : 'cats'\n                 *     }\n                 * });\n                 *\n                 * // create an instance to use a store by id\n                 * new CatStore();\n                 *\n                 * class MyCrudManager extends CrudManager {\n                 *     ...\n                 *     crudStores           : ['meow'],\n                 *     // crud manager will get store identifier from \"storeIdForCrud\" property\n                 *     storeIdProperty  : 'storeIdForCrud'\n                 * });\n                 * ```\n                 * The `storeIdProperty` property can also be specified directly on a store:\n                 *\n                 * ```javascript\n                 * class CatStore extends Store {\n                 *     static configurable = {\n                 *         // storeId is \"meow\" but for sending/receiving store data\n                 *         // we want to have \"cats\" container in JSON\n                 *         id              : 'meow',\n                 *         // so we create a new property \"storeIdForCrud\"..\n                 *         storeIdForCrud  : 'cats',\n                 *         // and point CrudManager to use it as the store identifier source\n                 *         storeIdProperty  : 'storeIdForCrud'\n                 *     }\n                 * });\n                 *\n                 * class DogStore extends Store {\n                 *     static configurable = {\n                 *         // storeId is \"dogs\" and it will be used as a container name for the store data\n                 *         storeId : 'dogs',\n                 *         // id is set to get a store by identifier\n                 *         id      : 'dogs'\n                 *     }\n                 * });\n                 *\n                 * // create an instance to use a store by id\n                 * new CatStore();\n                 * new DogStore();\n                 *\n                 * class MyCrudManager extends CrudManager {\n                 *     ...\n                 *     crudStores : ['meow', 'dogs']\n                 * });\n                 * ```\n                 * @config {String}\n                 * @category CRUD\n                 */\n                storeIdProperty : 'storeId',\n\n                // TODO: no support for remote filtering yet\n                // /**\n                //  * The name of the 'filter' parameter to send in a load request.\n                //  * @config {String}\n                //  * @default\n                //  */\n                crudFilterParam : 'filter',\n\n                /**\n                 * Sends request to the server.\n                 * @function sendRequest\n                 * @param {Object} request The request to send. An object having following properties:\n                 * @param {'load'|'sync'} request.type Request type, can be either `load` or `sync`\n                 * @param {String} request.data {@link #function-encode Encoded} request.\n                 * @param {Function} request.success Callback to be started on successful request transferring\n                 * @param {Function} request.failure Callback to be started on request transfer failure\n                 * @param {Object} request.thisObj `this` reference for the above `success` and `failure` callbacks\n                 * @returns {Promise} The request promise.\n                 * @abstract\n                 */\n\n                /**\n                 * Cancels request to the server.\n                 * @function cancelRequest\n                 * @param {Promise} promise The request promise to cancel (a value returned by corresponding\n                 * {@link #function-sendRequest} call).\n                 * @param {Function} reject Reject handle of the corresponding promise\n                 * @abstract\n                 */\n\n                /**\n                 * Encodes request to the server.\n                 * @function encode\n                 * @param {Object} request The request to encode.\n                 * @returns {String} The encoded request.\n                 * @abstract\n                 */\n\n                /**\n                 * Decodes response from the server.\n                 * @function decode\n                 * @param {String} response The response to decode.\n                 * @returns {Object} The decoded response.\n                 * @abstract\n                 */\n\n                transport : {},\n\n                /**\n                 * When `true` forces the CRUD manager to process responses depending on their `type` attribute.\n                 * So `load` request may be responded with `sync` response for example.\n                 * Can be used for smart server logic allowing the server to decide when it's better to respond with a\n                 * complete data set (`load` response) or it's enough to return just a delta (`sync` response).\n                 * @config {Boolean}\n                 * @default\n                 * @category CRUD\n                 */\n                trackResponseType : false,\n\n                /**\n                 * When `true` the Crud Manager does not require all updated and removed records to be mentioned in the\n                 * *sync* response. In this case response should include only server side changes.\n                 *\n                 * **Please note that added records should still be mentioned in response to provide real identifier\n                 * instead of the phantom one.**\n                 * @config {Boolean}\n                 * @default\n                 * @category CRUD\n                 */\n                supportShortSyncResponse : true,\n\n                /**\n                 * Field name to be used to transfer a phantom record identifier.\n                 * @config {String}\n                 * @default\n                 * @category CRUD\n                 */\n                phantomIdField : '$PhantomId',\n\n                /**\n                 * Field name to be used to transfer a phantom parent record identifier.\n                 * @config {String}\n                 * @default\n                 * @category CRUD\n                 */\n                phantomParentIdField : '$PhantomParentId',\n\n                /**\n                 * `true` to automatically call {@link #function-load} method after creation.\n                 * @config {Boolean}\n                 * @default\n                 * @category CRUD\n                 */\n                autoLoad : false,\n\n                /**\n                 * The timeout in milliseconds to wait before persisting changes to the server.\n                 * Used when {@link #config-autoSync} is set to `true`.\n                 * @config {Number}\n                 * @default\n                 * @category CRUD\n                 */\n                autoSyncTimeout : 100,\n\n                /**\n                 * `true` to automatically persist store changes after edits are made in any of the stores monitored.\n                 * Please note that sync request will not be invoked immediately but only after\n                 * {@link #config-autoSyncTimeout} interval.\n                 * @config {Boolean}\n                 * @default\n                 * @category CRUD\n                 */\n                autoSync : false,\n\n                /**\n                 * `True` to reset identifiers (defined by `idField` config) of phantom records before submitting them\n                 * to the server.\n                 * @config {Boolean}\n                 * @default\n                 * @category CRUD\n                 */\n                resetIdsBeforeSync : true,\n\n                /**\n                 * @member {CrudManagerStoreDescriptor[]} syncApplySequence\n                 * An array of stores presenting an alternative sync responses apply order.\n                 * Each store is represented by a _store descriptor_.\n                 * @category CRUD\n                 */\n\n                /**\n                 * An array of store identifiers sets an alternative sync responses apply order.\n                 * By default, the order in which sync responses are applied to the stores is the same as they\n                 * registered in. But in case of some tricky dependencies between stores this order can be changed:\n                 *\n                 *```javascript\n                 * class MyCrudManager extends CrudManager {\n                 *     // register stores (will be loaded in this order: 'store1' then 'store2' and finally 'store3')\n                 *     crudStores : ['store1', 'store2', 'store3'],\n                 *     // but we apply changes from server to them in an opposite order\n                 *     syncApplySequence : ['store3', 'store2', 'store1']\n                 * });\n                 *```\n                 * @config {String[]}\n                 * @category CRUD\n                 */\n                syncApplySequence : [],\n\n                orderedCrudStores : [],\n\n                /**\n                 * `true` to write all fields from the record to the server.\n                 * If set to `false` it will only send the fields that were modified.\n                 * Note that any fields that have {@link Core/data/field/DataField#config-persist} set to `false` will\n                 * still be ignored and fields having {@link Core/data/field/DataField#config-alwaysWrite} set to `true`\n                 * will always be included.\n                 * @config {Boolean}\n                 * @default\n                 * @category CRUD\n                 */\n                writeAllFields : false,\n\n                crudIgnoreUpdates : 0,\n\n                autoSyncSuspendCounter : 0,\n\n                // Flag that shows if crud manager performed successful load request\n                crudLoaded : false,\n\n                applyingLoadResponse : false,\n                applyingSyncResponse : false,\n\n                callOnFunctions : true\n            };\n        }\n\n        static configurable = {\n            /**\n             * Convenience shortcut to set only the url to load from, when you do not need to supply any other config\n             * options in the `load` section of the `transport` config.\n             *\n             * Using `loadUrl`:\n             * ```javascript\n             * {\n             *     loadUrl : 'read.php\n             * }\n             * ```\n             *\n             * Equals the following `transport` config:\n             * ```javascript\n             * {\n             *     transport : {\n             *         load : {\n             *             url : 'read.php'\n             *         }\n             *     }\n             * }\n             * ```\n             *\n             * When read at runtime, it will return the value from `transport.load.url`.\n             *\n             * @prp {String}\n             */\n            loadUrl : null,\n\n            /**\n             * Convenience shortcut to set only the url to sync to, when you do not need to supply any other config\n             * options in the `sync` section of the `transport` config.\n             *\n             * Using `loadUrl`:\n             * ```javascript\n             * {\n             *     syncUrl : 'sync.php\n             * }\n             * ```\n             *\n             * Equals the following `transport` config:\n             * ```javascript\n             * {\n             *     transport : {\n             *         load : {\n             *             url : 'sync.php'\n             *         }\n             *     }\n             * }\n             * ```\n             *\n             * When read at runtime, it will return the value from `transport.sync.url`.\n             *\n             * @prp {String}\n             */\n            syncUrl : null,\n\n            /**\n             * Specify as `true` to force sync requests to be sent when calling `sync()`, even if there are no local\n             * changes. Useful in a polling scenario, to keep client up to date with the backend.\n             * @prp {Boolean}\n             */\n            forceSync : null\n        }\n\n        get isCrudManager() {\n            return true;\n        }\n\n        //endregion\n\n        //region Init\n\n        construct(config = {}) {\n            this._requestId = 0;\n            this.activeRequests = {};\n            this.crudStoresIndex = {};\n\n            super.construct(config);\n        }\n\n        afterConstruct() {\n            super.afterConstruct();\n\n            if (this.autoLoad) {\n                this._autoLoadPromise = this.doAutoLoad();\n            }\n        }\n\n        //endregion\n\n        //region Configs\n\n        get loadUrl() {\n            return this.transport?.load?.url;\n        }\n\n        updateLoadUrl(url) {\n            ObjectHelper.setPath(this, 'transport.load.url', url);\n        }\n\n        get syncUrl() {\n            return this.transport?.sync?.url;\n        }\n\n        updateSyncUrl(url) {\n            ObjectHelper.setPath(this, 'transport.sync.url', url);\n        }\n\n        //endregion\n\n        //region Store descriptors & index\n\n        /**\n         * Returns a registered store descriptor.\n         * @param {String|Core.data.Store} storeId The store identifier or registered store instance.\n         * @returns {CrudManagerStoreDescriptor} The descriptor of the store.\n         * @category CRUD\n         */\n        getStoreDescriptor(storeId) {\n            if (!storeId) return null;\n\n            if (storeId instanceof Store) return this.crudStores.find(storeDesc => storeDesc.store === storeId);\n\n            if (typeof storeId === 'object') return this.crudStoresIndex[storeId.storeId];\n\n            return this.crudStoresIndex[storeId] || this.getStoreDescriptor(Store.getStore(storeId));\n        }\n\n        fillStoreDescriptor(descriptor) {\n            const\n                { store } = descriptor,\n                {\n                    storeIdProperty = this.storeIdProperty,\n                    modelClass\n                }         = store;\n\n            if (!descriptor.storeId) {\n                descriptor.storeId = store[storeIdProperty] || store.id;\n            }\n            if (!descriptor.idField) {\n                descriptor.idField = modelClass.idField;\n            }\n            if (!descriptor.phantomIdField) {\n                descriptor.phantomIdField = modelClass.phantomIdField;\n            }\n            if (!descriptor.phantomParentIdField) {\n                descriptor.phantomParentIdField = modelClass.phantomParentIdField;\n            }\n            if (!('writeAllFields' in descriptor)) {\n                descriptor.writeAllFields = store.writeAllFields;\n            }\n\n            return descriptor;\n        }\n\n        updateCrudStoreIndex() {\n            const\n                crudStoresIndex = this.crudStoresIndex = {};\n\n            this.crudStores.forEach(store => store.storeId && (crudStoresIndex[store.storeId] = store));\n        }\n\n        //endregion\n\n        //region Store collection (add, remove, get & iterate)\n\n        /**\n         * Returns a registered store.\n         * @param {String} storeId Store identifier.\n         * @returns {Core.data.Store} Found store instance.\n         * @category CRUD\n         */\n        getCrudStore(storeId) {\n            const storeDescriptor = this.getStoreDescriptor(storeId);\n            return storeDescriptor?.store;\n        }\n\n        forEachCrudStore(fn, thisObj = this) {\n            if (!fn) {\n                throw new Error('Iterator function must be provided');\n            }\n\n            this.crudStores.every(store =>\n                fn.call(thisObj, store.store, store.storeId, store) !== false\n            );\n        }\n\n        set crudStores(stores) {\n            this._crudStores = [];\n\n            this.addCrudStore(stores);\n\n            // Ensure preconfigured stores stay stable at the start of the array when\n            // addPrioritizedStore attempts to insert in order. Only featured gantt/scheduler stores\n            // must participate in the ordering. If they were configured in, they must not move.\n            for (const store of this._crudStores) {\n                store.loadPriority = store.syncPriority = 0;\n            }\n        }\n\n        get crudStores() {\n            return this._crudStores;\n        }\n\n        get orderedCrudStores() {\n            return this._orderedCrudStores;\n        }\n\n        set orderedCrudStores(stores) {\n            return this._orderedCrudStores = stores;\n        }\n\n        set syncApplySequence(stores) {\n            this._syncApplySequence = [];\n\n            this.addStoreToApplySequence(stores);\n        }\n\n        get syncApplySequence() {\n            return this._syncApplySequence;\n        }\n\n        internalAddCrudStore(store) {\n            const\n                me = this;\n\n            let storeInfo;\n\n            // if store instance provided\n            if (store instanceof Store) {\n                storeInfo = { store };\n            }\n            else if (typeof store === 'object') {\n                if (!store.store) {\n                    // not a store descriptor, assume it is a store config\n                    store = {\n                        storeId : store.id,\n                        store   : new Store(store)\n                    };\n                }\n\n                storeInfo = store;\n            }\n            // if it's a store identifier\n            else {\n                storeInfo = { store : Store.getStore(store) };\n            }\n\n            me.fillStoreDescriptor(storeInfo);\n\n            // store instance\n            store = storeInfo.store;\n\n            // if the store has \"setCrudManager\" hook - use it\n            if (store.setCrudManager) {\n                store.setCrudManager(me);\n            }\n            // otherwise decorate the store w/ \"crudManager\" property\n            else {\n                store.crudManager = me;\n            }\n\n            // Stores have a defaultConfig for pageSize. CrudManager does not support that.\n            // TODO: PORT currently no support for paging.\n            store.pageSize = null;\n\n            // Prevent AjaxStores from performing their own CRUD operations if CrudManager is configured with an URL\n            if (me.loadUrl || me.syncUrl) {\n                store.autoCommit = false;\n                store.autoLoad = false;\n                if (store.createUrl || store.updateUrl || store.deleteUrl || store.readUrl) {\n                    console.warn('You have configured an URL on a Store that is handled by a CrudManager that is also configured with an URL. The Store URL\\'s should be removed.');\n                }\n            }\n\n            // listen to store changes\n            me.bindCrudStoreListeners(store);\n\n            return storeInfo;\n        }\n\n        /**\n         * Adds a store to the collection.\n         *\n         *```javascript\n         * // append stores to the end of collection\n         * crudManager.addCrudStore([\n         *     store1,\n         *     // storeId\n         *     'bar',\n         *     // store descriptor\n         *     {\n         *         storeId : 'foo',\n         *         store   : store3\n         *     },\n         *     {\n         *         storeId         : 'bar',\n         *         store           : store4,\n         *         // to write all fields of modified records\n         *         writeAllFields  : true\n         *     }\n         * ]);\n         *```\n         *\n         * **Note:** Order in which stores are kept in the collection is very essential sometimes.\n         * Exactly in this order the loaded data will be put into each store.\n         *\n         * When adding a store to the CrudManager, make sure the server response format is correct for `load` and `sync`\n         * requests. Learn more in the [Working with data](#Scheduler/guides/data/crud_manager.md#loading-data) guide.\n         *\n         * @param {Core.data.Store|String|CrudManagerStoreDescriptor|Core.data.Store[]|String[]|CrudManagerStoreDescriptor[]} store\n         * A store or list of stores. Each store might be specified by its instance, `storeId` or _descriptor_.\n         * @param {Number} [position] The relative position of the store. If `fromStore` is specified the position\n         * will be taken relative to it. If not specified then store(s) will be appended to the end of collection.\n         * Otherwise, it will be just a position in stores collection.\n         *\n         * ```javascript\n         * // insert stores store4, store5 to the start of collection\n         * crudManager.addCrudStore([ store4, store5 ], 0);\n         * ```\n         *\n         * @param {String|Core.data.Store|CrudManagerStoreDescriptor} [fromStore] The store relative to which position\n         * should be calculated. Can be defined as a store identifier, instance or descriptor (the result of\n         * {@link #function-getStoreDescriptor} call).\n         *\n         * ```javascript\n         * // insert store6 just before a store having storeId equal to 'foo'\n         * crudManager.addCrudStore(store6, 0, 'foo');\n         *\n         * // insert store7 just after store3 store\n         * crudManager.addCrudStore(store7, 1, store3);\n         * ```\n         * @category CRUD\n         */\n        addCrudStore(store, position, fromStore) {\n            store = ArrayHelper.asArray(store);\n\n            if (!store?.length) {\n                return;\n            }\n\n            const\n                me     = this,\n                stores = store.map(me.internalAddCrudStore, me);\n\n            // if no position specified then append stores to the end\n            if (typeof position === 'undefined') {\n                me.crudStores.push(...stores);\n            }\n            // if position specified\n            else {\n                // if specified the store relative to which we should insert new one(-s)\n                if (fromStore) {\n                    if (fromStore instanceof Store || typeof fromStore !== 'object') fromStore = me.getStoreDescriptor(fromStore);\n                    // get its position\n                    position += me.crudStores.indexOf(fromStore);\n                }\n                // insert new store(-s)\n                me.crudStores.splice(position, 0, ...stores);\n            }\n\n            me.orderedCrudStores.push(...stores);\n\n            me.updateCrudStoreIndex();\n        }\n\n        // Adds configured scheduler stores to the store collection ensuring correct order\n        // unless they're already registered.\n        addPrioritizedStore(store) {\n            const me = this;\n\n            if (!me.hasCrudStore(store)) {\n                me.addCrudStore(store, ArrayHelper.findInsertionIndex(store, me.crudStores, storeLoadSortFn));\n            }\n            if (!me.hasApplySequenceStore(store)) {\n                me.addStoreToApplySequence(store, ArrayHelper.findInsertionIndex(store, me.syncApplySequence, storeSyncSortFn));\n            }\n        }\n\n        hasCrudStore(store) {\n            return this.crudStores?.some(s => s === store || s.store === store || s.storeId === store);\n        }\n\n        /**\n         * Removes a store from collection. If the store was registered in alternative sync sequence list\n         * it will be removed from there as well.\n         *\n         * ```javascript\n         * // remove store having storeId equal to \"foo\"\n         * crudManager.removeCrudStore(\"foo\");\n         *\n         * // remove store3\n         * crudManager.removeCrudStore(store3);\n         * ```\n         *\n         * @param {CrudManagerStoreDescriptor|String|Core.data.Store} store The store to remove. Either the store\n         * descriptor, store identifier or store itself.\n         * @category CRUD\n         */\n        removeCrudStore(store) {\n            const\n                me         = this,\n                stores     = me.crudStores,\n                foundStore = stores.find(s => s === store || s.store === store || s.storeId === store);\n\n            if (foundStore) {\n                // unbind store listeners\n                me.unbindCrudStoreListeners(foundStore.store);\n\n                delete me.crudStoresIndex[foundStore.storeId];\n                ArrayHelper.remove(stores, foundStore);\n\n                if (me.syncApplySequence) {\n                    me.removeStoreFromApplySequence(store);\n                }\n            }\n            else {\n                throw new Error('Store not found in stores collection');\n            }\n        }\n\n        //endregion\n\n        //region Store listeners\n\n        bindCrudStoreListeners(store) {\n            store.ion({\n                name : store.id,\n\n                // When a tentatively added record gets confirmed as permanent, this signals a change\n                addConfirmed : 'onCrudStoreChange',\n                change       : 'onCrudStoreChange',\n                destroy      : 'onCrudStoreDestroy',\n                thisObj      : this\n            });\n        }\n\n        unbindCrudStoreListeners(store) {\n            this.detachListeners(store.id);\n        }\n\n        //endregion\n\n        //region Apply sequence\n\n        /**\n         * Adds a store to the alternative sync responses apply sequence.\n         * By default, the order in which sync responses are applied to the stores is the same as they registered in.\n         * But this order can be changes either on construction step using {@link #config-syncApplySequence} option\n         * or by calling this method.\n         *\n         * **Please note**, that if the sequence was not initialized before this method call then\n         * you will have to do it yourself like this for example:\n         *\n         * ```javascript\n         * // alternative sequence was not set for this crud manager\n         * // so let's fill it with existing stores keeping the same order\n         * crudManager.addStoreToApplySequence(crudManager.crudStores);\n         *\n         * // and now we can add our new store\n         *\n         * // we will load its data last\n         * crudManager.addCrudStore(someNewStore);\n         * // but changes to it will be applied first\n         * crudManager.addStoreToApplySequence(someNewStore, 0);\n         * ```\n         * add registered stores to the sequence along with the store(s) you want to add\n         *\n         * @param {Core.data.Store|CrudManagerStoreDescriptor|Core.data.Store[]|CrudManagerStoreDescriptor[]} store The\n         * store to add or its _descriptor_ (or array of stores or descriptors).\n         * @param {Number} [position] The relative position of the store. If `fromStore` is specified the position\n         * will be taken relative to it. If not specified then store(s) will be appended to the end of collection.\n         * Otherwise, it will be just a position in stores collection.\n         *\n         * ```javascript\n         * // insert stores store4, store5 to the start of sequence\n         * crudManager.addStoreToApplySequence([ store4, store5 ], 0);\n         * ```\n         * @param {String|Core.data.Store|CrudManagerStoreDescriptor} [fromStore] The store relative to which position\n         * should be calculated. Can be defined as a store identifier, instance or its descriptor (the result of\n         * {@link #function-getStoreDescriptor} call).\n         *\n         * ```javascript\n         * // insert store6 just before a store having storeId equal to 'foo'\n         * crudManager.addStoreToApplySequence(store6, 0, 'foo');\n         *\n         * // insert store7 just after store3 store\n         * crudManager.addStoreToApplySequence(store7, 1, store3);\n         * ```\n         * @category CRUD\n         */\n        addStoreToApplySequence(store, position, fromStore) {\n            if (!store) {\n                return;\n            }\n\n            store = ArrayHelper.asArray(store);\n\n            const\n                me   = this,\n                // loop over list of stores to add\n                data = store.reduce((collection, store) => {\n                    const s = me.getStoreDescriptor(store);\n                    s && collection.push(s);\n                    return collection;\n                }, []);\n\n            // if no position specified then append stores to the end\n            if (typeof position === 'undefined') {\n                me.syncApplySequence.push(...data);\n\n                // if position specified\n            }\n            else {\n                let pos = position;\n                // if specified the store relative to which we should insert new one(-s)\n                if (fromStore) {\n                    if (fromStore instanceof Store || typeof fromStore !== 'object') fromStore = me.getStoreDescriptor(fromStore);\n                    // get its position\n                    pos += me.syncApplySequence.indexOf(fromStore);\n                }\n                // insert new store(-s)\n                //me.syncApplySequence.splice.apply(me.syncApplySequence, [].concat([pos, 0], data));\n                me.syncApplySequence.splice(pos, 0, ...data);\n            }\n\n            const sequenceKeys = me.syncApplySequence.map(({ storeId }) => storeId);\n\n            me.orderedCrudStores = [...me.syncApplySequence];\n            me.crudStores.forEach(storeDesc => {\n                if (!sequenceKeys.includes(storeDesc.storeId)) {\n                    me.orderedCrudStores.push(storeDesc);\n                }\n            });\n        }\n\n        /**\n         * Removes a store from the alternative sync sequence.\n         *\n         * ```javascript\n         * // remove store having storeId equal to \"foo\"\n         * crudManager.removeStoreFromApplySequence(\"foo\");\n         * ```\n         *\n         * @param {CrudManagerStoreDescriptor|String|Core.data.Store} store The store to remove. Either the store\n         * descriptor, store identifier or store itself.\n         * @category CRUD\n         */\n        removeStoreFromApplySequence(store) {\n            const index = this.syncApplySequence.findIndex(s => s === store || s.store === store || s.storeId === store);\n            if (index > -1) {\n                this.syncApplySequence.splice(index, 1);\n\n                // ordered crud stores list starts with syncApplySequence, we can use same index\n                this.orderedCrudStores.splice(index, 1);\n            }\n        }\n\n        hasApplySequenceStore(store) {\n            return this.syncApplySequence.some(s => s === store || s.store === store || s.storeId === store);\n        }\n\n        //endregion\n\n        //region Events\n\n        // Remove stores that are destroyed, to not try and apply response changes etc to them\n        onCrudStoreDestroy({ source : store }) {\n            this.removeCrudStore(store);\n        }\n\n        onCrudStoreChange(event) {\n            const me = this;\n\n            if (me.crudIgnoreUpdates) {\n                return;\n            }\n\n            /**\n             * Fires when data in any of the registered data stores is changed.\n             * ```javascript\n             *     crudManager.on('hasChanges', function (crud) {\n             *         // enable persist changes button when some store gets changed\n             *         saveButton.enable();\n             *     });\n             * ```\n             * @event hasChanges\n             * @param {Scheduler.crud.AbstractCrudManager} source The CRUD manager.\n             */\n\n            if (me.crudStoreHasChanges(event?.source)) {\n                me.trigger('hasChanges');\n\n                if (me.autoSync) {\n                    me.scheduleAutoSync();\n                }\n            }\n            else {\n                me.trigger('noChanges');\n            }\n        }\n\n        /**\n         * Suspends automatic sync upon store changes. Can be called multiple times (it uses an internal counter).\n         * @category CRUD\n         */\n        suspendAutoSync() {\n            this.autoSyncSuspendCounter++;\n        }\n\n        /**\n         * Resumes automatic sync upon store changes. Will trigger commit if the internal counter is 0.\n         * @param {Boolean} [doSync=true] Pass `true` to trigger data syncing after resuming (if there are pending\n         * changes) and `false` to not persist the changes.\n         * @category CRUD\n         */\n        resumeAutoSync(doSync = true) {\n            const me = this;\n\n            me.autoSyncSuspendCounter--;\n\n            if (me.autoSyncSuspendCounter <= 0) {\n                me.autoSyncSuspendCounter = 0;\n\n                // if its told to trigger persisting and there are changes\n                if (doSync && me.autoSync && me.crudStoreHasChanges()) {\n                    me.sync();\n                }\n            }\n        }\n\n        get isAutoSyncSuspended() {\n            return this.autoSyncSuspendCounter > 0;\n        }\n\n        scheduleAutoSync() {\n            const me = this;\n\n            // add deferred call if it's not scheduled yet\n            if (!me.hasTimeout('autoSync') && !me.isAutoSyncSuspended) {\n                me.setTimeout({\n                    name : 'autoSync',\n                    fn   : () => {\n                        me.sync().catch(error => {\n                            // <debug>\n                            if (!me.hasListener('syncFail') && !me.hasListener('requestFail') && !me.onSyncFail && !me.onRequestFail) {\n                                console.warn('CrudManager error while auto-syncing the data (please setup \"syncFail\" or \"requestFail\" event listeners to handle such cases)\\n', error);\n                            }\n                            // </debug>\n                        });\n                    },\n                    delay : me.autoSyncTimeout\n                });\n            }\n        }\n\n        async triggerFailedRequestEvents(request, response, responseText, fetchOptions) {\n            const { options, type : requestType } = request;\n\n            /**\n             * Fires when a request fails.\n             * @event requestFail\n             * @param {Scheduler.crud.AbstractCrudManager} source The CRUD manager instance.\n             * @param {'sync'|'load'} requestType The request type (`sync` or `load`).\n             * @param {Object} response The decoded server response object.\n             * @param {String} responseText The raw server response text\n             * @param {Object} responseOptions The response options.\n             */\n            this.trigger('requestFail', { requestType, response, responseText, responseOptions : fetchOptions });\n            /**\n             * Fires when a {@link #function-load load request} fails.\n             * @event loadFail\n             * @param {Scheduler.crud.AbstractCrudManager} source The CRUD manager instance.\n             * @param {Object} response The decoded server response object.\n             * @param {String} responseText The raw server response text\n             * @param {Object} responseOptions The response options.\n             * @params {Object} options Options provided to the {@link #function-load} method.\n             */\n            /**\n             * Fires when a {@link #function-sync sync request} fails.\n             * @event syncFail\n             * @param {Scheduler.crud.AbstractCrudManager} source The CRUD manager instance.\n             * @param {Object} response The decoded server response object.\n             * @param {String} responseText The raw server response text\n             * @param {Object} responseOptions The response options.\n             */\n            this.trigger(requestType + 'Fail', { response, responseOptions : fetchOptions, responseText, options });\n        }\n\n        async internalOnResponse(request, responseText, fetchOptions) {\n            const\n                me                              = this,\n                response                        = responseText ? me.decode(responseText) : null,\n                { options, type : requestType } = request;\n\n            if (responseText && !response) {\n                console.error('Failed to parse response: ' + responseText);\n            }\n\n            if (!response || (me.skipSuccessProperty ? response.success === false : !response.success)) {\n                me.triggerFailedRequestEvents(request, response, responseText, fetchOptions);\n            }\n            else if ((me.trigger('beforeResponseApply', { requestType, response }) !== false) &&\n                (me.trigger(`before${StringHelper.capitalize(requestType)}Apply`, { response, options }) !== false)) {\n\n                me.crudRevision = response.revision;\n\n                await me.applyResponse(request, response, options);\n\n                // Might have been destroyed while applying response\n                if (me.isDestroyed) {\n                    return;\n                }\n\n                /**\n                 * Fires on successful request completion after data gets applied to the stores.\n                 * @event requestDone\n                 * @param {Scheduler.crud.AbstractCrudManager} source The CRUD manager.\n                 * @param {'sync'|'load'} requestType The request type (`sync` or `load`).\n                 * @param {Object} response The decoded server response object.\n                 * @param {Object} responseOptions The server response options.\n                 */\n                me.trigger('requestDone', { requestType, response, responseOptions : fetchOptions });\n                /**\n                 * Fires on successful {@link #function-load load request} completion after data gets loaded to the stores.\n                 * @event load\n                 * @param {Scheduler.crud.AbstractCrudManager} source The CRUD manager.\n                 * @param {Object} response The decoded server response object.\n                 * @param {Object} responseOptions The server response options.\n                 * @params {Object} options Options provided to the {@link #load} method.\n                 */\n                /**\n                 * Fires on successful {@link #function-sync sync request} completion.\n                 * @event sync\n                 * @param {Scheduler.crud.AbstractCrudManager} source The CRUD manager.\n                 * @param {Object} response The decoded server response object.\n                 * @param {Object} responseOptions The server response options.\n                 */\n                me.trigger(requestType, { response, responseOptions : fetchOptions, options });\n\n                if (requestType === 'load' || !me.crudStoreHasChanges()) {\n                    /**\n                     * Fires when registered stores get into state when they don't have any\n                     * not persisted change. This happens after {@link #function-load} or {@link #function-sync} request\n                     * completion. Or this may happen after a record update which turns its fields back to their original state.\n                     *\n                     * ```javascript\n                     * crudManager.on('nochanges', function (crud) {\n                     *     // disable persist changes button when there is no changes\n                     *     saveButton.disable();\n                     * });\n                     * ```\n                     *\n                     * @event noChanges\n                     * @param {Scheduler.crud.AbstractCrudManager} source The CRUD manager.\n                     */\n                    me.trigger('noChanges');\n\n                    if (requestType === 'load') {\n                        me.emitCrudStoreEvents(request.pack.stores, 'afterRequest');\n                    }\n                }\n            }\n\n            return response;\n        }\n\n        //endregion\n\n        //region Changes tracking\n\n        suspendChangesTracking() {\n            this.crudIgnoreUpdates++;\n        }\n\n        resumeChangesTracking(skipChangeCheck) {\n            if (this.crudIgnoreUpdates && !--this.crudIgnoreUpdates && !skipChangeCheck) {\n                this.onCrudStoreChange();\n            }\n        }\n\n        get isBatchingChanges() {\n            return this.crudIgnoreUpdates > 0;\n        }\n\n        /**\n         * Returns `true` if any of registered stores (or some particular store) has non persisted changes.\n         *\n         * ```javascript\n         * // if we have any unsaved changes\n         * if (crudManager.crudStoreHasChanges()) {\n         *     // persist them\n         *     crudManager.sync();\n         * // otherwise\n         * } else {\n         *     alert(\"There are no unsaved changes...\");\n         * }\n         * ```\n         *\n         * @param {String|Core.data.Store} [storeId] The store identifier or store instance to check changes for.\n         * If not specified then will check changes for all of the registered stores.\n         * @returns {Boolean} `true` if there are not persisted changes.\n         * @category CRUD\n         */\n        crudStoreHasChanges(storeId) {\n            return storeId\n                ? this.isCrudStoreDirty(this.getCrudStore(storeId))\n                : this.crudStores.some(config => this.isCrudStoreDirty(config.store));\n        }\n\n        isCrudStoreDirty(store) {\n            return Boolean(store.changes);\n        }\n\n        //endregion\n\n        //region Load\n\n        doAutoLoad() {\n            return this.load().catch(error => {\n                // <debug>\n                if (!this.isDestroyed && !this.hasListener('loadFail') && !this.hasListener('requestFail')) {\n                    console.warn('CrudManager error while auto-loading the data (please setup \"loadFail\" or \"requestFail\" event listeners to handle such cases)\\n', error);\n                }\n                // </debug>\n            });\n        }\n\n        emitCrudStoreEvents(stores, eventName, eventParams) {\n            const event = { action : 'read' + eventName, ...eventParams };\n\n            for (const store of this.crudStores) {\n                if (stores.includes(store.storeId)) {\n                    store.store.trigger(eventName, event);\n                }\n            }\n        }\n\n        getLoadPackage(options) {\n            const\n                pack        = {\n                    type      : 'load',\n                    requestId : this.requestId\n                },\n                stores      = this.crudStores,\n                optionsCopy = Object.assign({}, options);\n\n            // This is a special option which does not apply to a store.\n            // It's used as options to the AjaxTransport#sendRequest method\n            delete optionsCopy.request;\n\n            pack.stores = stores.map(store => {\n                const\n                    opts     = optionsCopy?.[store.storeId],\n                    pageSize = store.pageSize || store.store?.pageSize;\n\n                // TODO: PORT currently no support for remote filters\n                // if the store uses remote filtering\n                // if (store.store.remoteFilter && filterParam) {\n                //\n                //     opts = opts || {};\n                //\n                //     var filters = [];\n                //\n                //     store.store.getFilters().each(function(f) {\n                //         filters.push(f.serialize());\n                //     });\n                //\n                //     // put filters info into the package\n                //     opts[filterParam] = filters;\n                // }\n\n                // TODO: PORT currently no support for paging\n                if (opts || pageSize) {\n                    const\n                        params = Object.assign({\n                            storeId : store.storeId,\n                            page    : 1\n                        }, opts);\n\n                    if (pageSize) {\n                        params.pageSize = pageSize;\n                    }\n\n                    store.currentPage = params.page;\n\n                    // Remove from common request options\n                    if (opts) {\n                        delete optionsCopy[store.storeId];\n                    }\n\n                    return params;\n                }\n\n                return store.storeId;\n            });\n\n            // Apply common request options\n            Object.assign(pack, optionsCopy);\n\n            return pack;\n        }\n\n        loadCrudStore(store, data, options) {\n            const rows = data?.rows;\n\n            if (options?.append || data?.append) {\n                store.add(rows);\n            }\n            else {\n                store.data = rows;\n            }\n\n            store.trigger('load', { data : rows });\n        }\n\n        loadDataToCrudStore(storeDesc, data, options) {\n            const\n                store = storeDesc.store,\n                rows  = data?.rows;\n\n            store.__loading = true;\n\n            if (rows) {\n                this.loadCrudStore(store, data, options, storeDesc);\n            }\n\n            store.__loading = false;\n        }\n\n        /**\n         * Loads data to the Crud Manager\n         * @param {Object} response A simple object representing the data.\n         * The object structure matches the decoded `load` response structure:\n         *\n         * ```js\n         * // load static data into crudManager\n         * crudManager.loadCrudManagerData({\n         *     success   : true,\n         *     resources : {\n         *         rows : [\n         *             { id : 1, name : 'John' },\n         *             { id : 2, name : 'Abby' }\n         *         ]\n         *     }\n         * });\n         * ```\n         * @param {Object} [options] Extra data loading options.\n         * @category CRUD\n         */\n        loadCrudManagerData(response, options = {}) {\n            // we don't want to react to store changes during loading of them\n            this.suspendChangesTracking();\n\n            // we load data to the stores in the order they're kept in this.stores array\n            this.crudStores.forEach(storeDesc => {\n                const\n                    storeId = storeDesc.storeId,\n                    data    = response[storeId];\n\n                if (data) {\n                    this.loadDataToCrudStore(storeDesc, data, options[storeId]);\n                }\n            });\n\n            this.resumeChangesTracking(true);\n        }\n\n        /**\n         * Returns true if the crud manager is currently loading data\n         * @property {Boolean}\n         * @readonly\n         * @category CRUD\n         */\n        get isCrudManagerLoading() {\n            return Boolean(this.activeRequests.load || this.applyingLoadResponse);\n        }\n\n        /**\n         * Returns true if the crud manager is currently syncing data\n         * @property {Boolean}\n         * @readonly\n         * @category CRUD\n         */\n        get isCrudManagerSyncing() {\n            return Boolean(this.activeRequests.sync || this.applyingSyncResponse);\n        }\n\n        get isLoadingOrSyncing() {\n            return Boolean(this.isCrudManagerLoading || this.isCrudManagerSyncing);\n        }\n\n        /**\n         * Loads data to the stores registered in the crud manager. For example:\n         *\n         * ```javascript\n         * crudManager.load(\n         *     // here are request parameters\n         *     {\n         *         store1 : { append : true, page : 3, smth : 'foo' },\n         *         store2 : { page : 2, bar : '!!!' }\n         *     }\n         * ).then(\n         *     () => alert('OMG! It works!'),\n         *     ({ response, cancelled }) => console.log(`Error: ${cancelled ? 'Cancelled' : response.message}`)\n         * );\n         * ```\n         *\n         * ** Note: ** If there is an incomplete load request in progress then system will try to cancel it by calling {@link #function-cancelRequest}.\n         * @param {Object|String} [options] The request parameters or a URL.\n         * @param {Object} [options.request] An object which contains options to merge\n         * into the options which are passed to {@link Scheduler/crud/transport/AjaxTransport#function-sendRequest}.\n         * ```javascript\n         * {\n         *     store1 : { page : 3, append : true, smth : 'foo' },\n         *     store2 : { page : 2, bar : '!!!' },\n         *     request : {\n         *         params : {\n         *             startDate : '2021-01-01'\n         *         }\n         *     }\n         * },\n         * ```\n         *\n         * Omitting request arg:\n         * ```javascript\n         * crudManager.load().then(\n         *     () => alert('OMG! It works!'),\n         *     ({ response, cancelled }) => console.log(`Error: ${cancelled ? 'Cancelled' : response.message}`)\n         * );\n         * ```\n         *\n         * When presented it should be an object where keys are store Ids and values are, in turn, objects\n         * of parameters related to the corresponding store. These parameters will be transferred in each\n         * store's entry in the `stores` property of the POST data.\n         *\n         * Additionally, for flat stores `append: true` can be specified to add loaded records to the existing records,\n         * default is to remove corresponding store's existing records first.\n         * **Please note** that for delta loading you can also use an {@link #config-trackResponseType alternative approach}.\n         * @param {'sync'|'load'} [options.request.type] The request type. Either `load` or `sync`.\n         * @param {String} [options.request.url] The URL for the request. Overrides the URL defined in the `transport`\n         * object\n         * @param {String} [options.request.data] The encoded _Crud Manager_ request data.\n         * @param {Object} [options.request.params] An object specifying extra HTTP params to send with the request.\n         * @param {Function} [options.request.success] A function to be started on successful request transferring.\n         * @param {String} [options.request.success.rawResponse] `Response` object returned by the\n         * [fetch api](https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API).\n         * @param {Function} [options.request.failure] A function to be started on request transfer failure.\n         * @param {String} [options.request.failure.rawResponse] `Response` object returned by the\n         * [fetch api](https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API).\n         * @param {Object} [options.request.thisObj] `this` reference for the above `success` and `failure` functions.\n         * @returns {Promise} Promise, which is resolved if request was successful.\n         * Both the resolve and reject functions are passed a `state` object. State object has following structure:\n         *\n         * ```\n         * {\n         *     cancelled       : Boolean, // **optional** flag, which is present when promise was rejected\n         *     rawResponse     : String,  // raw response from ajax request, either response xml or text\n         *     rawResponseText : String,  // raw response text as String from ajax request\n         *     response        : Object,  // processed response in form of object\n         *     options         : Object   // options, passed to load request\n         * }\n         * ```\n         *\n         * If promise was rejected by {@link #event-beforeLoad} event, `state` object will have the following structure:\n         *\n         * ```\n         * {\n         *     cancelled : true\n         * }\n         * ```\n         * @category CRUD\n         * @async\n         */\n        load(options) {\n            if (typeof options === 'string') {\n                options = {\n                    request : {\n                        url : options\n                    }\n                };\n            }\n\n            const\n                me   = this,\n                pack = me.getLoadPackage(options);\n\n            return new Promise((resolve, reject) => {\n                /**\n                 * Fires before {@link #function-load load request} is sent. Return `false` to cancel load request.\n                 * @event beforeLoad\n                 * @param {Scheduler.crud.AbstractCrudManager} source The CRUD manager.\n                 * @param {Object} pack The data package which contains data for all stores managed by the crud manager.\n                 */\n                if (me.trigger('beforeLoad', { pack }) !== false) {\n                    // if another load request is in progress let's cancel it\n                    const { load } = me.activeRequests;\n\n                    if (load) {\n                        me.cancelRequest(load.desc, load.reject);\n\n                        me.trigger('loadCanceled', { pack });\n                    }\n\n                    // TODO: refactor this\n                    const request = Objects.assign({\n                        id      : pack.requestId,\n                        data    : me.encode(pack),\n                        type    : 'load',\n                        success : me.onCrudRequestSuccess,\n                        failure : me.onCrudRequestFailure,\n                        thisObj : me\n                    }, options?.request);\n\n                    me.activeRequests.load = {\n                        type : 'load',\n                        options,\n                        pack,\n                        resolve,\n                        reject(...args) {\n                            // sendRequest will start a fetch promise, which we cannot reject from here. In fact what we\n                            // need to do, is to make fetch.then() to not call any real handlers. Which is what we do here.\n                            request.success = request.failure = null;\n                            reject(...args);\n                        },\n                        id   : pack.requestId,\n                        desc : me.sendRequest(request)\n                    };\n\n                    me.emitCrudStoreEvents(pack.stores, 'loadStart');\n\n                    me.trigger('loadStart', { pack });\n                }\n                else {\n                    /**\n                     * Fired after {@link #function-load load request} was canceled by some {@link #event-beforeLoad}\n                     * listener or due to incomplete prior load request.\n                     * @event loadCanceled\n                     * @param {Scheduler.crud.AbstractCrudManager} source The CRUD manager.\n                     * @param {Object} pack The data package which contains data for all stores managed by the crud\n                     * manager.\n                     */\n                    me.trigger('loadCanceled', { pack });\n                    reject({ cancelled : true });\n                }\n            });\n        }\n\n        getActiveCrudManagerRequest(requestType) {\n            let request = this.activeRequests[requestType];\n\n            if (!request && this.trackResponseType) {\n                request = Object.values(this.activeRequests)[0];\n            }\n\n            return request;\n        }\n\n        //endregion\n\n        //region Changes (prepare, process, get)\n\n        prepareAddedRecordData(record, storeInfo) {\n            const\n                me                   = this,\n                { store }            = storeInfo,\n                { isTree }           = store,\n                phantomIdField       = storeInfo.phantomIdField || me.phantomIdField,\n                phantomParentIdField = storeInfo.phantomParentIdField || me.phantomParentIdField,\n                subStoreFields       = store.modelClass.allFields.filter(field => field.subStore),\n                cls                  = record.constructor,\n                data                 = Object.assign(record.persistableData, {\n                    [phantomIdField] : record.id\n                });\n\n            if (isTree) {\n                const { parent } = record;\n\n                if (parent && !parent.isRoot && parent.isPhantom) {\n                    data[phantomParentIdField] = parent.id;\n                }\n            }\n\n            if (me.resetIdsBeforeSync) {\n                ObjectHelper.deletePath(data, cls.idField);\n            }\n\n            // If we have store fields that should be persisted w/ Crud Manager protocol\n            subStoreFields.forEach(field => {\n                const subStore = record.get(field.name);\n\n                if (subStore.allCount) {\n                    data[field.dataSource] = {\n                        added : subStore.getRange()\n                            .map(record => me.prepareAddedRecordData(record, { store : subStore }))\n                    };\n                }\n            });\n\n            return data;\n        }\n\n        prepareAdded(list, storeInfo) {\n            return list.filter(record => record.isValid).map(record => this.prepareAddedRecordData(record, storeInfo));\n        }\n\n        prepareUpdated(list, storeInfo) {\n            const\n                { store }            = storeInfo,\n                { isTree }           = store,\n                writeAllFields       = storeInfo.writeAllFields || (storeInfo.writeAllFields !== false && this.writeAllFields),\n                phantomParentIdField = storeInfo.phantomParentIdField || this.phantomParentIdField,\n                subStoreFields       = store.modelClass.allFields.filter(field => field.subStore);\n\n            // TODO: root node included into store.modified\n            // need to get rid of it since we don't persist it\n            if (storeInfo.store.tree) {\n                const\n                    rootNode = storeInfo.store.rootNode;\n                list = list.filter(record => record !== rootNode);\n            }\n\n            return list.filter(record => record.isValid).reduce((data, record) => {\n                let recordData;\n\n                // write all fields\n                if (writeAllFields) {\n                    recordData = record.persistableData;\n                }\n                else {\n                    recordData = record.modificationDataToWrite;\n                }\n\n                if (isTree) {\n                    const { parent } = record;\n\n                    if (parent && !parent.isRoot && parent.isPhantom) {\n                        recordData[phantomParentIdField] = parent.id;\n                    }\n                }\n\n                // If we have store fields that should be persisted w/ Crud Manager protocal\n                subStoreFields.forEach(field => {\n                    const subStore = record.get(field.name);\n\n                    recordData[field.dataSource] = this.getCrudStoreChanges({ store : subStore });\n                });\n\n                // recordData can be null\n                if (!ObjectHelper.isEmpty(recordData)) {\n                    data.push(recordData);\n                }\n\n                return data;\n            }, []);\n        }\n\n        prepareRemoved(list) {\n            return list.map(record => {\n                const cls = record.constructor;\n\n                return ObjectHelper.setPath({}, cls.idField, record.id);\n            });\n        }\n\n        getCrudStoreChanges(storeDescriptor) {\n            const { store } = storeDescriptor;\n\n            let { added = [], modified : updated = [], removed = [] } = (store.changes || {}),\n                result;\n\n            if (added.length) added = this.prepareAdded(added, storeDescriptor);\n            if (updated.length) updated = this.prepareUpdated(updated, storeDescriptor);\n            if (removed.length) removed = this.prepareRemoved(removed);\n\n            // if this store has changes\n            if (added.length || updated.length || removed.length) {\n                result = {};\n\n                if (added.length) result.added = added;\n                if (updated.length) result.updated = updated;\n                if (removed.length) result.removed = removed;\n            }\n\n            return result;\n        }\n\n        getChangesetPackage() {\n            const { changes } = this;\n\n            return changes || this.forceSync\n                ? {\n                    type      : 'sync',\n                    requestId : this.requestId,\n                    revision  : this.crudRevision,\n                    ...changes\n                } : null;\n        }\n\n        //endregion\n\n        //region Apply\n\n        /**\n         * Returns current changes as an object consisting of added/modified/removed arrays of records for every\n         * managed store, keyed by each store's `id`. Returns `null` if no changes exist. Format:\n         *\n         * ```javascript\n         * {\n         *     resources : {\n         *         added    : [{ name : 'New guy' }],\n         *         modified : [{ id : 2, name : 'Mike' }],\n         *         removed  : [{ id : 3 }]\n         *     },\n         *     events : {\n         *         modified : [{  id : 12, name : 'Cool task' }]\n         *     },\n         *     ...\n         * }\n         * ```\n         *\n         * @property {Object}\n         * @readonly\n         * @category CRUD\n         */\n        get changes() {\n            const data = {};\n\n            this.crudStores.forEach(store => {\n                const changes = this.getCrudStoreChanges(store);\n\n                if (changes) {\n                    data[store.storeId] = changes;\n                }\n            });\n\n            return Object.keys(data).length > 0 ? data : null;\n        }\n\n        getRowsToApplyChangesTo({ store, storeId }, storeResponse, storePack) {\n            const\n                me             = this,\n                { modelClass } = store,\n                idDataSource   = modelClass.idField,\n                // request data\n                {\n                    updated : requestUpdated,\n                    removed : requestRemoved\n                }              = storePack || {};\n\n            let rows, removed, remote;\n\n            // If the response contains the store section\n            if (storeResponse) {\n                remote = true;\n\n                const respondedIds = {};\n\n                // responded record changes/removals\n                rows    = storeResponse.rows?.slice() || [];\n                removed = storeResponse.removed?.slice() || [];\n\n                // Collect hash w/ identifiers of responded records\n                [...rows, ...removed].forEach(responseRecord => {\n                    const id = ObjectHelper.getPath(responseRecord, idDataSource);\n\n                    respondedIds[id] = true;\n                });\n\n                // If it's told to support providing server changes only in response\n                // CrudManager should collect other records to commit from current requested data\n                if (me.supportShortSyncResponse) {\n                    // append records requested to update (if not there already)\n                    requestUpdated?.forEach(data => {\n                        const id = ObjectHelper.getPath(data, idDataSource);\n\n                        // if response doesn't include\n                        if (!respondedIds[id]) {\n                            rows.push({ [idDataSource] : id });\n                        }\n                    });\n                    // append records requested to remove (if not there already)\n                    requestRemoved?.forEach(data => {\n                        const id = ObjectHelper.getPath(data, idDataSource);\n\n                        // if response doesn't include\n                        if (!respondedIds[id]) {\n                            removed.push({ [idDataSource] : id });\n                        }\n                    });\n                }\n\n            }\n            // If there is no this store section we use records mentioned in the current request\n            else if (requestUpdated || requestRemoved) {\n                remote  = false;\n                rows    = requestUpdated;\n                removed = requestRemoved;\n            }\n\n            // return nullish \"rows\"/\"removed\" if no entries\n            rows    = rows?.length ? rows : null;\n            removed = removed?.length ? removed : null;\n\n            return {\n                rows,\n                removed,\n                remote\n            };\n        }\n\n        applyChangesToStore(storeDesc, storeResponse, storePack) {\n            const\n                me                = this,\n                phantomIdField    = storeDesc.phantomIdField || me.phantomIdField,\n                { store }         = storeDesc,\n                idField           = store.modelClass.getFieldDataSource('id'),\n                subStoreFields    = store.modelClass.allFields.filter(field => field.subStore),\n                // collect records we need to process\n                { rows, removed, remote } = me.getRowsToApplyChangesTo(storeDesc, storeResponse, storePack),\n                added = [],\n                updated = [];\n\n            // Convert to the { updated, added } format accepted by stores\n            if (rows) {\n                for (const data of rows) {\n                    // Existing records are updated\n                    if (store.getById(data[phantomIdField] ?? data[idField])) {\n                        updated.push(data);\n                    }\n                    // Others added\n                    else {\n                        added.push(data);\n                    }\n                }\n            }\n\n            const extraLogEntries = [];\n\n            // Handle sub-stores (if any)\n            if (updated.length && subStoreFields.length) {\n\n                updated.forEach(updateData => {\n                    const\n                        record = store.getById(updateData[phantomIdField] ?? updateData[idField]),\n                        // find the request portion related to the record\n                        recordRequest = storePack.added?.find(t => t[phantomIdField] == updateData[phantomIdField]) ||\n                            storePack.updated?.find(t => t[idField] == updateData[idField]);\n\n                    const extraLogInfo = {};\n\n                    subStoreFields.forEach(field => {\n                        const store = record.get(field.name);\n\n                        me.applyChangesToStore({ store }, updateData[field.dataSource],\n                            recordRequest?.[field.dataSource]\n                        );\n\n                        // We're putting the store field entry to the log\n                        // just to indicate the fact it was actually changed.\n                        // The value will not be used for comparison so we can use any.\n                        extraLogInfo[field.dataSource] = 'foo';\n\n                        delete updateData[field.dataSource];\n                    });\n\n                    extraLogEntries.push([record, extraLogInfo]);\n                });\n            }\n\n            // process added/updated records\n            const log = store.applyChangeset({ removed, added, updated }, null, phantomIdField, remote, true);\n\n            extraLogEntries.forEach(([record, logEntry]) => Object.assign(log.get(record.id), logEntry));\n\n            return log;\n        }\n\n        applySyncResponse(response, request) {\n            const\n                me     = this,\n                stores = me.orderedCrudStores;\n\n            me.applyingChangeset = me.applyingSyncResponse = true;\n            me.suspendChangesTracking();\n\n            for (const store of stores) {\n                me.applyChangesToStore(store, response[store.storeId], request?.pack?.[store.storeId]);\n            }\n\n            me.resumeChangesTracking(true);\n            me.applyingChangeset = me.applyingSyncResponse = false;\n        }\n\n        applyLoadResponse(response, options) {\n            this.applyingLoadResponse = true;\n\n            this.loadCrudManagerData(response, options);\n\n            this.applyingLoadResponse = false;\n        }\n\n        async applyResponse(request, response, options) {\n            const\n                me = this,\n                // in trackResponseType mode we check response type before deciding how to react on the response\n                responseType = me.trackResponseType && response.type || request.type;\n\n            switch (responseType) {\n                case 'load' :\n                    if (me.validateResponse) {\n                        me.validateLoadResponse(response);\n                    }\n\n                    me.applyLoadResponse(response, options);\n                    break;\n                case 'sync' :\n                    if (me.validateResponse) {\n                        me.validateSyncResponse(response, request);\n                    }\n\n                    me.applySyncResponse(response, request);\n                    break;\n            }\n        }\n\n        /**\n         * Applies a set of changes, as an object keyed by store id, to the affected stores. This function is intended\n         * to use in apps that handle their own data syncing, it is not needed when using the CrudManager approach.\n         *\n         * Example of a changeset:\n         * ```javascript\n         * project.applyChangeset({\n         *     events : {\n         *         added : [\n         *             { id : 10, name : 'Event 10', startDate : '2022-06-07' }\n         *         ],\n         *         updated : [\n         *             { id : 5, name : 'Changed' }\n         *         ],\n         *         removed : [\n         *             { id : 1 }\n         *         ]\n         *     },\n         *     resources : { ... },\n         *     ...\n         * });\n         * ```\n         *\n         * Optionally accepts a `transformFn` to convert an incoming changeset to the expected format.\n         * See {@link Core/data/Store#function-applyChangeset} for more details.\n         *\n         * @param {Object} changes Changeset to apply, an object keyed by store id where each value follows the\n         * format described in {@link Core/data/Store#function-applyChangeset}\n         * @param {Function} [transformFn] Optional function used to preprocess a changeset per store in a different\n         * format, should return an object with the format expected by {@link Core/data/Store#function-applyChangeset}\n         * @param {String} [phantomIdField] Field used by the backend when communicating a record being assigned a\n         * proper id instead of a phantom id\n         */\n        applyChangeset(changes, transformFn = null, phantomIdField, logChanges = false) {\n            const\n                me  = this,\n                log = logChanges ? new Map() : undefined;\n\n            me.suspendAutoSync();\n            me.suspendChangesTracking();\n\n            for (const { store, phantomIdField } of me.orderedCrudStores) {\n                if (changes[store.id]) {\n                    const storeLog = store.applyChangeset(\n                        changes[store.id],\n                        transformFn,\n                        phantomIdField || me.phantomIdField,\n                        // mark this changeset as remote to enforce it\n                        true,\n                        logChanges\n                    );\n\n                    if (storeLog) {\n                        log.set(store.id, storeLog);\n                    }\n                }\n            }\n\n            me.resumeChangesTracking(true);\n            me.resumeAutoSync(false);\n\n            return log;\n        }\n\n        //endregion\n\n        /**\n         * Generates unique request identifier.\n         * @internal\n         * @template\n         * @returns {Number} The request identifier.\n         * @category CRUD\n         */\n        get requestId() {\n            return Number.parseInt(`${Date.now()}${(this._requestId++)}`);\n        }\n\n        /**\n         * Persists changes made on the registered stores to the server and/or receives changes made on the backend.\n         * Usage:\n         *\n         * ```javascript\n         * // persist and run a callback on request completion\n         * crud.sync().then(\n         *     () => console.log(\"Changes saved...\"),\n         *     ({ response, cancelled }) => console.log(`Error: ${cancelled ? 'Cancelled' : response.message}`)\n         * );\n         * ```\n         *\n         * ** Note: ** If there is an incomplete sync request in progress then system will queue the call and delay it\n         * until previous request completion.\n         * In this case {@link #event-syncDelayed} event will be fired.\n         *\n         * ** Note: ** Please take a look at {@link #config-autoSync} config. This option allows to persist changes\n         * automatically after any data modification.\n         *\n         * ** Note: ** By default a sync request is only sent if there are any local {@link #property-changes}. To\n         * always send a request when calling this function, configure {@link #config-forceSync} as `true`.\n         *\n         * @returns {Promise} Promise, which is resolved if request was successful.\n         * Both the resolve and reject functions are passed a `state` object. State object has the following structure:\n         * ```\n         * {\n         *     cancelled       : Boolean, // **optional** flag, which is present when promise was rejected\n         *     rawResponse     : String,  // raw response from ajax request, either response xml or text\n         *     rawResponseText : String,  // raw response text as String from ajax request\n         *     response        : Object,  // processed response in form of object\n         * }\n         * ```\n         * If promise was rejected by the {@link #event-beforeSync} event, `state` object will have this structure:\n         * ```\n         * {\n         *     cancelled : true\n         * }\n         * ```\n         * @category CRUD\n         * @async\n         */\n        sync() {\n            const me = this;\n\n            // A direct call to sync cancels any outstanding autoSync\n            me.clearTimeout('autoSync');\n\n            if (me.activeRequests.sync) {\n                // let's delay this call and start it only after server response\n                /**\n                 * Fires after {@link #function-sync sync request} was delayed due to incomplete previous one.\n                 * @event syncDelayed\n                 * @param {Scheduler.crud.AbstractCrudManager} source The CRUD manager.\n                 * @param {Object} arguments The arguments of {@link #function-sync} call.\n                 */\n                me.trigger('syncDelayed');\n\n                // Queue sync request after current one\n                return me.activeSyncPromise = me.activeSyncPromise.finally(() => me.sync());\n            }\n\n            // Store current request promise. While this one is pending, all following sync requests will create chain\n            // of sequential promises\n            return me.activeSyncPromise = new Promise((resolve, reject) => {\n                // get current changes set package\n                const pack = me.getChangesetPackage();\n\n                // if no data to persist we resolve immediately\n                if (!pack) {\n                    resolve(null);\n                    return;\n                }\n\n                /**\n                 * Fires before {@link #function-sync sync request} is sent. Return `false` to cancel sync request.\n                 *\n                 * ```javascript\n                 * crudManager.on('beforesync', function() {\n                 *     // cannot persist changes before at least one record is added\n                 *     // to the `someStore` store\n                 *     if (!someStore.getCount()) return false;\n                 * });\n                 * ```\n                 * @event beforeSync\n                 * @param {Scheduler.crud.AbstractCrudManager} source The CRUD manager.\n                 * @param {Object} pack The data package which contains data for all stores managed by the crud manager.\n                 */\n                if (me.trigger('beforeSync', { pack }) !== false) {\n\n                    me.trigger('syncStart', { pack });\n\n                    // keep active request details\n                    me.activeRequests.sync = {\n                        type : 'sync',\n                        pack,\n                        resolve,\n                        reject,\n                        id   : pack.requestId,\n                        desc : me.sendRequest({\n                            id      : pack.requestId,\n                            data    : me.encode(pack),\n                            type    : 'sync',\n                            success : me.onCrudRequestSuccess,\n                            failure : me.onCrudRequestFailure,\n                            thisObj : me\n                        })\n                    };\n                }\n                else {\n                    /**\n                     * Fires after {@link #function-sync sync request} was canceled by some {@link #event-beforeSync} listener.\n                     * @event syncCanceled\n                     * @param {Scheduler.crud.AbstractCrudManager} source The CRUD manager.\n                     * @param {Object} pack The data package which contains data for all stores managed by the crud manager.\n                     */\n                    me.trigger('syncCanceled', { pack });\n                    reject({ cancelled : true });\n                }\n            }).catch(error => {\n                // If the request was not cancelled in beforeSync listener, forward the error so the user's `catch` handler can catch it\n                if (error && !error.cancelled) {\n                    throw error;\n                }\n\n                // Pass the error object as a param to the next `then` chain\n                return error;\n            });\n        }\n\n        async onCrudRequestSuccess(rawResponse, fetchOptions, request) {\n            const\n                me = this,\n                {\n                    type : requestType,\n                    id   : requestId\n                }  = request;\n\n            if (me.isDestroyed) return;\n\n            let responseText = '';\n\n            request = me.activeRequests[requestType];\n\n            // we throw exception below to let events trigger first in internalOnResponse() call\n            try {\n                responseText = await rawResponse.text();\n            }\n            catch (e) {\n            }\n\n            // since we break the method w/ promises chain ..need to check if the instance is not destroyed in the meantime\n            if (me.isDestroyed) return;\n\n            // This situation should never occur.\n            // In the load() method, if a load is called while there is a load\n            // ongoing, the ongoing Transport request is cancelled and loadCanceled triggered.\n            // But having got here, it's too late to cancel a Transport request, so\n            // the operation is unregistered below.\n            // In the sync() method, if a sync is called while there is a sync\n            // ongoing, it waits until completion, before syncing.\n            // The activeRequest for any operation should NEVER be able to be\n            // replaced while this operation is ongoing, so this must be fatal.\n            if (request?.id !== requestId) {\n                throw new Error(`Interleaved ${requestType} operation detected`);\n            }\n\n            // Reset the active request info before we enter async code which could allow\n            // application code to run which could potentially call another request.\n            // It is too late for this request to be canceled - the activeRequest represented\n            // the Transport object and that has completed now.\n            me.activeRequests[requestType] = null;\n\n            const response = await me.internalOnResponse(request, responseText, fetchOptions);\n\n            // since we break the method w/ promises chain ..need to check if the instance is not destroyed in the meantime\n            if (me.isDestroyed) return;\n\n            if (!response || (me.skipSuccessProperty ? response?.success === false : !response?.success)) {\n                const error = {\n                    rawResponse,\n                    response,\n                    request\n                };\n                if (response?.message) {\n                    error.message = response.message;\n                }\n                request.reject(new CrudManagerRequestError(error));\n            }\n\n            // Successful request type done flag (this.crudLoaded or this.crudSynced)..\n            me['crud' + StringHelper.capitalize(request.type) + 'ed'] = true;\n\n            request.resolve({ response, rawResponse, responseText, request });\n        }\n\n        async onCrudRequestFailure(rawResponse, fetchOptions, request) {\n            const me = this;\n\n            if (me.isDestroyed) return;\n\n            request = me.activeRequests[request.type];\n\n            const\n                signal      = fetchOptions?.abortController?.signal,\n                wasAborted  = Boolean(signal?.aborted);\n\n            if (!wasAborted) {\n                let response,\n                    responseText = '';\n\n                try {\n                    responseText = await rawResponse.text();\n                    response = me.decode(responseText);\n                }\n                catch (e) {\n                }\n\n                // since we break the method w/ promises chain ..need to check if the instance is not destroyed in the meantime\n                if (me.isDestroyed) return;\n\n                me.triggerFailedRequestEvents(request, response, responseText, fetchOptions);\n\n                // since we break the method w/ promises chain ..need to check if the instance is not destroyed in the meantime\n                if (me.isDestroyed) return;\n\n                request.reject(new CrudManagerRequestError({\n                    rawResponse,\n                    request\n                }));\n            }\n\n            // reset the active request info\n            me.activeRequests[request.type] = null;\n        }\n\n        /**\n         * Accepts all changes in all stores, resets the modification tracking:\n         * * Clears change tracking for all records\n         * * Clears added\n         * * Clears modified\n         * * Clears removed\n         * Leaves the store in an \"unmodified\" state.\n         * @category CRUD\n         */\n        acceptChanges() {\n            this.crudStores.forEach(store => store.store.acceptChanges());\n        }\n\n        /**\n         * Reverts all changes in all stores and re-inserts any records that were removed locally. Any new uncommitted\n         * records will be removed.\n         * @category CRUD\n         */\n        revertChanges() {\n            // the method aliases revertCrudStoreChanges\n            this.revertCrudStoreChanges();\n        }\n\n        revertCrudStoreChanges() {\n            this.orderedCrudStores.forEach(store => store.store.revertChanges());\n        }\n\n        /**\n         * Removes all stores and cancels active requests.\n         * @category CRUD\n         * @internal\n         */\n        doDestroy() {\n            const\n                me             = this,\n                { load, sync } = me.activeRequests;\n\n            load && me.cancelRequest(load.desc, load.reject);\n            sync && me.cancelRequest(sync.desc, sync.reject);\n\n            while (me.crudStores.length > 0) {\n                me.removeCrudStore(me.crudStores[0]);\n            }\n\n            super.doDestroy && super.doDestroy();\n        }\n    };\n};\n","import Base from '../../../Core/Base.js';\nimport AjaxHelper from '../../../Core/helper/AjaxHelper.js';\nimport Objects from '../../../Core/helper/util/Objects.js';\n\n/**\n * @module Scheduler/crud/transport/AjaxTransport\n */\n\n/**\n * Implements data transferring functional that can be used for {@link Scheduler.crud.AbstractCrudManager} super classing.\n * Uses the fetch API for transport, https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API\n *\n * @example\n * // create a new CrudManager using AJAX as a transport system and JSON for encoding\n * class MyCrudManager extends AjaxTransport(JsonEncode(AbstractCrudManager)) {}\n *\n * @abstract\n * @mixin\n */\nexport default Target => class AjaxTransport extends (Target || Base) {\n    static get $name() {\n        return 'AjaxTransport';\n    }\n\n    /**\n     * Configuration of the AJAX requests used by _Crud Manager_ to communicate with a server-side.\n     *\n     * ```javascript\n     * transport : {\n     *     load : {\n     *         url       : 'http://mycool-server.com/load.php',\n     *         // HTTP request parameter used to pass serialized \"load\"-requests\n     *         paramName : 'data',\n     *         // pass extra HTTP request parameter\n     *         params    : {\n     *             foo : 'bar'\n     *         }\n     *     },\n     *     sync : {\n     *         url     : 'http://mycool-server.com/sync.php',\n     *         // specify Content-Type for requests\n     *         headers : {\n     *             'Content-Type' : 'application/json'\n     *         }\n     *     }\n     * }\n     *```\n     * Since the class uses Fetch API you can use\n     * any its [Request interface](https://developer.mozilla.org/en-US/docs/Web/API/Request) options:\n     *\n     * ```javascript\n     * transport : {\n     *     load : {\n     *         url         : 'http://mycool-server.com/load.php',\n     *         // HTTP request parameter used to pass serialized \"load\"-requests\n     *         paramName   : 'data',\n     *         // pass few Fetch API options\n     *         method      : 'GET',\n     *         credentials : 'include',\n     *         cache       : 'no-cache'\n     *     },\n     *     sync : {\n     *         url         : 'http://mycool-server.com/sync.php',\n     *         // specify Content-Type for requests\n     *         headers     : {\n     *             'Content-Type' : 'application/json'\n     *         },\n     *         credentials : 'include'\n     *     }\n     * }\n     *```\n     *\n     * An object where you can set the following possible properties:\n     * @config {Object} transport\n     * @property {Object} transport.load Load requests configuration:\n     * @property {String} transport.load.url URL to request for data loading.\n     * @property {String} [transport.load.method='GET'] HTTP method to be used for load requests.\n     * @property {String} [transport.load.paramName='data'] Name of the parameter that will contain a serialized `load`\n     * request. The value is mandatory for requests using `GET` method (default for `load`) so if the value is not\n     * provided `data` string is used as default.\n     * This value is optional for HTTP methods like `POST` and `PUT`, the request body will be used for data\n     * transferring in these cases.\n     * @property {Object} [transport.load.params] An object containing extra HTTP parameters to pass to the server when\n     * sending a `load` request.\n     *\n     * ```javascript\n     * transport : {\n     *     load : {\n     *         url       : 'http://mycool-server.com/load.php',\n     *         // HTTP request parameter used to pass serialized \"load\"-requests\n     *         paramName : 'data',\n     *         // pass extra HTTP request parameter\n     *         // so resulting URL will look like: http://mycool-server.com/load.php?userId=123456&data=...\n     *         params    : {\n     *             userId : '123456'\n     *         }\n     *     },\n     *     ...\n     * }\n     * ```\n     * @property {Object<String,String>} [transport.load.headers] An object containing headers to pass to each server request.\n     *\n     * ```javascript\n     * transport : {\n     *     load : {\n     *         url       : 'http://mycool-server.com/load.php',\n     *         // HTTP request parameter used to pass serialized \"load\"-requests\n     *         paramName : 'data',\n     *         // specify Content-Type for \"load\" requests\n     *         headers   : {\n     *             'Content-Type' : 'application/json'\n     *         }\n     *     },\n     *     ...\n     * }\n     * ```\n     * @property {Object} [transport.load.fetchOptions] **DEPRECATED:** Any Fetch API options can be simply defined on\n     * the upper configuration level:\n     * ```javascript\n     * transport : {\n     *     load : {\n     *         url          : 'http://mycool-server.com/load.php',\n     *         // HTTP request parameter used to pass serialized \"load\"-requests\n     *         paramName    : 'data',\n     *         // Fetch API options\n     *         method       : 'GET',\n     *         credentials  : 'include'\n     *     },\n     *     ...\n     * }\n     * ```\n     * @property {Object} [transport.load.requestConfig] **DEPRECATED:** The config options can be defined on the upper\n     * configuration level.\n     * @property {Object} transport.sync Sync requests (`sync` in further text) configuration:\n     * @property {String} transport.sync.url URL to request for `sync`.\n     * @property {String} [transport.sync.method='POST'] HTTP request method to be used for `sync`.\n     * @property {String} [transport.sync.paramName=undefined] Name of the parameter in which `sync` data will be\n     * transferred. This value is optional for requests using methods like `POST` and `PUT`, the request body will be\n     * used for data transferring in this case (default for `sync`). And the value is mandatory for requests using `GET`\n     * method (if the value is not provided `data` string will be used as fallback).\n     * @property {Object} [transport.sync.params] HTTP parameters to pass with an HTTP request handling `sync`.\n     *\n     * ```javascript\n     * transport : {\n     *     sync : {\n     *         url    : 'http://mycool-server.com/sync.php',\n     *         // extra HTTP request parameter\n     *         params : {\n     *             userId : '123456'\n     *         }\n     *     },\n     *     ...\n     * }\n     * ```\n     * @property {Object<String,String>} [transport.sync.headers] HTTP headers to pass with an HTTP request handling `sync`.\n     *\n     * ```javascript\n     * transport : {\n     *     sync : {\n     *         url     : 'http://mycool-server.com/sync.php',\n     *         // specify Content-Type for \"sync\" requests\n     *         headers : {\n     *             'Content-Type' : 'application/json'\n     *         }\n     *     },\n     *     ...\n     * }\n     * ```\n     * @property {Object} [transport.sync.fetchOptions] **DEPRECATED:** Any Fetch API options can be simply defined on\n     * the upper configuration level:\n     * ```javascript\n     * transport : {\n     *     sync : {\n     *         url         : 'http://mycool-server.com/sync.php',\n     *         credentials : 'include'\n     *     },\n     *     ...\n     * }\n     * ```\n     * @property {Object} [transport.sync.requestConfig] **DEPRECATED:** The config options can be defined on the upper\n     * configuration level.\n     * @category CRUD\n     */\n\n    static get defaultMethod() {\n        return {\n            load : 'GET',\n            sync : 'POST'\n        };\n    }\n\n    /**\n     * Cancels a sent request.\n     * @param {Promise} requestPromise The Promise object wrapping the Request to be cancelled.\n     * The _requestPromise_ is the value returned from the corresponding {@link #function-sendRequest} call.\n     * @category CRUD\n     */\n    cancelRequest(requestPromise, reject) {\n        requestPromise.abort?.();\n        // TODO fix this\n        if (!this.isDestroying) {\n            reject({ cancelled : true });\n        }\n    }\n\n    shouldUseBodyForRequestData(packCfg, method, paramName) {\n        return !(method === 'HEAD' || method === 'GET') && !paramName;\n    }\n\n    /**\n     * Sends a _Crud Manager_ request to the server.\n     * @param {Object} request The request configuration object having following properties:\n     * @param {'load'|'sync'} request.type The request type. Either `load` or `sync`.\n     * @param {String} request.url The URL for the request. Overrides the URL defined in the `transport` object\n     * @param {String} request.data The encoded _Crud Manager_ request data.\n     * @param {Object} request.params An object specifying extra HTTP params to send with the request.\n     * @param {Function} request.success A function to be started on successful request transferring.\n     * @param {String} request.success.rawResponse `Response` object returned by the [fetch api](https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API).\n     * @param {Function} request.failure A function to be started on request transfer failure.\n     * @param {String} request.failure.rawResponse `Response` object returned by the [fetch api](https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API).\n     * @param {Object} request.thisObj `this` reference for the above `success` and `failure` functions.\n     * @returns {Promise} The fetch Promise object.\n     * @fires beforeSend\n     * @async\n     * @category CRUD\n     */\n    sendRequest(request) {\n        const\n            me              = this,\n            { data }        = request,\n            transportConfig = me.transport[request.type] || {},\n            // clone parameters defined for this type of request\n            requestConfig   = Objects.assign({}, transportConfig, transportConfig.requestConfig);\n\n        if (request.url) {\n            requestConfig.url = request.url;\n        }\n\n        requestConfig.method = requestConfig.method || AjaxTransport.defaultMethod[request.type];\n        requestConfig.params = Objects.assign(requestConfig.params || {}, request.params);\n\n        let { paramName } = requestConfig;\n\n        // transfer package in the request body for some types of HTTP requests\n        if (me.shouldUseBodyForRequestData(transportConfig, requestConfig.method, paramName)) {\n            requestConfig.body = data;\n\n            // for requests having body we set Content-Type to 'application/json' by default\n            requestConfig.headers = requestConfig.headers || {};\n            requestConfig.headers['Content-Type'] = requestConfig.headers['Content-Type'] || 'application/json';\n        }\n        else {\n            // when we don't use body paramName is mandatory so fallback to 'data' as name\n            paramName = paramName || 'data';\n\n            requestConfig.params[paramName] = data;\n        }\n\n        if (!requestConfig.url) {\n            throw new Error('Trying to request without URL specified');\n        }\n\n        // sanitize request config\n        delete requestConfig.requestConfig;\n        delete requestConfig.paramName;\n\n        let ajaxPromise, resultPromise;\n\n        function performSend() {\n            // AjaxHelper.fetch call it \"queryParams\"\n            requestConfig.queryParams = requestConfig.params;\n\n            delete requestConfig.params;\n\n            let cancelled = false;\n\n            const fetchOptions = Objects.assign({}, requestConfig, requestConfig.fetchOptions);\n\n            ajaxPromise  = AjaxHelper.fetch(requestConfig.url, fetchOptions);\n\n            return ajaxPromise.catch(error => {\n                ajaxPromise.done = true;\n\n                me.trigger?.('responseReceived', { success : false });\n\n                const signal = fetchOptions.abortController?.signal;\n\n                if (signal) {\n                    cancelled = signal.aborted;\n\n                    if (!cancelled) {\n                        console.warn(error);\n                    }\n                }\n\n                return { error, cancelled };\n            }).then(response => {\n                ajaxPromise.done = true;\n\n                me.trigger?.('responseReceived', { success : Boolean(response?.ok) });\n\n                const callback = response?.ok ? request.success : request.failure;\n\n                return callback?.call(request.thisObj || me, response, fetchOptions, request);\n            });\n        }\n\n        /**\n         * Fires before a request is sent to the server.\n         *\n         * ```javascript\n         * crudManager.on('beforeSend', function ({ params, type }) {\n         *     // let's set \"sync\" request parameters\n         *     if (type == 'sync') {\n         *         // dynamically depending on \"flag\" value\n         *         if (flag) {\n         *             params.foo = 'bar';\n         *         }\n         *         else {\n         *             params.foo = 'smth';\n         *         }\n         *     }\n         * });\n         * ```\n         * @event beforeSend\n         * @param {Scheduler.crud.AbstractCrudManager} crudManager The CRUD manager.\n         * @param {Object} params HTTP request params to be passed in the request URL.\n         * @param {'sync'|'load'} type CrudManager request type (`load`/`sync`)\n         * @param {Object} requestConfig Configuration object for Ajax request call\n         * @async\n         */\n        const beforeSendResult = me.trigger('beforeSend', {\n            params : requestConfig.params,\n            type   : request.type,\n            requestConfig,\n            config : request\n        });\n\n        if (Objects.isPromise(beforeSendResult)) {\n            resultPromise = beforeSendResult.then(performSend);\n        }\n        else {\n            resultPromise = performSend();\n        }\n\n        resultPromise.abort = () => {\n            if (!ajaxPromise.done) {\n                ajaxPromise.abort?.();\n            }\n        };\n\n        return resultPromise;\n    }\n};\n","import Base from '../../../Core/Base.js';\nimport StringHelper from '../../../Core/helper/StringHelper.js';\n\n/**\n * @module Scheduler/crud/encoder/JsonEncoder\n */\n\n/**\n * Implements data encoding functional that should be mixed to a {@link Scheduler.crud.AbstractCrudManager} sub-class.\n * Uses _JSON_ as an encoding system.\n *\n * @example\n * // create a new CrudManager using AJAX as a transport system and JSON for encoding\n * class MyCrudManager extends JsonEncode(AjaxTransport(AbstractCrudManager)) {}\n *\n * @mixin\n */\nexport default Target => class JsonEncoder extends (Target || Base) {\n    static get $name() {\n        return 'JsonEncoder';\n    }\n\n    static get defaultConfig() {\n        return {\n            /**\n             * Configuration of the JSON encoder used by the _Crud Manager_.\n             *\n             * @config {Object}\n             * @property {Object} encoder.requestData Static data to send with the data request.\n             *\n             * ```js\n             * new CrudManager({\n             *     // add static \"foo\" property to all requests data\n             *     encoder : {\n             *         requestData : {\n             *             foo : 'Bar'\n             *         }\n             *     },\n             *     ...\n             * });\n             * ```\n             *\n             * The above snippet will result adding \"foo\" property to all requests data:\n             *\n             * ```json\n             *     {\n             *         \"requestId\"   : 756,\n             *         \"type\"        : \"load\",\n             *\n             *         \"foo\"         : \"Bar\",\n             *\n             *         \"stores\"      : [\n             *             ...\n             * ```\n             * @category CRUD\n             */\n            encoder : {}\n        };\n    }\n\n    /**\n     * Encodes a request object to _JSON_ encoded string. If encoding fails (due to circular structure), it returns null.\n     * Supposed to be overridden in case data provided by the _Crud Manager_ has to be transformed into format requested by server.\n     * @param {Object} requestData The request to encode.\n     * @returns {String} The encoded request.\n     * @category CRUD\n     */\n    encode(requestData) {\n        requestData = Object.assign({}, this.encoder?.requestData, requestData);\n\n        return StringHelper.safeJsonStringify(requestData);\n    }\n\n    /**\n     * Decodes (parses) a _JSON_ response string to an object. If parsing fails, it returns null.\n     * Supposed to be overridden in case data provided by server has to be transformed into format requested by the _Crud Manager_.\n     * @param {String} responseText The response text to decode.\n     * @returns {Object} The decoded response.\n     * @category CRUD\n     */\n    decode(responseText) {\n        return StringHelper.safeJsonParse(responseText);\n    }\n};\n","/**\n * @module Scheduler/crud/mixin/CrudManagerView\n */\n\nimport LoadMaskable from '../../../Core/mixin/LoadMaskable.js';\nimport Mask from '../../../Core/widget/Mask.js';\n\n/**\n * Mixin to track Crud Manager requests to the server and mask the view during them. For masking it\n * uses the {@link Core.mixin.LoadMaskable#config-loadMask} and {@link Core.mixin.LoadMaskable#config-syncMask}\n * properties.\n *\n * @mixin\n * @extends Core/mixin/LoadMaskable\n */\nexport default Target => class CrudManagerView extends Target.mixin(LoadMaskable) {\n    static get $name() {\n        return 'CrudManagerView';\n    }\n\n    static config = {\n        clearMaskDelay : null,\n\n        // Test environment may be in a poll wait for mask to disappear.\n        // Hiding the mask immediately, before the load sequence ends releases it too early\n        testConfig : {\n            clearMaskDelay : 0\n        }\n    };\n\n    //region Init\n\n    afterConstruct() {\n        super.afterConstruct();\n\n        const { crudManager, project } = this;\n\n        if (this.loadMask && (crudManager || project).isCrudManagerLoading) {\n            // Show loadMask if crud manager is already loading\n            this.onCrudManagerLoadStart();\n        }\n    }\n\n    //endregion\n\n    /**\n     * Applies the {@link Scheduler.crud.mixin.CrudManagerView#config-syncMask} as the\n     * {@link Core.widget.Widget#config-masked mask} for this widget.\n     * @internal\n     */\n    applySyncMask() {\n        const { syncMask } = this;\n\n        if (syncMask) {\n            this.masked = Mask.mergeConfigs(this.loadMaskDefaults, syncMask);\n        }\n    }\n\n    /**\n     * Hooks up crud manager listeners\n     * @private\n     * @category Store\n     */\n    bindCrudManager(crudManager) {\n        this.detachListeners('crudManager');\n\n        crudManager?.ion({\n            name             : 'crudManager',\n            loadStart        : 'onCrudManagerLoadStart',\n            load             : 'onCrudManagerLoad',\n            loadCanceled     : 'onCrudManagerLoadCanceled',\n            syncStart        : 'onCrudManagerSyncStart',\n            sync             : 'onCrudManagerSync',\n            syncCanceled     : 'onCrudManagerSyncCanceled',\n            requestFail      : 'onCrudManagerRequestFail',\n            responseReceived : 'onAjaxTransportResponseReceived',\n            thisObj          : this\n        });\n    }\n\n    onCrudManagerLoadStart() {\n        // Show loadMask before crud manager starts loading\n        this.applyLoadMask();\n        this.toggleEmptyText?.();\n    }\n\n    onCrudManagerSyncStart() {\n        this.applySyncMask();\n    }\n\n    onCrudManagerRequestFinalize(successful = true, requestType, response) {\n        const\n            me = this;\n\n        if (successful) {\n            me.toggleEmptyText?.();\n        }\n        else {\n            if (!me.masked) {\n                me.applyLoadMask();\n            }\n            // Do not remove. Assertion strings for Localization sanity check.\n            // 'L{GridBase.loadFailedMessage}'\n            // 'L{GridBase.syncFailedMessage}'\n\n            me.applyMaskError(\n                `<div class=\"b-grid-load-failure\">\n                    <div class=\"b-grid-load-fail\">${me.L(`L{GridBase.${requestType}FailedMessage}`)}</div>\n                    ${response && response.message ? `<div class=\"b-grid-load-fail\">${me.L('L{CrudManagerView.serverResponseLabel}')} ${response.message}</div>` : ''}\n                </div>`);\n        }\n    }\n\n    onCrudManagerLoadCanceled() {\n        this.onCrudManagerRequestFinalize(true, 'load');\n    }\n\n    onCrudManagerSyncCanceled() {\n        this.onCrudManagerRequestFinalize(true, 'sync');\n    }\n\n    onCrudManagerLoad() {\n        this.onCrudManagerRequestFinalize(true, 'load');\n    }\n\n    onCrudManagerSync() {\n        this.onCrudManagerRequestFinalize(true, 'sync');\n\n        // Repaint rows to have \"b-sch-dirty\" class up-to-date on the event elements.\n        // Needed when no new changes come from server, and there is nothing to apply back to the records.\n        // TODO: when https://github.com/bryntum/support/issues/2720 is done, we can refresh specific rows (note, Calendar has many views)\n        this.refresh();\n    }\n\n    onCrudManagerRequestFail({ requestType, response }) {\n        this.onCrudManagerRequestFinalize(false, requestType, response);\n    }\n\n    onAjaxTransportResponseReceived() {\n        const me = this;\n        if (me.clearMaskDelay != null) {\n            me.setTimeout(() => me.masked = null, me.clearMaskDelay);\n        }\n        else {\n            me.masked = null;\n        }\n    }\n\n    get widgetClass() {}\n};\n","import Base from '../../../Core/Base.js';\n\n/**\n * @module Scheduler/data/mixin/PartOfProject\n */\n\n/**\n * This is a mixin, included in all models and stores of the Scheduler project. It provides a common API for accessing\n * all stores of the project.\n *\n * @mixin\n */\nexport default Target => class PartOfProject extends (Target || Base) {\n\n    /**\n     * Returns the project this entity belongs to.\n     *\n     * @member {Scheduler.model.ProjectModel} project\n     * @readonly\n     * @category Project\n     */\n\n    /**\n     * Returns the event store of the project this entity belongs to.\n     *\n     * @member {Scheduler.data.EventStore} eventStore\n     * @readonly\n     * @category Project\n     */\n\n    /**\n     * Returns the dependency store of the project this entity belongs to.\n     *\n     * @member {Scheduler.data.DependencyStore} dependencyStore\n     * @readonly\n     * @category Project\n     */\n\n    /**\n     * Returns the assignment store of the project this entity belongs to.\n     *\n     * @member {Scheduler.data.AssignmentStore} assignmentStore\n     * @readonly\n     * @category Project\n     */\n\n    /**\n     * Returns the resource store of the project this entity belongs to.\n     *\n     * @member {Scheduler.data.ResourceStore} resourceStore\n     * @readonly\n     * @category Project\n     */\n\n    static get $name() {\n        return 'PartOfProject';\n    }\n};\n","/**\n * @module Scheduler/model/mixin/AssignmentModelMixin\n */\n\n/**\n * Mixin that holds configuration shared between assignments in Scheduler and Scheduler Pro.\n * @mixin\n */\nexport default Target => class AssignmentModelMixin extends Target {\n    static get $name() {\n        return 'AssignmentModelMixin';\n    }\n\n    /**\n     * Set value for the specified field(s), triggering engine calculations immediately. See\n     * {@link Core.data.Model#function-set Model#set()} for arguments.\n     *\n     * ```javascript\n     * assignment.set('resourceId', 2);\n     * // assignment.resource is not yet resolved\n     *\n     * await assignment.setAsync('resourceId', 2);\n     * // assignment.resource is resolved\n     * ```\n     *\n     * @param {String|Object} field The field to set value for, or an object with multiple values to set in one call\n     * @param {*} value Value to set\n     * @param {Boolean} [silent=false] Set to true to not trigger events\n     * automatically.\n     * @function setAsync\n     * @category Editing\n     * @async\n     */\n\n    //region Fields\n\n    static get fields() {\n        return [\n            /**\n             * Id for the resource to assign to\n             * @field {String|Number} resourceId\n             * @category Common\n             */\n            'resourceId',\n\n            /**\n             * Id for the event to assign\n             * @field {String|Number} eventId\n             * @category Common\n             */\n            'eventId',\n\n            /**\n             * Specify `false` to opt out of drawing dependencies from/to this assignment\n             * @field {Boolean} drawDependencies\n             * @category Common\n             */\n            { name : 'drawDependencies', type : 'boolean' },\n\n            'event',\n\n            'resource'\n        ];\n    }\n\n    //endregion\n\n    construct(data, ...args) {\n        data = data || {};\n\n        const\n            eventId    = data[this.fieldMap.eventId.dataSource],\n            resourceId = data[this.fieldMap.resourceId.dataSource];\n\n        // Engine expects event and resource, not eventId and resourceId. We need to support both\n        if (eventId != null) {\n            data.event = eventId;\n        }\n\n        if (resourceId != null) {\n            data.resource = resourceId;\n        }\n\n        super.construct(data, ...args);\n    }\n\n    //region Event & resource\n\n    /**\n     * A key made up from the event id and the id of the resource assigned to.\n     * @property eventResourceKey\n     * @readonly\n     * @internal\n     */\n    get eventResourceKey() {\n        return this.buildEventResourceKey(this.event, this.resource);\n    }\n\n    buildEventResourceKey(event, resource) {\n        let eventKey, resourceKey;\n\n        if (event) {\n            eventKey = event.isModel ? event.id : event;\n        }\n        else {\n            eventKey = this.internalId;\n        }\n\n        if (resource) {\n            resourceKey = resource.isModel ? resource.id : resource;\n        }\n        else {\n            resourceKey = this.internalId;\n        }\n        return `${eventKey}-${resourceKey}`;\n    }\n\n    buildIndexKey({ event, resource }) {\n        return this.buildEventResourceKey(event, resource);\n    }\n\n    set(field, value, ...args) {\n        const toSet = this.fieldToKeys(field, value);\n\n        // If resource was set, store its id as resourceId and announce it\n        if ('resource' in toSet) {\n            if (toSet.resource?.id) {\n                toSet.resourceId = toSet.resource.id;\n            }\n        }\n        // If resourceId was set, we need to replace resource to have it re-referenced in engine\n        else if ('resourceId' in toSet && this.constructor.isProAssignmentModel) {\n            toSet.resource = toSet.resourceId;\n        }\n\n        // Same for event\n        if ('event' in toSet) {\n            if (toSet.event?.id) {\n                toSet.eventId = toSet.event.id;\n            }\n        }\n        else if ('eventId' in toSet && this.constructor.isProAssignmentModel) {\n            toSet.event = toSet.eventId;\n        }\n\n        return super.set(toSet, null, ...args);\n    }\n\n    afterChange(toSet, wasSet, silent, fromRelationUpdate, skipAccessors) {\n        const me = this;\n\n        // Make sure Core Engine implementation notices \"resourceId\" change\n        // and updates \"resource\" field value respectively\n        if (!me.constructor.isProAssignmentModel && wasSet?.resourceId &&\n            me.resource?.id !== wasSet.resourceId.value) {\n            me.resource = wasSet.resourceId.value;\n        }\n        // If that's non-Core Engine and we have \"eventId\" indicated as just set\n        // and there was also \"event\" passed to set but it was not set\n        // and if that happens when propagating after sync-response applied\n        // - this means an event has changed its identifier\n        // (this fixes 11_backend.t.js in the Gantt)\n        else if (me.constructor.isProAssignmentModel && me.project?.propagatingSyncChanges &&\n            wasSet?.eventId && !wasSet?.event &&\n            (toSet.event.value === wasSet.eventId.value || toSet.event.value.id === wasSet.eventId.value)\n        ) {\n            // sanitize both wasSet and meta.modified\n            delete wasSet.eventId;\n            delete me.meta.modified.eventId;\n        }\n\n        return super.afterChange(...arguments);\n    }\n\n    // Settings resourceId relays to `resource`. Underlying data will be updated in `afterChange()` above\n    set resourceId(value) {\n        const { resource } = this;\n\n        // When assigning a new id to a resource, it will update the resourceId of the assignment. But the assignments\n        // resource is still the same so we need to announce here\n        if (resource?.isModel && resource.id === value) {\n            this.set('resourceId', value);\n        }\n        else {\n            this.resource = value;\n        }\n    }\n\n    get resourceId() {\n        // If assigned using `resource` and not `resourceId` there will be no resourceId\n        return this.get('resourceId') || this.resource?.id;\n    }\n\n    // Same for event as for resourceId\n    set eventId(value) {\n        const { event } = this;\n\n        // When assigning a new id to an event, it will update the eventId of the assignment. But the assignments\n        // event is still the same so we need to announce here\n        if (event?.isModel && event.id === value) {\n            this.set('eventId', value);\n        }\n        else {\n            this.event = value;\n        }\n    }\n\n    get eventId() {\n        // If assigned using `event` and not `eventId` there will be no eventId\n        return this.get('eventId') || this.event?.id;\n    }\n\n    /**\n     * Convenience property to get the name of the associated event.\n     * @property {String}\n     * @readonly\n     */\n    get eventName() {\n        return this.event?.name;\n    }\n\n    /**\n     * Convenience property to get the name of the associated resource.\n     * @property {String}\n     * @readonly\n     */\n    get resourceName() {\n        return this.resource?.name;\n    }\n\n    // TODO : Deprecate in favor of `get resource`\n    /**\n     * Returns the resource associated with this assignment.\n     *\n     * @returns {Scheduler.model.ResourceModel} Instance of resource\n     */\n    getResource() {\n        return this.resource;\n    }\n\n    //endregion\n\n    // Convenience getter to not have to check `instanceof AssignmentModel`\n    get isAssignment() {\n        return true;\n    }\n\n    /**\n     * Returns true if the Assignment can be persisted (e.g. task and resource are not 'phantoms')\n     *\n     * @property {Boolean}\n     */\n    get isPersistable() {\n        const\n            {\n                event,\n                resource,\n                unjoinedStores,\n                assignmentStore\n            }           = this,\n            crudManager = assignmentStore?.crudManager;\n\n        let result;\n\n        if (assignmentStore) {\n            // If the owning event is not persistable, this assignment is also not persistable.\n            // if crud manager is used it can deal with phantom event/resource since it persists all records in one batch\n            // if no crud manager used we have to wait till event/resource are persisted\n            result = this.isValid && event.isPersistable && (crudManager || !event.hasGeneratedId && !resource.hasGeneratedId);\n        }\n        // if we remove the record\n        else {\n            result = !this.isPhantom && Boolean(unjoinedStores[0]);\n        }\n\n        // Records not yet fully created cannot be persisted\n        return result && super.isPersistable && !this.event?.isCreating;\n    }\n\n    get isValid() {\n        return this.resource != null && this.event != null;\n    }\n\n    /**\n     * Returns a textual representation of this assignment (e.g. Mike 50%).\n     * @returns {String}\n     */\n    toString() {\n        if (this.resourceName) {\n            return `${this.resourceName} ${Math.round(this.units)}%`;\n        }\n\n        return '';\n    }\n\n    //region STM hooks\n\n    shouldRecordFieldChange(fieldName, oldValue, newValue) {\n        if (!super.shouldRecordFieldChange(fieldName, oldValue, newValue)) {\n            return false;\n        }\n\n        if (fieldName === 'event' || fieldName === 'eventId') {\n            const eventStore = this.project?.eventStore;\n\n            if (eventStore && eventStore.oldIdMap[oldValue] === eventStore.getById(newValue)) {\n                return false;\n            }\n        }\n\n        if (fieldName === 'resource' || fieldName === 'resourceId') {\n            const resourceStore = this.project?.resourceStore;\n\n            if (resourceStore && resourceStore.oldIdMap[oldValue] === resourceStore.getById(newValue)) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    //endregion\n};\n","import Model from '../../Core/data/Model.js';\nimport PartOfProject from '../data/mixin/PartOfProject.js';\nimport AssignmentModelMixin from './mixin/AssignmentModelMixin.js';\n/* <remove-on-release> */\nimport { BaseAssignmentMixin } from '../../Engine/quark/model/scheduler_basic/BaseAssignmentMixin.js';\n/* </remove-on-release> */\nimport { CoreAssignmentMixin } from '../../Engine/quark/model/scheduler_core/CoreAssignmentMixin.js';\n\nconst EngineMixin = /* <remove-on-release> */globalThis.bryntum?.useBasicEngine ? BaseAssignmentMixin : /* </remove-on-release> */CoreAssignmentMixin;\n\n/**\n * @module Scheduler/model/AssignmentModel\n */\n\n/**\n * This model represents a single assignment of a resource to an event in the scheduler, usually added to a\n * {@link Scheduler.data.AssignmentStore}.\n *\n * It is a subclass of the {@link Core.data.Model} class. Please refer to the documentation for that class to become\n * familiar with the base interface of this class.\n *\n * ## Fields and references\n *\n * An Assignment has the following fields:\n * - `id` - The id of the assignment\n * - `resourceId` - The id of the resource assigned (optionally replaced with `resource` for load)\n * - `eventId` - The id of the event to which the resource is assigned (optionally replaced with `event` for load)\n *\n * The data source for these fields can be customized by subclassing this class:\n *\n * ```javascript\n * class MyAssignment extends AssignmentModel {\n *   static get fields() {\n *       return [\n *          { name : 'resourceId', dataSource : 'linkedResource' }\n *       ];\n *   }\n * }\n * ```\n *\n * After load and project normalization, these references are accessible (assuming their respective stores are loaded):\n * - `event` - The linked event record\n * - `resource` - The linked resource record\n *\n * ## Async resolving of references\n *\n * As described above, an assignment links an event to a resource. It holds references to an event record and a resource\n * record. These references are populated async, using the calculation engine of the project that the assignment via\n * its store is a part of. Because of this asyncness, references cannot be used immediately after modifications:\n *\n * ```javascript\n * assignment.resourceId = 2;\n * // assignment.resource is not yet available\n * ```\n *\n * To make sure references are updated, wait for calculations to finish:\n *\n * ```javascript\n * assignment.resourceId = 2;\n * await assignment.project.commitAsync();\n * // assignment.resource is available\n * ```\n *\n * As an alternative, you can also use `setAsync()` to trigger calculations directly after the change:\n *\n * ```javascript\n * await assignment.setAsync({ resourceId : 2});\n * // assignment.resource is available\n * ```\n *\n * @extends Core/data/Model\n * @mixes Scheduler/model/mixin/AssignmentModelMixin\n * @uninherit Core/data/mixin/TreeNode\n */\nexport default class AssignmentModel extends AssignmentModelMixin(PartOfProject(EngineMixin.derive(Model))) {\n    // NOTE: Leave field defs at top to be picked up by jsdoc\n\n    /**\n     * Id for event to assign. Can be used as an alternative to `eventId`, but please note that after\n     * load it will be populated with the actual event and not its id. This field is not persistable.\n     * @field {Scheduler.model.EventModel} event\n     * @accepts {String|Number|Scheduler.model.EventModel}\n     * @category Common\n     */\n\n    /**\n     * Id for resource to assign to. Can be used as an alternative to `resourceId`, but please note that after\n     * load it will be populated with the actual resource and not its id. This field is not persistable.\n     * @field {Scheduler.model.ResourceModel} resource\n     * @accepts {String|Number|Scheduler.model.ResourceModel}\n     * @category Common\n     */\n\n    static get $name() {\n        return 'AssignmentModel';\n    }\n\n    get resource() {\n        return super.resource;\n    }\n\n    set resource(resource) {\n        super.resource  = resource;\n\n        this.setChanged('resourceId', this.constructor.asId(resource));\n    }\n}\n\nAssignmentModel.exposeProperties();\n","import Model from '../../../Core/data/Model.js';\nimport ArrayHelper from '../../../Core/helper/ArrayHelper.js';\n\n/**\n * @module Scheduler/data/mixin/AssignmentStoreMixin\n */\n\n/**\n * This is a mixin, containing functionality related to managing assignments.\n *\n * It is consumed by the regular {@link Scheduler.data.AssignmentStore} class and Scheduler Pros counterpart.\n *\n * @mixin\n */\nexport default Target => class AssignmentStoreMixin extends Target {\n    static get $name() {\n        return 'AssignmentStoreMixin';\n    }\n\n    /**\n     * Add assignments to the store.\n     *\n     * NOTE: References (event, resource) on the assignments are determined async by a calculation engine. Thus they\n     * cannot be directly accessed after using this function.\n     *\n     * For example:\n     *\n     * ```javascript\n     * const [assignment] = assignmentStore.add({ eventId, resourceId });\n     * // assignment.event is not yet available\n     * ```\n     *\n     * To guarantee references are set up, wait for calculations for finish:\n     *\n     * ```javascript\n     * const [assignment] = assignmentStore.add({ eventId, resourceId });\n     * await assignmentStore.project.commitAsync();\n     * // assignment.event is available (assuming EventStore is loaded and so on)\n     * ```\n     *\n     * Alternatively use `addAsync()` instead:\n     *\n     * ```javascript\n     * const [assignment] = await assignmentStore.addAsync({ eventId, resourceId });\n     * // assignment.event is available (assuming EventStore is loaded and so on)\n     * ```\n     *\n     * @param {Scheduler.model.AssignmentModel|Scheduler.model.AssignmentModel[]|AssignmentModelConfig|AssignmentModelConfig[]} records\n     * Array of records/data or a single record/data to add to store\n     * @param {Boolean} [silent] Specify `true` to suppress events\n     * @returns {Scheduler.model.AssignmentModel[]} Added records\n     * @function add\n     * @category CRUD\n     */\n\n    /**\n     * Add assignments to the store and triggers calculations directly after. Await this function to have up to date\n     * references on the added assignments.\n     *\n     * ```javascript\n     * const [assignment] = await assignmentStore.addAsync({ eventId, resourceId });\n     * // assignment.event is available (assuming EventStore is loaded and so on)\n     * ```\n     *\n     * @param {Scheduler.model.AssignmentModel|Scheduler.model.AssignmentModel[]|AssignmentModelConfig|AssignmentModelConfig[]} records\n     * Array of records/data or a single record/data to add to store\n     * @param {Boolean} [silent] Specify `true` to suppress events\n     * @returns {Scheduler.model.AssignmentModel[]} Added records\n     * @function addAsync\n     * @category CRUD\n     * @async\n     */\n\n    /**\n     * Applies a new dataset to the AssignmentStore. Use it to plug externally fetched data into the store.\n     *\n     * NOTE: References (assignments, resources) on the assignments are determined async by a calculation engine. Thus\n     * they cannot be directly accessed after assigning the new dataset.\n     *\n     * For example:\n     *\n     * ```javascript\n     * assignmentStore.data = [{ eventId, resourceId }];\n     * // assignmentStore.first.event is not yet available\n     * ```\n     *\n     * To guarantee references are available, wait for calculations for finish:\n     *\n     * ```javascript\n     * assignmentStore.data = [{ eventId, resourceId  }];\n     * await assignmentStore.project.commitAsync();\n     * // assignmentStore.first.event is available\n     * ```\n     *\n     * Alternatively use `loadDataAsync()` instead:\n     *\n     * ```javascript\n     * await assignmentStore.loadDataAsync([{ eventId, resourceId }]);\n     * // assignmentStore.first.event is available\n     * ```\n     *\n     * @member {AssignmentModelConfig[]} data\n     * @category Records\n     */\n\n    /**\n     * Applies a new dataset to the AssignmentStore and triggers calculations directly after. Use it to plug externally\n     * fetched data into the store.\n     *\n     * ```javascript\n     * await assignmentStore.loadDataAsync([{ eventId, resourceId }]);\n     * // assignmentStore.first.event is available\n     * ```\n     *\n     * @param {AssignmentModelConfig[]} data Array of AssignmentModel data objects\n     * @function loadDataAsync\n     * @category CRUD\n     * @async\n     */\n\n    static get defaultConfig() {\n        return {\n            /**\n             * CrudManager must load stores in the correct order. Lowest first.\n             * @private\n             */\n            loadPriority : 300,\n            /**\n             * CrudManager must sync stores in the correct order. Lowest first.\n             * @private\n             */\n            syncPriority : 300,\n\n            storeId : 'assignments'\n        };\n    }\n\n    add(newAssignments, ...args) {\n        newAssignments = ArrayHelper.asArray(newAssignments);\n\n        for (let i = 0; i < newAssignments.length; i++) {\n            let assignment = newAssignments[i];\n\n            if (!(assignment instanceof Model)) {\n                newAssignments[i] = assignment = this.createRecord(assignment);\n            }\n            if (!this.isSyncingDataOnLoad && this.storage.findIndex('eventResourceKey', assignment.eventResourceKey, true) !== -1) {\n                throw new Error(`Duplicate assignment Event: ${assignment.eventId} to resource: ${assignment.resourceId}`);\n            }\n            if (assignment.event?.isCreating) {\n                assignment.isCreating = true;\n            }\n        }\n        return super.add(newAssignments, ...args);\n    }\n\n    includesAssignment(eventId, resourceId) {\n        return this.storage.findIndex('eventResourceKey', `${eventId}-${resourceId}`, true) !== -1;\n    }\n\n    setStoreData(data) {\n        //<debug>\n        if (this.usesSingleAssignment) {\n            throw new Error('Data loading into AssignmentStore (multi-assignment mode) cannot be combined EventStore data containing resourceId (single-assignment mode)');\n        }\n        //</debug>\n\n        super.setStoreData(data);\n    }\n\n    //region Init & destroy\n\n    // This index fixes poor performance when you add large number of events to an event store with large number of\n    // events - if cache is missing existing records are iterated n² times.\n    // https://github.com/bryntum/support/issues/3154#issuecomment-881336588\n\n    set storage(storage) {\n        super.storage = storage;\n\n        // This allows a map based, fast lookup of assignments by their eventResourceKey.\n        // This is so that the test for duplicate assignment adding is fast.\n        this.storage.addIndex({ property : 'eventResourceKey', dependentOn : { event : true, resource : true } });\n    }\n\n    get storage() {\n        // Micro optimization to avoid expensive super call\n        return this._storage || super.storage;\n    }\n\n    //endregion\n\n    //region Stores\n\n    // To not have to do instanceof checks\n    get isAssignmentStore() {\n        return true;\n    }\n\n    //endregion\n\n    //region Recurrence\n\n    /**\n     * Returns a \"fake\" assignment used to identify a certain occurrence of a recurring event.\n     * If passed the original event, it returns `originalAssignment`.\n     * @param {Scheduler.model.AssignmentModel} originalAssignment\n     * @param {Scheduler.model.EventModel} occurrence\n     * @returns {Object} Temporary assignment\n     * @internal\n     */\n    getOccurrence(originalAssignment, occurrence) {\n        // Pass along the original assignment for non occurrence related calls\n        if (!originalAssignment || !occurrence?.isOccurrence) {\n            return originalAssignment;\n        }\n\n        // Not for saving chars, needed in fn below\n        const me = this;\n\n        return {\n            id                     : `${occurrence.id}:a${originalAssignment.id}`,\n            event                  : occurrence,\n            resource               : originalAssignment.resource,\n            eventId                : occurrence.id,\n            resourceId             : originalAssignment.resource.id,\n            isAssignment           : true,\n            // This field is required to distinguish this fake assignment when event is being removed from UI\n            isOccurrenceAssignment : true,\n            // Not being an actual record, instanceMeta is stored on the store instead\n            instanceMeta(instanceOrId) {\n                return me.occurrenceInstanceMeta(this, instanceOrId);\n            }\n        };\n    }\n\n    // Per fake assignment instance meta, stored on store since fakes are always generated on demand\n    occurrenceInstanceMeta(occurrenceAssignment, instanceOrId) {\n        const\n            me         = this,\n            instanceId = instanceOrId.id || instanceOrId,\n            { id }     = occurrenceAssignment;\n\n        let { occurrenceMeta } = me;\n\n        if (!occurrenceMeta) {\n            occurrenceMeta = me.occurrenceMeta = {};\n        }\n\n        if (!occurrenceMeta[id]) {\n            occurrenceMeta[id] = {};\n        }\n\n        return occurrenceMeta[id][instanceId] || (occurrenceMeta[id][instanceId] = {});\n    }\n\n    //endregion\n\n    //region Mapping\n\n    /**\n     * Maps over event assignments.\n     *\n     * @param {Scheduler.model.EventModel} event\n     * @param {Function} [fn]\n     * @param {Function} [filterFn]\n     * @returns {Scheduler.model.EventModel[]|Array}\n     * @category Assignments\n     */\n    mapAssignmentsForEvent(event, fn, filterFn) {\n        event = this.eventStore.getById(event);\n\n        const\n            fnSet           = Boolean(fn),\n            filterFnSet     = Boolean(filterFn);\n\n        if (fnSet || filterFnSet) {\n            return event.assignments.reduce((result, assignment) => {\n                const mapResult = fnSet ? fn(assignment) : assignment;\n\n                if (!filterFnSet || filterFn(mapResult)) {\n                    result.push(mapResult);\n                }\n\n                return result;\n            }, []);\n        }\n\n        return event.assignments;\n    }\n\n    /**\n     * Maps over resource assignments.\n     *\n     * @param {Scheduler.model.ResourceModel|Number|String} resource\n     * @param {Function} [fn]\n     * @param {Function} [filterFn]\n     * @returns {Scheduler.model.ResourceModel[]|Array}\n     * @category Assignments\n     */\n    mapAssignmentsForResource(resource, fn, filterFn) {\n        resource = this.resourceStore.getById(resource);\n\n        const\n            fnSet           = Boolean(fn),\n            filterFnSet     = Boolean(filterFn);\n\n        if (fnSet || filterFnSet) {\n            return resource.assignments.reduce((result, assignment) => {\n                const mapResult = fnSet ? fn(assignment) : assignment;\n\n                if (!filterFnSet || filterFn(mapResult)) {\n                    result.push(mapResult);\n                }\n\n                return result;\n            }, []);\n        }\n\n        return resource.assignments;\n    }\n\n    /**\n     * Returns all assignments for a given event.\n     *\n     * @param {Scheduler.model.TimeSpan} event\n     * @returns {Scheduler.model.AssignmentModel[]}\n     * @category Assignments\n     */\n    getAssignmentsForEvent(event) {\n        return event.assignments;\n    }\n\n    /**\n     * Removes all assignments for given event\n     *\n     * @param {Scheduler.model.TimeSpan} event\n     * @category Assignments\n     */\n    removeAssignmentsForEvent(event) {\n        return this.remove(event.assignments);\n    }\n\n    /**\n     * Returns all assignments for a given resource.\n     *\n     * @param {Scheduler.model.ResourceModel} resource\n     * @returns {Scheduler.model.AssignmentModel[]}\n     * @category Assignments\n     */\n    getAssignmentsForResource(resource) {\n        resource = this.resourceStore.getById(resource);\n        return resource.assignments;\n    }\n\n    /**\n     * Removes all assignments for given resource\n     *\n     * @param {Scheduler.model.ResourceModel|*} resource\n     * @category Assignments\n     */\n    removeAssignmentsForResource(resource) {\n        this.remove(this.getAssignmentsForResource(resource));\n    }\n\n    /**\n     * Returns all resources assigned to an event.\n     *\n     * @param {Scheduler.model.EventModel} event\n     * @returns {Scheduler.model.ResourceModel[]}\n     * @category Assignments\n     */\n    getResourcesForEvent(event) {\n        return event.resources;\n    }\n\n    /**\n     * Returns all events assigned to a resource\n     *\n     * @param {Scheduler.model.ResourceModel|String|Number} resource\n     * @returns {Scheduler.model.TimeSpan[]}\n     * @category Assignments\n     */\n    getEventsForResource(resource) {\n        resource = this.resourceStore.getById(resource);\n\n        return resource?.events;\n    }\n\n    /**\n     * Creates and adds assignment record(s) for a given event and resource(s).\n     *\n     * @param {Scheduler.model.TimeSpan} event\n     * @param {Scheduler.model.ResourceModel|Scheduler.model.ResourceModel[]} resources The resource(s) to assign to the event\n     * @param {Function} [assignmentSetupFn] A hook function which takes an assignment as its argument and must return an assignment.\n     * @param {Boolean} [removeExistingAssignments] `true` to remove assignments for other resources\n     * @returns {Scheduler.model.AssignmentModel[]} An array with the created assignment(s)\n     * @category Assign\n     */\n    assignEventToResource(event, resources, assignmentSetupFn = null, removeExistingAssignments = false) {\n        const\n            me       = this,\n            toRemove = removeExistingAssignments ? new Set(event.assignments) : null;\n\n        resources = ArrayHelper.asArray(resources).map(r => r.$original ?? r);\n\n        if (me.eventStore?.usesSingleAssignment) {\n            // Use same code path as other single assignments if already assigned\n            if (event.assignments?.length) {\n                if (!me.isEventAssignedToResource(event, resources[0])) {\n                    event.resource = resources[0];\n                }\n                return [];\n            }\n            // otherwise - set \"resourceId\" and proceed to assignment creation\n            else {\n                event.resourceId = resources[0].id;\n            }\n        }\n\n        let newAssignments = [];\n\n        me.suspendAutoCommit();\n\n        // Assign\n        resources.forEach(resource => {\n            const existingAssignment = me.getAssignmentForEventAndResource(event, resource);\n            if (!existingAssignment) {\n                const assignment = {\n                    event,\n                    resource\n                };\n\n                newAssignments.push(assignmentSetupFn?.(assignment) ?? assignment);\n            }\n            else if (removeExistingAssignments) {\n                toRemove.delete(existingAssignment);\n            }\n        });\n\n        newAssignments = me.add(newAssignments);\n\n        if (removeExistingAssignments) {\n            me.remove(Array.from(toRemove));\n        }\n\n        // If true, will trigger a commit\n        me.resumeAutoCommit();\n\n        return newAssignments;\n    }\n\n    /**\n     * Removes assignment record for a given event and resource.\n     *\n     * @param {Scheduler.model.TimeSpan|String|Number} event\n     * @param {Scheduler.model.ResourceModel|String|Number} [resources] The resource to unassign the event from. If omitted, all resources of the events will be unassigned\n     * @returns {Scheduler.model.AssignmentModel|Scheduler.model.AssignmentModel[]}\n     * @category Assign\n     */\n    unassignEventFromResource(event, resources) {\n        const\n            me = this,\n            assignmentsToRemove = [];\n\n        if (!resources) {\n            return me.removeAssignmentsForEvent(event);\n        }\n\n        resources = ArrayHelper.asArray(resources);\n\n        for (let i = 0; i < resources.length; i++) {\n            if (me.isEventAssignedToResource(event, resources[i])) {\n                assignmentsToRemove.push(me.getAssignmentForEventAndResource(event, resources[i]));\n            }\n        }\n\n        return me.remove(assignmentsToRemove);\n    }\n\n    /**\n     * Checks whether an event is assigned to a resource.\n     *\n     * @param {Scheduler.model.EventModel|String|Number} event Event record or id\n     * @param {Scheduler.model.ResourceModel|String|Number} resource Resource record or id\n     * @returns {Boolean}\n     * @category Assignments\n     */\n    isEventAssignedToResource(event, resource) {\n        return Boolean(this.getAssignmentForEventAndResource(event, resource));\n    }\n\n    /**\n     * Returns an assignment record for a given event and resource\n     *\n     * @param {Scheduler.model.EventModel|String|Number} event The event or its id\n     * @param {Scheduler.model.ResourceModel|String|Number} resource The resource or its id\n     * @returns {Scheduler.model.AssignmentModel}\n     * @category Assignments\n     */\n    getAssignmentForEventAndResource(event, resource) {\n        let assignments;\n\n        // Note: In order to not evaluate conditions which do not have to be evaluated each condition is assigned to a\n        // variable within the condition.\n        if (\n            !(event = this.eventStore.getById(event)) ||\n            !(assignments = event.assignments) ||\n            // Also note that resources are looked for in the master store if chained, to handle dragging between\n            // schedulers using chained versions of the same resource store. Needed since assignmentStore is shared and\n            // might point to wrong resourceStore (can only point to one)\n            !(resource = this.resourceStore.$master.getById(resource))\n        ) {\n            return null;\n        }\n\n        return this.getOccurrence(assignments.find(a => a.resource?.$original === resource.$original), event);\n    }\n\n    //endregion\n};\n","import AjaxStore from '../../Core/data/AjaxStore.js';\nimport AssignmentModel from '../model/AssignmentModel.js';\nimport PartOfProject from './mixin/PartOfProject.js';\nimport PartOfBaseProject from './mixin/PartOfBaseProject.js';\nimport AssignmentStoreMixin from './mixin/AssignmentStoreMixin.js';\n/* <remove-on-release> */\nimport { ChronoAssignmentStoreMixin } from '../../Engine/quark/store/ChronoAssignmentStoreMixin.js';\n/* </remove-on-release> */\nimport { CoreAssignmentStoreMixin } from '../../Engine/quark/store/CoreAssignmentStoreMixin.js';\n\nconst EngineMixin = /* <remove-on-release> */globalThis.bryntum?.useBasicEngine ? PartOfBaseProject(ChronoAssignmentStoreMixin.derive(AjaxStore)) : /* </remove-on-release> */PartOfProject(CoreAssignmentStoreMixin.derive(AjaxStore));\n\n/**\n * @module Scheduler/data/AssignmentStore\n */\n\n/**\n * A store representing a collection of assignments between events in the {@link Scheduler.data.EventStore} and resources\n * in the {@link Scheduler.data.ResourceStore}.\n *\n * This store only accepts a model class inheriting from {@link Scheduler.model.AssignmentModel}.\n *\n * An AssignmentStore is usually connected to a project, which binds it to other related stores (EventStore,\n * ResourceStore and DependencyStore). The project also handles references (event, resource) to related records for the\n * records in the store.\n *\n * Resolving the references happens async, records are not guaranteed to have up to date references until calculations\n * are finished. To be certain that references are resolved, call `await project.commitAsync()` after store actions. Or\n * use one of the `xxAsync` functions, such as `loadDataAsync()`.\n *\n * Using `commitAsync()`:\n *\n * ```javascript\n * assignmentStore.data = [{ eventId, resourceId }, ...];\n *\n * // references (event, resource) not resolved yet\n *\n * await assignmentStore.project.commitAsync();\n *\n * // now they are\n * ```\n *\n * Using `loadDataAsync()`:\n *\n * ```javascript\n * await assignmentStore.loadDataAsync([{ eventId, resourceId }, ...]);\n *\n * // references (event, resource) are resolved\n * ```\n *\n * @mixes Scheduler/data/mixin/AssignmentStoreMixin\n * @mixes Scheduler/data/mixin/PartOfProject\n * @extends Core/data/AjaxStore\n */\nexport default class AssignmentStore extends AssignmentStoreMixin(EngineMixin) {\n\n    static $name = 'AssignmentStore';\n\n    static get defaultConfig() {\n        return {\n            modelClass : AssignmentModel\n        };\n    }\n\n}\n","import Base from '../../../Core/Base.js';\n\n/**\n * @module Scheduler/data/mixin/ResourceStoreMixin\n */\n\n/**\n * This is a mixin for the ResourceStore functionality. It is consumed by the {@link Scheduler.data.ResourceStore}.\n *\n * @mixin\n */\nexport default Target => class ResourceStoreMixin extends (Target || Base) {\n    static get $name() {\n        return 'ResourceStoreMixin';\n    }\n\n    get isResourceStore() {\n        return true;\n    }\n\n    /**\n     * Add resources to the store.\n     *\n     * NOTE: References (events, assignments) on the resources are determined async by a calculation engine. Thus they\n     * cannot be directly accessed after using this function.\n     *\n     * For example:\n     *\n     * ```javascript\n     * const [resource] = resourceStore.add({ id });\n     * // resource.events is not yet available\n     * ```\n     *\n     * To guarantee references are set up, wait for calculations for finish:\n     *\n     * ```javascript\n     * const [resource] = resourceStore.add({ id });\n     * await resourceStore.project.commitAsync();\n     * // resource.events is available (assuming EventStore is loaded and so on)\n     * ```\n     *\n     * Alternatively use `addAsync()` instead:\n     *\n     * ```javascript\n     * const [resource] = await resourceStore.addAsync({ id });\n     * // resource.events is available (assuming EventStore is loaded and so on)\n     * ```\n     *\n     * @param {Scheduler.model.ResourceModel|Scheduler.model.ResourceModel[]|ResourceModelConfig|ResourceModelConfig[]} records\n     * Array of records/data or a single record/data to add to store\n     * @param {Boolean} [silent] Specify `true` to suppress events\n     * @returns {Scheduler.model.ResourceModel[]} Added records\n     * @function add\n     * @category CRUD\n     */\n\n    /**\n     * Add resources to the store and triggers calculations directly after. Await this function to have up to date\n     * references on the added resources.\n     *\n     * ```javascript\n     * const [resource] = await resourceStore.addAsync({ id });\n     * // resource.events is available (assuming EventStore is loaded and so on)\n     * ```\n     *\n     * @param {Scheduler.model.ResourceModel|Scheduler.model.ResourceModel[]|ResourceModelConfig|ResourceModelConfig[]} records\n     * Array of records/data or a single record/data to add to store\n     * @param {Boolean} [silent] Specify `true` to suppress events\n     * @returns {Scheduler.model.ResourceModel[]} Added records\n     * @function addAsync\n     * @category CRUD\n     * @async\n     */\n\n    /**\n     * Applies a new dataset to the ResourceStore. Use it to plug externally fetched data into the store.\n     *\n     * NOTE: References (events, assignments) on the resources are determined async by a calculation engine. Thus\n     * they cannot be directly accessed after assigning the new dataset.\n     *\n     * For example:\n     *\n     * ```javascript\n     * resourceStore.data = [{ id }];\n     * // resourceStore.first.events is not yet available\n     * ```\n     *\n     * To guarantee references are available, wait for calculations for finish:\n     *\n     * ```javascript\n     * resourceStore.data = [{ id }];\n     * await resourceStore.project.commitAsync();\n     * // resourceStore.first.events is available\n     * ```\n     *\n     * Alternatively use `loadDataAsync()` instead:\n     *\n     * ```javascript\n     * await resourceStore.loadDataAsync([{ id }]);\n     * // resourceStore.first.events is available\n     * ```\n     *\n     * @member {ResourceModelConfig[]} data\n     * @category Records\n     */\n\n    /**\n     * Applies a new dataset to the ResourceStore and triggers calculations directly after. Use it to plug externally\n     * fetched data into the store.\n     *\n     * ```javascript\n     * await resourceStore.loadDataAsync([{ id }]);\n     * // resourceStore.first.events is available\n     * ```\n     *\n     * @param {ResourceModelConfig[]} data Array of ResourceModel data objects\n     * @function loadDataAsync\n     * @category CRUD\n     * @async\n     */\n\n    static get defaultConfig() {\n        return {\n            /**\n             * CrudManager must load stores in the correct order. Lowest first.\n             * @private\n             */\n            loadPriority : 200,\n            /**\n             * CrudManager must sync stores in the correct order. Lowest first.\n             * @private\n             */\n            syncPriority : 100,\n            storeId      : 'resources',\n            autoTree     : true\n        };\n    }\n\n    construct(config) {\n        super.construct(config);\n\n        if (!this.modelClass.isResourceModel) {\n            throw new Error('Model for ResourceStore must subclass ResourceModel');\n        }\n    }\n\n    removeAll() {\n        const result = super.removeAll(...arguments);\n\n        // Removing all resources removes all assignments\n        result && this.assignmentStore.removeAll();\n\n        return result;\n    }\n\n    // Apply id changes also to assignments (used to be handled automatically by relations earlier, but engine does not\n    // care about ids so needed now)\n    // problems:\n    // 1. orientation/HorizontalRendering listens to assignment store changes and is trying to refresh view\n    // When we update resource id on assignment, listener will be invoked and view will try to refresh. And it will\n    // fail, because row is not updated yet. Flag is raised on resource store to make HorizontalRendering to skip\n    // refreshing view in this particular case of resource id changing\n    onRecordIdChange({ record, oldValue, value }) {\n        super.onRecordIdChange({ record, oldValue, value });\n\n        if (record.isFieldModified('id')) {\n            this.isChangingId = true;\n\n            record.updateAssignmentResourceIds();\n\n            this.isChangingId = false;\n        }\n    }\n\n    // Cache used by VerticalRendering, reset from there\n    get allResourceRecords() {\n        return this._allResourceRecords || (this._allResourceRecords = this.getAllDataRecords());\n    }\n\n    /**\n     * Returns all resources that have no events assigned during the specified time range.\n     * @param {Date} startDate Time range start date\n     * @param {Date} endDate Time range end date\n     * @returns {Scheduler.model.ResourceModel[]} Resources without events\n     */\n    getAvailableResources({ startDate, endDate }) {\n        return this.query(resource => this.eventStore.isDateRangeAvailable(startDate, endDate, null, resource));\n    }\n};\n","/**\n * @module Scheduler/model/mixin/ResourceModelMixin\n */\n\n/**\n * Mixin that holds configuration shared between resources in Scheduler and Scheduler Pro.\n * @mixin\n */\nexport default Target => class ResourceModelMixin extends Target {\n    static get $name() {\n        return 'ResourceModelMixin';\n    }\n\n    // Flag checked by ResourceStore to make sure it uses a valid subclass\n    static get isResourceModel() {\n        return true;\n    }\n\n    /**\n     * Set value for the specified field(s), triggering engine calculations immediately. See\n     * {@link Core.data.Model#function-set Model#set()} for arguments.\n     *\n     * This does not matter much on the resource itself, but is of importance when manipulating its references:\n     *\n     * ```javascript\n     * assignment.set('resourceId', 2);\n     * // resource.assignments is not yet up to date\n     *\n     * await assignment.setAsync('resourceId', 2);\n     * // resource.assignments is up to date\n     * ```\n     *\n     * @param {String|Object} field The field to set value for, or an object with multiple values to set in one call\n     * @param {*} value Value to set\n     * @param {Boolean} [silent=false] Set to true to not trigger events\n     * automatically.\n     * @function setAsync\n     * @category Editing\n     * @async\n     */\n\n    //region Fields\n\n    static get fields() {\n        return [\n            /**\n             * Unique identifier\n             * @field {String|Number} id\n             * @category Common\n             */\n\n            /**\n             * Get or set resource name\n             * @field {String} name\n             * @category Common\n             */\n            { name : 'name', type : 'string', persist : true },\n\n            /**\n             * Controls the primary color used for events assigned to this resource. Can be overridden per event using\n             * EventModels {@link Scheduler/model/mixin/EventModelMixin#field-eventColor eventColor config}. See Schedulers\n             * {@link Scheduler.view.mixin.TimelineEventRendering#config-eventColor eventColor config} for available\n             * colors.\n             * @field {String} eventColor\n             * @category Styling\n             */\n            'eventColor',\n\n            /**\n             * Controls the style used for events assigned to this resource. Can be overridden per event using\n             * EventModels {@link Scheduler/model/mixin/EventModelMixin#field-eventStyle eventStyle config}. See Schedulers\n             * {@link Scheduler.view.mixin.TimelineEventRendering#config-eventStyle eventStyle config} for available\n             * options.\n             * @field {String} eventStyle\n             * @category Styling\n             */\n            'eventStyle',\n\n            /**\n             * Fully qualified image URL, used by `ResourceInfoColumn` and vertical modes `ResourceHeader` to display a miniature image\n             * for the resource.\n             * @field {String} imageUrl\n             * @category Styling\n             */\n            'imageUrl',\n\n            /**\n             * Image name relative to {@link Scheduler/view/mixin/SchedulerEventRendering#config-resourceImagePath},\n             * used by `ResourceInfoColumn` and vertical modes `ResourceHeader` to display a miniature image\n             * for the resource.\n             * @field {String} image\n             * @category Styling\n             */\n            'image',\n\n            /**\n             * Margin from rows edge to topmost event bar for this resource, in px.\n             * @field {Number} resourceMargin\n             * @category Layout\n             */\n            { name : 'resourceMargin', type : 'number' },\n\n            /**\n             * Margin between stacked event bars for this resource, in px.\n             * @field {Number} barMargin\n             * @category Layout\n             */\n            { name : 'barMargin', type : 'number' },\n\n            /**\n             * Base height of this resource, in px. When unset, Schedulers configured rowHeight is used.\n             *\n             * This value is used in horizontal mode to determine row height. When stacking, it is used as input for\n             * calculating the actual row height:\n             *\n             * ```javascript\n             * row.height = (resource.rowHeight - resourceMargin * 2) * overlap count - barMargin * (overlap count - 1)\n             * ```\n             *\n             * When packing or overlapping, it is used as the actual row height.\n             *\n             * @field {Number} rowHeight\n             * @category Layout\n             */\n\n            /**\n             * Base width of this resource, in px. If not set, the `columnWidth` specified in\n             * the Scheduler's configured {@link Scheduler.view.Scheduler#config-resourceColumns} is used.\n             *\n             * This value is used in vertical mode to determine column width.\n             *\n             * @field {Number} columnWidth\n             * @category Layout\n             */\n\n            /**\n             * Specify this to use a resource specific event layout in horizontal mode, see\n             * {@link Scheduler.view.mixin.SchedulerEventRendering#config-eventLayout} for options.\n             *\n             * When unset (the default) Schedulers setting is used.\n             *\n             * @field {'stack'|'pack'|'mixed'|'none'} eventLayout\n             * @category Layout\n             */\n            'eventLayout'\n        ];\n    }\n\n    //endregion\n\n    //region Id change\n\n    updateAssignmentResourceIds() {\n        this.assigned.forEach(assignment => {\n            assignment.resourceId = this.id;\n        });\n    }\n\n    syncId(value) {\n        super.syncId(value);\n\n        this.updateAssignmentResourceIds();\n    }\n\n    //endregion\n\n    //region Getters\n\n    /**\n     * Get associated events\n     *\n     * @property {Scheduler.model.EventModel[]}\n     * @readonly\n     */\n    get events() {\n        return this.assignments.reduce((events, assignment) => {\n            if (assignment.event) {\n                events.push(assignment.event);\n            }\n\n            return events;\n        }, []);\n    }\n\n    /**\n     * Returns all assignments for the resource\n     *\n     * @property {Scheduler.model.AssignmentModel[]}\n     */\n    get assignments() {\n        return this.assigned ? [...this.assigned] : [];\n    }\n\n    set assignments(assignments) {\n        // Engine does not allow assigning to `assigned`, handle it here\n        assignments.forEach(assignment => {\n            assignment.resource = this;\n        });\n    }\n\n    /**\n     * Returns an array of events, associated with this resource\n     *\n     * @returns {Scheduler.model.EventModel[]}\n     */\n    getEvents() {\n        // TODO: Deprecate in favor of .events\n        return this.events;\n    }\n\n    /**\n     * Returns true if the Resource can be persisted.\n     * In a flat store, a resource is always considered persistable. In a tree store, a resource is considered\n     * persistable if its parent node is persistable.\n     *\n     * @property {Boolean}\n     * @readonly\n     */\n    get isPersistable() {\n        return super.isPersistable && (!this.parent || this.parent.isPersistable);\n    }\n\n    //endregion\n\n    /**\n     * Unassigns this Resource from all its Events\n     */\n    unassignAll() {\n        this.assignments && this.assignmentStore.remove(this.assignments);\n    }\n\n    /**\n     * Returns the initials (first letter of the first & last space-separated word in the name) or an empty string\n     * if this resource has no name. You can override this method in a ResourceModel subclass to provide your own implementation\n     *\n     * @property {String}\n     * @readonly\n     */\n    get initials() {\n        const\n            { name = '' } = this;\n\n        if (!name) {\n            return '';\n        }\n\n        const names         = name.split(' '),\n            firstInitial  = names[0][0],\n            lastInitial   = (names.length > 1 ? names[names.length - 1][0] : '');\n\n        return firstInitial + lastInitial;\n    }\n\n    isWorkingTime(date) {\n        const calendar = (this.effectiveCalendar || this.project?.calendar);\n\n        return !calendar || calendar.isWorkingTime?.(date);\n    }\n};\n","import GridRowModel from '../../Grid/data/GridRowModel.js';\nimport PartOfProject from '../data/mixin/PartOfProject.js';\nimport ResourceModelMixin from './mixin/ResourceModelMixin.js';\n/* <remove-on-release> */\nimport { BaseResourceMixin } from '../../Engine/quark/model/scheduler_basic/BaseResourceMixin.js';\n/* </remove-on-release> */\nimport { CoreResourceMixin } from '../../Engine/quark/model/scheduler_core/CoreResourceMixin.js';\n\nconst EngineMixin = /* <remove-on-release> */globalThis.bryntum?.useBasicEngine ? BaseResourceMixin : /* </remove-on-release> */CoreResourceMixin;\n\n/**\n * @module Scheduler/model/ResourceModel\n */\n\n/**\n * This class represent a single Resource in scheduler, usually added to a {@link Scheduler.data.ResourceStore}.\n *\n * It is a subclass of  {@link Core.data.Model}. Please refer to the documentation for that class to become familiar\n * with the base interface of the resource.\n *\n * ## Fields and references\n *\n * A resource has a few predefined fields, see Fields below. If you want to add more fields with meta data describing\n * your resources then you should subclass this class:\n *\n * ```javascript\n * class MyResource extends ResourceModel {\n *   static get fields() {\n *     return [\n *       // \"id\" and \"name\" fields are already provided by the superclass\n *       { name: 'company', type : 'string' }\n *     ];\n *   }\n * });\n * ```\n *\n * If you want to use other names in your data for the id and name fields you can configure them as seen below:\n *\n * ```javascript\n * class MyResource extends ResourceModel {\n *   static get fields() {\n *     return [\n *        { name: 'name', dataSource: 'userName' }\n *     ];\n *   },\n * });\n * ```\n *\n * After load and project normalization, these references are accessible (assuming their respective stores are loaded):\n * - `assignments` - The linked assignment records\n * - `events` - The linked (through assignments) event records\n *\n * ## Async resolving of references\n *\n * As described above, a resource has links to assignments and events. These references are populated async, using the\n * calculation engine of the project that the resource via its store is a part of. Because of this asyncness, references\n * cannot be used immediately after assignment modifications:\n *\n * ```javascript\n * assignment.resourceId = 2;\n * // resource.assignments is not yet up to date\n * ```\n *\n * To make sure references are updated, wait for calculations to finish:\n *\n * ```javascript\n * assignment.resourceId = 2;\n * await assignment.project.commitAsync();\n * // resource.assignments is up to date\n * ```\n *\n * As an alternative, you can also use `setAsync()` to trigger calculations directly after the change:\n *\n * ```javascript\n * await assignment.setAsync({ resourceId : 2});\n * // resource.assignments is up to date\n * ```\n *\n * @extends Grid/data/GridRowModel\n * @mixes Scheduler/model/mixin/ResourceModelMixin\n */\nexport default class ResourceModel extends ResourceModelMixin(PartOfProject(EngineMixin.derive(GridRowModel))) {\n    static get $name() {\n        return 'ResourceModel';\n    }\n}\n\nResourceModel.exposeProperties();\n","import ResourceStoreMixin from './mixin/ResourceStoreMixin.js';\nimport ResourceModel from '../model/ResourceModel.js';\nimport AjaxStore from '../../Core/data/AjaxStore.js';\nimport PartOfProject from '../data/mixin/PartOfProject.js';\n/* <remove-on-release> */\nimport { ChronoResourceStoreMixin } from '../../Engine/quark/store/ChronoResourceStoreMixin.js';\n/* </remove-on-release> */\nimport { CoreResourceStoreMixin } from '../../Engine/quark/store/CoreResourceStoreMixin.js';\nimport PartOfBaseProject from './mixin/PartOfBaseProject.js';\n\nconst EngineMixin = /* <remove-on-release> */globalThis.bryntum?.useBasicEngine ? PartOfBaseProject(ChronoResourceStoreMixin.derive(AjaxStore)) : /* </remove-on-release> */PartOfProject(CoreResourceStoreMixin.derive(AjaxStore));\n\n/**\n * @module Scheduler/data/ResourceStore\n */\n\n/**\n * A store holding all the {@link Scheduler.model.ResourceModel resources} to be rendered into a\n * {@link Scheduler.view.Scheduler Scheduler}.\n *\n * This store only accepts a model class inheriting from {@link Scheduler.model.ResourceModel}.\n *\n * A ResourceStore is usually connected to a project, which binds it to other related stores (EventStore,\n * AssignmentStore and DependencyStore). The project also handles references (assignments, events) to related records\n * for the records in the store.\n *\n * Resolving the references happens async, records are not guaranteed to have up to date references until calculations\n * are finished. To be certain that references are resolved, call `await project.commitAsync()` after store actions. Or\n * use one of the `xxAsync` functions, such as `loadDataAsync()`.\n *\n * Using `commitAsync()`:\n *\n * ```javascript\n * resourceStore.data = [{ id }, ...];\n *\n * // references (assignments, events) not resolved yet\n *\n * await resourceStore.project.commitAsync();\n *\n * // now they are\n * ```\n *\n * Using `loadDataAsync()`:\n *\n * ```javascript\n * await resourceStore.loadDataAsync([{ id }, ...]);\n *\n * // references (assignments, events) are resolved\n * ```\n *\n * @mixes Scheduler/data/mixin/PartOfProject\n * @mixes Scheduler/data/mixin/ResourceStoreMixin\n * @extends Core/data/AjaxStore\n */\nexport default class ResourceStore extends ResourceStoreMixin(EngineMixin) {\n\n    static get defaultConfig() {\n        return {\n            modelClass : ResourceModel\n        };\n    }\n\n}\n","import Base from '../../../Core/Base.js';\nimport Model from '../../../Core/data/Model.js';\nimport DateHelper from '../../../Core/helper/DateHelper.js';\nimport FunctionHelper from '../../../Core/helper/FunctionHelper.js';\n\n/**\n * @module Scheduler/data/mixin/EventStoreMixin\n */\n\n/**\n * This is a mixin, containing functionality related to managing events.\n *\n * It is consumed by the regular {@link Scheduler.data.EventStore} class and the Scheduler Pro's `EventStore` class.\n *\n * @mixin\n */\nexport default Target => class EventStoreMixin extends (Target || Base) {\n    static get $name() {\n        return 'EventStoreMixin';\n    }\n\n    //region Init & destroy\n\n    construct(config) {\n        super.construct(config);\n\n        this.autoTree = true;\n    }\n\n    //endregion\n\n    //region Events records, iteration etc.\n\n    set filtersFunction(filtersFunction) {\n        super.filtersFunction = filtersFunction;\n    }\n\n    get filtersFunction() {\n        // Generate the real filterFn.\n        const result = super.filtersFunction;\n\n        // We always filter *in* records which are being created by the UI.\n        if (result && result !== FunctionHelper.returnTrue) {\n            return r => r.isCreating || result(r);\n        }\n        return result;\n    }\n\n    /**\n     * Returns a `Map`, keyed by `YYYY-MM-DD` date keys containing event counts for all the days\n     * between the passed `startDate` and `endDate`. Occurrences of recurring events are included.\n     *\n     * Example:\n     *\n     * ```javascript\n     *  eventCounts = eventStore.getEventCounts({\n     *      startDate : scheduler.timeAxis.startDate,\n     *      endDate   : scheduler.timeAxis.endDate\n     *  });\n     * ```\n     *\n     * @param {Object} options An options object determining which events to return\n     * @param {Date} options.startDate The start date for the range of events to include.\n     * @param {Date} [options.endDate] The end date for the range of events to include.\n     * @category Events\n     */\n    getEventCounts(options) {\n        const\n            me     = this,\n            {\n                filtersFunction,\n                added\n            }      = me,\n            // Must use getEvents so that the loadDateRange event is triggered.\n            result = me.getEvents({\n                ...options,\n                storeFilterFn : me.isFiltered ? (me.reapplyFilterOnAdd ? filtersFunction : eventRecord => added.includes(eventRecord) ? me.indexOf(eventRecord) > -1 : filtersFunction(eventRecord)) : null,\n                dateMap       : options.dateMap || true\n            });\n\n        result.forEach((value, key) => result.set(key, value.length));\n        return result;\n    }\n\n    /**\n     * Calls the supplied iterator function once for every scheduled event, providing these arguments\n     * - event : the event record\n     * - startDate : the event start date\n     * - endDate : the event end date\n     *\n     * Returning false cancels the iteration.\n     *\n     * @param {Function} fn iterator function\n     * @param {Object} [thisObj] `this` reference for the function\n     * @category Events\n     */\n    forEachScheduledEvent(fn, thisObj = this) {\n        this.forEach(event => {\n            const { startDate, endDate } = event;\n\n            if (startDate && endDate) {\n                return fn.call(thisObj, event, startDate, endDate);\n            }\n        });\n    }\n\n    /**\n     * Returns an object defining the earliest start date and the latest end date of all the events in the store.\n     *\n     * @returns {Object} An object with 'startDate' and 'endDate' properties (or null values if data is missing).\n     * @category Events\n     */\n    getTotalTimeSpan() {\n        let earliest = new Date(9999, 0, 1),\n            latest   = new Date(0);\n\n        this.forEach(event => {\n            if (event.startDate) {\n                earliest = DateHelper.min(event.startDate, earliest);\n            }\n            if (event.endDate) {\n                latest = DateHelper.max(event.endDate, latest);\n            }\n        });\n\n        // TODO: this will fail in programs designed to work with events in the past (after Jan 1, 1970)\n        earliest = earliest < new Date(9999, 0, 1) ? earliest : null;\n        latest   = latest > new Date(0) ? latest : null;\n\n        // keep last calculated value to be able to track total timespan changes\n        return (this.lastTotalTimeSpan = {\n            startDate : earliest || null,\n            endDate   : latest || earliest || null\n        });\n    }\n\n    /**\n     * Checks if given event record is persistable. By default it always is, override EventModels `isPersistable` if you\n     * need custom logic.\n     *\n     * @param {Scheduler.model.EventModel} event\n     * @returns {Boolean}\n     * @category Events\n     */\n    isEventPersistable(event) {\n        return event.isPersistable;\n    }\n\n    //endregion\n\n    //region Resource\n\n    /**\n     * Checks if a date range is allocated or not for a given resource.\n     * @param {Date} start The start date\n     * @param {Date} end The end date\n     * @param {Scheduler.model.EventModel|null} excludeEvent An event to exclude from the check (or null)\n     * @param {Scheduler.model.ResourceModel} resource The resource\n     * @returns {Boolean} True if the timespan is available for the resource\n     * @category Resource\n     */\n    isDateRangeAvailable(start, end, excludeEvent, resource) {\n        // NOTE: Also exists in TaskStore.js\n\n        // Cannot assign anything to generated parents\n        if (resource.data.generatedParent) {\n            return false;\n        }\n\n        // This should be a collection of unique event records\n        const allEvents = new Set(this.getEventsForResource(resource));\n\n        // In private mode we can pass an AssignmentModel. In this case, we assume that multi-assignment is used.\n        // So we need to make sure that other resources are available for this time too.\n        // No matter if the event retrieved from the assignment belongs to the target resource or not.\n        // We gather all events from the resources the event is assigned to except of the one from the assignment record.\n        // Note, events from the target resource are added above.\n        if (excludeEvent?.isAssignment) {\n            const\n                currentEvent = excludeEvent.event,\n                resources    = currentEvent.resources;\n\n            resources.forEach(resource => {\n                // Ignore events for the resource which is passed as an AssignmentModel to excludeEvent\n                if (resource.id !== excludeEvent.resourceId) {\n                    this.getEventsForResource(resource).forEach(event => allEvents.add(event));\n                }\n            });\n        }\n\n        if (excludeEvent) {\n            const eventToRemove = excludeEvent.isAssignment ? excludeEvent.event : excludeEvent;\n            allEvents.delete(eventToRemove);\n        }\n\n        return !Array.from(allEvents).some(event => event.isScheduled && DateHelper.intersectSpans(start, end, event.startDate, event.endDate));\n    }\n\n    /**\n     * Filters the events associated with a resource, based on the function provided. An array will be returned for those\n     * events where the passed function returns true.\n     * @param {Scheduler.model.ResourceModel} resource\n     * @param {Function} fn The function\n     * @param {Object} [thisObj] `this` reference for the function\n     * @returns {Scheduler.model.EventModel[]} the events in the time span\n     * @private\n     * @category Resource\n     */\n    filterEventsForResource(resource, fn, thisObj = this) {\n        return resource.getEvents(this).filter(fn.bind(thisObj));\n    }\n\n    /**\n     * Returns all resources assigned to an event.\n     *\n     * @param {Scheduler.model.EventModel|String|Number} event\n     * @returns {Scheduler.model.ResourceModel[]}\n     * @category Resource\n     */\n    getResourcesForEvent(event) {\n        // If we are sent an occurrence, use its parent\n        if (event.isOccurrence) {\n            event = event.recurringTimeSpan;\n        }\n\n        return this.assignmentStore.getResourcesForEvent(event);\n    }\n\n    /**\n     * Returns all events assigned to a resource.\n     * *NOTE:* this does not include occurrences of recurring events. Use the\n     * {@link Scheduler/data/mixin/GetEventsMixin#function-getEvents} API to include occurrences of recurring events.\n     * @param {Scheduler.model.ResourceModel|String|Number} resource Resource or resource id.\n     * @returns {Scheduler.model.EventModel[]}\n     * @category Resource\n     */\n    getEventsForResource(resource) {\n        return this.assignmentStore.getEventsForResource(resource);\n    }\n\n    //endregion\n\n    //region Assignment\n\n    /**\n     * Returns all assignments for a given event.\n     *\n     * @param {Scheduler.model.EventModel|String|Number} event\n     * @returns {Scheduler.model.AssignmentModel[]}\n     * @category Assignment\n     */\n    getAssignmentsForEvent(event) {\n        return this.assignmentStore.getAssignmentsForEvent(event) || [];\n    }\n\n    /**\n     * Returns all assignments for a given resource.\n     *\n     * @param {Scheduler.model.ResourceModel|String|Number} resource\n     * @returns {Scheduler.model.AssignmentModel[]}\n     * @category Assignment\n     */\n    getAssignmentsForResource(resource) {\n        return this.assignmentStore.getAssignmentsForResource(resource) || [];\n    }\n\n    /**\n     * Creates and adds assignment record for a given event and a resource.\n     *\n     * @param {Scheduler.model.EventModel|String|Number} event\n     * @param {Scheduler.model.ResourceModel|String|Number|Scheduler.model.ResourceModel[]|String[]|Number[]} resource The resource(s) to assign to the event\n     * @param {Boolean} [removeExistingAssignments] `true` to first remove existing assignments\n     * @returns {Scheduler.model.AssignmentModel[]} An array with the created assignment(s)\n     * @category Assignment\n     */\n    assignEventToResource(event, resource, removeExistingAssignments = false) {\n        return this.assignmentStore.assignEventToResource(event, resource, undefined, removeExistingAssignments);\n    }\n\n    /**\n     * Removes assignment record for a given event and a resource.\n     *\n     * @param {Scheduler.model.EventModel|String|Number} event\n     * @param {Scheduler.model.ResourceModel|String|Number} resource\n     * @category Assignment\n     */\n    unassignEventFromResource(event, resource) {\n        this.assignmentStore.unassignEventFromResource(event, resource);\n    }\n\n    /**\n     * Reassigns an event from an old resource to a new resource\n     *\n     * @param {Scheduler.model.EventModel}    event    An event or id of the event to reassign\n     * @param {Scheduler.model.ResourceModel|Scheduler.model.ResourceModel[]} oldResource A resource or id to unassign from\n     * @param {Scheduler.model.ResourceModel|Scheduler.model.ResourceModel[]} newResource A resource or id to assign to\n     * @category Assignment\n     */\n    reassignEventFromResourceToResource(event, oldResource, newResource) {\n        const\n            me            = this,\n            newResourceId = Model.asId(newResource),\n            assignment    = me.assignmentStore.getAssignmentForEventAndResource(event, oldResource);\n\n        if (assignment) {\n            assignment.resourceId = newResourceId;\n        }\n        else {\n            me.assignmentStore.assignEventToResource(event, newResource);\n        }\n\n    }\n\n    /**\n     * Checks whether an event is assigned to a resource.\n     *\n     * @param {Scheduler.model.EventModel|String|Number} event\n     * @param {Scheduler.model.ResourceModel|String|Number} resource\n     * @returns {Boolean}\n     * @category Assignment\n     */\n    isEventAssignedToResource(event, resource) {\n        return this.assignmentStore.isEventAssignedToResource(event, resource);\n    }\n\n    /**\n     * Removes all assignments for given event\n     *\n     * @param {Scheduler.model.EventModel|String|Number} event\n     * @category Assignment\n     */\n    removeAssignmentsForEvent(event) {\n        this.assignmentStore.removeAssignmentsForEvent(event);\n    }\n\n    /**\n     * Removes all assignments for given resource\n     *\n     * @param {Scheduler.model.ResourceModel|String|Number} resource\n     * @category Assignment\n     */\n    removeAssignmentsForResource(resource) {\n        this.assignmentStore.removeAssignmentsForResource(resource);\n    }\n\n    //endregion\n};\n","import DateHelper from '../../../Core/helper/DateHelper.js';\nimport Objects from '../../../Core/helper/util/Objects.js';\n\n/**\n * @module Scheduler/data/mixin/GetEventsMixin\n */\n\nconst\n    returnTrue   = () => true,\n    notRecurring = event => !event.isRecurring;\n\n/**\n * Mixing containing functionality for retrieving a range of events, mainly used during rendering.\n *\n * Consumed by EventStore in Calendar, Scheduler & Scheduler Pro and TaskStore in Gantt.\n *\n * @mixin\n */\nexport default Target => class GetEventsMixin extends Target {\n\n    static $name = 'GetEventsMixin';\n\n    /**\n     * Returns an array of events for the date range specified by the `startDate` and `endDate` options.\n     *\n     * By default, for any date, this includes any event which *intersects* that date.\n     *\n     * To only include events that are fully contained *within* the date range, pass the `allowPartial`\n     * option as `false`.\n     *\n     * By default, any occurrences of recurring events are included in the resulting array (not applicable in Gantt). If\n     * that is not required, pass the `includeOccurrences` option as `false`. **Note that if `includeOccurrences` is\n     * `true`, the start date and end date options are mandatory. The method must know what range of occurrences needs\n     * to be generated and returned.**\n     *\n     * Example:\n     *\n     * ```javascript\n     *  visibleEvents = eventStore.getEvents({\n     *      resourceRecord : myResource,\n     *      startDate      : scheduler.timeAxis.startDate,\n     *      endDate        : scheduler.timeAxis.endDate\n     *  });\n     * ```\n     *\n     * @param {Object} options An options object determining which events to return\n     * @param {Date} [options.date] If only one date is required, pass this option instead of the\n     * `startDate` and `endDate` options.\n     * @param {Date} options.startDate The start date for the range of events to include.\n     * @param {Date} [options.endDate] The end date for the range of events to include.\n     * @param {Scheduler.model.ResourceModel} options.resourceRecord Pass a resource to only return events assigned to\n     *   this resource. Not supported when using the `dateMap` option (see below)\n     * @param {Function} [options.filter] A function to filter out events which are not required.\n     * @param {Boolean} [options.ignoreFilters] By default, store filters are honoured. Pass this\n     * as `true` to include filtered out events.\n     * @param {Boolean} [options.includeOccurrences=true] Occurrences of recurring events are included by default.\n     * @param {Boolean} [options.allowPartial=true] Events which start before or after the range, but *intersect* the\n     *   range are included by default.\n     * @param {Boolean} [options.startOnly] Pass `true` to only include events which *start on* each date in the range.\n     * @param {Boolean} [options.onlyAssigned] Pass `true` to only include events that are assigned to a resource\n     * @param {Boolean|Map} [options.dateMap] Populates the passed `Map`, or if passed as `true`, creates and\n     * returns a new `Map`. The keys are `YYYY-MM-DD` date strings and the entries are arrays of\n     * {@link Scheduler.model.EventModel EventModel}s.\n     * @returns {Scheduler.model.EventModel[]|Map} Events which match the passed configuration.\n     * @category Events\n     */\n    getEvents({\n        filter,\n        date,\n        startDate,                  // Events which intersect the startDate/endDate\n        endDate,                    // will be returned\n        startOnly,                  // Only events which start on each date will be returned\n        includeOccurrences,         // Interpolate occurrences into the returned event set\n        allowPartial,               // Include events which *intersect* the date range\n        onlyAssigned = false,       // Only include events that are assigned to a resource\n        dateMap = false,            // Return a Map keyed by date each value being an array of events\n        dayTime = null,\n\n        // Private option. Select which date index to look up events in depending on the date\n        // we are examining in the date iteration process. Some callers may want to use\n        // different indices depending on the stage through the date iteration.\n        // See Calendar package for usage.\n        getDateIndex\n    }) {\n        const\n            me                = this,\n            options           = arguments[0],\n            {\n                lastDateRange,\n                added,\n                filtersFunction\n            } = me,\n            passedFilter      = filter;\n\n        // Add filtering for only assigned events if requested.\n        if (onlyAssigned) {\n            options.filter = passedFilter ? e => passedFilter(e) && e.resources.length : e => e.resources.length;\n        }\n\n        // Note that we cannot use defaulting in the argument block because we pass\n        // the incoming options object down into implementations.\n        if (!('startDate' in options)) {\n            startDate = options.startDate = date;\n        }\n        if (!('includeOccurrences' in options)) {\n            includeOccurrences = options.includeOccurrences = true;\n        }\n        if (!('allowPartial' in options)) {\n            allowPartial = options.allowPartial = !startOnly;\n        }\n\n        // We can't use me.filtersFunction if reapplyFilterOnAdd is false because there may be newly\n        // added events which may not be subject to the filter. Records which are still in\n        // the added bag must be tested for presence using indexOf so as to be always in sync\n        // with the store being refiltered. Parens help readability.\n        // Don't use the store's filtering function if we were asked to ignore filters.\n        // eslint-disable-next-line no-extra-parens\n        options.storeFilterFn = me.isFiltered && !options.ignoreFilters ? (me.reapplyFilterOnAdd ? filtersFunction : (eventRecord => added.includes(eventRecord) ? me.indexOf(eventRecord) > -1 : filtersFunction(eventRecord))) : null;\n\n        // Default to a one day range if only startDate passed\n        if (!endDate) {\n            if (startDate) {\n                endDate = options.endDate = DateHelper.clearTime(startDate);\n                endDate.setDate(endDate.getDate() + 1);\n            }\n            // If no dates passed, the dateFilter will include all.\n            else {\n                // We need to know what occurrences to generate.\n                if (includeOccurrences) {\n                    throw new Error('getEvents MUST be passed startDate and endDate if recurring occurrences are requested');\n                }\n                options.dateFilter = returnTrue;\n            }\n        }\n\n        if (!options.dateFilter) {\n            // Must start in the date range\n            if (startOnly) {\n                options.dateFilter = e => {\n                    // Avoid hitting getter twice. Use batched value if present.\n                    const eventStartDate = e.hasBatchedChange('startDate') ? e.get('startDate') : e.startDate;\n\n                    return eventStartDate && !(DateHelper.clearTime(eventStartDate) - startDate);\n                };\n            }\n            // Any intersection with our date range\n            else if (allowPartial) {\n                options.dateFilter = e => {\n                    // Avoid hitting getter twice. Use batched value if present.\n                    const\n                        eventStartDate = e.hasBatchedChange('startDate') ? e.get('startDate') : e.startDate,\n                        eventEndDate   = e.hasBatchedChange('endDate') ? e.get('endDate') : e.endDate || eventStartDate,\n                        isMilestone    = !(eventStartDate - eventEndDate);\n\n                    return eventStartDate && (isMilestone ? DateHelper.betweenLesserEqual(eventStartDate, startDate, endDate) : DateHelper.intersectSpans(eventStartDate, eventEndDate, startDate, endDate));\n                };\n            }\n            // Must be wholly contained with the our range\n            else {\n                options.dateFilter = e => {\n                    // Avoid hitting getter twice. Use batched value if present.\n                    const\n                        eventStartDate = e.hasBatchedChange('startDate') ? e.get('startDate') : e.startDate,\n                        eventEndDate   = e.hasBatchedChange('endDate') ? e.get('endDate') : e.endDate || eventStartDate;\n\n                    return eventStartDate && eventStartDate >= startDate && eventEndDate <= endDate;\n                };\n            }\n        }\n\n        const newDateRange = {\n            startDate,\n            endDate\n        };\n\n        // Ensure the listeners are present\n        me.processConfiguredListeners();\n\n        /**\n         * Fired when a range of events is requested from the {@link #function-getEvents} method.\n         * @event loadDateRange\n         * @param {Scheduler.data.EventStore} source This EventStore\n         * @param {Object} old The old date range\n         * @param {Date} old.startDate the old start date.\n         * @param {Date} old.endDate the old end date.\n         * @param {Object} new The new date range\n         * @param {Date} new.startDate the new start date.\n         * @param {Date} new.endDate the new end date.\n         * @param {Boolean} changed `true` if the date range is different from the last time a request was made.\n         */\n        me.trigger('loadDateRange', {\n            old     : lastDateRange || {},\n            new     : Objects.clone(newDateRange),\n            changed : !lastDateRange || (lastDateRange.startDate - newDateRange.startDate || lastDateRange.endDate - newDateRange.endDate)\n        });\n        // Dates are mutable, so we must keep our own copy.\n        me.lastDateRange = Objects.clone(newDateRange);\n\n        return dateMap ? me.getEventsAsMap(options) : me.getEventsAsArray(options);\n    }\n\n    /**\n     * Internal implementation for {@link #function-getEvents} to use when not using dateMap.\n     * @private\n     */\n    getEventsAsArray({\n        filter,\n        date,\n        resourceRecord,\n        startDate = date,           // Events which intersect the startDate/endDate\n        endDate,                    // will be returned\n        startOnly,                  // Only events which start on each date will be returned\n        includeOccurrences = true,  // Interpolate occurrences into the returned event set\n        dayTime = null,\n\n        // Injected by the getEvents master method\n        dateFilter,\n\n        storeFilterFn,\n\n        // Private option. Select which date index to look up events in depending on the date\n        // we are examining in the date iteration process. Some callers may want to use\n        // different indices depending on the stage through the date iteration.\n        // See Calendar package for usage.\n        getDateIndex\n    }) {\n        const\n            me     = this,\n            events = [],\n            count  = storeFilterFn ? me.count : me.allCount;\n\n        if (count) {\n            let candidateEvents = resourceRecord ? me.getEventsForResource(resourceRecord) : null;\n\n            // If there *was* a resourceRecord, candidateEvents will already be set up using me.getEventsForResource.\n            // If no resourceRecord specified, we are gathering by date, so use the indices.\n            if (!resourceRecord) {\n                const\n                    dateIndex = me.useDayIndex(dayTime),\n                    eventSet  = new Set(),\n                    indexName = startOnly ? 'startDate' : 'date';\n\n                // Add all recurring events which started on or before our date range.\n                me.recurringEvents.forEach(e => {\n                    if (dateIndex.dayTime.startOfDay(e.startDate) <= startDate) {\n                        eventSet.add(e);\n                    }\n                });\n\n                // Iterate the date range, using the indices to find qualified events.\n                for (const date = new Date(startDate); date < endDate; date.setDate(date.getDate() + 1)) {\n                    const coincidingEvents = dateIndex.get(getDateIndex ? getDateIndex(date) : indexName, date);\n\n                    coincidingEvents?.forEach(e => eventSet.add(e));\n                }\n\n                // We gathered all events which *coincide* with each date.\n                // We also added in all recurring events which started on or before our date range.\n                // All these were made unique by the Set.\n                // Return it to array form.\n                candidateEvents = [...eventSet];\n            }\n\n            // Events found from the date indices won't be filtered.\n            // On the other side, when using getEventForResource we will get all events for\n            // the resource even if the EventStore is filtered, handle this by excluding \"invisible\" events here\n            if (storeFilterFn) {\n                candidateEvents = candidateEvents.filter(storeFilterFn);\n            }\n\n            // Go through candidates.\n            // For a recurring event, and we are including recurrences, add date-qualifying occurrences.\n            // For a non-recurring event, add it if it's date-qualified.\n            for (let i = 0, { length } = candidateEvents; i < length; i++) {\n                const e = candidateEvents[i];\n\n                // For recurring events, add date-qualifying occurrences, not the base\n                if (includeOccurrences && e.isRecurring) {\n                    events.push.apply(events, e.getOccurrencesForDateRange(startDate, endDate).filter(dateFilter));\n                }\n                // For ordinary events, add if it's date-qualified\n                else if (dateFilter(e)) {\n                    events.push(e);\n                }\n            }\n        }\n\n        return filter ? events.filter(filter) : events;\n    }\n\n    /**\n     * Internal implementation for {@link #function-getEvents} to use when using dateMap.\n     * @private\n     */\n    getEventsAsMap({\n        filter : passedFilter,\n        date,\n        resourceRecord,             // Not supported yet. Will add if ever requested.\n        startDate = date,           // Events which intersect the startDate/endDate\n        endDate,                    // will be returned\n        startOnly,                  // Only events which start on each date will be returned\n        includeOccurrences = true,  // Interpolate occurrences into the returned event set\n        dateMap,                    // Return a Map keyed by date each value being an array of events\n        dayTime = null,\n\n        storeFilterFn,\n\n        // Private option. Select which date index to look up events in depending on the date\n        // we are examining in the date iteration process. Some callers may want to use\n        // different indices depending on the stage through the date iteration.\n        // See Calendar package for usage.\n        getDateIndex\n    }) {\n        const me = this;\n\n        // Convert `true` to a Map.\n        if (dateMap?.clear) {\n            dateMap.clear();\n        }\n        else {\n            dateMap = new Map();\n        }\n\n        if (me.count) {\n            const\n                dateIndex       = me.useDayIndex(dayTime),\n                indexName       = startOnly ? 'startDate' : 'date',\n                recurringEvents = [],\n                filter          = e => (!passedFilter || passedFilter(e)) && (!storeFilterFn || storeFilterFn(e)),\n                baseEventFilter = e => notRecurring(e) && filter(e);\n\n            dayTime = dateIndex.dayTime;  // dayTime=null becomes DayTime instance for midnight\n\n            // We can't yet do this for just a resource.\n            if (resourceRecord) {\n                throw new Error('Querying for events for a resource and returning a date-keyed Map is not supported');\n            }\n            else {\n                // Add all recurring events which started before the end of our date range.\n                // There are none in Gantt projects\n                me.recurringEvents?.forEach(e => {\n                    if (dayTime.startOfDay(e.startDate) < endDate) {\n                        recurringEvents.push(e);\n                    }\n                });\n\n                // Iterate the date range, using the indices to find qualified events.\n                for (const date = new Date(startDate); date < endDate; date.setDate(date.getDate() + 1)) {\n                    let [coincidingEvents, key] = dateIndex.get(getDateIndex ? getDateIndex(date) : indexName, date, true);\n\n                    // The index entry may be there, but it could be empty.\n                    if (coincidingEvents?.size) {\n                        // Convert Set which index holds into an Array.\n                        // A recurring event doesn't go into the Map, its occurrences do.\n                        // Then filter by the passed filter and this Store's filter function\n                        // because events found from the date indices won't be filtered.\n                        coincidingEvents = [...coincidingEvents].filter(baseEventFilter);\n\n                        // Only create the entry for the day if there are events found\n                        if (coincidingEvents.length) {\n                            (dateMap.get(key) || (dateMap.set(key, []).get(key))).push(...coincidingEvents);\n                        }\n                    }\n                }\n            }\n\n            // Go through matching recurring events.\n            for (let i = 0, { length } = recurringEvents; i < length; i++) {\n                const\n                    e = recurringEvents[i],\n                    // For each recurring event, add occurrences if we are including occurrences else, add the base.\n                    // Then filter by the passed filter and this Store's filter function\n                    // because events found from the date indices won't be filtered.\n                    occurrences = (includeOccurrences ? e.getOccurrencesForDateRange(startDate, endDate) : [e]).filter(filter),\n                    lastDate    = DateHelper.add(endDate, 1, 'day');\n\n                // Add occurrences to dateMap\n                for (let bucket, i = 0, { length } = occurrences; i < length; i++) {\n                    const\n                        occurrence = occurrences[i],\n                        date = dayTime.startOfDay(occurrence.startDate),\n                        indexName = getDateIndex ? getDateIndex(date) : (startOnly ? 'startDate' : 'date'),\n                        lastInteresctingDate = (indexName === 'startDate') || occurrence.allDay\n                            ? DateHelper.add(date, 1, 'day')\n                            : DateHelper.min(occurrence.endDate || DateHelper.add(occurrence.startDate, occurrence.duration, occurrence.durationUnit), lastDate);\n\n                    // Loop through covered dates, adding to dateMap if required\n                    for (; date < lastInteresctingDate; date.setDate(date.getDate() + 1)) {\n                        const key = dayTime.dateKey(date);\n\n                        (bucket = dateMap.get(key)) || dateMap.set(key, bucket = []);\n\n                        bucket.push(occurrence);\n                    }\n                }\n            }\n        }\n\n        return dateMap;\n    }\n\n};\n","import DayTime from '../../../Core/util/DayTime.js';\n\n/**\n * @module Scheduler/data/util/EventDayIndex\n */\n\nconst\n    // Maps an index name that can be requested to its storage property on the EventDayIndex instance:\n    indexNameMap = {\n        date      : '_dateIndex',\n        startDate : '_startDateIndex'\n    },\n    indexProps         = Object.values(indexNameMap),\n    emptyArray         = Object.freeze([]),\n    { MILLIS_PER_DAY } = DayTime;\n\n/**\n * This utility class is used by event stores to index events by their day (a \"YYYY-MM-DD\" value, also known as a\n * \"date key\"). This key is produced by a {@link Core.util.DayTime} instance. If two `DayTime` instances have a common\n * `startShift`, they can share an index.\n *\n * @internal\n */\nexport default class EventDayIndex {\n    constructor(store, dayTime) {\n        /**\n         * The `DayTime` definition for this index. This is set to the initial DayTime instance but can be used for\n         * any other {@link #function-register registered} `DayTime` instances since they all posses the same value for\n         * `startShift`.\n         *\n         * This defaults to {@link Core.util.DayTime#property-MIDNIGHT-static}.\n         * @member {Core.util.DayTime} dayTime\n         * @readonly\n         */\n        this.dayTime = dayTime || DayTime.MIDNIGHT;\n\n        /**\n         * The owning store instance of this index.\n         * @member {Scheduler.data.EventStore} store\n         * @private\n         * @readonly\n         */\n        this.store = store;\n\n        /**\n         * The `DayTime` instances {@link #function-register registered} with this index instance. As instances are\n         * {@link #function-unregister unregistered} they are removed from this array. Once this array is empty, this\n         * index can be discarded.\n         * @member {Core.util.DayTime[]} users\n         * @private\n         */\n        this.users = [this.dayTime];\n    }\n\n    /**\n     * Adds an event record to the specified index (either \"startDate\" or \"date\") for a given `date`.\n     * @param {String} indexName The index to which the event record is to be added (either \"startDate\" or \"date\").\n     * @param {Date|Number} date A date for which the event record overlaps. The {@link Core.util.DayTime#function-dateKey}\n     * method is used to convert this date to a \"YYYY-MM-DD\" key for the index.\n     * @param {Scheduler.model.EventModel} eventRecord The event record.\n     * @private\n     */\n    add(indexName, date, eventRecord) {\n        const\n            index    = this[indexNameMap[indexName]],\n            key      = this.dayTime.dateKey(date),\n            entry    = index[key] || (index[key] = new Set());\n\n        entry.add(eventRecord);\n    }\n\n    /**\n     * Adds an event record to all indexes for all dates which the event overlaps.\n     * @param {Scheduler.model.EventModel} eventRecord The event record.\n     * @private\n     */\n    addEvent(eventRecord) {\n        let dateMS = this.dayTime.startOfDay(eventRecord.startDate)?.getTime(),\n            endDateMS;\n\n        if (dateMS) {\n            endDateMS = eventRecord.endDate?.getTime() ?? dateMS;\n            this.add('startDate', dateMS, eventRecord);\n\n            do {\n                this.add('date', dateMS, eventRecord);\n                dateMS += MILLIS_PER_DAY;\n            } while (dateMS < endDateMS);\n        }\n    }\n\n    /**\n     * Clear this index.\n     */\n    clear() {\n        indexProps.forEach(name => this[name] = Object.create(null));\n    }\n\n    /**\n     * Returns an object that has properties named by the {@link Core.util.DayTime#function-dateKey} method, or the\n     * array of event records if a `date` is specified, or the event record array and the date key in a 2-element array\n     * if `returnKey` is `true`.\n     * @param {String} indexName The name of the desired index (either 'date' or 'startDate').\n     * @param {Number|Date} date The date as a `Date` or the millisecond UTC epoch. When passed, this method will return\n     * the array of event records for this date.\n     * @param {Boolean} [returnKey] Specify `true` to return the date key along with the event record array.\n     * @returns {Object|Scheduler.model.EventModel[]}\n     */\n    get(indexName, date, returnKey) {\n        // Date indices are created on first usage and after that kept up to date on changes\n        !this.initialized && this.initialize();\n\n        let ret = this[indexNameMap[indexName]],\n            key;\n\n        if (date) {\n            key = this.dayTime.dateKey(date);\n            ret = returnKey ? [ret[key], key] : ret[key];\n        }\n\n        return ret;\n    }\n\n    /**\n     * Called when this index is first used. Once called, further store changes will be used to maintain this index.\n     * @private\n     */\n    initialize() {\n        this.initialized = true;\n\n        this.clear();\n        this.sync('splice', this.store.storage.allValues);\n    }\n\n    invalidate() {\n        this.initialized = false;\n\n        indexProps.forEach(name => this[name] = null);\n    }\n\n    /**\n     * Returns `true` if the given `dayTime` matches this index.\n     * @param {Core.util.DayTime} dayTime\n     * @returns {Boolean}\n     */\n    matches(dayTime) {\n        return this.dayTime.startShift === dayTime.startShift;\n    }\n\n    /**\n     * Removes an event record from the specified index (either \"startDate\" or \"date\") for a given `date`.\n     * @param {String} indexName The index to which the event record is to be removed (either \"startDate\" or \"date\").\n     * @param {Date|Number} date A date for which the event record overlaps. The {@link Core.util.DayTime#function-dateKey}\n     * method is used to convert this date to a \"YYYY-MM-DD\" key for the index.\n     * @param {Scheduler.model.EventModel} eventRecord The event record.\n     * @private\n     */\n    remove(indexName, date, eventRecord) {\n        const\n            index = this[indexNameMap[indexName]],\n            key   = this.dayTime.dateKey(date),\n            entry = index[key];\n\n        if (entry) {\n            entry.delete(eventRecord);\n        }\n    }\n\n    /**\n     * Removes an event record from all indexes for all dates which the event overlaps.\n     * @param {Scheduler.model.EventModel} eventRecord The event record.\n     * @param {Date} startDate The start date for the event. This may be different from the `startDate` of the given\n     * `eventRecord` when the event is rescheduled.\n     * @param {Date} endDate The end date for the event. This may be different from the `endDate` of the given\n     * `eventRecord` when the event is rescheduled.\n     * @private\n     */\n    removeEvent(eventRecord, startDate, endDate) {\n        let dateMS = this.dayTime.startOfDay(startDate)?.getTime(),\n            endDateMS;\n\n        if (dateMS) {\n            endDateMS = endDate?.getTime() ?? dateMS;\n            this.remove('startDate', dateMS, eventRecord);\n\n            do {\n                this.remove('date', dateMS, eventRecord);\n                dateMS += MILLIS_PER_DAY;\n            } while (dateMS < endDateMS);\n        }\n    }\n\n    // TODO: Improve Collection indices to handle this\n    // Keeps date & startDate indices up to date, used by Calendar and recurrence\n    // The indices are initialized lazily on first access, and then kept up to date on changes\n    sync(action, added, removed, replaced, wasSet) {\n        added = added || emptyArray;\n        removed = removed || emptyArray;\n\n        const\n            me            = this,\n            addedCount    = added.length,\n            removedCount  = removed.length,\n            replacedCount = replaced?.length;\n\n        let i, newEvent, outgoingEvent;\n\n        if (!me.initialized) {\n            return;\n        }\n\n        switch (action) {\n            case 'clear':\n                me.clear();\n                break;\n\n            // Add and remove\n            case 'splice':\n                // Handle replacement of records by instances with same ID\n                if (replacedCount) {\n                    added = added.slice();\n                    removed = removed.slice();\n\n                    for (i = 0; i < replacedCount; i++) {\n                        removed.push(replaced[i][0]);\n                        added.push(replaced[i][1]);\n                    }\n                }\n\n                // Remove entries from indices\n                if (removedCount) {\n                    for (i = 0; i < removedCount; i++) {\n                        outgoingEvent = removed[i];\n\n                        me.removeEvent(outgoingEvent, outgoingEvent.startDate, outgoingEvent.endDate);\n                    }\n                }\n\n                // Add entries to indices\n                if (addedCount) {\n                    for (i = 0; i < addedCount; i++) {\n                        newEvent = added[i];\n\n                        // Can only be date-indexed if it's scheduled.\n                        // Also ignore parent events (likely using a Gantt project)\n                        if (newEvent.isScheduled && !newEvent.isParent) {\n                            me.addEvent(newEvent);\n                        }\n                    }\n                }\n                break;\n\n            // invoked when the start or end changes so that the event can be re-indexed.\n            case 'reschedule':\n                outgoingEvent = added[0];\n\n                me.removeEvent(outgoingEvent, wasSet.startDate?.oldValue || outgoingEvent.startDate,\n                    wasSet.endDate?.oldValue || outgoingEvent.endDate);\n\n                // Now process as as splice with an add and no removes.\n                me.sync('splice', added);\n\n                break;\n        }\n    }\n\n    /**\n     * This method registers a `dayTime` instance with this index in the `users` array.\n     * @param {Core.util.DayTime} dayTime The instance to register.\n     */\n    register(dayTime) {\n        this.users.push(dayTime);\n    }\n\n    /**\n     * This method unregisters a `dayTime` instance, removing it from the `users` array. This method returns `true` if\n     * this was the last registered instance and this index is no longer needed.\n     * @param {Core.util.DayTime} dayTime The instance to register.\n     * @returns {Boolean}\n     */\n    unregister(dayTime) {\n        const\n            { users } = this,\n            i = users.indexOf(dayTime);\n\n        if (i > -1) {\n            users.splice(i, 1);\n        }\n\n        return !users.length;\n    }\n};\n\n// To avoid shape changes:\nconst proto = EventDayIndex.prototype;\n\nindexProps.forEach(name => proto[name] = null);\nproto.initialized = false;\n","import DayTime from '../../../Core/util/DayTime.js';\nimport EventDayIndex from '../util/EventDayIndex.js';\n\n/**\n * @module Scheduler/data/mixin/DayIndexMixin\n */\n\nconst { MIDNIGHT } = DayTime;\n\n/**\n * Mixing handling Calendars day indices.\n *\n * Consumed by EventStore in Scheduler & Scheduler Pro and TaskStore in Gantt.\n *\n * @mixin\n * @internal\n */\nexport default Target => class DayIndexMixin extends Target {\n\n    static $name = 'DayIndexMixin';\n\n    construct(config) {\n        super.construct(config);\n\n        this.dayIndices = null;\n    }\n\n    //region Keeping index in sync\n\n    // Override to syncIndices on initial load\n    afterLoadData() {\n        this.syncIndices('splice', this.storage.allValues);\n        super.afterLoadData?.();\n    }\n\n    /**\n     * Responds to mutations of the underlying storage Collection.\n     *\n     * Maintain indices for fast finding of events by date.\n     * @param {Object} event\n     * @private\n     */\n    onDataChange({ action, added, removed, replaced }) {\n        // Indices must be synced before responding to change\n        this.syncIndices(action, added, removed, replaced);\n\n        super.onDataChange(...arguments);\n    }\n\n    onDataReplaced(action, data) {\n        // Indices must be synced before responding to change\n        this.syncIndices('clear');\n        this.syncIndices('splice', this.storage.values);\n\n        super.onDataReplaced(action, data);\n    }\n\n    onModelChange(record, toSet, wasSet, silent, fromRelationUpdate) {\n        // Ensure by-date indices are up to date.\n        if (('startDate' in wasSet) || ('endDate' in wasSet)) {\n            this.syncIndices('reschedule', [record], null, null, wasSet);\n        }\n\n        super.onModelChange(...arguments);\n    }\n\n    //endregion\n\n    //region Index\n\n    /**\n     * Invalidates associated day indices.\n     * @internal\n     */\n    invalidateDayIndices() {\n        this.dayIndices?.forEach(dayIndex => dayIndex.invalidate());\n    }\n\n    /**\n     * Registers a `DayTime` instance, creating an `EventDayIndex` for each distinct `startShift`. This index is\n     * maintained until all instances with a matching `startShift` are {@link #function-unregisterDayIndex unregistered}.\n     * @param {Core.util.DayTime} dayTime The instance to register.\n     * @internal\n     * @category Indexing\n     */\n    registerDayIndex(dayTime) {\n        const\n            me = this,\n            dayIndices = me.dayIndices || (me.dayIndices = []);\n\n        let dayIndex, i;\n\n        for (i = 0; !dayIndex && i < dayIndices.length; ++i) {\n            if (dayIndices[i].matches(dayTime)) {\n                (dayIndex = dayIndices[i]).register(dayTime);\n            }\n        }\n\n        !dayIndex && dayIndices.push(dayIndex = new EventDayIndex(me, dayTime));\n\n        return dayIndex;\n    }\n\n    syncIndices(...args) {\n        this.dayIndices?.forEach(dayIndex => dayIndex.sync(...args));\n    }\n\n    /**\n     * Removes a registered `DayTime` instance. If this is the last instance registered to an `EventDayIndex`, that\n     * index is removed.\n     * @param {Core.util.DayTime} dayTime The instance to unregister.\n     * @internal\n     * @category Indexing\n     */\n    unregisterDayIndex(dayTime) {\n        const\n            me = this,\n            { dayIndices } = me;\n\n        for (let i = dayIndices?.length; i-- > 0; /* empty */) {\n            if (dayIndices[i].matches(dayTime)) {\n                if (dayIndices[i].unregister(dayTime)) {\n                    dayIndices.splice(i, 1);\n                }\n\n                break;\n            }\n        }\n    }\n\n    /**\n     * Returns the `EventDayIndex` to use for the given `DayTime` instance. This may be the primary instance or a\n     * child instance created by {@link #function-registerDayIndex}.\n     * @param {Core.util.DayTime} dayTime The `DayTime` of the desired index.\n     * @returns {Scheduler.data.util.EventDayIndex}\n     * @private\n     * @category Indexing\n     */\n    useDayIndex(dayTime) {\n        const\n            me             = this,\n            { dayIndices } = me;\n\n        dayTime = dayTime || MIDNIGHT;\n\n        for (let i = 0; dayIndices && i < dayIndices.length; ++i) {\n            if (dayIndices[i].matches(dayTime)) {\n                return dayIndices[i];\n            }\n        }\n\n        if (dayTime.startShift) {\n            throw new Error(`No day index registered for ${dayTime} on ${me.id}`);\n        }\n\n        return me.registerDayIndex(MIDNIGHT);\n    }\n\n    //endregion\n};\n","/* eslint-disable no-unused-expressions */\n\n/**\n * @module Scheduler/data/mixin/SharedEventStoreMixin\n */\n\n/**\n * This is a mixin, containing functionality related to managing events.\n *\n * It is consumed by the regular {@link Scheduler.data.EventStore} class and Scheduler Pros counterpart.\n *\n * @mixin\n */\nexport default Target => class SharedEventStoreMixin extends Target {\n    static get $name() {\n        return 'SharedEventStoreMixin';\n    }\n\n    /**\n     * Add events to the store.\n     *\n     * NOTE: Dates, durations and references (assignments, resources) on the events are determined async by a calculation\n     * engine. Thus they cannot be directly accessed after using this function.\n     *\n     * For example:\n     *\n     * ```javascript\n     * eventStore.add({ startDate, duration });\n     * // endDate is not yet calculated\n     * ```\n     *\n     * To guarantee data is in a calculated state, wait for calculations for finish:\n     *\n     * ```javascript\n     * eventStore.add({ startDate, duration });\n     * await eventStore.project.commitAsync();\n     * // endDate is calculated\n     * ```\n     *\n     * Alternatively use `addAsync()` instead:\n     *\n     * ```javascript\n     * await eventStore.addAsync({ startDate, duration });\n     * // endDate is calculated\n     * ```\n     *\n     * @param {Scheduler.model.EventModel|Scheduler.model.EventModel[]|EventModelConfig|EventModelConfig[]} records\n     * Array of records/data or a single record/data to add to store\n     * @param {Boolean} [silent] Specify `true` to suppress events\n     * @returns {Scheduler.model.EventModel[]} Added records\n     * @function add\n     * @category CRUD\n     */\n\n    /**\n     * Add events to the store and triggers calculations directly after. Await this function to have up to date data on\n     * the added events.\n     *\n     * ```javascript\n     * await eventStore.addAsync({ startDate, duration });\n     * // endDate is calculated\n     * ```\n     *\n     * @param {Scheduler.model.EventModel|Scheduler.model.EventModel[]|EventModelConfig|EventModelConfig[]} records\n     * Array of records/data or a single record/data to add to store\n     * @param {Boolean} [silent] Specify `true` to suppress events\n     * @returns {Scheduler.model.EventModel[]} Added records\n     * @function addAsync\n     * @category CRUD\n     * @async\n     */\n\n    /**\n     * Applies a new dataset to the EventStore. Use it to plug externally fetched data into the store.\n     *\n     * NOTE: Dates, durations and relations (assignments, resources) on the events are determined async by a calculation\n     * engine. Thus they cannot be directly accessed after assigning the new dataset.\n     *\n     * For example:\n     *\n     * ```javascript\n     * eventStore.data = [{ startDate, duration }];\n     * // eventStore.first.endDate is not yet calculated\n     * ```\n     *\n     * To guarantee data is in a calculated state, wait for calculations for finish:\n     *\n     * ```javascript\n     * eventStore.data = [{ startDate, duration }];\n     * await eventStore.project.commitAsync();\n     * // eventStore.first.endDate is calculated\n     * ```\n     *\n     * Alternatively use `loadDataAsync()` instead:\n     *\n     * ```javascript\n     * await eventStore.loadDataAsync([{ startDate, duration }]);\n     * // eventStore.first.endDate is calculated\n     * ```\n     *\n     * @member {EventModelConfig[]} data\n     * @category Records\n     */\n\n    /**\n     * Applies a new dataset to the EventStore and triggers calculations directly after. Use it to plug externally\n     * fetched data into the store.\n     *\n     * ```javascript\n     * await eventStore.loadDataAsync([{ startDate, duration }]);\n     * // eventStore.first.endDate is calculated\n     * ```\n     *\n     * @param {EventModelConfig[]} data Array of EventModel data objects\n     * @function loadDataAsync\n     * @category CRUD\n     * @async\n     */\n\n    static get defaultConfig() {\n        return {\n            /**\n             * CrudManager must load stores in the correct order. Lowest first.\n             * @private\n             */\n            loadPriority : 100,\n            /**\n             * CrudManager must sync stores in the correct order. Lowest first.\n             * @private\n             */\n            syncPriority : 200,\n\n            storeId : 'events',\n\n            /**\n             * Configure with `true` to also remove the event when removing the last assignment from the linked\n             * AssignmentStore. This config has not effect when using EventStore in legacy `resourceId`-mode.\n             * @config {Boolean}\n             * @default\n             * @category Common\n             */\n            removeUnassignedEvent : true,\n\n            /**\n             * Configure with `true` to force single-resource mode, an event can only be assigned to a single resource.\n             * If not provided, the mode will be inferred from\n             *\n             * 1. presence of an assignment store (i.e. multi-assignment)\n             * 2. presence of `resourceId` in the event store data (i.e. single assignment mode)\n             * @config {Boolean}\n             * @category Common\n             */\n            singleAssignment : null\n        };\n    }\n\n    /**\n     * Class used to represent records. Defaults to class EventModel.\n     * @member {Scheduler.model.EventModel} modelClass\n     * @typings {typeof EventModel}\n     * @category Records\n     */\n\n    construct(config) {\n        super.construct(config, true);\n\n        if (this.singleAssignment) {\n            this.usesSingleAssignment = true;\n        }\n\n        if (!this.modelClass.isEventModel) {\n            throw new Error('The model for the EventStore must subclass EventModel');\n        }\n    }\n\n    /**\n     * Appends a new record to the store\n     * @param {Scheduler.model.EventModel} record The record to append to the store\n     * @category CRUD\n     */\n    append(record) {\n        return this.add(record);\n    }\n\n    //region Project\n\n    get project() {\n        return super.project;\n    }\n\n    set project(project) {\n        super.project = project;\n\n        this.detachListeners('project');\n\n        if (project) {\n            // Project already has AssignmentStore instance? Attach to it.\n            if (project.assignmentStore?.isAssignmentStore) {\n                this.attachToAssignmentStore(project.assignmentStore);\n            }\n\n            // Accessing assignmentStore would trigger `assignmentStoreChange` event on the project, so we set up\n            // the listener after\n            project.ion({\n                name                  : 'project',\n                assignmentStoreChange : 'onProjectAssignmentStoreChange',\n                thisObj               : this,\n                prio                  : 200 // Before UI updates\n            });\n        }\n    }\n\n    //endregion\n\n    //region Single assignment\n\n    get usesSingleAssignment() {\n        if (this.isChained) {\n            return this.masterStore.usesSingleAssignment;\n        }\n        return this._usesSingleAssignment;\n    }\n\n    set usesSingleAssignment(value) {\n        this._usesSingleAssignment = value;\n    }\n\n    processRecords(eventRecords) {\n        const\n            { assignmentStore } = this,\n            assignmentsToAdd = [];\n\n        // Same as on `joinRecordsToStore`, when adding a number of event records CoreEventMixin#joinProject method\n        // will clear/rebuild cache in a loop. We raise this flag to skip invalidating assignment store indices for the time\n        // we are joining records to the store. When they're added and indices are read, we will invalidate them.\n        if (assignmentStore) {\n            assignmentStore.skipInvalidateIndices = true;\n        }\n\n        eventRecords = super.processRecords(eventRecords, assignmentStore && !this.stm?.isRestoring && (eventRecord => {\n            // AssignmentStore found, add an assignment to it if this is not a dataset operation\n            const resourceId = eventRecord.get('resourceId');\n\n            if (!eventRecord.reassignedFromReplace && resourceId != null) {\n                // Check if the event is already assigned to the resource, though it's not in the event store.\n                // It could happen when you remove an event, so both event and assignment records are removed,\n                // then you \"undo\" the action and the assignment is restored before the event is restored.\n                if (!assignmentStore.includesAssignment(eventRecord.id, resourceId)) {\n                    // Cannot use `event.assign(resourceId)` since event is not part of store yet\n                    // Using a bit shorter generated id to not look so ugly in DOM\n                    assignmentsToAdd.push({\n                        id      : assignmentStore.modelClass.generateId(''),\n                        resourceId,\n                        eventId : eventRecord.id\n                    });\n                }\n            }\n\n            // clear flag\n            eventRecord.reassignedFromReplace = false;\n        }) || undefined);\n\n        if (assignmentStore) {\n            assignmentStore.storage.invalidateIndices();\n            assignmentStore.skipInvalidateIndices = false;\n\n            assignmentStore.add(assignmentsToAdd);\n        }\n\n        return eventRecords;\n    }\n\n    joinRecordsToStore(records) {\n        const { assignmentStore } = this;\n\n        if (assignmentStore) {\n            // When adding a number of event records CoreEventMixin#joinProject method will clear/rebuild cache in a loop.\n            // We raise this flag to skip invalidating assignment store indices for the time we are joining records to\n            // the store. When they're added and indices are read, we will invalidate them.\n            assignmentStore.skipInvalidateIndices = true;\n\n            super.joinRecordsToStore(records);\n\n            assignmentStore.storage.invalidateIndices();\n\n            assignmentStore.skipInvalidateIndices = false;\n        }\n        else {\n            super.joinRecordsToStore(records);\n        }\n    }\n\n    processRecord(eventRecord, isDataset = false) {\n        eventRecord = super.processRecord(eventRecord, isDataset);\n\n        const resourceId = eventRecord.get('resourceId');\n\n        if (resourceId != null && !eventRecord.meta.skipEnforcingSingleAssignment) {\n            const\n                me                  = this,\n                { assignmentStore } = me,\n                existingRecord      = me.getById(eventRecord.id),\n                isReplacing         = existingRecord && existingRecord !== eventRecord && !isDataset;\n\n            // Replacing an existing event, repoint the resource of its assignment\n            // (already repointed to the new event by engine in EventStoreMixin)\n            if (isReplacing) {\n                // Have to look assignment up on store, removed by engine in super call above\n                const assignment = assignmentStore.find(e => e.eventId === eventRecord.id);\n                if (assignment) {\n                    assignment.resource = resourceId;\n                    eventRecord.reassignedFromReplace = true;\n                }\n            }\n            // No AssignmentStore assigned yet, need to process when that happens. Or if it is a dataset operation,\n            // processing will happen at the end of it to not add individual assignment (bad for performance)\n            else {\n                me.$processResourceIds = true;\n            }\n\n            // Flag that we have been loaded using resourceId, checked by CrudManager to exclude the internal\n            // AssignmentStore from sync\n            me.usesSingleAssignment = true;\n        }\n\n        return eventRecord;\n    }\n\n    processResourceIds() {\n        const { assignmentStore } = this;\n\n        if (this.$processResourceIds && assignmentStore?.isAssignmentStore && !this.project.isSharingAssignmentStore) {\n            const assignments = [];\n\n            // resourceIds used during initialization, convert into assignments\n            this.forEach(eventRecord => {\n                const { resourceId, id : eventId } = eventRecord;\n                if (resourceId != null) {\n                    // Using a bit shorter generated id to not look so ugly in DOM\n                    assignments.push({\n                        id : assignmentStore.modelClass.generateId(''),\n                        resourceId,\n                        eventId\n                    });\n                }\n            });\n\n            // Disable as much as possible, since we are in full control of this store when using single assignment mode\n            assignmentStore.useRawData = {\n                disableDefaultValue     : true,\n                disableDuplicateIdCheck : true,\n                disableTypeConversion   : true\n            };\n            // Flag that throws in AssignmentStore if data is loaded some other way when using single assignment\n            assignmentStore.usesSingleAssignment = false;\n            // These assignments all use generated ids, and are not meant to be searialized anyway so bypass check\n            assignmentStore.verifyNoGeneratedIds = false;\n\n            assignmentStore.data = assignments;\n\n            assignmentStore.usesSingleAssignment = true;\n\n            this.$processResourceIds = false;\n        }\n    }\n\n    loadData() {\n        super.loadData(...arguments);\n\n        this.processResourceIds();\n    }\n\n    // Optionally remove unassigned events\n    onBeforeRemoveAssignment({ records }) {\n        const me = this;\n\n        if (\n            me.removeUnassignedEvent && !me.isRemoving && !me.isSettingData &&\n            !me.stm?.isRestoring && !me.usesSingleAssignment &&\n            // Do not remove unassigned events when syncing data, new assignments etc might be synced afterwards\n            !me.assignmentStore.isSyncingDataOnLoad && !me.resourceStore.isSyncingDataOnLoad\n        ) {\n            const toRemove = new Set();\n            // Collect all events that are unassigned after the remove\n            records.forEach(assignmentRecord => {\n                const { event } = assignmentRecord;\n                // Assignment might not have an event or the event might already be removed\n                if (event && !event.isRemoved && event.assignments.every(a => records.includes(a))) {\n                    toRemove.add(event);\n                }\n            });\n\n            // And remove them\n            if (toRemove.size) {\n                me.remove([...toRemove]);\n            }\n        }\n    }\n\n    onProjectAssignmentStoreChange({ store }) {\n        this.attachToAssignmentStore(store);\n    }\n\n    attachToAssignmentStore(assignmentStore) {\n        const me = this;\n\n        me.detachListeners('assignmentStore');\n\n        if (assignmentStore) {\n            me.processResourceIds();\n\n            assignmentStore.ion({\n                name : 'assignmentStore',\n\n                // Adding an assignment in single assignment mode should set events resourceId if needed\n                addPreCommit({ records }) {\n                    if (me.usesSingleAssignment && !me.isSettingData && !me.isAssigning) {\n                        records.forEach(assignment => {\n                            const { event } = assignment;\n                            if (event?.isEvent && event.resourceId !== assignment.resourceId) {\n                                event.meta.isAssigning = true;\n                                event.set('resourceId', assignment.resourceId);\n                                event.meta.isAssigning = false;\n                            }\n                        });\n                    }\n                },\n\n                // Called both for remove and removeAll\n                beforeRemove : 'onBeforeRemoveAssignment',\n\n                // Removing an assignment in single assignment mode should set events resourceId to null\n                removePreCommit({ records }) {\n                    if (me.usesSingleAssignment) {\n                        records.forEach(assignment => {\n                            // With engine link to event is already broken when we get here, hence the lookup\n                            me.getById(assignment.eventId)?.set('resourceId', null);\n                        });\n                    }\n                },\n\n                removeAllPreCommit() {\n                    if (me.usesSingleAssignment && !me.isSettingData) {\n                        me.allRecords.forEach(eventRecord => eventRecord.set('resourceId', null));\n                    }\n                },\n\n                // Keep events resourceId in sync with assignment on changes in single assignment mode\n                update({ record, changes }) {\n                    if (me.usesSingleAssignment && 'resourceId' in changes) {\n                        const { event } = record;\n                        event.meta.isAssigning = true;\n                        event.set('resourceId', changes.resourceId.value);\n                        event.meta.isAssigning = false;\n                    }\n                },\n                thisObj : me\n            });\n        }\n    }\n\n    set data(data) {\n        this.isSettingData = true;\n\n        // When using single assignment, remove all assignments when loading a new set of events.\n        // Don't do it when filling a chained store, assignments are for the master store\n        if (this.usesSingleAssignment && !this.syncDataOnLoad && !this.isChained) {\n            this.assignmentStore.removeAll(true);\n        }\n\n        super.data = data;\n\n        this.isSettingData = false;\n    }\n\n    // Override trigger to decorate update/change events with a flag if resourceId was the only thing changed, in which\n    // case the change most likely can be ignored since the assignment will also change\n    trigger(eventName, params) {\n        const { changes } = params || {};\n\n        if (changes && 'resourceId' in changes && Object.keys(changes).length === 1) {\n            params.isAssign = true;\n        }\n\n        return super.trigger(...arguments);\n    }\n\n    //endregion\n};\n","import Base from '../../../Core/Base.js';\nimport ArrayHelper from '../../../Core/helper/ArrayHelper.js';\n\n/**\n * @module Scheduler/data/mixin/RecurringTimeSpansMixin\n */\n\nconst\n    emptyArray = Object.freeze([]);\n\n/**\n * This mixin class provides recurring timespans functionality to a store of {@link Scheduler.model.TimeSpan TimeSpan} models.\n * @mixin\n */\nexport default Target => class RecurringTimeSpansMixin extends (Target || Base) {\n    static get $name() {\n        return 'RecurringTimeSpansMixin';\n    }\n\n    construct(...args) {\n        const me = this;\n\n        // We store all generated occurrences keyed by `_generated_${recurringTimeSpan.id}:${occurrenceStartDate}`\n        // So that when asked to generate an occurrence for a date, an already generated one can be returned.\n        me.globalOccurrences = new Map();\n\n        // All recurring events added to the store are accessible through this Set. It's used\n        // to generate occurrences.\n        me.recurringEvents = new Set();\n\n        super.construct(...args);\n    }\n\n    // Override to refreshRecurringEventsCache on initial load\n    afterLoadData() {\n        // All cached occurrences are now potentially invalid.\n        // A store reload might imply any number of changes which invalidate any occurrence.\n        this.globalOccurrences.clear();\n\n        // Clear and rebuild the recurring events cache\n        this.refreshRecurringEventsCache('clear');\n        this.refreshRecurringEventsCache('splice', this.storage.allValues);\n        super.afterLoadData && super.afterLoadData();\n    }\n\n    /**\n     * Responds to mutations of the underlying storage Collection.\n     *\n     * Maintain indices for fast finding of events by date.\n     * @param {Object} event\n     * @private\n     */\n    onDataChange({ action, added, removed, replaced }) {\n        // Recurring events cache must be refreshed before responding to change\n        this.refreshRecurringEventsCache(action, added, removed, replaced);\n        super.onDataChange(...arguments);\n    }\n\n    refreshRecurringEventsCache(action, added = emptyArray, removed = emptyArray, replaced) {\n        const\n            me                  = this,\n            { recurringEvents } = me,\n            replacedCount       = replaced?.length;\n\n        switch (action) {\n            case 'clear':\n                recurringEvents.clear();\n                break;\n\n            // Add and remove\n            case 'splice': {\n                // Handle replacement of records by instances with same ID\n                if (replacedCount) {\n                    added = added.slice();\n                    removed = removed.slice();\n\n                    for (let i = 0; i < replacedCount; i++) {\n                        removed.push(replaced[i][0]);\n                        added.push(replaced[i][1]);\n                    }\n                }\n\n                const\n                    addedCount   = added.length,\n                    removedCount = removed.length;\n\n                // Track the recurring events we contain\n                if (removedCount && recurringEvents.size) {\n                    for (let i = 0; i < removedCount; i++) {\n                        // If it's being removed, remove it from the recurring events cache.\n                        // If it's not a recurring event, it doesn't matter, it won't be in there.\n                        recurringEvents.delete(removed[i]);\n                    }\n                }\n                // Track the recurring events we contain\n                if (addedCount) {\n                    for (let i = 0; i < addedCount; i++) {\n                        const newEvent = added[i];\n\n                        // Allow easy access to recurring events\n                        if (newEvent.isRecurring) {\n                            recurringEvents.add(newEvent);\n                        }\n                    }\n                }\n                break;\n            }\n        }\n    }\n\n    //<debug>\n    add(record, ...args) {\n        // StoreCRUD#add always converts to array anyway, so do it first here\n        // so that the occurrence check can be reliable.\n        const records = ArrayHelper.asArray(record);\n\n        // Occurrences can never be in the store.\n        // When an occurrence is edited, it becomes an exception\n        // and is promoted to be a full event and THEN added.\n        if (this.isEventStore && records.some(r => r.isOccurrence)) {\n            throw new Error('Occurrences must not be added to the event store');\n        }\n        else {\n            return super.add(records, ...args);\n        }\n    }\n    //</debug>\n\n    getById(id) {\n        let result = super.getById(id);\n\n        // If the id is not found in the Store, then it could be one of our generated occurrences\n        if (!result) {\n            result = this.globalOccurrences.get(this.modelClass.asId(id));\n        }\n\n        return result;\n    }\n\n    onModelChange(record, toSet, wasSet, silent, fromRelationUpdate) {\n        const isRecurrenceRelatedFieldChange = this.isRecurrenceRelatedFieldChange(record, wasSet);\n\n        // If this is the base of a recurring sequence, then any reactors to events from\n        // the super call must regenerate occurrences, so must be done at top.\n        // If silent is true, occurrences won't be recalculated. Do not remove occurrences from cache in such case.\n        if (isRecurrenceRelatedFieldChange && !silent) {\n            record.removeOccurrences();\n        }\n\n        super.onModelChange(...arguments);\n\n        // If this is the base of a recurring sequence, then the EventStore must\n        // trigger a refresh event so that UIs refresh themselves.\n        // This could be at the tail end of the creation of an exception\n        // or a new recurring base.\n        if (isRecurrenceRelatedFieldChange && !silent) {\n            const event = { action : 'batch', records : this.storage.values };\n\n            this.trigger('refresh', event);\n            this.trigger('change', event);\n        }\n    }\n\n    /**\n     * The method restricts which field modifications should trigger timespan occurrences building.\n     * By default, any field change of a recurring timespan causes the rebuilding.\n     * @param  {Scheduler.model.TimeSpan} timeSpan The modified timespan.\n     * @param  {Object} wasSet Object containing the change set.\n     * @returns {Boolean} `True` if the fields modification should trigger the timespan occurrences rebuilding.\n     * @internal\n     * @category Recurrence\n     */\n    isRecurrenceRelatedFieldChange(timeSpan, wasSet) {\n        return timeSpan.isRecurring || 'recurrenceRule' in wasSet;\n    }\n\n    /**\n     * Builds occurrences for the provided timespan across the provided date range.\n     * @private\n     * @category Recurrence\n     */\n    getOccurrencesForTimeSpan(timeSpan, startDate, endDate) {\n        const result = [];\n\n        if (timeSpan.isRecurring) {\n            timeSpan.recurrence.forEachOccurrence(startDate, endDate, r => result.push(r));\n        }\n\n        return result;\n    }\n\n    set data(data) {\n        // All cached occurrences are now invalid with a new dataset\n        this.globalOccurrences.clear();\n        super.data = data;\n    }\n\n    /**\n     * Returns all the recurring timespans.\n     * @returns {Scheduler.model.TimeSpan[]} Array of recurring events.\n     * @category Recurrence\n     */\n    getRecurringTimeSpans() {\n        return [...this.recurringEvents];\n    }\n};\n","import Base from '../../../Core/Base.js';\nimport RecurringTimeSpansMixin from './RecurringTimeSpansMixin.js';\n\n/**\n * @module Scheduler/data/mixin/RecurringEventsMixin\n */\n\n/**\n * This mixin class provides recurring events functionality to the {@link Scheduler.data.EventStore event store}.\n * @extends Scheduler/data/mixin/RecurringTimeSpansMixin\n * @mixin\n */\nexport default Target => class RecurringEventsMixin extends RecurringTimeSpansMixin(Target || Base) {\n\n    static get $name() {\n        return 'RecurringEventsMixin';\n    }\n\n    /**\n     * Returns all the recurring events.\n     *\n     * **An alias for ** {@link Scheduler.data.mixin.RecurringTimeSpansMixin#function-getRecurringTimeSpans} method.\n     *\n     * @returns {Scheduler.model.EventModel[]} Array of recurring events.\n     * @category Recurrence\n     */\n    getRecurringEvents() {\n        return this.getRecurringTimeSpans();\n    }\n\n    isEventPersistable(event) {\n        // occurrences are not persistable\n        return super.isEventPersistable(event) && (!event.supportsRecurring || !event.isOccurrence);\n    }\n};\n","import TimeSpan from '../TimeSpan.js';\nimport TimeZoneHelper from '../../../Core/helper/TimeZoneHelper.js';\nimport ObjectHelper from '../../../Core/helper/ObjectHelper.js';\n\n/**\n * @module Scheduler/model/mixin/TimeZoneDatesMixin\n */\n\nconst dateFieldsToConvert = {\n    startDate      : 1,\n    endDate        : 1,\n    constraintDate : 1,\n    deadlineDate   : 1\n};\n\n/**\n * This mixin class overrides default Model functionality to provide support for time zone converted dates\n * @private\n * @mixin\n * @mixinbase TimeSpan\n */\nexport default Target => class TimeZonedDatesMixin extends (Target || TimeSpan) {\n\n    static $name = 'TimeZonedDatesMixin';\n\n    setLocalDate(field, date) {\n        this.set(field, this._inTimeZone ? TimeZoneHelper.toTimeZone(date, this._inTimeZone) : date, true);\n        // Need to set data to fool engine that the dates havn't changed\n        this.data[field] = this[field];\n    }\n\n    getLocalDate(field) {\n        if (this._inTimeZone && this[field]) {\n            return TimeZoneHelper.fromTimeZone(this[field], this._inTimeZone);\n        }\n        return this[field];\n    }\n\n    applyChangeset(rawChanges) {\n        const { _inTimeZone } = this;\n\n        // When a sync response arrives from backend, the data will need to be converted to time zone before applied.\n        if (_inTimeZone != null) {\n            for (const field in dateFieldsToConvert) {\n                if (rawChanges[field]) {\n                    this.setLocalDate(field, new Date(rawChanges[field]));\n                    delete rawChanges[field];\n                }\n            }\n        }\n        return super.applyChangeset(...arguments);\n    }\n\n    getFieldPersistentValue(field) {\n        if (this._inTimeZone) {\n            const fieldName = field?.field ?? field?.name ?? field;\n\n            // Used when saving/syncing. Returns local system dates\n            if (dateFieldsToConvert[fieldName]) {\n                return this.getLocalDate(fieldName);\n            }\n        }\n\n        return super.getFieldPersistentValue(field);\n    }\n\n    // Converts current record into a timeZone\n    convertToTimeZone(timeZone) {\n        const\n            me            = this,\n            metaModified  = { ...me.meta.modified },\n            convertFields = { ...dateFieldsToConvert };\n\n        // Do not convert start and end dates on task unless manually scheduled\n        if (me.isTask && !me.manuallyScheduled) {\n            delete convertFields.startDate;\n            delete convertFields.endDate;\n        }\n\n        // Collect values\n        for (const field in convertFields) {\n            // Only convert if field has value\n            if (me[field] != null) {\n                convertFields[field] = me[field];\n\n                // If already converted, restore to local system time zone\n                if (me._inTimeZone) {\n                    convertFields[field] = me.getLocalDate(field);\n\n                    // Restore value in meta modified as well\n                    if (metaModified[field]) {\n                        metaModified[field] = TimeZoneHelper.fromTimeZone(metaModified[field], me._inTimeZone);\n                    }\n                }\n            }\n            else {\n                delete convertFields[field];\n            }\n        }\n\n        // Change time zone\n        me._inTimeZone = timeZone;\n\n        // Set values\n        for (const field in convertFields) {\n            // Convert and set field date silently\n            me.setLocalDate(field, convertFields[field], false);\n            convertFields[field] = 1; // For clearing changes below\n\n            // Convert value in meta modified as well\n            if (me._inTimeZone && metaModified[field]) {\n                metaModified[field] = TimeZoneHelper.toTimeZone(metaModified[field], me._inTimeZone);\n            }\n        }\n\n        // Clear modification metadata\n        me.clearChanges(true, true, convertFields);\n\n        // If old modification metadata, restore them to record and store\n        if (!ObjectHelper.isEmpty(metaModified)) {\n            me.meta.modified = metaModified;\n            me.stores.forEach(store => store.modified.add(me));\n        }\n    }\n};\n","import Model from '../../Core/data/Model.js';\nimport TimeZonedDatesMixin from './mixin/TimeZonedDatesMixin.js';\nimport DomClassList from '../../Core/helper/util/DomClassList.js';\nimport DH from '../../Core/helper/DateHelper.js';\nimport VersionHelper from '../../Core/helper/VersionHelper.js';\nimport BrowserHelper from '../../Core/helper/BrowserHelper.js';\nimport ObjectHelper from '../../Core/helper/ObjectHelper.js';\nimport Duration from '../../Core/data/Duration.js';\n\n/**\n * @module Scheduler/model/TimeSpan\n */\n\n/**\n * This class represent a simple date range. It is being used in various subclasses and plugins which operate on date ranges.\n *\n * It's a subclass of {@link Core.data.Model}.\n * Please refer to documentation of those classes to become familiar with the base interface of this class.\n *\n * A TimeSpan has the following fields:\n *\n * - {@link #field-startDate}    - start date of the task in the ISO 8601 format\n * - {@link #field-endDate}      - end date of the task in the ISO 8601 format (not inclusive)\n * - {@link #field-duration}     - duration, time between start date and end date\n * - {@link #field-durationUnit} - unit used to express the duration\n * - {@link #field-name}         - an optional name of the range\n * - {@link #field-cls}          - an optional CSS class to be associated with the range.\n *\n * The data source of any field can be customized in the subclass. Please refer to {@link Core.data.Model} for details. To specify\n * another date format:\n *\n * ```javascript\n * class MyTimeSpan extends TimeSpan {\n *   static get fields() {\n *      { name: 'startDate', type: 'date', dateFormat: 'DD/MM/YY' }\n *   }\n * }\n * ```\n *\n * @extends Core/data/Model\n */\nexport default class TimeSpan extends Model.mixin(TimeZonedDatesMixin) {\n\n    static get $name() {\n        return 'TimeSpan';\n    }\n\n    //region Field definitions\n\n    static get fields() {\n        return [\n            /**\n             * The start date of a time span (or Event / Task).\n             *\n             * Uses {@link Core/helper/DateHelper#property-defaultFormat-static DateHelper.defaultFormat} to convert a\n             * supplied string to a Date. To specify another format, either change that setting or subclass TimeSpan and\n             * change the dateFormat for this field.\n             *\n             * Note that the field always returns a `Date`.\n             *\n             * @field {Date} startDate\n             * @accepts {String|Date}\n             * @category Scheduling\n             */\n            {\n                name : 'startDate',\n                type : 'date'\n            },\n\n            /**\n             * The end date of a time span (or Event / Task).\n             *\n             * Uses {@link Core/helper/DateHelper#property-defaultFormat-static DateHelper.defaultFormat} to convert a\n             * supplied string to a Date. To specify another format, either change that setting or subclass TimeSpan and\n             * change the dateFormat for this field.\n             *\n             * Note that the field always returns a `Date`.\n             *\n             * @field {Date} endDate\n             * @accepts {String|Date}\n             * @category Scheduling\n             */\n            {\n                name : 'endDate',\n                type : 'date'\n            },\n\n            /**\n             * The numeric part of the timespan's duration (the number of units).\n             * @field {Number} duration\n             * @category Scheduling\n             */\n            {\n                name      : 'duration',\n                type      : 'number',\n                allowNull : true,\n                internal  : true\n            },\n\n            /**\n             * The unit part of the TimeSpan duration, defaults to \"d\" (days). Valid values are:\n             *\n             * - \"millisecond\" - Milliseconds\n             * - \"second\" - Seconds\n             * - \"minute\" - Minutes\n             * - \"hour\" - Hours\n             * - \"day\" - Days\n             * - \"week\" - Weeks\n             * - \"month\" - Months\n             * - \"quarter\" - Quarters\n             * - \"year\"- Years\n             *\n             * This field is readonly after creation, to change durationUnit use #setDuration().\n             * @field {'millisecond'|'second'|'minute'|'hour'|'day'|'week'|'month'|'quarter'|'year'} durationUnit\n             * @category Scheduling\n             */\n            {\n                type         : 'durationunit',\n                name         : 'durationUnit',\n                defaultValue : 'd',\n                internal     : true\n            },\n\n            {\n                name    : 'fullDuration',\n                persist : false,\n                column  : {\n                    type : 'duration'\n                }\n            },\n\n            /**\n             * An encapsulation of the CSS classes to add to the rendered time span element.\n             *\n             * Always returns a {@link Core.helper.util.DomClassList}, but may still be treated as a string. For\n             * granular control of adding and removing individual classes, it is recommended to use the\n             * {@link Core.helper.util.DomClassList} API.\n             *\n             * @field {Core.helper.util.DomClassList} cls\n             * @accepts {Core.helper.util.DomClassList|String|String[]|Object}\n             *\n             * @category Styling\n             */\n            {\n                name         : 'cls',\n                defaultValue : '',\n                internal     : true\n            },\n\n            /**\n             * CSS class specifying an icon to apply to the rendered time span element.\n             * **Note**: In case event is a milestone, using `iconCls` with dependency feature might slightly decrease\n             * performance because feature will refer to the DOM to get exact size of the element.\n             * @field {String} iconCls\n             * @category Styling\n             */\n            {\n                name     : 'iconCls',\n                internal : true\n            },\n\n            /**\n             * A CSS style string (applied to `style.cssText`) or object (applied to `style`)\n             * ```\n             * record.style = 'color: red;font-weight: 800';\n             * ```\n             *\n             * @field {String} style\n             * @category Styling\n             */\n            {\n                name     : 'style',\n                type     : 'object',\n                internal : true\n            },\n\n            /**\n             * The name of the time span (or Event / Task)\n             * @field {String} name\n             * @category Common\n             */\n            {\n                name         : 'name',\n                type         : 'string',\n                defaultValue : ''\n            }\n        ];\n    }\n\n    //endregion\n\n    //region Init\n\n    afterConstruct() {\n        super.afterConstruct();\n\n        // This should probably be a property setter of some mandatory config, then we would not need an afterConfigure implementation.\n        this.normalize();\n    }\n\n    /**\n     * Returns the event store this event is part of, if any.\n     *\n     * @property {Scheduler.data.EventStore}\n     * @readonly\n     * @category Misc\n     */\n    get eventStore() {\n        const me = this;\n\n        // If we are an occurrence, return our base recurring event's store\n        if (me.isOccurrence) {\n            return me.recurringTimeSpan.eventStore;\n        }\n        if (!me._eventStore) {\n            me._eventStore = me.stores?.find(s => s.isEventStore);\n        }\n        return me._eventStore;\n    }\n\n    normalize() {\n        const\n            me                                             = this,\n            { startDate, endDate, duration, durationUnit } = me,\n            hasDuration                                    = duration != null;\n\n        // need to calculate duration (checking first since seemed most likely to happen)\n        if (startDate && endDate && !hasDuration) {\n            me.setData('duration', DH.diff(startDate, endDate, durationUnit, true));\n        }\n        // need to calculate endDate?\n        else if (startDate && !endDate && hasDuration) {\n            me.setData('endDate', DH.add(startDate, duration, durationUnit));\n        }\n        // need to calculate startDate\n        else if (!startDate && endDate && hasDuration) {\n            me.setData('startDate', DH.add(endDate, -duration, durationUnit));\n        }\n    }\n\n    //endregion\n\n    //region Getters & Setters\n\n    updateInternalCls(cls) {\n        if (this._cls) {\n            this._cls.value = cls;\n        }\n        else {\n            this._cls = new DomClassList(cls);\n        }\n    }\n\n    set internalCls(cls) {\n        this.updateInternalCls(cls);\n        this.set('cls', this._cls.value);\n    }\n\n    get internalCls() {\n        const { cls } = this;\n        // `cls` getter can be overriden so return `cls` value if it is DomClassList or assign it to `this._cls`\n        if (cls?.isDomClassList) {\n            return cls;\n        }\n        this.internalCls = cls;\n        return this._cls;\n    }\n\n    get cls() {\n        if (!this._cls) {\n            this._cls = new DomClassList(super.get('cls'));\n        }\n        return this._cls;\n    }\n\n    set cls(cls) {\n        this.internalCls = cls;\n    }\n\n    get startDate() {\n        return this.get('startDate');\n    }\n\n    set startDate(date) {\n        this.setStartDate(date);\n    }\n\n    get endDate() {\n        return this.get('endDate');\n    }\n\n    set endDate(date) {\n        this.setEndDate(date);\n    }\n\n    // TODO This can go away if Calendar would avoid rendering prior to the engine being ready (i.e., having calculated\n    //  all endDate values)\n    get endingDate() {\n        const\n            me = this,\n            {\n                endDate,\n                startDate\n            }  = me;\n\n        if (endDate) {\n            // Special case of startDate===endDate for allDay event:\n            // if (Number(endDate) === Number(startDate) && me.allDay) {\n            //     return DH.add(startDate, 1, 'd');\n            // }\n            // Nope... the above works fine except when the day start time is shifted. In this case we want the\n            // event to appear as \"all day\" on the shifted day, but the above will push the endingDate beyond the\n            // end of the shifted day.\n\n            return endDate;\n        }\n\n        return DH.add(startDate, me.duration, me.durationUnit);\n    }\n\n    get duration() {\n        return this.get('duration');\n    }\n\n    set duration(duration) {\n        this.setDuration(duration, this.durationUnit);\n    }\n\n    get durationUnit() {\n        return this.get('durationUnit');\n    }\n\n    /**\n     * Sets duration and durationUnit in one go. Only allowed way to change durationUnit, the durationUnit field is\n     * readonly after creation\n     * @param {Number} duration Duration value\n     * @param {'millisecond'|'second'|'minute'|'hour'|'day'|'week'|'month'|'quarter'|'year'} durationUnit Unit for\n     * specified duration value, see {@link #field-durationUnit} for valid values\n     * @category Scheduling\n     */\n    setDuration(duration, durationUnit = this.durationUnit) {\n        // Must be a number\n        duration = parseFloat(duration);\n\n        const toSet = {\n            duration,\n            durationUnit\n        };\n\n        if (this.startDate) {\n            toSet.endDate = DH.add(this.startDate, duration, durationUnit);\n        }\n        else if (this.endDate) {\n            toSet.startDate = DH.add(this.endDate, -duration, durationUnit);\n        }\n\n        this.set(toSet);\n    }\n\n    /**\n     * Returns duration of the event in given unit. This is a wrapper for {@link Core.helper.DateHelper#function-getDurationInUnit-static}\n     * @param {'ms'|'s'|'m'|'h'|'d'|'w'|'M'|'y'} unit\n     * @param {Boolean} [doNotRound]\n     * @private\n     * @returns {Number}\n     */\n    getDurationInUnit(unit, doNotRound) {\n        if (this.starDate && this.endDate) {\n            return DH.getDurationInUnit(this.startDate, this.endDate, unit, doNotRound);\n        }\n        else {\n            return DH.as(unit, this.duration, this.durationUnit);\n        }\n    }\n\n    /**\n     * Property which encapsulates the duration's magnitude and units.\n     * @property {Core.data.Duration}\n     */\n    get fullDuration() {\n        // Used for formatting during export\n        return new Duration({\n            unit      : this.durationUnit,\n            magnitude : this.duration\n        });\n    }\n\n    set fullDuration(duration) {\n        if (typeof duration === 'string') {\n            duration = DH.parseDuration(duration, true, this.durationUnit);\n        }\n\n        this.setDuration(duration.magnitude, duration.unit);\n    }\n\n    /**\n     * Sets the range start date\n     *\n     * @param {Date} date The new start date\n     * @param {Boolean} keepDuration Pass `true` to keep the duration of the task (\"move\" the event), `false` to change the duration (\"resize\" the event).\n     * Defaults to `true`\n     * @category Scheduling\n     */\n    setStartDate(date, keepDuration = true) {\n        const\n            me    = this,\n            toSet = {\n                startDate : date\n            };\n\n        if (date) {\n            let calcEndDate;\n\n            if (keepDuration) {\n                calcEndDate = me.duration != null;\n            }\n            else {\n                if (me.endDate) {\n                    toSet.duration = DH.diff(date, me.endDate, me.durationUnit, true);\n\n                    if (toSet.duration < 0) throw new Error('Negative duration');\n                }\n                else {\n                    calcEndDate = this.duration != null;\n                }\n            }\n\n            if (calcEndDate) {\n                // Use hours to set end date in order to correctly process DST crossings\n                toSet.endDate = DH.add(date, me.getDurationInUnit('h'), 'h');\n            }\n        }\n        else {\n            toSet.duration = null;\n        }\n\n        me.set(toSet);\n    }\n\n    /**\n     * Sets the range end date\n     *\n     * @param {Date} date The new end date\n     * @param {Boolean} keepDuration Pass `true` to keep the duration of the task (\"move\" the event), `false` to change the duration (\"resize\" the event).\n     * Defaults to `false`\n     * @category Scheduling\n     */\n    setEndDate(date, keepDuration = false) {\n        const\n            me    = this,\n            toSet = {\n                endDate : date\n            };\n\n        if (date) {\n            let calcStartDate;\n\n            if (keepDuration === true) {\n                calcStartDate = me.duration != null;\n            }\n            else {\n                if (me.startDate) {\n                    toSet.duration = DH.diff(me.startDate, date, me.durationUnit, true);\n\n                    if (toSet.duration < 0) throw new Error('Negative duration');\n                }\n                else {\n                    calcStartDate = this.duration != null;\n                }\n            }\n\n            if (calcStartDate) {\n                toSet.startDate = DH.add(date, -me.duration, me.durationUnit);\n            }\n        }\n\n        me.set(toSet);\n    }\n\n    /**\n     * Sets the event start and end dates\n     *\n     * @param {Date} start The new start date\n     * @param {Date} end The new end date\n     * @param {Boolean} [silent] Pass `true` to not trigger events\n     * @category Scheduling\n     */\n    setStartEndDate(start, end, silent) {\n        this.set({\n            startDate : start,\n            endDate   : end\n        }, null, silent);\n    }\n\n    /**\n     * Returns an array of dates in this range. If the range starts/ends not at the beginning of day, the whole day will be included.\n     * @readonly\n     * @property {Date[]}\n     * @category Scheduling\n     */\n    get dates() {\n        const\n            dates     = [],\n            startDate = DH.startOf(this.startDate, 'day'),\n            endDate   = this.endDate;\n\n        for (let date = startDate; date < endDate; date = DH.add(date, 1, 'day')) {\n            dates.push(date);\n        }\n\n        return dates;\n    }\n\n    get startDateMS() {\n        return (this.batching && this.hasBatchedChange('startDate') ? this.get('startDate') : this.startDate)?.getTime();\n    }\n\n    get endDateMS() {\n        return (this.batching && this.hasBatchedChange('endDate') ? this.get('endDate') : this.endDate)?.getTime();\n    }\n\n    /**\n     * Returns the duration of this Event in milliseconds.\n     * @readonly\n     * @property {Number}\n     * @category Scheduling\n     */\n    get durationMS() {\n        const { endDateMS, startDateMS } = this;\n\n        if (endDateMS && startDateMS) {\n            return endDateMS - startDateMS;\n        }\n        else {\n            return DH.asMilliseconds(this.duration || 0, this.durationUnit);\n        }\n    }\n\n    /**\n     * Returns true if record is a milestone.\n     * @readonly\n     * @property {Boolean}\n     * @category Scheduling\n     */\n    get isMilestone() {\n        return this.duration === 0;\n    }\n\n    inSetNormalize(field) {\n        if (typeof field !== 'string') {\n            // If user is updating multiple properties in one go using an object, we help out\n            // by filling out missing schedule related data\n\n            let { startDate, endDate, duration, durationUnit = this.durationUnit } = field;\n\n            // Conversion is usually handled in inSet, but we are normalizing prior to that and have to handle it here\n            if (typeof startDate === 'string') {\n                startDate = this.getFieldDefinition('startDate').convert(startDate);\n            }\n\n            if (typeof endDate === 'string') {\n                endDate = this.getFieldDefinition('endDate').convert(endDate);\n            }\n\n            if ('duration' in field) {\n                if (startDate && !endDate) {\n                    endDate = DH.add(startDate, duration, durationUnit, true, true);\n                }\n\n                if (!startDate && endDate) {\n                    startDate = DH.add(endDate, -duration, durationUnit, true, true);\n                }\n            }\n            else if (startDate && endDate) {\n                // Calculate duration in hours and covert to target duration unit in order to avoid extra DST conversion\n                duration = DH.as(durationUnit, DH.diff(startDate, endDate, 'h', true), 'h');\n            }\n\n            // A framework (React tested) may freeze passed field object, so clone it in that case\n            const fieldOrClone = Object.isFrozen(field) ? ObjectHelper.clone(field) : field;\n            startDate && (fieldOrClone.startDate = startDate);\n            endDate && (fieldOrClone.endDate = endDate);\n            duration != null && (fieldOrClone.duration = duration);\n\n            return fieldOrClone;\n        }\n    }\n\n    inSet(field, value, silent, fromRelationUpdate, skipAccessors, validOnly) {\n        if (!skipAccessors) {\n            field = this.inSetNormalize(field) || field;\n        }\n\n        return super.inSet(field, value, silent, fromRelationUpdate, skipAccessors, validOnly);\n    }\n\n    // Cls requires special handling since it is converted to a DomClassList\n    applyValue(useProp, key, value, skipAccessors, field) {\n        if (key === 'cls') {\n            this.updateInternalCls(value);\n        }\n        // When setting fullDuration with record.set()\n        if (key === 'fullDuration') {\n            this[key] = value;\n        }\n\n        super.applyValue(useProp, key, value, skipAccessors, field);\n    }\n\n    //endregion\n\n    //region Iteration\n\n    /**\n     * Iterates over the {@link #property-dates}\n     * @param {Function} func The function to call for each date\n     * @param {Object} thisObj `this` reference for the function\n     * @category Scheduling\n     */\n    forEachDate(func, thisObj) {\n        return this.dates.forEach(func.bind(thisObj));\n    }\n\n    //endregion\n\n    /**\n     * Checks if the range record has both start and end dates set and start <= end\n     *\n     * @property {Boolean}\n     * @category Scheduling\n     */\n    get isScheduled() {\n        const { startDateMS, endDateMS } = this;\n\n        return endDateMS - startDateMS >= 0;\n    }\n\n    // Simple check if end date is greater than start date\n    get isValid() {\n        const { startDate, endDate } = this;\n        return !startDate || !endDate || (endDate - startDate >= 0);\n    }\n\n    /**\n     * Shift the dates for the date range by the passed amount and unit\n     * @param {'ms'|'s'|'m'|'h'|'d'|'w'|'M'|'y'} unit The unit to shift by, see {@link Core.helper.DateHelper}\n     * for more information on valid formats.\n     * @param {Number} amount The amount to shift\n     */\n    shift(amount, unit = this.durationUnit) {\n        // TODO REMOVE FOR 2.0\n        if (typeof amount === 'string') {\n            const u = amount;\n\n            amount = unit;\n            unit = u;\n        }\n\n        return this.setStartDate(DH.add(this.startDate, amount, unit, true), true);\n    }\n\n    /**\n     * Returns the WBS code of this model (e.g '2.1.3'). Only relevant when part of a tree store, as in the Gantt chart.\n     * @property {String}\n     * @category Parent & children\n     */\n    get wbsCode() {\n        return this._wbsCode || this.indexPath.join('.');\n    }\n\n    set wbsCode(value) {\n        // wbsCode needs to be writable to interop w/TaskModel and Baselines which copy this field value\n        this._wbsCode = value;\n    }\n\n    fullCopy() {\n        //NOT PORTED\n\n        return this.copy.apply(this, arguments);\n    }\n\n    intersects(timeSpan) {\n        return this.intersectsRange(timeSpan.startDate, timeSpan.endDate);\n    }\n\n    intersectsRange(start, end) {\n        const\n            myStart = this.startDate,\n            myEnd   = this.endDate;\n\n        return myStart && myEnd && DH.intersectSpans(myStart, myEnd, start, end);\n    }\n\n    /**\n     * Splits this event into two pieces at the desired position.\n     *\n     * @param {Number|String} splitPoint The duration point at which to split this event.\n     *\n     * If less then `1`, this indicates the relative position at which it will be split.\n     * 0.5 means cut it in half.\n     *\n     * If greater than `1`, this indicates the new duration in the current duration units of this event before the split.\n     *\n     * If this is a string, it will be a duration description as described in\n     * {@link Core.helper.DateHelper#function-parseDuration-static}, for example `'15 min'`\n     *\n     * @returns {Scheduler.model.TimeSpan} The newly created split section of the timespan\n     * @category Scheduling\n     */\n    split(splitPoint = 0.5) {\n        const\n            me             = this,\n            clone          = me.copy(),\n            {\n                fullDuration,\n                eventStore,\n                assignmentStore\n            }              = me,\n            oldDuration    = new Duration(fullDuration),\n            cloneDuration  = new Duration(fullDuration);\n\n        let ownNewDuration,\n            unitsChanged;\n\n        if (typeof splitPoint === 'string') {\n            ownNewDuration = new Duration(splitPoint);\n\n            // New duration specified in same time units as current duration\n            if (ownNewDuration.unit === oldDuration.unit) {\n                cloneDuration.magnitude -= ownNewDuration.magnitude;\n            }\n            // New duration is in different units, so convert clone's duration to match\n            else {\n                cloneDuration.magnitude = DH.as(ownNewDuration.unit, oldDuration) - ownNewDuration.magnitude;\n                cloneDuration.unit = ownNewDuration.unit;\n                unitsChanged = true;\n            }\n        }\n        else {\n            ownNewDuration = new Duration(splitPoint > 1 ? splitPoint : me.duration * splitPoint, me.durationUnit);\n            cloneDuration.magnitude -= ownNewDuration.magnitude;\n        }\n\n        clone.startDate = DH.add(me.startDate, ownNewDuration.magnitude, ownNewDuration.unit);\n\n        if (unitsChanged) {\n            clone.fullDuration = cloneDuration;\n            me.fullDuration = ownNewDuration;\n        }\n        else {\n            clone.duration = cloneDuration.magnitude;\n            me.duration = ownNewDuration.magnitude;\n        }\n\n        if (eventStore) {\n            eventStore.add(clone);\n\n            if (assignmentStore && !eventStore.usesSingleAssignment) {\n                assignmentStore.add(\n                    me.assignments.map(assignment => {\n                        const clonedData = Object.assign({}, assignment.data, {\n                            eventId  : clone.id,\n                            // From engine\n                            event    : null,\n                            resource : null\n                        });\n                        delete clonedData.id;\n\n                        return clonedData;\n                    })\n                );\n            }\n        }\n\n        return clone;\n    }\n\n    toICSString(icsEventConfig = {}) {\n        if (!this.isScheduled) {\n            return '';\n        }\n\n        const\n            {\n                startDate,\n                endDate\n            }         = this,\n            // To allow testing using a fixed timestamp value\n            timestamp = icsEventConfig.DTSTAMP || DH.format(new Date(), 'uu');\n\n        delete icsEventConfig.DTSTAMP;\n\n        let startEnd = {};\n\n        if (this.allDay) {\n            startEnd = {\n                'DTSTART;VALUE=DATE' : DH.format(startDate, 'u'),\n                'DTEND;VALUE=DATE'   : DH.format(endDate, 'u')\n            };\n        }\n        else {\n            startEnd = {\n                DTSTART : DH.format(startDate, 'uu'),\n                DTEND   : DH.format(endDate, 'uu')\n            };\n        }\n\n        const\n            version       = (VersionHelper.scheduler && VersionHelper.getVersion('scheduler')) || (VersionHelper.calendar && VersionHelper.getVersion('calendar')) || '',\n            icsWrapConfig = {\n                BEGIN    : 'VCALENDAR',\n                VERSION  : '2.0',\n                CALSCALE : 'GREGORIAN',\n                PRODID   : `-//Bryntum AB//Bryntum Scheduler ${version} //EN`,\n                END      : 'VCALENDAR'\n            },\n            eventConfig   = {\n                BEGIN   : 'VEVENT',\n                UID     : this.id + '@bryntum.com',\n                CLASS   : 'PUBLIC',\n                SUMMARY : this.name,\n                DTSTAMP : timestamp,\n                ...startEnd,\n                ...(this.recurrenceRule ? { RRULE : this.recurrenceRule } : {}),\n                ...icsEventConfig,\n                END     : 'VEVENT'\n            },\n            icsItems      = Object.keys(icsWrapConfig).map(key => `${key}:${icsWrapConfig[key]}`),\n            eventItems    = Object.keys(eventConfig).map(key => `${key}:${eventConfig[key]}`);\n\n        // Inject event details before the closing VCALENDAR entry\n        icsItems.splice(icsItems.length - 1, 0, ...eventItems);\n\n        return icsItems.join('\\n');\n    }\n\n    /**\n     * Triggers a download of this time span in ICS format (for import in Outlook etc.)\n     *\n     * ```javascript\n     * timeSpan.downloadAsICS({\n     *      LOCATION : timeSpan.location\n     *  });\n     * ```\n     * @param {Object<String,String>} [icsEventConfig] A config object with properties to be added in to `BEGIN:VEVENT`\n     * section of the exported event.\n     * @category Misc\n     */\n    exportToICS(icsEventConfig) {\n        if (this.isScheduled) {\n            const blob = new Blob([this.toICSString(icsEventConfig)], { type : 'text/calendar' });\n\n            BrowserHelper.downloadBlob(blob, (this.name || 'Event') + '.ics');\n        }\n    }\n\n    /**\n     * Defines if the given event field should be manually editable in UI.\n     * You can override this method to provide your own logic.\n     *\n     * By default the method defines all the event fields as editable.\n     *\n     * @param {String} fieldName Name of the field\n     * @returns {Boolean} Returns `true` if the field is editable, `false` if it is not and `undefined` if the model has no such field.\n     */\n    isEditable(fieldName) {\n        // return undefined for unknown fields\n        return this.getFieldDefinition(fieldName) ? true : undefined;\n    }\n\n    isFieldModified(fieldName) {\n        if (fieldName === 'fullDuration') {\n            return super.isFieldModified('duration') || super.isFieldModified('durationUnit');\n        }\n        return super.isFieldModified(fieldName);\n    }\n}\n","import Base from '../../../../Core/Base.js';\n\nconst dayParseRegExp = /^([+-]?[0-9])?(SU|MO|TU|WE|TH|FR|SA)$/;\n\nconst days = ['SU', 'MO', 'TU', 'WE', 'TH', 'FR', 'SA'];\n\nexport default class RecurrenceDayRuleEncoder extends Base {\n\n    static decodeDay(rawDay) {\n        let parsedDay,\n            result;\n\n        if ((parsedDay = dayParseRegExp.exec(rawDay))) {\n\n            result = [days.indexOf(parsedDay[2])];\n\n            // optional position number\n            if (parsedDay[1]) {\n                parsedDay[1] = parseInt(parsedDay[1], 10);\n                result.push(parsedDay[1]);\n            }\n        }\n\n        return result;\n    }\n\n    static encodeDay(day) {\n        let position;\n\n        // support decodeDay() result format\n        if (Array.isArray(day)) {\n            [day, position] = day;\n        }\n\n        return (position ? position.toString() : '') + days[day];\n    }\n\n    // Turns days values provided as an array of strings (like [`-1MO`, `SU`, `+3FR`])\n    // into an array of [ dayIndex, position ] elements, where:\n    //\n    // - `dayIndex` - zero-based week day index value (0 - Sunday, 1 - Monday, 2 - Tuesday, etc.)\n    // - `position` - (optional) 1-based position of the day (integer value (can be both positive and negative))\n    static decode(rawDays) {\n        const result = [];\n        let parsedDay;\n\n        if (rawDays) {\n            for (let i = 0; i < rawDays.length; i++) {\n                if ((parsedDay = this.decodeDay(rawDays[i]))) {\n                    result.push(parsedDay);\n                }\n            }\n        }\n\n        return result;\n    }\n\n    static encode(days) {\n        const result = [];\n        let day;\n\n        if (days) {\n            for (let i = 0; i < days.length; i++) {\n                if ((day = this.encodeDay(days[i]))) {\n                    result.push(day);\n                }\n            }\n        }\n\n        return result;\n    }\n};\n","import Base from '../../../../Core/Base.js';\nimport DateHelper from '../../../../Core/helper/DateHelper.js';\n\n/**\n * @module Scheduler/data/util/recurrence/AbstractRecurrenceIterator\n * @private\n */\n\nconst\n    frequencyToUnitRe = /ly$/i,\n    frequencyToUnit = frequency => {\n        const result = frequency.replace(frequencyToUnitRe, '');\n\n        return result === 'DAI' ? 'DAY' : result;\n    },\n    fn = (date, counter, isFirst, timeSpan) => timeSpan.buildOccurrence(date, isFirst),\n    captureLastOccurrence = date => lastOccurrenceDate = date;\n\nlet lastOccurrenceDate;\n\nexport default class AbstractRecurrenceIterator extends Base {\n\n    static frequency = 'NONE'\n\n    static MAX_OCCURRENCES_COUNT = 1000000\n\n    static processIterationConfig(config) {\n        const\n            { recurrence } = config,\n            {\n                frequency,\n                interval,\n                timeSpan,\n                endDate : until,\n                count\n            } = recurrence;\n\n        // Force the correction of the event to be in sync with its recurrence rule\n        // before performing iteration. For example, if the event's configured startDate\n        // is 1st January 2020, and the rule dictates that the event will take place\n        // monthly, every Monday, then the first event is not until Monday 6th January, 2020.\n        if (!config.syncingStartDate && !timeSpan.meta.isSyncedWithRule) {\n            // Do not generate occurrences outside of the specified range\n            const\n                intervalEndDate = DateHelper.add(timeSpan.startDate, interval, frequencyToUnit(frequency)),\n                endDate = DateHelper.min(\n                    intervalEndDate,\n                    config.endDate || intervalEndDate\n                );\n\n            this.forEachDate({\n                syncingStartDate : true,\n                startDate        : timeSpan.startDate,\n                endDate,\n                recurrence,\n                fn\n            });\n        }\n\n        // Capture the start after its been synced with its recurrence rule\n        const timeSpanStart = timeSpan.startDate;\n\n        // Extract the endDate from the config, defaulting to the recurrence UNTIL date\n        let {\n            startDate = timeSpanStart,\n            endDate   = until\n        } = config;\n\n        // No point in starting the iteration before the event starts\n        if (startDate < timeSpanStart) {\n            startDate = timeSpanStart;\n        }\n\n        // The recurrence's stop date overrides the configured endDate.\n        if (until) {\n            if (!endDate || endDate > until) {\n                endDate = until;\n            }\n        }\n        // If we are limiting using count and we are not starting from the\n        // first occurrence, then we have to calculate a stop date.\n        // This is because for date ranges in the future we cannot calculate how many\n        // preceding occurrences there may have been.\n        else if (count && startDate > timeSpanStart) {\n            // Iterate the occurrences from the start to capture the last one\n            this.forEachDate({\n                recurrence,\n                fn : captureLastOccurrence\n            });\n\n            // The date of the last occurrence in the count sequence overrides the configured endDate.\n            if (!endDate || endDate > lastOccurrenceDate) {\n                // since endDate of the provided interval is exclusive add 1 millisecond\n                endDate = new Date(lastOccurrenceDate.getTime() + 1);\n            }\n        }\n\n        // Preserve the requested start of requested visits.\n        const earliestVisibleDate = startDate;\n\n        // Unless we are only asked for events which *start* within the time range. we must make\n        // a best attempt to include any occurrences which span the start date.\n        // So if we are asking for events from the 1st of the month, and there's an event\n        // which runs every 2 months from the 15th to the 5th, we must include it. Start the\n        // iteration <interval> full frequency quanta before the requested start.\n        // This will only cause <interval> extra iterations.\n        // We cannot step back to before the event's starting date though.\n        if (!config.startOnly) {\n            startDate = new Date(DateHelper.max(DateHelper.add(startDate, -interval, frequencyToUnit(frequency)), timeSpanStart));\n        }\n\n        return Object.assign({\n            extraArgs : [],\n            // Only check start date for time spans with 0 duration\n            startOnly : !Boolean(timeSpan.durationMS)\n        }, config, {\n            startDate,\n            endDate,\n            timeSpan,\n            timeSpanStart,\n            earliestVisibleDate,\n            endDateMS             : endDate?.getTime(),\n            timeSpanStartMS       : timeSpanStart.getTime(),\n            earliestVisibleDateMS : earliestVisibleDate.getTime(),\n            durationMS            : timeSpan.durationMS,\n            spansStart            : startDate <= timeSpanStart && endDate > timeSpanStart\n        });\n    }\n\n    static getOccurrenceIndex(event) {\n        if (event.isOccurrence) {\n            return DateHelper.diff(event.recurringTimeSpan.startDate, event.startDate, frequencyToUnit(event.recurringTimeSpan.recurrence.frequency));\n        }\n    }\n\n    /**\n     * Returns Nth occurrence of a week day in the provided period of time.\n     * @param  {Date} startDate Period start date.\n     * @param  {Date} endDate   Period end date.\n     * @param  {Number} day    Week day (0 - Sunday, 1 - Monday, 2 - Tuesday, etc.)\n     * @param  {Number} index  Index to find.\n     * @returns {Date}           Returns the found date or null if there is no `index`th entry.\n     * @private\n     */\n    static getNthDayInPeriod(startDate, endDate, day, index) {\n        let result, sign, borderDate;\n\n        if (index) {\n            if (index > 0) {\n                sign = 1;\n                borderDate = startDate;\n            }\n            else {\n                sign = -1;\n                borderDate = endDate;\n            }\n\n            // delta between requested day and border day\n            const delta = day - borderDate.getDay();\n\n            // if the requested day goes after (before, depending on borderDate used (start/end))\n            // we adjust index +/-1\n            if (sign * delta < 0) {\n                index += sign;\n            }\n\n            // measure \"index\" weeks forward (or backward) ..take delta into account\n            // result = new Date(borderDate.getTime() + ((index - sign) * 7 + delta) * 24*60*60*1000);\n            // Per https://github.com/bryntum/support/issues/3413 - don't do that ^^ because DST makes days/week\n            // alternatingly shorter or longer depending on going in/out of DST:\n            result = new Date(borderDate);\n            result.setDate(borderDate.getDate() + (index - sign) * 7 + delta);\n\n            // if resulting date is outside of the provided range there is no \"index\"-th entry\n            // of the day\n            if (result < startDate || result > endDate) {\n                result = null;\n            }\n        }\n\n        return result;\n    }\n\n    static buildDate(year, month, date) {\n        const dt = new Date(year, month, date);\n\n        if (dt.getFullYear() === year && dt.getMonth() === month && dt.getDate() === date) {\n            return dt;\n        }\n    }\n\n    static isValidPosition(position) {\n        return Boolean(position);\n    }\n\n    static forEachDateAtPositions(dates, positions, fn, scope) {\n        const datesLength = dates.length,\n            processed     = {};\n\n        for (let i = 0; i < positions.length; i++) {\n\n            const index = positions[i];\n\n            if (this.isValidPosition(index)) {\n                const date = index > 0 ? dates[index - 1] : dates[datesLength + index];\n\n                if (date && !processed[date.getTime()]) {\n\n                    // remember that we've returned the date\n                    processed[date.getTime()] = true;\n\n                    // return false if it's time to stop recurring\n                    if (fn.call(scope, date) === false) {\n                        return false;\n                    }\n                }\n            }\n        }\n    }\n\n    static isInView(startOnly, occurrenceDate, earliestVisibleDate, durationMS, timeSpan) {\n        return (\n            startOnly\n                ? occurrenceDate >= earliestVisibleDate\n                : occurrenceDate.valueOf() + durationMS > earliestVisibleDate\n        ) && !timeSpan.hasException(occurrenceDate);\n    }\n\n    // Slightly faster version of ^, used by Daily & Weekly iterators\n    static isInViewMS(startOnly, occurenceDate, occurrenceDateMS, earliestVisibleDateMS, durationMS, timeSpan) {\n        return (\n            startOnly\n                ? occurrenceDateMS >= earliestVisibleDateMS\n                : occurrenceDateMS + durationMS > earliestVisibleDateMS\n        ) && !timeSpan.hasException(occurenceDate);\n    }\n}\n","/**\n * @module Scheduler/data/util/recurrence/DailyRecurrenceIterator\n */\n\nimport AbstractRecurrenceIterator from './AbstractRecurrenceIterator.js';\nimport DateHelper from '../../../../Core/helper/DateHelper.js';\n\n/**\n * A class which provides iteration to call a function for dates specified by a\n * {@link Scheduler.model.RecurrenceModel RecurrenceModel} over a specified date range.\n * @private\n */\nexport default class DailyRecurrenceIterator extends AbstractRecurrenceIterator {\n\n    static frequency = 'DAILY'\n\n    /**\n     * Iterates over the passed date range, calling the passed callback on each date on which\n     * starts a recurring event which matches the passed recurrence rule and overlaps the start and end dates\n     * and is not an {@link Scheduler.model.mixin.RecurringTimeSpan#field-exceptionDates exceptionDate}\n     * in the recurring event.\n     * @param {Object} config An object which describes how to iterate.\n     * @param {Date} config.startDate The point in time to begin iteration.\n     * @param {Date} config.endDate The point in time to end iteration.\n     * @param {Boolean} [config.startOnly] By default, all occurrences which intersect the date range\n     * will be visited. Pass `true` to only visit occurrences which *start* in the date range.\n     * @param {Scheduler.model.RecurrenceModel} config.recurrence The point in time to end iteration.\n     * @param {Function} config.fn The function to call for each date which matches the recurrence in the date range.\n     * @param {Date} config.fn.date The occurrence date.\n     * @param {Number} config.fn.counter A counter of how many dates have been visited in this iteration.\n     * @param {Boolean} config.fn.isFirst A flag which is `true` if the date is the first occurrence in the specified recurrence rule.\n     * @param {Array} [config.extraArgs] Extra arguments to pass to the callback after the `isFirst` argument.\n     */\n    static forEachDate(config) {\n        const\n            {\n                startOnly,\n                startDate,\n                endDate,\n                endDateMS,\n                timeSpan,\n                timeSpanStart,\n                earliestVisibleDateMS,\n                durationMS,\n                spansStart,\n                recurrence,\n                fn,\n                extraArgs,\n                scope = this\n            }                = this.processIterationConfig(config),\n            { interval }     = recurrence,\n            delay            = startDate - timeSpanStart,\n            // recurrence interval duration in ms (86400000 is a single day duration in ms)\n            intervalDuration = interval * 86400000,\n            delayInIntervals = Math.floor(delay / intervalDuration);\n\n        let { count }       = recurrence,\n            counter         = 0,\n            occurrenceDate  = DateHelper.add(timeSpanStart, delayInIntervals * interval, 'day'),\n            occurrenceDateMS = occurrenceDate.getTime();\n\n        if (!endDate && !count) {\n            count = this.MAX_OCCURRENCES_COUNT;\n        }\n\n        while (!endDateMS || occurrenceDateMS < endDateMS) {\n            const inView = this.isInViewMS(startOnly, occurrenceDate, occurrenceDateMS, earliestVisibleDateMS, durationMS, timeSpan);\n\n            counter++;\n\n            if (inView &&\n                ((endDateMS && occurrenceDateMS > endDateMS) || fn.apply(scope, [occurrenceDate, counter, counter === 1 && spansStart, timeSpan, ...extraArgs]) === false || (count && counter >= count))\n            ) {\n                break;\n            }\n\n            // shift to the next day\n            occurrenceDate = DateHelper.add(occurrenceDate, interval, 'day');\n            occurrenceDateMS = occurrenceDate.getTime();\n        }\n    }\n}\n","/**\n * @module Scheduler/data/util/recurrence/WeeklyRecurrenceIterator\n */\n\nimport AbstractRecurrenceIterator from './AbstractRecurrenceIterator.js';\nimport DateHelper from '../../../../Core/helper/DateHelper.js';\nimport DayRuleEncoder from './RecurrenceDayRuleEncoder.js';\n\n/**\n * A class which provides iteration to call a function for dates specified by a\n * {@link Scheduler.model.RecurrenceModel RecurrenceModel} over a specified date range.\n * @private\n */\nexport default class WeeklyRecurrenceIterator extends AbstractRecurrenceIterator {\n\n    static frequency = 'WEEKLY'\n\n    /**\n     * Iterates over the passed date range, calling the passed callback on each date on which\n     * starts an event which matches the passed recurrence rule and overlaps the start and end dates.\n     * @param {Object} config An object which describes how to iterate.\n     * @param {Date} config.startDate The point in time to begin iteration.\n     * @param {Date} config.endDate The point in time to end iteration.\n     * @param {Boolean} [config.startOnly] By default, all occurrences which intersect the date range\n     * will be visited. Pass `true` to only visit occurrences which *start* in the date range.\n     * @param {Scheduler.model.RecurrenceModel} config.recurrence The point in time to end iteration.\n     * @param {Function} config.fn The function to call for each date which matches the recurrence in the date range.\n     * @param {Date} config.fn.date The occurrence date.\n     * @param {Number} config.fn.counter A counter of how many dates have been visited in this iteration.\n     * @param {Boolean} config.fn.isFirst A flag which is `true` if the date is the first occurrence in the specified recurrence rule.\n     * @param {Array} [config.extraArgs] Extra arguments to pass to the callback after the `isFirst` argument.\n     */\n    static forEachDate(config) {\n        const\n            {\n                startOnly,\n                startDate,\n                endDateMS,\n                timeSpan,\n                timeSpanStart,\n                timeSpanStartMS,\n                earliestVisibleDateMS,\n                durationMS,\n                spansStart,\n                recurrence,\n                fn,\n                extraArgs,\n                scope = this\n            }                     = this.processIterationConfig(config),\n            {\n                interval,\n                days\n            }                     = recurrence,\n            { weekStartDay }      = DateHelper,\n            startHours            = timeSpanStart.getHours(),\n            startMinutes          = timeSpanStart.getMinutes(),\n            startSeconds          = timeSpanStart.getSeconds(),\n            startMS               = timeSpanStart.getMilliseconds();\n\n        let counter    = 0,\n            { count }  = recurrence,\n            weekDays   = DayRuleEncoder.decode(days),\n            weekStartDate, occurrenceDate;\n\n        // \"Days\" might be skipped then we use the event start day\n        if (!weekDays?.length) {\n            weekDays = [[timeSpanStart.getDay()]];\n        }\n\n        // If week start day is not zero (Sunday)\n        // we need to normalize weekDays array since its values are used\n        // to calculate real dates as: date = week_start_date + weekDay_entry\n        // which does not work when week starts on non-Sunday\n        if (weekStartDay > 0) {\n            for (let i = 0; i < weekDays.length; i++) {\n                if (weekStartDay > weekDays[i][0]) {\n                    weekDays[i][0] = 7 - weekStartDay - weekDays[i][0];\n                }\n                else {\n                    weekDays[i][0] -= weekStartDay;\n                }\n            }\n        }\n\n        // days could be provided in any order so it's important to sort them\n        weekDays.sort((a, b) => a[0] - b[0]);\n\n        // if the recurrence is limited w/ \"Count\" or not every interval should match\n        // we need to 1st count passed occurrences so we always start iteration from the event start date\n        weekStartDate = DateHelper.getNext(count || interval > 1 ? timeSpanStart : startDate, 'week', 0);\n\n        if (!endDateMS && !count) {\n            count = this.MAX_OCCURRENCES_COUNT;\n        }\n\n        while (!endDateMS || weekStartDate.getTime() < endDateMS) {\n\n            for (let i = 0; i < weekDays.length; i++) {\n                // Faster than chaining multiple DateHelper calls\n                occurrenceDate = new Date(\n                    weekStartDate.getFullYear(),\n                    weekStartDate.getMonth(),\n                    weekStartDate.getDate() + weekDays[i][0],\n                    startHours,\n                    startMinutes,\n                    startSeconds,\n                    startMS\n                );\n\n                const occurrenceDateMS = occurrenceDate.getTime();\n\n                if (occurrenceDateMS >= timeSpanStartMS) {\n                    const inView = this.isInViewMS(startOnly, occurrenceDate, occurrenceDateMS, earliestVisibleDateMS, durationMS, timeSpan);\n\n                    counter++;\n\n                    if (inView &&\n                        ((endDateMS && occurrenceDateMS >= endDateMS) ||\n                        (fn.apply(scope, [occurrenceDate, counter, counter === 1 && spansStart, timeSpan, ...extraArgs]) === false) ||\n                        (count && counter >= count))\n                    ) {\n                        return;\n                    }\n                }\n            }\n\n            // get next week start\n            weekStartDate = DateHelper.getNext(weekStartDate, 'week', interval);\n        }\n    }\n\n}\n","/**\n * @module Scheduler/data/util/recurrence/MonthlyRecurrenceIterator\n */\n\nimport AbstractRecurrenceIterator from './AbstractRecurrenceIterator.js';\nimport DateHelper from '../../../../Core/helper/DateHelper.js';\nimport DayRuleEncoder from './RecurrenceDayRuleEncoder.js';\n\n/**\n * A class which provides iteration to call a function for dates specified by a\n * {@link Scheduler.model.RecurrenceModel RecurrenceModel} over a specified date range.\n * @private\n */\nexport default class MonthlyRecurrenceIterator extends AbstractRecurrenceIterator {\n\n    static frequency = 'MONTHLY'\n\n    static getNthDayOfMonth(date, dayNum) {\n        const daysInMonth = DateHelper.daysInMonth(date);\n        let result = null;\n\n        if (dayNum && Math.abs(dayNum) <= daysInMonth) {\n            result = new Date(date.getFullYear(), date.getMonth(), dayNum < 0 ? daysInMonth + dayNum + 1 : dayNum);\n        }\n\n        return result;\n    }\n\n    static isValidPosition(position) {\n        return position && Math.abs(position) > 0 && Math.abs(position) <= 31;\n    }\n\n    /**\n     * Iterates over the passed date range, calling the passed callback on each date on which\n     * starts an event which matches the passed recurrence rule and overlaps the start and end dates.\n     * @param {Object} config An object which describes how to iterate.\n     * @param {Date} config.startDate The point in time to begin iteration.\n     * @param {Date} config.endDate The point in time to end iteration.\n     * @param {Boolean} [config.startOnly] By default, all occurrences which intersect the date range\n     * will be visited. Pass `true` to only visit occurrences which *start* in the date range.\n     * @param {Scheduler.model.RecurrenceModel} config.recurrence The point in time to end iteration.\n     * @param {Function} config.fn The function to call for each date which matches the recurrence in the date range.\n     * @param {Date} config.fn.date The occurrence date.\n     * @param {Number} config.fn.counter A counter of how many dates have been visited in this iteration.\n     * @param {Boolean} config.fn.isFirst A flag which is `true` if the date is the first occurrence in the specified recurrence rule.\n     * @param {Array} [config.extraArgs] Extra arguments to pass to the callback after the `isFirst` argument.\n     */\n    static forEachDate(config) {\n        const\n            {\n                startOnly,\n                startDate,\n                endDate,\n                timeSpan,\n                timeSpanStart,\n                earliestVisibleDate,\n                durationMS,\n                spansStart,\n                recurrence,\n                fn,\n                extraArgs,\n                scope = this\n            }              = this.processIterationConfig(config),\n            {\n                interval,\n                days,\n                count,\n                positions\n            } = recurrence,\n            weekDays       = DayRuleEncoder.decode(days),\n            hasPositions   = positions && positions.length,\n            processedDate  = {};\n\n        let\n            { monthDays }  = recurrence,\n            counter        = 0,\n            weekDayPosition,\n            monthStartDate, monthEndDate,\n            dates, occurrenceDate, i;\n\n        // if the recurrence is limited w/ \"Count\" or not every interval should match\n        // we need to 1st count passed occurrences so we always start iteration from the event start date\n        monthStartDate = DateHelper.startOf(count || interval > 1 ? timeSpanStart : startDate, 'month');\n        monthEndDate   = new Date(DateHelper.getNext(monthStartDate, 'month', 1) - 1);\n\n        // If no month days nor week days are provided let's use event start date month day\n        if (!(monthDays && monthDays.length) && !(weekDays && weekDays.length)) {\n            monthDays = [timeSpanStart.getDate()];\n        }\n\n        if (weekDays && weekDays.length) {\n            // Collect hash of positions indexed by week days\n            weekDays.forEach(day => {\n                if (day[1]) {\n                    weekDayPosition         = weekDayPosition || {};\n                    weekDayPosition[day[0]] = day[1];\n                }\n            });\n        }\n\n        while ((!endDate || endDate > monthStartDate) && (!count || counter < count)) {\n\n            dates = [];\n\n            if (weekDays && weekDays.length) {\n\n                weekDays.forEach(day => {\n                    const weekDay = day[0];\n\n                    let from    = 1,\n                        till    = 53;\n\n                    // if position provided\n                    if (day[1]) {\n                        from = till = day[1];\n                    }\n\n                    for (i = from; i <= till; i++) {\n                        if ((occurrenceDate = this.getNthDayInPeriod(monthStartDate, monthEndDate, weekDay, i))) {\n                            occurrenceDate = DateHelper.copyTimeValues(occurrenceDate, timeSpanStart);\n\n                            if (!processedDate[occurrenceDate.getTime()]) {\n                                // remember we processed the date\n                                processedDate[occurrenceDate.getTime()] = true;\n\n                                dates.push(occurrenceDate);\n                            }\n                        }\n                    }\n                });\n\n                dates.sort((a, b) => a - b);\n\n                if (!hasPositions) {\n                    for (i = 0; i < dates.length; i++) {\n                        occurrenceDate = dates[i];\n\n                        if (occurrenceDate >= timeSpanStart) {\n                            const inView = this.isInView(startOnly, occurrenceDate, earliestVisibleDate, durationMS, timeSpan);\n\n                            counter++;\n\n                            if (inView &&\n                                ((endDate && occurrenceDate >= endDate) || (fn.apply(scope, [occurrenceDate, counter, counter === 1 && spansStart, timeSpan, ...extraArgs]) === false) || (count && counter >= count))\n                            ) {\n                                return false;\n                            }\n                        }\n                    }\n                }\n\n            }\n            else {\n                const sortedMonthDates = [];\n\n                for (i = 0; i < monthDays.length; i++) {\n                    // check if the date wasn't iterated over yet\n                    if ((occurrenceDate = this.getNthDayOfMonth(monthStartDate, monthDays[i])) && !processedDate[occurrenceDate.getTime()]) {\n                        processedDate[occurrenceDate.getTime()] = true;\n                        sortedMonthDates.push(occurrenceDate);\n                    }\n                }\n\n                // it's important to sort the dates to iterate over them in the proper order\n                sortedMonthDates.sort((a, b) => a - b);\n\n                for (i = 0; i < sortedMonthDates.length; i++) {\n                    occurrenceDate = DateHelper.copyTimeValues(sortedMonthDates[i], timeSpanStart);\n\n                    if (hasPositions) {\n                        dates.push(occurrenceDate);\n                    }\n                    else if (occurrenceDate >= timeSpanStart) {\n                        const inView = this.isInView(startOnly, occurrenceDate, earliestVisibleDate, durationMS, timeSpan);\n\n                        counter++;\n\n                        if (inView &&\n                            // eslint-disable-next-line no-labels\n                            ((endDate && occurrenceDate > endDate) || (fn.apply(scope, [occurrenceDate, counter, counter === 1 && spansStart, timeSpan, ...extraArgs]) === false) || (count && counter >= count))\n                        ) {\n                            return;\n                        }\n                    }\n                }\n            }\n\n            if (hasPositions && dates.length) {\n                this.forEachDateAtPositions(dates, positions, occurrenceDate => {\n                    if (occurrenceDate >= timeSpanStart) {\n                        const inView = startOnly ? occurrenceDate >= earliestVisibleDate : occurrenceDate.valueOf() + durationMS > earliestVisibleDate && !timeSpan.hasException(occurrenceDate);\n\n                        counter++;\n\n                        // Ignore dates outside of the [startDate, endDate] range\n                        if (inView && (!endDate || occurrenceDate <= endDate) &&\n                            // return false if it's time to stop recurring\n                            (fn.apply(scope, [occurrenceDate, counter, counter === 1 && spansStart, timeSpan, ...extraArgs]) === false || (count && counter >= count))\n                        ) {\n                            return false;\n                        }\n                    }\n                });\n            }\n\n            // get next month start\n            monthStartDate = DateHelper.getNext(monthStartDate, 'month', interval);\n            monthEndDate   = new Date(DateHelper.getNext(monthStartDate, 'month', 1) - 1);\n        }\n\n    }\n\n}\n","/**\n * @module Scheduler/data/util/recurrence/YearlyRecurrenceIterator\n */\n\nimport AbstractRecurrenceIterator from './AbstractRecurrenceIterator.js';\nimport DateHelper from '../../../../Core/helper/DateHelper.js';\nimport DayRuleEncoder from './RecurrenceDayRuleEncoder.js';\n\n/**\n * A class which provides iteration to call a function for dates specified by a\n * {@link Scheduler.model.RecurrenceModel RecurrenceModel} over a specified date range.\n * @private\n */\nexport default class YearlyRecurrenceIterator extends AbstractRecurrenceIterator {\n\n    static frequency = 'YEARLY'\n\n    /**\n     * Iterates over the passed date range, calling the passed callback on each date on which\n     * starts an event which matches the passed recurrence rule and overlaps the start and end dates.\n     * @param {Object} config An object which describes how to iterate.\n     * @param {Date} config.startDate The point in time to begin iteration.\n     * @param {Date} config.endDate The point in time to end iteration.\n     * @param {Boolean} [config.startOnly] By default, all occurrences which intersect the date range\n     * will be visited. Pass `true` to only visit occurrences which *start* in the date range.\n     * @param {Scheduler.model.RecurrenceModel} config.recurrence The point in time to end iteration.\n     * @param {Function} config.fn The function to call for each date which matches the recurrence in the date range.\n     * @param {Date} config.fn.date The occurrence date.\n     * @param {Number} config.fn.counter A counter of how many dates have been visited in this iteration.\n     * @param {Boolean} config.fn.isFirst A flag which is `true` if the date is the first occurrence in the specified recurrence rule.\n     * @param {Array} [config.extraArgs] Extra arguments to pass to the callback after the `isFirst` argument.\n     */\n    static forEachDate(config) {\n        const\n            {\n                startOnly,\n                startDate,\n                endDate,\n                timeSpan,\n                timeSpanStart,\n                earliestVisibleDate,\n                durationMS,\n                spansStart,\n                recurrence,\n                fn,\n                extraArgs,\n                scope = this\n            }              = this.processIterationConfig(config),\n            {\n                interval,\n                days,\n                count,\n                positions\n            } = recurrence,\n            weekDays       = DayRuleEncoder.decode(days),\n            hasPositions   = positions && positions.length,\n            processedDate  = {};\n\n        let\n            { months }     = recurrence,\n            counter        = 0,\n            i, occurrenceDate, dates, yearStartDate, yearEndDate, weekDayPosition;\n\n        // if the recurrence is limited w/ \"Count\" or not every interval should match\n        // we need to 1st count passed occurrences so we always start iteration from the event start date\n        yearStartDate = DateHelper.startOf(count || interval > 1 ? timeSpanStart : startDate, 'year');\n        yearEndDate   = new Date(DateHelper.getNext(yearStartDate, 'year', 1) - 1);\n\n        months && months.sort((a, b) => a - b);\n\n        // if no months provided let's use the event month\n        if (!(months && months.length) && !(weekDays && weekDays.length)) {\n            months = [timeSpanStart.getMonth() + 1];\n        }\n\n        if (weekDays && weekDays.length) {\n            // Collect hash of positions indexed by week days\n            weekDays.forEach(day => {\n                if (day[1]) {\n                    weekDayPosition         = weekDayPosition || {};\n                    weekDayPosition[day[0]] = day[1];\n                }\n            });\n        }\n\n        while ((!endDate || endDate > yearStartDate) && (!count || counter < count)) {\n\n            dates = [];\n\n            if (weekDays && weekDays.length) {\n\n                weekDays.forEach(day => {\n                    const weekDay = day[0];\n\n                    let\n                        from = 1,\n                        till = 53;\n\n                    // if position provided\n                    if (day[1]) {\n                        from = till = day[1];\n                    }\n\n                    for (i = from; i <= till; i++) {\n                        if ((occurrenceDate = this.getNthDayInPeriod(yearStartDate, yearEndDate, weekDay, i))) {\n                            occurrenceDate = DateHelper.copyTimeValues(occurrenceDate, timeSpanStart);\n\n                            if (!processedDate[occurrenceDate.getTime()]) {\n                                // remember we processed the date\n                                processedDate[occurrenceDate.getTime()] = true;\n\n                                dates.push(occurrenceDate);\n                            }\n                        }\n                    }\n                });\n\n                dates.sort((a, b) => a - b);\n\n                if (!hasPositions) {\n                    for (i = 0; i < dates.length; i++) {\n                        occurrenceDate = dates[i];\n\n                        if (occurrenceDate >= timeSpanStart) {\n                            const inView = this.isInView(startOnly, occurrenceDate, earliestVisibleDate, durationMS, timeSpan);\n\n                            counter++;\n\n                            if (inView &&\n                                ((endDate && occurrenceDate >= endDate) ||\n                                (fn.apply(scope, [occurrenceDate, counter, counter === 1 && spansStart, timeSpan, ...extraArgs]) === false) ||\n                                (count && counter >= count))\n                            ) {\n                                return;\n                            }\n                        }\n                    }\n                }\n\n            }\n            else {\n                for (i = 0; i < months.length; i++) {\n\n                    if ((occurrenceDate = this.buildDate(yearStartDate.getFullYear(), months[i] - 1, timeSpanStart.getDate()))) {\n                        occurrenceDate = DateHelper.copyTimeValues(occurrenceDate, timeSpanStart);\n\n                        // check if the date wasn't iterated over yet\n                        if (!processedDate[occurrenceDate.getTime()]) {\n                            processedDate[occurrenceDate.getTime()] = true;\n\n                            if (hasPositions) {\n                                dates.push(occurrenceDate);\n                            }\n                            else if (occurrenceDate >= timeSpanStart) {\n                                const inView = startOnly ? occurrenceDate >= earliestVisibleDate : occurrenceDate.valueOf() + durationMS > earliestVisibleDate && !timeSpan.hasException(occurrenceDate);\n\n                                counter++;\n\n                                if (inView &&\n                                    ((endDate && occurrenceDate >= endDate) ||\n                                    (fn.apply(scope, [occurrenceDate, counter, counter === 1 && spansStart, timeSpan, ...extraArgs]) === false) ||\n                                    (count && counter >= count))\n                                ) {\n                                    return;\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n\n            if (hasPositions && dates.length) {\n                this.forEachDateAtPositions(dates, positions, occurrenceDate => {\n                    if (occurrenceDate >= timeSpanStart) {\n                        const inView = startOnly ? occurrenceDate >= earliestVisibleDate : occurrenceDate.valueOf() + durationMS > earliestVisibleDate && !timeSpan.hasException(occurrenceDate);\n\n                        counter++;\n\n                        // Ignore dates outside of the [startDate, endDate] range\n                        if (inView && (!endDate || occurrenceDate < endDate)) {\n                            // return false if it's time to stop recurring\n                            if (fn.apply(scope, [occurrenceDate, counter, counter === 1 && spansStart, timeSpan, ...extraArgs]) === false || (count && counter >= count)) {\n                                return false;\n                            }\n                        }\n                    }\n                });\n            }\n\n            // get next month start\n            yearStartDate = DateHelper.getNext(yearStartDate, 'year', interval);\n            yearEndDate   = new Date(DateHelper.getNext(yearStartDate, 'year', 1) - 1);\n        }\n\n    }\n}\n","import Model from '../../Core/data/Model.js';\nimport DateHelper from '../../Core/helper/DateHelper.js';\nimport RecurrenceDayRuleEncoder from '../data/util/recurrence/RecurrenceDayRuleEncoder.js';\nimport DailyRecurrenceIterator from '../data/util/recurrence/DailyRecurrenceIterator.js';\nimport WeeklyRecurrenceIterator from '../data/util/recurrence/WeeklyRecurrenceIterator.js';\nimport MonthlyRecurrenceIterator from '../data/util/recurrence/MonthlyRecurrenceIterator.js';\nimport YearlyRecurrenceIterator from '../data/util/recurrence/YearlyRecurrenceIterator.js';\n\n/**\n * @module Scheduler/model/RecurrenceModel\n */\n\nconst recurrenceIterators = {};\n\n[DailyRecurrenceIterator, WeeklyRecurrenceIterator, MonthlyRecurrenceIterator, YearlyRecurrenceIterator].forEach(it => {\n    recurrenceIterators[it.frequency] = it;\n});\n\nfunction convertStringOfIntegerItemsValue(value) {\n    if (value) {\n        if (typeof value == 'string') {\n            value = value.split(',').map(item => parseInt(item, 10));\n        }\n    }\n    else {\n        value = null;\n    }\n\n    return value;\n}\n\nfunction convertStringOfItemsValue(value) {\n    if (value) {\n        if (typeof value == 'string') {\n            value = value.split(',');\n        }\n    }\n    else {\n        value = null;\n    }\n\n    return value;\n}\n\nfunction isEqualAsString(value1, value2) {\n    return String(value1) === String(value2);\n}\n\nfunction convertInteger(value) {\n    if (this.defaultValue && value === undefined) {\n        return this.defaultValue;\n    }\n\n    if (this.allowNull && value == null) {\n        return null;\n    }\n\n    value = parseInt(value);\n\n    return isNaN(value) ? undefined : value;\n}\n\n/**\n * This class represents a timespan recurrence settings.\n * It is a subclass of {@link Core.data.Model} class.\n * Please refer to the documentation for that class to become familiar with the base interface of this class.\n *\n * The data source for these fields can be customized by subclassing this class.\n *\n * @extends Core/data/Model\n */\nexport default class RecurrenceModel extends Model {\n\n    static get $name() {\n        return 'RecurrenceModel';\n    }\n\n    /**\n     * Indicates that this is a `RecurrenceModel` class instance\n     * (allows to avoid using `instanceof`).\n     * @property {Boolean}\n     * @readonly\n     */\n    get isRecurrenceModel() {\n        return true;\n    }\n\n    //region Fields\n    static get fields() {\n        return [\n            /**\n             * Field defines the recurrence frequency. Supported values are: `DAILY`, `WEEKLY`, `MONTHLY`, `YEARLY`.\n             * @field {'DAILY'|'WEEKLY'|'MONTHLY'|'YEARLY'} frequency\n             */\n            { name : 'frequency', defaultValue : 'DAILY' },\n            /**\n             * Field defines how often the recurrence repeats.\n             * For example, if the recurrence is weekly its interval is 2, then the timespan repeats every two weeks.\n             * @field {Number} interval\n             */\n            { name : 'interval', defaultValue : 1, convert : convertInteger },\n            /**\n             * End date of the recurrence. Specifies when the recurrence ends.\n             * The value is optional, the recurrence can as well be stopped using {@link #field-count} field value.\n             * @field {Date} endDate\n             */\n            { name : 'endDate', type : 'date' },\n            /**\n             * Specifies the number of occurrences after which the recurrence ends.\n             * The value includes the associated timespan itself so values less than 2 make no sense.\n             * The field is optional, the recurrence as well can be stopped using {@link #field-endDate} field value.\n             * @field {Number} count\n             */\n            { name : 'count', allowNull : true, convert : convertInteger },\n            /**\n             * Specifies days of the week on which the timespan should occur.\n             * An array of string values `SU`, `MO`, `TU`, `WE`, `TH`, `FR`, `SA`\n             * corresponding to Sunday, Monday, Tuesday, Wednesday, Thursday, Friday, and Saturday days of the week.\n             * Each value can also be preceded by a positive (+n) or negative (-n) integer.\n             * If present, this indicates the nth occurrence of a specific day within the monthly or yearly recurrence.\n             *\n             * **Not applicable** for daily {@link #field-frequency}.\n             * @field {String[]} days\n             */\n            {\n                name    : 'days',\n                convert : convertStringOfItemsValue,\n                isEqual : isEqualAsString\n            },\n            /**\n             * Specifies days of the month on which the timespan should occur.\n             * An array of integer values (-31..-1 - +1..+31, negative values mean counting backwards from the month end).\n             * **Applicable only** for monthly {@link #field-frequency}.\n             * @field {Number[]} monthDays\n             */\n            {\n                name    : 'monthDays',\n                convert : convertStringOfIntegerItemsValue,\n                isEqual : isEqualAsString\n            },\n            /**\n             * Specifies months of the year on which the timespan should occur.\n             * An array of integer values (1 - 12).\n             * **Applicable only** for yearly {@link #field-frequency}.\n             * @field {Number[]} months\n             */\n            {\n                name    : 'months',\n                convert : convertStringOfIntegerItemsValue,\n                isEqual : isEqualAsString\n            },\n            /**\n             * The positions to include in the recurrence. The values operate on a set of recurrence instances **in one interval** of the recurrence rule.\n             * An array of integer values (valid values are 1 to 366 or -366 to -1, negative values mean counting backwards from the end of the built list of occurrences).\n             * **Not applicable** for daily {@link #field-frequency}.\n             * @field {Number} positions\n             */\n            {\n                name    : 'positions',\n                convert : convertStringOfIntegerItemsValue,\n                isEqual : isEqualAsString\n            }\n        ];\n    }\n\n    get dateFormat() {\n        return this._dateFormat || 'YYYYMMDDTHHmmss';\n    }\n\n    set dateFormat(format) {\n        this._dateFormat = format;\n    }\n\n    get recurrenceIterator() {\n        //<debug>\n        if (!recurrenceIterators[this.frequency]) {\n            throw new Error(`Can't find iterator for ${this.frequency} frequency`);\n        }\n        //</debug>\n\n        return recurrenceIterators[this.frequency];\n    }\n\n    /**\n     * The timespan this recurrence is associated with.\n     * @property {Scheduler.model.TimeSpan}\n     */\n    get timeSpan() {\n        return this._timeSpan;\n    }\n\n    set timeSpan(value) {\n        this._timeSpan = value;\n    }\n\n    /**\n     * The recurrence rule. A string in [RFC-5545](https://tools.ietf.org/html/rfc5545#section-3.3.10) described format\n     * (\"RRULE\" expression).\n     * @property {String}\n     */\n    get rule() {\n        const\n            me     = this,\n            result = [];\n\n        if (me.frequency) {\n            result.push(`FREQ=${me.frequency}`);\n\n            if (me.interval > 1) {\n                result.push(`INTERVAL=${me.interval}`);\n            }\n            if (me.days && me.days.length) {\n                result.push('BYDAY=' + me.days.join(','));\n            }\n            if (me.monthDays && me.monthDays.length) {\n                result.push('BYMONTHDAY=' + me.monthDays.join(','));\n            }\n            if (me.months && me.months.length) {\n                result.push('BYMONTH=' + me.months.join(','));\n            }\n            if (me.count) {\n                result.push(`COUNT=${me.count}`);\n            }\n            if (me.endDate) {\n                result.push('UNTIL=' + DateHelper.format(me.endDate, me.dateFormat));\n            }\n            if (me.positions && me.positions.length) {\n                result.push('BYSETPOS=' + me.positions.join(','));\n            }\n        }\n\n        return result.join(';');\n    }\n\n    set rule(rule) {\n        const\n            me     = this,\n            values = {\n                frequency : null,\n                interval  : null,\n                count     : null,\n                endDate   : null,\n                days      : null,\n                monthDays : null,\n                months    : null,\n                positions : null\n            };\n\n        me.beginBatch();\n\n        if (rule) {\n            const parts = rule.split(';');\n\n            for (let i = 0, len = parts.length; i < len; i++) {\n                const\n                    part = parts[i].split('='),\n                    value  = part[1];\n\n                switch (part[0]) {\n                    case 'FREQ':\n                        values.frequency = value;\n                        break;\n                    case 'INTERVAL':\n                        values.interval = value;\n                        break;\n                    case 'COUNT':\n                        values.count = value;\n                        values.until = null;\n                        break;\n                    case 'UNTIL':\n                        if (value) {\n                            values.endDate = DateHelper.parse(value, me.dateFormat);\n                        }\n                        else {\n                            values.endDate = null;\n                        }\n                        values.count = null;\n                        break;\n                    case 'BYDAY':\n                        values.days = value;\n                        break;\n                    case 'BYMONTHDAY':\n                        values.monthDays = value;\n                        break;\n                    case 'BYMONTH':\n                        values.months = value;\n                        break;\n                    case 'BYSETPOS':\n                        values.positions = value;\n                        break;\n                }\n            }\n        }\n\n        me.set(values);\n\n        if (rule) {\n            me.sanitize();\n        }\n\n        me.endBatch();\n    }\n\n    construct(data = {}) {\n        const\n            me                 = this,\n            { rule, timeSpan } = data;\n\n        me._suspendedTimeSpanNotifying = 0;\n\n        delete data.timeSpan;\n        delete data.rule;\n\n        super.construct(...arguments);\n\n        if (rule) {\n            me.suspendTimeSpanNotifying();\n            me.rule = rule;\n            me.resumeTimeSpanNotifying();\n        }\n\n        me.timeSpan = timeSpan;\n    }\n\n    /**\n     * Iterate occurrences for the owning timespan across the specified date range. This method can be called even\n     * if the timespan is not yet a member of a store, however, the occurrences returned will not be cached across\n     * subsequent calls to this method.\n     * @param {Date} startDate The start date of the iteration.\n     * @param {Date} endDate The end date of the iteration.\n     * @param {Function} fn The function to call for each occurrence.\n     * @param {Scheduler.model.TimeSpan} fn.occurrence The occurrence.\n     * @param {Boolean} fn.first A flag which is `true` for the first occurrence of this recurrence.\n     * @param {Number} fn.counter A counter of how many dates have been visited in this iteration.\n     * @param {Date} fn.date The occurrence date.\n     * @internal\n     */\n    forEachOccurrence(startDate, endDate, fn) {\n        if (this.timeSpan.startDate) {\n            this.recurrenceIterator.forEachDate({\n                recurrence : this,\n                startDate,\n                endDate,\n\n                fn(date, counter, first, timeSpan) {\n                    return fn(timeSpan.buildOccurrence(date, first), first, counter, date);\n                }\n            });\n        }\n    }\n\n    /**\n     * Cleans up fields that do not makes sense for the current {@link #field-frequency} value.\n     * @private\n     */\n    sanitize() {\n        const\n            me                = this,\n            timeSpanStartDate = me.timeSpan?.startDate,\n            values            = {};\n\n        me.isSanitizing = true;\n\n        switch (me.frequency) {\n            case 'DAILY' :\n                values.positions    = null;\n                values.days         = null;\n                values.monthDays    = null;\n                values.months       = null;\n                break;\n\n            case 'WEEKLY' : {\n                values.positions = null;\n                values.monthDays = null;\n                values.months = null;\n\n                const { days } = me;\n\n                if (timeSpanStartDate && days?.length === 1 && days[0] === RecurrenceDayRuleEncoder.encodeDay(timeSpanStartDate.getDay())) {\n                    values.days = null;\n                }\n                break;\n            }\n\n            case 'MONTHLY' : {\n                if (me.monthDays?.length) {\n                    values.positions = null;\n                    values.days = null;\n                }\n\n                values.months = null;\n\n                const { monthDays } = me;\n\n                if (timeSpanStartDate && monthDays?.length === 1 && monthDays[0] === timeSpanStartDate.getDate()) {\n                    values.monthDays = null;\n                }\n                break;\n            }\n\n            case 'YEARLY' : {\n                values.monthDays = null;\n\n                const { months } = me;\n\n                if (timeSpanStartDate && months?.length === 1 && months[0] === timeSpanStartDate.getMonth() + 1) {\n                    values.months = null;\n                }\n                break;\n            }\n        }\n\n        me.set(values);\n\n        me.isSanitizing = false;\n    }\n\n    copy(...args) {\n        const result = super.copy(...args);\n\n        result.dateFormat = this.dateFormat;\n        result.timeSpan   = this.timeSpan;\n\n        return result;\n    }\n\n    afterChange(toSet, wasSet, silent) {\n        const\n            result       = super.afterChange(toSet, wasSet, silent),\n            { timeSpan } = this;\n\n        if (!this.isSanitizing) {\n            // cleanup data to match the chosen frequency\n            this.sanitize();\n        }\n\n        if (timeSpan) {\n            timeSpan.sanitizeRecurrenceData(this);\n\n            if (!this.isTimeSpanNotifyingSuspended) {\n                timeSpan.onRecurrenceChanged();\n            }\n        }\n\n        return result;\n    }\n\n    set(field, value, ...args) {\n        const values = typeof field === 'object' ? field : { [field] : value };\n\n        // reset \"endDate\" field if \"count\" is being set\n        if (values.count) {\n            values.endDate = null;\n        }\n        // reset \"count\" field if \"endDate\" is being set\n        else if (values.endDate) {\n            values.count = null;\n        }\n\n        super.set(values, undefined, ...args);\n    }\n\n    get isTimeSpanNotifyingSuspended() {\n        return Boolean(this._suspendedTimeSpanNotifying);\n    }\n\n    suspendTimeSpanNotifying() {\n        this._suspendedTimeSpanNotifying++;\n    }\n\n    resumeTimeSpanNotifying() {\n        if (this._suspendedTimeSpanNotifying) this._suspendedTimeSpanNotifying--;\n    }\n}\n","import TimeSpan from '../TimeSpan.js';\nimport RecurrenceModel from '../RecurrenceModel.js';\nimport ArrayHelper from '../../../Core/helper/ArrayHelper.js';\nimport DateHelper from '../../../Core/helper/DateHelper.js';\nimport AbstractRecurrenceIterator from '../../data/util/recurrence/AbstractRecurrenceIterator.js';\n\nfunction convertExceptionDatesValue(value) {\n    const\n        result         = {},\n        { dateFormat } = this;\n\n    if (value) {\n        value = typeof value == 'string' ? value.split(',') : ArrayHelper.asArray(value);\n\n        value.forEach(item => {\n            if (typeof item == 'string') {\n                item = DateHelper.parse(item, dateFormat);\n            }\n\n            // If we've got a valid date out of the incoming item, add an exception key\n            if (!isNaN(item)) {\n                result[DateHelper.makeKey(item)] = 1;\n            }\n        });\n    }\n\n    return result;\n}\n\nfunction serializeExceptionDatesValue(value) {\n    const\n        result         = [],\n        { dateFormat } = this;\n\n    for (const date in value) {\n        if (value[date]) {\n            result.push(DateHelper.format(DateHelper.parseKey(date), dateFormat));\n        }\n    }\n\n    return result;\n}\n\nconst emptyArray = [];\n\n/**\n * @module Scheduler/model/mixin/RecurringTimeSpan\n */\n\n/**\n * This mixin class provides recurrence related fields and methods to a {@link Scheduler.model.TimeSpan timespan model}.\n *\n * The mixin introduces two types of timespans: __recurring timespan__ and its __occurrences__.\n * __Recurring timespan__ is a timespan having {@link #field-recurrenceRule recurrence rule} specified and its __occurrences__ are \"fake\" dynamically generated timespans.\n * Their set depends on the scheduler visible timespan and changes upon the timespan change.\n *\n * There are few methods allowing to distinguish a recurring event and an occurrence: {@link #property-isRecurring}, {@link #property-isOccurrence}\n * and {@link #property-recurringTimeSpan} (returns the event this record is an occurrence of).\n *\n * The {@link #field-recurrenceRule recurrence rule} defined for the event is parsed and\n * represented with {@link Scheduler.model.RecurrenceModel RecurrenceModel} class (can be changed by setting {@link #property-recurrenceModel} property) instance.\n * See: {@link #property-recurrence} property.\n * @mixin\n * @mixinbase TimeSpan\n */\nexport default Target => class RecurringTimeSpan extends (Target || TimeSpan) {\n    static get $name() {\n        return 'RecurringTimeSpan';\n    }\n\n    /**\n     * Returns `true` if this timespan supports recurring.\n     * @property {Boolean}\n     * @category Recurrence\n     */\n    get supportsRecurring() {\n        return true;\n    }\n\n    static get fields() {\n        return [\n            /**\n             * The timespan recurrence rule. A string in [RFC-5545](https://tools.ietf.org/html/rfc5545#section-3.3.10)\n             * described format (\"RRULE\" expression).\n             * @field {String} recurrenceRule\n             * @category Scheduling\n             */\n            {\n                name     : 'recurrenceRule',\n                internal : true\n            },\n            /**\n             * A string (either a single date or multiple dates separated by comma) or an array of strings containing\n             * the timespan exception dates. The dates that must be skipped when generating occurrences for a repeating\n             * timespan. This is used to modify only individual occurrences of the timespan so the further regenerations\n             * won't create another copy of this occurrence again.\n             *\n             * ```javascript\n             * {\n             *     id: 7,\n             *     startDate: '2021-10-12T14:00:00',\n             *     endDate: '2021-10-12T15:00:00',\n             *     name: 'Lunch',\n             *     resourceId: 'hotel',\n             *     recurrenceRule: 'FREQ=DAILY;COUNT=5',\n             *     exceptionDates: ['2021-10-14']\n             * }\n             * ```\n             *\n             * Use {@link #function-addExceptionDate} method to add an individual entry to the dates array:\n             *\n             * ```javascript\n             * // Break the link between the occurrence and its base.\n             * // This also adds the occurrence date as an exception date\n             * // so that the base timespan knows that this date should be skipped when regenerating its occurrences.\n             * occurrence.recurringTimeSpan = null;\n             *\n             * // now the occurrence is an individual record that can be changed & persisted freely\n             * occurrence.setStartEndDate(new Date(2018, 6, 2), new Date(2018, 6, 3));\n             * ```\n             * **Note:** The dates in this field get automatically removed when the event changes its {@link Scheduler.model.TimeSpan#field-startDate start date}.\n             *\n             * @field {String|String[]} exceptionDates\n             * @category Scheduling\n             */\n            {\n                name      : 'exceptionDates',\n                convert   : convertExceptionDatesValue,\n                serialize : serializeExceptionDatesValue,\n                internal  : true\n            }\n        ];\n    }\n\n    /**\n     * Override of {@link Core/data/Model}'s method. If an {@link #property-isOccurrence}\n     * is passed, it is detached from its parent recurring event. If it still has a recurrence\n     * then the recurring event is changed to stop at the occurrence date. If it has no recurrence\n     * an exception is added at the occurrence date.\n     * @category Recurrence\n     */\n    remove() {\n        if (this.isOccurrence) {\n            const\n                me = this,\n                { recurringTimeSpan } = me;\n\n            me.cancelBatch();\n            recurringTimeSpan.beginBatch();\n            me.detachFromRecurringEvent();\n            recurringTimeSpan.endBatch();\n        }\n        else {\n            return super.remove(...arguments);\n        }\n    }\n\n    get eventStore() {\n        let result = this.isOccurrence ? this.recurringEvent.eventStore : super.eventStore;\n\n        // Recurrence methods are called on `eventStore`, but in case we have a regular\n        // store with recurrence mixin, we won't event store and should return own\n        // store instead\n        if (!result && this.firstStore?.isRecurringTimeSpansMixin) {\n            result = this.firstStore;\n        }\n\n        return result;\n    }\n\n    /**\n     * Name of the class representing the recurrence model, defaults to {@link Scheduler.model.RecurrenceModel}\n     * @property {String}\n     * @category Recurrence\n     */\n    get recurrenceModel() {\n        return this._recurrenceModel || RecurrenceModel;\n    }\n\n    set recurrenceModel(model) {\n        this._recurrenceModel = model;\n    }\n\n    /**\n     * Sets a recurrence for the timespan with a given frequency, interval, and end.\n     * @param {RecurrenceModelConfig|String|Scheduler.model.RecurrenceModel} recurrence A data object for an instance of\n     * {@link Scheduler.model.RecurrenceModel}. May also be the frequency string: `DAILY`, `WEEKLY`, `MONTHLY`, or\n     * `YEARLY`.\n     *\n     * ```javascript\n     * // repeat the event every other week till Jan 2 2039\n     * event.setRecurrence({\n     *     frequency : \"WEEKLY\",\n     *     interval  : 2,\n     *     endDate   : new Date(2039, 0, 2)\n     * });\n     * ```\n     *\n     * Also a {@link Scheduler.model.RecurrenceModel recurrence model} can be provided as the only argument for this\n     * method:\n     *\n     * ```javascript\n     * const recurrence = new RecurrenceModel({ frequency : 'DAILY', interval : 5 });\n     *\n     * event.setRecurrence(recurrence);\n     * ```\n     *\n     * or\n     *\n     * ```javascript\n     * event.setRecurrence(\"WEEKLY\", 2, new Date(2039, 0, 2));\n     * ```\n     * @param {Number} [interval] The interval between occurrences (instances of this recurrence). For example, a daily\n     * recurrence with an interval of 2 occurs every other day. Must be greater than 0.\n     * @param {Number|Date} [recurrenceEnd] The end of the recurrence. The value can be specified by a date or by a\n     * maximum count of occurrences (has to greater than 1, since 1 means the event itself).\n     * @category Recurrence\n     */\n    setRecurrence(recurrence, interval, recurrenceEnd) {\n        const me = this;\n\n        let recurrenceRule;\n\n        if (recurrence) {\n            if (!recurrence.isRecurrenceModel) {\n                if (typeof recurrence === 'string') {\n                    recurrence = {\n                        frequency : recurrence\n                    };\n\n                    if (interval) {\n                        recurrence.interval = interval;\n                    }\n\n                    // If the recurrence is limited\n                    if (recurrenceEnd) {\n                        if (recurrenceEnd instanceof Date) {\n                            recurrence.endDate = recurrenceEnd;\n                        }\n                        else {\n                            recurrence.count = recurrenceEnd;\n                        }\n                    }\n                }\n                recurrence = new me.recurrenceModel(recurrence);\n            }\n\n            // The RecurrenceModel has a reference to its owning recurring event.\n            // It uses this to remove the owning event's exceptions after its new endDate\n            // whenever its endDate is changed.\n            recurrence.timeSpan = me;\n\n            recurrenceRule = recurrence.rule;\n        }\n\n        me.recurrence     = recurrence;\n        me.recurrenceRule = recurrenceRule;\n    }\n\n    /**\n     * The recurrence model used for the timespan.\n     * @property {Scheduler.model.RecurrenceModel}\n     * @category Recurrence\n     */\n    get recurrence() {\n        const\n            me = this,\n            rule = me.recurrenceRule;\n\n        if (!me._recurrence && rule) {\n            me._recurrence = new me.recurrenceModel({ rule, timeSpan : me, id : `${me.id}-recurrence` });\n        }\n\n        return me._recurrence;\n    }\n\n    set recurrence(recurrence) {\n        const me = this;\n\n        me._recurrence = recurrence;\n\n        if (recurrence) {\n            // bind recurrence instance to the model\n            recurrence.timeSpan = me;\n            me.recurrenceRule   = recurrence.rule;\n        }\n        else {\n            // If this is being done to an occurrence, it's a signal that we are being\n            // mutated into an exception. Apply the change immediately, directly to the data.\n            if (me.isOccurrence) {\n                me.setData('recurrenceRule', null);\n            }\n            else {\n                me.recurrenceRule = null;\n            }\n        }\n    }\n\n    /**\n     * Indicates if the timespan is recurring.\n     * @property {Boolean}\n     * @readonly\n     * @category Recurrence\n     */\n    get isRecurring() {\n        // MUST evaluate in this order so that if it is an occurrence,\n        // the recurrence getter does not refresh the rule\n        return Boolean(!this.isOccurrence && this.recurrence);\n    }\n\n    /**\n     * Indicates if the timespan is an occurrence of another recurring timespan.\n     * @property {Boolean}\n     * @readonly\n     * @category Recurrence\n     */\n    get isOccurrence() {\n        return Boolean(this.recurringTimeSpan);\n    }\n\n    /**\n     * The \"main\" timespan this model is an occurrence of. For non-occurrences returns `null`.\n     * @property {Scheduler.model.TimeSpan}\n     * @readonly\n     * @internal\n     * @category Recurrence\n     */\n    get recurringTimeSpan() {\n        return this._recurringTimeSpan;\n    }\n\n    get isPersistable() {\n        return super.isPersistable && (!this.supportsRecurring || !this.isOccurrence);\n    }\n\n    set recurringTimeSpan(recurringTimeSpan) {\n        this._recurringTimeSpan = recurringTimeSpan;\n    }\n\n    /**\n     * Returns the occurrences of this event over the specified time range. If the first\n     * occurrence is in the time range `*this*` record is included in that position.\n     * @param {Date} startDate The start date of the range for which to include occurrences.\n     * @param {Date} [endDate] The end date of the range for which to include occurrences.\n     * Defaults to the startDate.\n     * @returns {Scheduler.model.TimeSpan[]} The array of occurrences which occur over the specified range.\n     * @category Recurrence\n     */\n    getOccurrencesForDateRange(startDate, endDate = startDate) {\n        return this.eventStore.getOccurrencesForTimeSpan(this, startDate, endDate);\n    }\n\n    /**\n     * Array of this recurring timespan's cached occurrences. __Not including the owning recurring\n     * event__.\n     *\n     * Empty if the timespan is not recurring.\n     *\n     * __Note that this is an internal accessor and is cleared whenever changes are made to the\n     * owning recurring event__.\n     * @property {Scheduler.model.TimeSpan[]}\n     * @readonly\n     * @internal\n     * @category Recurrence\n     */\n    get occurrences() {\n        if (this.isRecurring) {\n            const result = [];\n\n            // The occurrencesMap contains entries for each occurrence date.\n            this.occurrenceMap.forEach(occurrence => {\n                if (occurrence !== this) {\n                    result.push(occurrence);\n                }\n            });\n\n            return result;\n        }\n\n        return emptyArray;\n    }\n\n    /**\n     * A Map, keyed by each date an occurrence intersects, of occurrences of this event.\n     * @property {Map}\n     * @readonly\n     * @internal\n     * @category Recurrence\n     */\n    get occurrenceMap() {\n        return this._occurrencesMap || (this._occurrencesMap = new Map());\n    }\n\n    /**\n     * Removes an occurrence from this recurring timespan's cached occurrences.\n     * @param dateOrTimeSpan occurrence date or occurrence TimeSpan\n     * @internal\n     * @category Recurrence\n     */\n    removeOccurrence(dateOrTimeSpan) {\n        const date = dateOrTimeSpan.isTimeSpan ? dateOrTimeSpan.occurrenceDate : dateOrTimeSpan;\n\n        // Clear the occurrences *is* we are in an EventStore.\n        this.eventStore?.globalOccurrences.delete(this.createRecurrenceKey(date));\n        // Remove occurrence from its by-startDate cache\n        this.occurrenceMap.delete(DateHelper.makeKey(date));\n    }\n\n    /**\n     * Removes all cached occurrences on or after the passed date from this recurring timespan's cached occurrences.\n     * @internal\n     * @category Recurrence\n     */\n    removeOccurrencesFrom(date) {\n        this.occurrenceMap.forEach((occurrence, dateKey) => {\n            if (DateHelper.parseKey(dateKey) >= date) {\n                this.removeOccurrence(occurrence);\n            }\n        });\n    }\n\n    /**\n     * Removes this recurring timespan's cached occurrences.\n     * @internal\n     * @category Recurrence\n     */\n    removeOccurrences() {\n        // This recurring event must also be removed from the occurrenceMap if it's there\n        // So insert it as the first element. Can also be found from the store's global occurrence\n        // Map using [...this.eventStore.globalOccurrences.keys()].filter(e => e.startsWith(`_generated:${this.id}`))\n        [this, ...this.occurrences].forEach(occurrence => this.removeOccurrence(occurrence));\n    }\n\n    /**\n     * The method is triggered when the timespan recurrence settings get changed.\n     * It updates the {@link #field-recurrenceRule} field in this case.\n     * @internal\n     * @category Recurrence\n     */\n    onRecurrenceChanged() {\n        this.recurrenceRule = this.recurrence?.rule || null;\n    }\n\n    sanitizeRecurrenceData(recurrence = this.recurrence) {\n        // Remove all exceptionsDates that our owning timeSpan had that are\n        // now after our end date and therefore redundant.\n        if (recurrence.endDate) {\n            const\n                endDate            = DateHelper.clearTime(recurrence.endDate),\n                { exceptionDates } = this;\n\n            // Clear any now-invalid cached occurrences\n            this.removeOccurrencesFrom(endDate);\n\n            // If we had any exceptions on or after this date, remove them.\n            if (exceptionDates) {\n                for (const dateKey in exceptionDates) {\n                    const exceptionDate = DateHelper.parseKey(dateKey);\n\n                    if (exceptionDate >= endDate) {\n                        delete exceptionDates[dateKey];\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * The original {@lScheduler.model.TimeSpan#field-startDate startDate} of this event before any modifications\n     * took place. Used by {@link #function-removeOccurrence} and {@link #function-detachFromRecurringEvent}\n     * @internal\n     * @readonly\n     * @category Recurrence\n     */\n    get occurrenceDate() {\n        return this.meta.modified?.startDate || this.startDate;\n    }\n\n    /**\n     * If this event is an {@link #property-isOccurrence occurrence} of a recurring event, then this\n     * property yields its zero-based occurrence index in the sequence.\n     * @property {Number}\n     * @readonly\n     * @category Recurrence\n     */\n    get occurrenceIndex() {\n        return AbstractRecurrenceIterator.getOccurrenceIndex(this);\n    }\n\n    /**\n     * Builds an occurrence of this recurring event by cloning the timespan data.\n     * The method is used internally by the __RecurringTimeSpans__ mixin.\n     * Override it if you need to customize the generated occurrences.\n     *\n     * If the date requested is the start date of the event sequence, `this`\n     * record is returned. All runs of recurring events begin with the base record.\n     * @param  {Date} occurrenceDate The occurrence start date.\n     * @param  {Boolean} isFirst `true` if this is the first occurrence.\n     * @returns {Scheduler.model.TimeSpan} The occurrence.\n     * @internal\n     * @category Recurrence\n     */\n    buildOccurrence(occurrenceDate, isFirst) {\n        const\n            me                    = this,\n            {\n                occurrenceMap,\n                recurrence,\n                meta\n            }                     = me,\n            globalOccurrences     = me.eventStore?.globalOccurrences,\n            occurrenceKey         = DateHelper.makeKey(occurrenceDate),\n            id                    = me.createRecurrenceKey(occurrenceDate, occurrenceKey),\n            onStartDate           = !(occurrenceDate - me.startDate),\n            { fieldMap }          = me.constructor;\n\n        // An occurrence has a unique ID which identifies it by its base recurring event and its time.\n        let occurrence   = globalOccurrences?.get(id),\n            { duration } = me;\n\n        // If there's no duration, or it's an all day event (which makes the event ceil and floor its\n        // start and end dates, but does *NOT* as of 27/5/2020 adjust its duration) then\n        // we calculate the duration of the occurrence.\n        if (me.endDate && (me.allDay || !duration)) {\n            duration = DateHelper.as(me.durationUnit, me.endDate.getTime() - me.startDate.getTime());\n        }\n\n        // Don't let NaN in record data\n        const occurrenceEndDate = duration !== undefined ? DateHelper.add(occurrenceDate, duration, me.durationUnit) : undefined;\n\n        if (!occurrence) {\n            // If this is the first occurrence (start times may not match), or it's right on the start\n            // then this recurring event *IS* the occurrence\n            if (isFirst || onStartDate) {\n                occurrence = me;\n\n                // We are the first occurrence.\n                // But if our start time is not as the rule requires, adjust ourself *silently*\n                if (!onStartDate) {\n                    me.setStartEndDate(occurrenceDate, occurrenceEndDate, true);\n                    // Since we've changed the event start date the recurrence \"Days\"/\"MonthDays\"/\"Months\"\n                    // might get redundant in case the event start date matches the fields values\n                    // Calling recurrence sanitize() will clean the fields in this case.\n                    recurrence.suspendTimeSpanNotifying();\n                    recurrence.sanitize();\n                    recurrence.resumeTimeSpanNotifying();\n                }\n\n                // Either way, because of adjustment above, or initial correctness, we are in sync\n                // with our recurrence rule. A RecurrenceIterator is now able to calculate a correct\n                // UNTIL date from a COUNT value. See AbstractRecurrenceIterator#processIterationConfig\n                meta.isSyncedWithRule = true;\n            }\n            // Generate an occurrence which references this as its parent\n            else {\n                occurrence = me.copy(\n                    {\n                        [fieldMap.id.dataSource]        : id,\n                        [fieldMap.startDate.dataSource] : occurrenceDate,\n                        [fieldMap.endDate.dataSource]   : occurrenceEndDate,\n                        [fieldMap.duration.dataSource]  : duration,\n                        constraintDate                  : null,\n                        constraintType                  : null\n                    },\n                    { creatingOccurrence : true }\n                );\n\n                occurrence.recurringTimeSpan = me;\n            }\n\n            globalOccurrences?.set(id, occurrence);\n\n            // A recurring timespan keeps a by-startDate index of occurrences.\n            // And itself will be among those.\n            occurrenceMap.set(occurrenceKey, occurrence);\n        }\n\n        return occurrence;\n    }\n\n    createRecurrenceKey(date = this.startDate, dateKey = null) {\n        return `_generated:${this.id}:${dateKey || DateHelper.makeKey(date)}`;\n    }\n\n    // Converts this occurrence to a new \"master\" event\n    convertToRealEvent(wasSet, silent) {\n        if (!this.isOccurrence) {\n            return;\n        }\n\n        const\n            me = this,\n            {\n                recurringTimeSpan,\n                resource,\n                occurrenceIndex,\n                recurrence\n            }               = me,\n            count           = recurrence && recurringTimeSpan.recurrence.count,\n            // resourceRecords is a temporary property of occurrence events to handle cases\n            // if only resources has been updated. (change only resources won't mark record as dirty)\n            newResource     = wasSet?.resourceRecords?.value || me.data.newResource;\n\n        recurringTimeSpan.beginBatch();\n\n        me.detachFromRecurringEvent();\n\n        me.clearChanges();\n\n        // Must silently set our own ID, not be the key generated from our parent id and occurrence date.\n        // Must not result in the id field being in the modified state.\n        me.setData('id', me.generateId(recurringTimeSpan.eventStore));\n\n        if (newResource) {\n            // clear resourceId to avoid auto-adding to assignmentStore, it is handled manually bellow\n            delete me.data.resourceId;\n        }\n\n        // The impending changes to the former parent recurring event trigger a full refresh.\n        recurringTimeSpan.eventStore.add(me, silent);\n\n        // Ensure that the original count is honoured.\n        // If we are the 8th occurrence of 10, OUR repeat count must be 3.\n        if (count) {\n            me.recurrence.count = count - occurrenceIndex;\n        }\n\n        if (newResource || resource) {\n            me.assign(newResource || resource);\n        }\n\n        // remove data after apply\n        if (newResource) {\n            delete me.data.resourceRecords;\n        }\n        if (wasSet) {\n            delete wasSet.resourceRecords;\n        }\n\n        // Any change to a recurring events triggers a store refresh event.\n        recurringTimeSpan.endBatch();\n    }\n\n    afterChange(toSet, wasSet, silent, ...args) {\n        const\n            me             = this,\n            { eventStore } = me;\n\n        // reset cached recurrence instance in case \"recurrenceRule\" is changed\n        if ('recurrenceRule' in wasSet) {\n            me._recurrence = null;\n\n            // If we are a recurring event, we must be in the recurringEvents cache.\n            // If we are *not* a recurring event, we must *not* be in there.\n            // An event not yet in a store (eg dragging to create) won't have an eventStore.\n            // eslint-disable-next-line no-unused-expressions\n            eventStore?.recurringEvents[wasSet.recurrenceRule.value ? 'add' : 'delete'](me);\n        }\n\n        // Any change to an occurrence adds it to an event store, at which point\n        // it ceases to be an occurrence.\n        //\n        // If it has a recurrenceRule it becomes the start of a new recurring event series,\n        // and the old owning recurring event stops on the day before.\n        //\n        // If it has no recurrenceRule, it becomes an exception to its owning recurring event.\n        if (me.isOccurrence) {\n            me.convertToRealEvent(wasSet, silent);\n        }\n        // Setting a newException date must mark the exceptionDates as modified\n        else if ('newExceptionDate' in wasSet) {\n            me.meta.modified.exceptionDates = true;\n            delete me.meta.modified.newExceptionDate;\n\n            // Remove any occurrence on that date from our by-startDate cache\n            // and from the global occurrences cache\n            me.removeOccurrence(wasSet.newExceptionDate.value);\n        }\n\n        return super.afterChange(toSet, wasSet, silent, ...args);\n    }\n\n    /**\n     * Detaches an occurrence from its owning recurring event so that it can be added to the eventStore\n     * either as an exception, or as the start of a new recurring sequence.\n     * @internal\n     * @category Recurrence\n     */\n    detachFromRecurringEvent() {\n        const\n            me                                    = this,\n            // For access further down, breaking the link involves engine if trying to get the occurrenceDate later,\n            // resulting in the wrong date\n            { recurringTimeSpan, occurrenceDate, startDate } = me;\n\n        // Break the link\n        me.recurringTimeSpan = null;\n\n        // The occurrenceDate is injected into the data when an occurrence is created.\n        // the recurringTimeSpan's afterChange will remove any cache occurrence\n        // for this date; see above\n        recurringTimeSpan.addExceptionDate(occurrenceDate);\n\n        // If we still have a recurrenceRule, we're being promoted to be a new recurring event.\n        // The recurrence setter applies the rule immediately to occurrences, so this will\n        // always be correct.\n        if (me.recurrenceRule) {\n            // The RecurrenceModel removes occurrences and exceptions after this date\n            recurringTimeSpan.recurrence.endDate = DateHelper.add(startDate, -1, 'minute');\n        }\n    }\n\n    /**\n     * The setter used by Model#inSet when {@link #function-addExceptionDate} is called.\n     * Adding an exception must trigger change processing in a recurring event, so it must\n     * be changed through a {@link Core.data.Model#function-set} call. Also, the change must be batchable\n     * with other changes.\n     * @private\n     * @readonly\n     * @category Recurrence\n     */\n    set newExceptionDate(date) {\n        if (date) {\n            const exceptionDates = this.exceptionDates || (this.exceptionDates = {});\n\n            exceptionDates[DateHelper.makeKey(date)] = 1;\n        }\n    }\n\n    /**\n     * Adds an exception date that should be skipped when generating occurrences for the timespan.\n     * The methods adds an entry to the array kept in {@link #field-exceptionDates} field.\n     * @param {Date} date Exception date.\n     * @internal\n     * @category Recurrence\n     */\n    addExceptionDate(newExceptionDate) {\n        return this.set({\n            newExceptionDate\n        });\n    }\n\n    /**\n     * Does this recurring event have an exception on the passed date.\n     * @param {Date} date The date to find an exception for.\n     * @returns {Boolean} `true` if the event has an exception starting on the passed date.\n     * @category Recurrence\n     */\n    hasException(date) {\n        return this.exceptionDates?.[DateHelper.makeKey(date)];\n    }\n};\n","import DH from '../../../Core/helper/DateHelper.js';\nimport ArrayHelper from '../../../Core/helper/ArrayHelper.js';\n\nconst\n    oneDayMS = 1000 * 60 * 60 * 24;\n\n/**\n * @module Scheduler/model/mixin/EventModelMixin\n */\n\n/**\n * Mixin that holds configuration shared between events in Scheduler and Scheduler Pro.\n * @mixin\n */\nexport default Target => class EventModelMixin extends Target {\n    static get $name() {\n        return 'EventModelMixin';\n    }\n\n    // Flag checked by EventStore to make sure it uses a valid subclass\n    static get isEventModel() {\n        return true;\n    }\n\n    /**\n     * Set value for the specified field(s), triggering engine calculations immediately. See\n     * {@link Core.data.Model#function-set Model#set()} for arguments.\n     *\n     * ```javascript\n     * eventRecord.set('duration', 4);\n     * // eventRecord.endDate is not yet calculated\n     *\n     * await eventRecord.setAsync('duration', 4);\n     * // eventRecord.endDate is calculated\n     * ```\n     *\n     * @param {String|Object} field The field to set value for, or an object with multiple values to set in one call\n     * @param {*} value Value to set\n     * @param {Boolean} [silent=false] Set to true to not trigger events. If event is recurring, occurrences won't be updated\n     * automatically.\n     * @function setAsync\n     * @category Editing\n     * @async\n     */\n\n    //region Fields\n\n    static get fields() {\n        return [\n            // TODO: below startDate/endDate/duration fields docs copy-paste should be cleaned up after supporting @localdoc & @inheritdoc combination\n\n            /**\n             * The start date of a time span (or Event / Task).\n             *\n             * Uses {@link Core/helper/DateHelper#property-defaultFormat-static DateHelper.defaultFormat} to convert a\n             * supplied string to a Date. To specify another format, either change that setting or subclass TimeSpan and\n             * change the dateFormat for this field.\n             *\n             * UI fields representing this data field are disabled for summary tasks. See {@link #function-isEditable}\n             * for details.\n             *\n             * Note that the field always returns a `Date`.\n             *\n             * Also note that modifying the `startDate` at runtime will move the event in time, without affecting its\n             * duration (with reservation for other scheduling logic affecting the duration). If you want to change the\n             * `startDate` and `duration`, use {@link Scheduler/model/TimeSpan#function-setStartDate} instead (passing\n             * `false` as the second argument).\n             *\n             * @field {Date} startDate\n             * @accepts {String|Date}\n             * @category Scheduling\n             */\n\n            /**\n             * The end date of a time span (or Event / Task).\n             *\n             * Uses {@link Core/helper/DateHelper#property-defaultFormat-static DateHelper.defaultFormat} to convert a\n             * supplied string to a Date. To specify another format, either change that setting or subclass TimeSpan and\n             * change the dateFormat for this field.\n             *\n             * UI fields representing this data field are disabled for summary tasks. See {@link #function-isEditable} for details.\n             *\n             * Note that the field always returns a `Date`.\n             *\n             * @field {Date} endDate\n             * @accepts {String|Date}\n             * @category Scheduling\n             */\n\n            /**\n             * The numeric part of the timespan's duration (the number of units).\n             *\n             * UI fields representing this data field are disabled for summary tasks. See {@link #function-isEditable} for details.\n             *\n             * @field {Number} duration\n             * @category Scheduling\n             */\n\n            /**\n             * Property which encapsulates the duration's magnitude and units.\n             * @member {Core.data.Duration} fullDuration\n             * @category Scheduling\n             */\n\n            /**\n             * The unique identifier of a task (mandatory)\n             * @field {String|Number} id\n             * @category Common\n             */\n\n            /**\n             * Id of the resource this event is associated with (only usable for single assignments). We recommend\n             * using assignments in an AssignmentStore over this approach. Internally any Event using `resourceId`\n             * will have an assignment in AssignmentStore generated.\n             * @field {String|Number} resourceId\n             * @category Common\n             */\n            {\n                name     : 'resourceId',\n                internal : true\n            },\n\n            /**\n             * The array of {@link Scheduler.model.ResourceModel resources} which are assigned to this event.\n             * @field {String|Number} resources\n             * @category Common\n             */\n            {\n                name   : 'resources',\n                column : {\n                    type : 'resourceassignment'\n                },\n                persist  : false,\n                internal : true // TODO: remove this when resourcecolumn is in Scheduler\n            },\n\n            /**\n             * Specify false to prevent the event from being dragged (if EventDrag feature is used)\n             * @field {Boolean} draggable\n             * @default true\n             * @category Interaction\n             */\n            {\n                name         : 'draggable',\n                type         : 'boolean',\n                persist      : false,\n                defaultValue : true,\n                internal     : true\n            },\n\n            /**\n             * Specify `false` to prevent the event from being resized (if EventResize feature is used). You can also\n             * specify `'start'` or `'end'` to only allow resizing in one direction\n             * @field {Boolean|String} resizable\n             * @default true\n             * @category Interaction\n             */\n            {\n                name         : 'resizable',\n                persist      : false,\n                defaultValue : true,\n                internal     : true\n            }, // true, false, 'start' or 'end'\n\n            /**\n             * A field marking event as all day(s) spanning event.\n             * For example, a holiday day may be represented by a `startDate`, and the `allDay` flag.\n             * @field {Boolean} allDay\n             * @category Scheduling\n             */\n            {\n                name         : 'allDay',\n                type         : 'boolean',\n                defaultValue : false\n            },\n\n            /**\n             * Controls this events appearance, see Schedulers\n             * {@link Scheduler.view.mixin.TimelineEventRendering#config-eventStyle eventStyle config} for\n             * available options.\n             * @field {String} eventStyle\n             * @category Styling\n             */\n            {\n                name     : 'eventStyle',\n                internal : true\n            },\n\n            /**\n             * Controls the primary color of the event, see Schedulers\n             * {@link Scheduler.view.mixin.TimelineEventRendering#config-eventColor eventColor config} for\n             * available colors.\n             * @field {String} eventColor\n             * @category Styling\n             */\n            {\n                name     : 'eventColor',\n                internal : true\n            },\n\n            /**\n             * Width (in px) to use for this milestone when using Scheduler#milestoneLayoutMode 'data'.\n             * @field {Number} milestoneWidth\n             * @category Styling\n             */\n            {\n                name     : 'milestoneWidth',\n                internal : true\n            },\n\n            /**\n             * Set this field to `false` to opt out of {@link Scheduler.feature.StickyEvents sticky event content}\n             * (keeping event text in view while scrolling).\n             * @field {Boolean} stickyContents\n             * @category Styling\n             */\n            {\n                name     : 'stickyContents',\n                internal : true\n            }\n        ];\n    }\n\n    //endregion\n\n    //region Id change\n\n    updateAssignmentEventIds() {\n        this.assigned.forEach(assignment => {\n            assignment.eventId = this.id;\n        });\n    }\n\n    syncId(value) {\n        super.syncId(value);\n\n        this.updateAssignmentEventIds();\n    }\n\n    //endregion\n\n    //region Resources\n\n    /**\n     * Returns all resources assigned to an event.\n     *\n     * @property {Scheduler.model.ResourceModel[]}\n     * @category Assignments & Resources\n     * @readonly\n     */\n    get resources() {\n        // Only include valid resources, to not have nulls in the result\n        return this.assignments.reduce((resources, { resource }) => {\n            resource && resources.push(resource.$original);\n            return resources;\n        }, []);\n    }\n\n    set resources(resources) {\n        resources = ArrayHelper.asArray(resources);\n\n        const\n            me             = this,\n            newResourceIds = resources.map(me.constructor.asId);\n\n        if (me.usesSingleAssignment) {\n            me.set('resourceId', newResourceIds[0]);\n        }\n        else {\n            const\n                existingResourceIds                     = me.assignments.map(a => a.resource.id),\n                { onlyInA : toAdd, onlyInB : toRemove } = ArrayHelper.delta(newResourceIds, existingResourceIds);\n            // Add first, remove after. Otherwise event might get removed with its last assignment\n            me.assignmentStore.add(toAdd.map(resourceId => ({ resource : resourceId, event : me })));\n            me.assignmentStore.remove(toRemove.map(resourceId => me.assignments.find(a => a.resource.id === resourceId)));\n        }\n    }\n\n    /**\n     * Iterate over all associated resources\n     * @private\n     * @category Assignments & Resources\n     */\n    forEachResource(fn, thisObj = this) {\n        for (const resource of this.resources) {\n            if (fn.call(thisObj, resource) === false) {\n                return;\n            }\n        }\n    }\n\n    /**\n     * Returns either the resource associated with this event (when called w/o `resourceId`) or resource\n     * with specified id.\n     *\n     * @param {String} [resourceId] To retrieve a specific resource\n     * @returns {Scheduler.model.ResourceModel}\n     * @category Assignments & Resources\n     */\n    getResource(resourceId) {\n        if (resourceId == null) {\n            return this.resource;\n        }\n\n        return this.resourceStore ? this.resourceStore.getById(resourceId) : null;\n    }\n\n    //endregion\n\n    //region Dates\n\n    get startDate() {\n        let dt;\n\n        if (this.isOccurrence) {\n            dt = this.get('startDate');\n        }\n        else {\n            // Micro optimization to avoid expensive super call. super will be hit in Scheduler Pro\n            dt = this._startDate ?? super.startDate;\n        }\n\n        if (this.allDay) {\n            dt = this.constructor.getAllDayStartDate(dt);\n        }\n\n        return dt;\n    }\n\n    set startDate(startDate) {\n        if (this.batching) {\n            this._startDate = startDate;\n            this.set({ startDate });\n        }\n        else {\n            super.startDate = startDate;\n        }\n    }\n\n    get endDate() {\n        let dt;\n\n        if (this.isOccurrence) {\n            dt = this.get('endDate');\n        }\n        else {\n            // Micro optimization to avoid expensive super call. super will be hit in Scheduler Pro\n            dt = this._endDate ?? super.endDate;\n        }\n\n        if (this.allDay) {\n            dt = this.constructor.getAllDayEndDate(dt);\n        }\n\n        return dt;\n    }\n\n    set endDate(endDate) {\n        if (this.batching) {\n            this._endDate = endDate;\n            this.set({ endDate });\n        }\n        else {\n            super.endDate = endDate;\n        }\n    }\n\n    // Cannot use `convert` method because it might be disabled by `useRawData : true` and we always need to calculate\n    // that value\n    get wrapStartDate() {\n        return this.startDate;\n    }\n\n    set wrapStartDate(value) {}\n\n    get wrapEndDate() {\n        return this.endDate;\n    }\n\n    set wrapEndDate(value) {}\n\n    /**\n     * Shift the dates for the date range by the passed amount and unit\n     * @param {'ms'|'s'|'m'|'h'|'d'|'w'|'M'|'y'} unit The unit to shift by, see {@link Core.helper.DateHelper}\n     * for more information on valid formats.\n     * @param {Number} amount The amount to shift\n     * @returns {Promise} A promise which is resolved when shift calculations are done\n     * @async\n     * @method shift\n     * @category Scheduling\n     */\n\n    //endregion\n\n    //region Is\n\n    // Used internally to differentiate between Event and ResourceTimeRange\n    get isEvent() {\n        return true;\n    }\n\n    /**\n     * Returns true if event can be drag and dropped\n     * @property {Boolean}\n     * @category Editing\n     */\n    get isDraggable() {\n        return !this.readOnly && this.draggable;\n    }\n\n    /**\n     * Returns true if event can be resized, but can additionally return 'start' or 'end' indicating how this event can\n     * be resized.\n     *\n     * Milestones and parent events (that are not manuallyScheduled) cannot be resized.\n     *\n     * @property {Boolean|String}\n     * @readonly\n     * @category Editing\n     */\n    get isResizable() {\n        return !this.isMilestone && (!this.isParent || this.manuallyScheduled) && this.resizable;\n    }\n\n    /**\n     * Returns false if the event is not persistable. By default it always is, override this getter if you need\n     * custom logic.\n     *\n     * @property {Boolean}\n     * @readonly\n     * @category Editing\n     */\n    get isPersistable() {\n        // Records not yet fully created cannot be persisted\n        return super.isPersistable && !this.isCreating;\n    }\n\n    endBatch() {\n        const { isPersistable : wasPersistable, meta : { batchChanges } } = this;\n\n        // Remove cached values\n        // https://github.com/bryntum/support/issues/3358\n        if (batchChanges) {\n            if ('endDate' in batchChanges) {\n                delete this._endDate;\n                // When project recalculates start/end date and committing changes to record it calls endBatch. In this\n                // case wrap dates become invalid and should be reset on the record. We do it by forcing `null` value.\n                // Possible scenarios include adding dependency or moving first event in a dependency chain.\n                // Covered by pro/features/BufferTimeDependencies.t\n                // wrap date is an internal field we should be fine without mapping\n                if (this.postamble) {\n                    this.wrapEndDate = null;\n                }\n            }\n\n            if ('startDate' in batchChanges) {\n                delete this._startDate;\n\n                if (this.preamble) {\n                    this.wrapStartDate = null;\n                }\n            }\n        }\n\n        super.endBatch(...arguments);\n\n        // If this event newly persistable, its assignments are eligible for syncing.\n        if (this.isPersistable && !wasPersistable) {\n            this.assignments.forEach(assignment => {\n                assignment.stores.forEach(s => {\n                    s.updateModifiedBagForRecord(assignment);\n                });\n            });\n        }\n    }\n\n    get isCreating() {\n        return super.isCreating;\n    }\n\n    set isCreating(value) {\n        super.isCreating = value;\n\n        this.assignments.forEach(record => record.isCreating = value);\n    }\n\n    //endregion\n\n    //region Single assignment compatibility\n\n    get usesSingleAssignment() {\n        return !this.eventStore || this.eventStore.usesSingleAssignment;\n    }\n\n    copy(...args) {\n        const copy = super.copy(...args);\n\n        // Dont copy resourceId when using multi assignment\n        if (!this.usesSingleAssignment) {\n            copy.resourceId = null;\n        }\n\n        return copy;\n    }\n\n    /**\n     * Override persistable getter to prevent sending resourceId when using multiple resource assignment mode\n     * https://github.com/bryntum/support/issues/1345\n     * @private\n     */\n    get persistableData() {\n        const data = super.persistableData;\n        if (!this.usesSingleAssignment) {\n            delete data.resourceId;\n        }\n        return data;\n    }\n\n    /**\n     * Returns the first assigned resource, or assigns a resource\n     * @member {Scheduler.model.ResourceModel} resource\n     * @category Assignments & Resources\n     */\n    get resource() {\n        const { resources } = this;\n        return resources.length ? resources[0] : null;\n    }\n\n    set resource(resourceRecord) {\n        // Use the resourceId setter for single assignment\n        this.resourceId = this.constructor.asId(resourceRecord);\n    }\n\n    get resourceId() {\n        return this.usesSingleAssignment ? this.get('resourceId') : this.resource?.id;\n    }\n\n    set resourceId(resourceId) {\n        this.applyResourceId(resourceId);\n    }\n\n    // Resources + any links to any of them\n    get $linkedResources() {\n        return this.resources?.flatMap(resourceRecord => ([\n            resourceRecord,\n            ...resourceRecord.$links\n        ])) ?? [];\n    }\n\n    applyResourceId(resourceId, fromApplyValue = false) {\n        const\n            me                                           = this,\n            { assignments, assignmentStore, eventStore } = me;\n\n        // When part of an EventStore, resourceIds are changed to be AssignmentModels\n        if (eventStore) {\n            if (resourceId != null) {\n                if (!me.meta.skipEnforcingSingleAssignment) {\n                    eventStore.usesSingleAssignment = true;\n                }\n\n                // Reassign if already assigned, only single assignment allowed\n                if (assignments?.length && resourceId !== assignments[0].resourceId) {\n                    //assignments[0].set('resourceId', resourceId, Boolean(me.eventStore.eventsSuspended));\n                    // Silent reassign if events are suspended on event store, wont be expecting UI update then\n                    const eventsSuspended = Boolean(eventStore.eventsSuspended);\n\n                    eventsSuspended && assignmentStore.suspendEvents();\n                    assignments[0].resource = resourceId;\n                    eventsSuspended && assignmentStore.resumeEvents();\n                }\n                // Otherwise assign\n                else {\n                    assignmentStore.assignEventToResource(me, resourceId);\n                }\n            }\n            else {\n                // Setting resourceId to null removes all assignments\n                assignmentStore.remove(me.assignments);\n            }\n        }\n        // Not part of an EventStore, edge case. Set to data unless we are in such operation already\n        else if (!fromApplyValue) {\n            me.set({ resourceId });\n        }\n    }\n\n    // Special handling of setting resourceId, creates assignment\n    applyValue(useProp, mapping, value, skipAccessors, field) {\n        if (field && field.name === 'resourceId' && !this.meta.isAssigning) {\n            const { eventStore } = this;\n\n            eventStore && (eventStore.isAssigning = true);\n\n            this.applyResourceId(value, true);\n\n            eventStore && (eventStore.isAssigning = false);\n        }\n\n        super.applyValue(useProp, mapping, value, skipAccessors, field);\n    }\n\n    //endregion\n\n    //region Assignment\n\n    /**\n     * Returns all assignments for the event. Event must be part of the store for this method to work.\n     * @property {Scheduler.model.AssignmentModel[]}\n     * @readonly\n     * @category Assignments & Resources\n     */\n    get assignments() {\n        return [...(this.assigned || [])];\n    }\n\n    /**\n     * Assigns this event to the specified resource.\n     *\n     * *Note:* The event must be part of an EventStore for this to work. If the EventStore uses single assignment\n     * (loaded using resourceId) existing assignments will always be removed.\n     *\n     * @param {Scheduler.model.ResourceModel|String|Number|Scheduler.model.ResourceModel[]|String[]|Number[]} resource A new resource for this event, either as a full\n     *        Resource record or an id (or an array of such).\n     * @param {Boolean} [removeExistingAssignments] `true` to first remove existing assignments\n     * @category Assignments & Resources\n     */\n    assign(resource, removeExistingAssignments = false) {\n        const { eventStore } = this;\n\n        if (eventStore && !eventStore.usesSingleAssignment) {\n            eventStore.assignEventToResource(this, resource, removeExistingAssignments);\n        }\n        else {\n            // Remember what resource to assign,  directly in single assignment mode or for later when we are joined to\n            // an EventStore\n            this.resourceId = this.constructor.asId(resource);\n\n            if (!eventStore) {\n                // Prevent flagging EventStore as using single assignment when that happens, we cannot know that here\n                this.meta.skipEnforcingSingleAssignment = true;\n            }\n        }\n    }\n\n    /**\n     * Unassigns this event from the specified resource\n     *\n     * @param {Scheduler.model.ResourceModel|String|Number} [resource] The resource to unassign from.\n     * @category Assignments & Resources\n     */\n    unassign(resource, removingResource = false) {\n        const me = this;\n\n        resource = me.constructor.asId(resource);\n\n        // If unassigned is caused by removing the resource the UI should be able to find out to not do extra redraws etc.\n        me.meta.removingResource = removingResource;\n\n        me.eventStore?.unassignEventFromResource(me, resource);\n\n        me.meta.removingResource = null;\n    }\n\n    /**\n     * Reassigns an event from an old resource to a new resource\n     *\n     * @param {Scheduler.model.ResourceModel|String|Number} oldResourceId A resource to unassign from or its id\n     * @param {Scheduler.model.ResourceModel|String|Number} newResourceId A resource to assign to or its id\n     * @category Assignments & Resources\n     */\n    reassign(oldResourceId, newResourceId) {\n        this.eventStore && this.eventStore.reassignEventFromResourceToResource(this, oldResourceId, newResourceId);\n    }\n\n    /**\n     * Returns true if this event is assigned to a certain resource.\n     *\n     * @param {Scheduler.model.ResourceModel|String|Number} resource The resource to query for\n     * @returns {Boolean}\n     * @category Assignments & Resources\n     */\n    isAssignedTo(resource) {\n        const resourceId = this.constructor.asId(resource);\n        return this.assignments.some(assignment => assignment.resourceId === resourceId);\n    }\n\n    //endregion\n\n    //region Dependencies\n\n    /**\n     * Returns all predecessor dependencies of this event\n     *\n     * @readonly\n     * @property {Scheduler.model.DependencyBaseModel[]}\n     * @category Dependencies\n     */\n    get predecessors() {\n        return [...this.incomingDeps ?? []];\n    }\n\n    /**\n     * Returns all successor dependencies of this event\n     *\n     * @readonly\n     * @property {Scheduler.model.DependencyBaseModel[]}\n     * @category Dependencies\n     *\n     */\n    get successors() {\n        return [...this.outgoingDeps ?? []];\n    }\n\n    get dependencies() {\n        // Dependency feature listens for assignment changes pre commit, thus we risk deps not being set up yet\n        return [...this.incomingDeps ?? [], ...this.outgoingDeps ?? []];\n    }\n\n    //endregion\n\n    normalize() {\n        // Normalization handled by Engine\n    }\n\n    inSetNormalize() {\n        // Normalization handled by Engine\n    }\n\n    /**\n     * The \"main\" event this model is an occurrence of.\n     * Returns `null` for non-occurrences.\n     * @property {Scheduler.model.EventModel}\n     * @alias #Scheduler.model.mixin.RecurringTimeSpan#property-recurringTimeSpan\n     * @readonly\n     * @category Scheduling\n     */\n    get recurringEvent() {\n        return this.recurringTimeSpan;\n    }\n\n    /**\n     * Flag which indicates that this event is an interday event. This means that it spans\n     * an entire day or multiple days.\n     *\n     * This is essentially used by the Calendar package to determine if an event should\n     * go into the all day zone of a DayView.\n     *\n     * @property {Boolean}\n     * @readonly\n     * @category Scheduling\n     */\n    get isInterDay() {\n        const { durationMS } = this;\n\n        // A full day (86400000 or more) marks as it as interDay,\n        // which means it belongs in the all day row of a Calendar DayView\n        if (durationMS >= oneDayMS || (!durationMS && this.allDay)) {\n            return true;\n        }\n\n        // Working out whether it crosses midnight is a little more difficult\n        const\n            {\n                endDate,\n                startDate\n            } = this,\n            eventStartMidnight = DH.clearTime(startDate);\n\n        // If either is null or NaN, we have to answer falsy\n        if (startDate && endDate) {\n            eventStartMidnight.setDate(eventStartMidnight.getDate() + 1);\n\n            // If the endDate is past midnight, it's interDay and goes in the all day row of a Calendar DayView\n            return (endDate || DH.add(startDate, durationMS)) > eventStartMidnight;\n        }\n    }\n\n    //region All day statics\n\n    static getAllDayStartDate(dt) {\n        if (dt && dt.isEvent) {\n            dt = dt.get('startDate');\n        }\n\n        if (dt) {\n            dt = DH.clearTime(dt, true);\n        }\n\n        return dt;\n    }\n\n    static getAllDayEndDate(dt) {\n        if (dt && dt.isEvent) {\n            dt = dt.get('endDate');\n        }\n\n        if (dt && (dt.getHours() > 0 || dt.getMinutes() > 0 || dt.getSeconds() > 0 || dt.getMilliseconds() > 0)) {\n            dt = DH.getNext(dt, 'd', 1);\n        }\n\n        return dt;\n    }\n\n    static getAllDayDisplayStartDate(dt) {\n        if (dt && dt.isEvent) {\n            dt = dt.get('startDate');\n        }\n\n        return DH.clearTime(dt, true);\n    }\n\n    static getAllDayDisplayEndDate(startDate, endDate) {\n        if (startDate && startDate.isEvent) {\n            endDate   = startDate.get('endDate');\n            startDate = startDate.get('startDate');\n        }\n\n        if (endDate) {\n            startDate = this.constructor.getAllDayDisplayStartDate(startDate);\n\n            // If date falls on start of the day - subtract one day to show end date correctly\n            // e.g. event starts on 2017-01-01 00:00 and ends on 2017-01-02 00:00, editor should show\n            // 2017-01-01 for both start and end\n            if (DH.clearTime(endDate, true).valueOf() === endDate.valueOf()) {\n                endDate = DH.add(endDate, DH.DAY, -1);\n            }\n            else if (startDate.valueOf() !== endDate.valueOf()) {\n                endDate = DH.clearTime(endDate, true);\n            }\n        }\n\n        return endDate;\n    }\n\n    /**\n     * Defines if the given event field should be manually editable in UI.\n     * You can override this method to provide your own logic.\n     *\n     * By default, the method defines {@link #field-endDate}, {@link #field-duration} and {@link #property-fullDuration}\n     * fields editable for leaf events only (in case the event is part of a tree store) and all other fields as editable.\n     *\n     * @param {String} fieldName Name of the field\n     * @returns {Boolean} Returns `true` if the field is editable, `false` if it is not and `undefined` if the event has\n     * no such field.\n     * @category Editing\n     */\n    isEditable(fieldName) {\n        switch (fieldName) {\n            // end/duration is allowed to edit for leafs\n            case 'endDate' :\n            case 'duration' :\n            case 'fullDuration' :\n                return this.isLeaf;\n        }\n\n        return super.isEditable(fieldName);\n    }\n\n    //endregion\n};\n","import TimeSpan from './TimeSpan.js';\nimport RecurringTimeSpan from './mixin/RecurringTimeSpan.js';\nimport EventModelMixin from './mixin/EventModelMixin.js';\nimport PartOfProject from '../data/mixin/PartOfProject.js';\n/* <remove-on-release> */\nimport { SchedulerBasicEvent } from '../../Engine/quark/model/scheduler_basic/SchedulerBasicEvent.js';\n/* </remove-on-release> */\nimport { SchedulerCoreEvent } from '../../Engine/quark/model/scheduler_core/SchedulerCoreEvent.js';\n\nconst EngineMixin = /* <remove-on-release> */globalThis.bryntum?.useBasicEngine ? SchedulerBasicEvent : /* </remove-on-release> */SchedulerCoreEvent;\n\n/**\n * @module Scheduler/model/EventModel\n */\n\n/**\n * This class represent a single event in your schedule, usually added to a {@link Scheduler.data.EventStore}.\n *\n * It is a subclass of the {@link Scheduler.model.TimeSpan}, which is in turn subclass of {@link Core.data.Model}.\n * Please refer to documentation of that class to become familiar with the base interface of the event.\n *\n * ## Async date calculations\n *\n * A record created from an {@link Scheduler/model/EventModel} is normally part of an {@link Scheduler.data.EventStore},\n * which in turn is part of a project. When dates or the duration of an event is changed, the project performs async calculations\n * to normalize the other fields.\n * For example if {@link #field-duration} is changed, it will calculate {@link #field-endDate}.\n *\n * As a result of this being an async operation, the values of other fields are not guaranteed to be up to date\n * immediately after a change. To ensure data is up to date, await the calculations to finish.\n *\n * For example, {@link #field-endDate} is not up to date after this operation:\n *\n * ```javascript\n * eventRecord.duration = 5;\n * // endDate not yet calculated\n * ```\n *\n * But if calculations are awaited it is up to date:\n *\n * ```javascript\n * eventRecord.duration = 5;\n * await eventRecord.project.commitAsync();\n * // endDate is calculated\n * ```\n *\n * As an alternative, you can also use `setAsync()` to trigger calculations directly after the change:\n *\n * ```javascript\n * await eventRecord.setAsync({ duration : 5});\n * // endDate is calculated\n * ```\n *\n * ## Subclassing the Event model class\n * The Event model has a few predefined fields as seen below. If you want to add new fields or change the options for the existing fields,\n * you can do that by subclassing this class (see example below).\n *\n * ```\n * class MyEvent extends EventModel {\n *\n *     static get fields() {\n *         return [\n *            // Add new field\n *            { name: 'myField', type : 'number', defaultValue : 0 }\n *         ];\n *     },\n *\n *     myCheckMethod() {\n *         return this.myField > 0\n *     },\n *\n *     ...\n * });\n * ```\n * If you in your data want to use other names for the {@link #field-startDate}, {@link #field-endDate}, {@link #field-resourceId} and name fields you can configure\n * them as seen below:\n * ```\n * class MyEvent extends EventModel {\n *\n *     static get fields() {\n *         return [\n *            { name: 'startDate', dataSource : 'taskStart' },\n *            { name: 'endDate', dataSource : 'taskEnd', format: 'YYYY-MM-DD' },\n *            { name: 'resourceId', dataSource : 'userId' },\n *            { name: 'name', dataSource : 'taskTitle' },\n *         ];\n *     },\n *     ...\n * });\n * ```\n *\n * Please refer to {@link Core.data.Model} for additional details.\n *\n * @extends Scheduler/model/TimeSpan\n * @mixes Scheduler/model/mixin/RecurringTimeSpan\n * @mixes Scheduler/model/mixin/EventModelMixin\n */\nexport default class EventModel extends EngineMixin.derive(TimeSpan).mixin(\n    RecurringTimeSpan,\n    PartOfProject,\n    EventModelMixin\n) {\n    static get $name() {\n        return 'EventModel';\n    }\n}\n\nEventModel.exposeProperties();\n","import AjaxStore from '../../Core/data/AjaxStore.js';\nimport EventStoreMixin from './mixin/EventStoreMixin.js';\nimport GetEventsMixin from './mixin/GetEventsMixin.js';\nimport DayIndexMixin from './mixin/DayIndexMixin.js';\nimport SharedEventStoreMixin from './mixin/SharedEventStoreMixin.js';\nimport RecurringEventsMixin from './mixin/RecurringEventsMixin.js';\nimport EventModel from '../model/EventModel.js';\nimport PartOfProject from './mixin/PartOfProject.js';\n/* <remove-on-release> */\nimport { ChronoEventStoreMixin } from '../../Engine/quark/store/ChronoEventStoreMixin.js';\n/* </remove-on-release> */\nimport { CoreEventStoreMixin } from '../../Engine/quark/store/CoreEventStoreMixin.js';\nimport PartOfBaseProject from './mixin/PartOfBaseProject.js';\n\nconst EngineMixin = /* <remove-on-release> */globalThis.bryntum?.useBasicEngine ? PartOfBaseProject(ChronoEventStoreMixin.derive(AjaxStore)) : /* </remove-on-release> */PartOfProject(CoreEventStoreMixin.derive(AjaxStore));\n\n/**\n * @module Scheduler/data/EventStore\n */\n\n/**\n * A store holding all the {@link Scheduler.model.EventModel events} to be rendered into a {@link Scheduler.view.Scheduler Scheduler}.\n *\n * This store only accepts a model class inheriting from {@link Scheduler.model.EventModel}.\n *\n * An EventStore is usually connected to a project, which binds it to other related stores (AssignmentStore,\n * ResourceStore and DependencyStore). The project also handles normalization/calculation of the data on the records in\n * the store. For example if a record is added with a `startDate` and an `endDate`, it will calculate the `duration`.\n *\n * The calculations happens async, records are not guaranteed to have up to date data until they are finished. To be\n * certain that calculations have finished, call `await project.commitAsync()` after store actions. Or use one of the\n * `xxAsync` functions, such as `loadDataAsync()`.\n *\n * Using `commitAsync()`:\n *\n * ```javascript\n * eventStore.data = [{ startDate, endDate }, ...];\n *\n * // duration of the record is not yet calculated\n *\n * await eventStore.project.commitAsync();\n *\n * // now it is\n * ```\n *\n * Using `loadDataAsync()`:\n *\n * ```javascript\n * await eventStore.loadDataAsync([{ startDate, endDate }, ...]);\n *\n * // duration is calculated\n * ```\n *\n * ## Using recurring events\n * When recurring events are in the database, **all recurring event definitions** which started before\n * the requested start date, and have not yet finished recurring MUST be loaded into the EventStore.\n *\n * Only the **base** recurring event **definitions** are stored in the EventStore. You do not\n * need to calculate the future occurrence dates of these events. This is all handled by the EventStore.\n *\n * When asked to yield a set of events for a certain date range for creating a UI through\n * {@link #function-getEvents}, the EventStore *automatically* interpolates any occurrences of\n * recurring events into the results. They do not occupy slots in the EventStore for every date\n * in their repetition range (that would be very inefficient, and *might* be infinite).\n *\n * @mixes Scheduler/data/mixin/PartOfProject\n * @mixes Scheduler/data/mixin/SharedEventStoreMixin\n * @mixes Scheduler/data/mixin/EventStoreMixin\n * @mixes Scheduler/data/mixin/RecurringEventsMixin\n * @mixes Scheduler/data/mixin/GetEventsMixin\n * @extends Core/data/AjaxStore\n */\nexport default class EventStore extends EngineMixin.mixin(\n    SharedEventStoreMixin,\n    RecurringEventsMixin,\n    EventStoreMixin,\n    DayIndexMixin,\n    GetEventsMixin\n) {\n\n    static $name = 'EventStore';\n\n    static get defaultConfig() {\n        return {\n            /**\n             * Class used to represent records\n             * @config {Scheduler.model.EventModel}\n             * @typings {typeof EventModel}\n             * @default\n             * @category Common\n             */\n            modelClass : EventModel\n        };\n    }\n}\n","import DateHelper from '../../Core/helper/DateHelper.js';\nimport Model from '../../Core/data/Model.js';\nimport Duration from '../../Core/data/Duration.js';\n\n/**\n * @module Scheduler/model/DependencyBaseModel\n */\n\nconst canonicalDependencyTypes = [\n    'SS',\n    'SF',\n    'FS',\n    'FF'\n];\n\n/**\n * Base class used for both Scheduler and Gantt. Not intended to be used directly\n *\n * @extends Core/data/Model\n */\nexport default class DependencyBaseModel extends Model {\n    static get $name() {\n        return 'DependencyBaseModel';\n    }\n\n    /**\n     * Set value for the specified field(s), triggering engine calculations immediately. See\n     * {@link Core.data.Model#function-set Model#set()} for arguments.\n     **\n     * ```javascript\n     * dependency.set('from', 2);\n     * // dependency.fromEvent is not yet up to date\n     *\n     * await dependency.setAsync('from', 2);\n     * // dependency.fromEvent is up to date\n     * ```\n     *\n     * @param {String|Object} field The field to set value for, or an object with multiple values to set in one call\n     * @param {*} value Value to set\n     * @param {Boolean} [silent=false] Set to true to not trigger events\n     * automatically.\n     * @function setAsync\n     * @category Editing\n     * @async\n     */\n\n    //region Fields\n\n    /**\n     * An enumerable object, containing names for the dependency types integer constants.\n     * - 0 StartToStart\n     * - 1 StartToEnd\n     * - 2 EndToStart\n     * - 3 EndToEnd\n     * @property {Object}\n     * @readonly\n     * @category Dependency\n     */\n    static get Type() {\n        return {\n            StartToStart : 0,\n            StartToEnd   : 1,\n            EndToStart   : 2,\n            EndToEnd     : 3\n        };\n    }\n\n    static get fields() {\n        return [\n            // 3 mandatory fields\n\n            /**\n             * From event, id of source event\n             * @field {String|Number} from\n             * @category Dependency\n             */\n            { name : 'from' },\n\n            /**\n             * To event, id of target event\n             * @field {String|Number} to\n             * @category Dependency\n             */\n            { name : 'to' },\n\n            /**\n             * Dependency type, see static property {@link #property-Type-static}\n             * @field {Number} type=2\n             * @category Dependency\n             */\n            { name : 'type', type : 'int', defaultValue : 2 },\n\n            /**\n             * CSS class to apply to lines drawn for the dependency\n             * @field {String} cls\n             * @category Styling\n             */\n            { name : 'cls', defaultValue : '' },\n\n            /**\n             * Bidirectional, drawn with arrows in both directions\n             * @field {Boolean} bidirectional\n             * @category Dependency\n             */\n            { name : 'bidirectional', type : 'boolean' },\n\n            /**\n             * Start side on source (top, left, bottom, right)\n             * @field {'top'|'left'|'bottom'|'right'} fromSide\n             * @category Dependency\n             */\n            { name : 'fromSide', type : 'string' },\n\n            /**\n             * End side on target (top, left, bottom, right)\n             * @field {'top'|'left'|'bottom'|'right'} toSide\n             * @category Dependency\n             */\n            { name : 'toSide', type : 'string' },\n\n            /**\n             * The magnitude of this dependency's lag (the number of units).\n             * @field {Number} lag\n             * @category Dependency\n             */\n            { name : 'lag', type : 'number', allowNull : true, defaultValue : 0 },\n\n            /**\n             * The units of this dependency's lag, defaults to \"d\" (days). Valid values are:\n             *\n             * - \"ms\" (milliseconds)\n             * - \"s\" (seconds)\n             * - \"m\" (minutes)\n             * - \"h\" (hours)\n             * - \"d\" (days)\n             * - \"w\" (weeks)\n             * - \"M\" (months)\n             * - \"y\" (years)\n             *\n             * This field is readonly after creation, to change `lagUnit` use {@link #function-setLag setLag()}.\n             * @field {'ms'|'s'|'m'|'h'|'d'|'w'|'M'|'y'} lagUnit\n             * @category Dependency\n             * @readonly\n             */\n            {\n                name         : 'lagUnit',\n                type         : 'string',\n                defaultValue : 'd'\n            },\n\n            { name : 'highlighted', persist : false, internal : true }\n        ];\n    }\n\n    // fromEvent/toEvent defined in CoreDependencyMixin in engine\n\n    /**\n     * Gets/sets the source event of the dependency.\n     *\n     * Accepts multiple formats but always returns an {@link Scheduler.model.EventModel}.\n     *\n     * **NOTE:** This is not a proper field but rather an alias, it will be serialized but cannot be remapped. If you\n     * need to remap, consider using {@link #field-from} instead.\n     *\n     * @field {Scheduler.model.EventModel} fromEvent\n     * @accepts {String|Number|Scheduler.model.EventModel}\n     * @category Dependency\n     */\n\n    /**\n     * Gets/sets the target event of the dependency.\n     *\n     * Accepts multiple formats but always returns an {@link Scheduler.model.EventModel}.\n     *\n     * **NOTE:** This is not a proper field but rather an alias, it will be serialized but cannot be remapped. If you\n     * need to remap, consider using {@link #field-to} instead.\n     *\n     * @field {Scheduler.model.EventModel} toEvent\n     * @accepts {String|Number|Scheduler.model.EventModel}\n     * @category Dependency\n     */\n\n    //endregion\n\n    //region Init\n\n    construct(data) {\n        const\n            from = data[this.fieldMap.from.dataSource],\n            to   = data[this.fieldMap.to.dataSource];\n\n        // Engine expects fromEvent and toEvent, not from and to. We need to support both\n        if (from != null) {\n            data.fromEvent = from;\n        }\n\n        if (to != null) {\n            data.toEvent = to;\n        }\n\n        super.construct(...arguments);\n    }\n\n    //endregion\n\n    get eventStore() {\n        return this.eventStore || this.unjoinedStores[0]?.eventStore;\n    }\n\n    set from(value) {\n        const { fromEvent } = this;\n\n        // When assigning a new id to an event, it will update the eventId of the assignment. But the assignments\n        // event is still the same so we need to announce here\n        if (fromEvent?.isModel && fromEvent.id === value) {\n            this.set('from', value);\n        }\n        else {\n            this.fromEvent = value;\n        }\n    }\n\n    get from() {\n        return this.get('from');\n    }\n\n    set to(value) {\n        const { toEvent } = this;\n\n        // When assigning a new id to an event, it will update the eventId of the assignment. But the assignments\n        // event is still the same so we need to announce here\n        if (toEvent?.isModel && toEvent.id === value) {\n            this.set('to', value);\n        }\n        else {\n            this.toEvent = value;\n        }\n    }\n\n    get to() {\n        return this.get('to');\n    }\n\n    /**\n     * Alias to dependency type, but when set resets {@link #field-fromSide} & {@link #field-toSide} to null as well.\n     *\n     * @property {Number}\n     * @category Dependency\n     */\n    get hardType() {\n        return this.getHardType();\n    }\n\n    set hardType(type) {\n        this.setHardType(type);\n    }\n\n    /**\n     * Returns dependency hard type, see {@link #property-hardType}.\n     *\n     * @returns {Number}\n     * @category Dependency\n     */\n    getHardType() {\n        return this.get('type');\n    }\n\n    /**\n     * Sets dependency {@link #field-type} and resets {@link #field-fromSide} and {@link #field-toSide} to null.\n     *\n     * @param {Number} type\n     * @category Dependency\n     */\n    setHardType(type) {\n        let result;\n\n        if (type !== this.hardType) {\n            result = this.set({\n                type,\n                fromSide : null,\n                toSide   : null\n            });\n        }\n\n        return result;\n    }\n\n    get lag() {\n        return this.get('lag');\n    }\n\n    set lag(lag) {\n        this.setLag(lag);\n    }\n\n    /**\n     * Sets lag and lagUnit in one go. Only allowed way to change lagUnit, the lagUnit field is readonly after creation\n     * @param {Number|String|Object} lag The lag value. May be just a numeric magnitude, or a full string descriptor eg '1d'\n     * @param {'ms'|'s'|'m'|'h'|'d'|'w'|'M'|'y'} [lagUnit] Unit for numeric lag value, see\n     * {@link #field-lagUnit} for valid values\n     * @category Dependency\n     */\n    setLag(lag, lagUnit = this.lagUnit) {\n        // Either they're only setting the magnitude\n        // or, if it's a string, parse the full duration.\n        if (arguments.length === 1) {\n            if (typeof lag === 'number') {\n                this.lag = lag;\n            }\n            else {\n                //<debug>\n                if (typeof lag !== 'string') {\n                    throw new Error('Depenedency#setLag accepts either numeric magnitude, or a duration string');\n                }\n                //</debug>\n                lag = DateHelper.parseDuration(lag);\n                this.set({\n                    lag     : lag.magnitude,\n                    lagUnit : lag.unit\n                });\n            }\n            return;\n        }\n\n        // Must be a number\n        lag = parseFloat(lag);\n\n        this.set({\n            lag,\n            lagUnit\n        });\n    }\n\n    getLag() {\n        if (this.lag) {\n            return `${this.lag < 0 ? '-' : '+'}${Math.abs(this.lag)}${DateHelper.getShortNameOfUnit(this.lagUnit)}`;\n        }\n        return '';\n    }\n\n    /**\n     * Property which encapsulates the lag's magnitude and units. An object which contains two properties:\n     * @property {Core.data.Duration}\n     * @property {Number} fullLag.magnitude The magnitude of the duration\n     * @property {'ms'|'s'|'m'|'h'|'d'|'w'|'M'|'y'} fullLag.unit The unit in which the duration is measured, eg\n     * `'d'` for days\n     * @category Dependency\n     */\n    get fullLag() {\n        return new Duration({\n            unit      : this.lagUnit,\n            magnitude : this.lag\n        });\n    }\n\n    set fullLag(lag) {\n        if (typeof lag === 'string') {\n            this.setLag(lag);\n        }\n        else {\n            this.setLag(lag.magnitude, lag.unit);\n        }\n    }\n\n    /**\n     * Returns true if the linked events have been persisted (e.g. neither of them are 'phantoms')\n     *\n     * @property {Boolean}\n     * @readonly\n     * @category Editing\n     */\n    get isPersistable() {\n        const\n            me = this,\n            { stores, unjoinedStores } = me,\n            store = stores[0];\n\n        let result;\n\n        if (store) {\n            const\n                { fromEvent, toEvent } = me,\n                crudManager            = store.crudManager;\n\n            // if crud manager is used it can deal with phantom source/target since it persists all records in one batch\n            // if no crud manager used we have to wait till source/target are persisted\n            result = fromEvent && (crudManager || !fromEvent.hasGeneratedId) && toEvent && (crudManager || !toEvent.hasGeneratedId);\n        }\n        else {\n            result = Boolean(unjoinedStores[0]);\n        }\n\n        return result && super.isPersistable;\n    }\n\n    getDateRange() {\n        const { fromEvent, toEvent } = this;\n\n        if (fromEvent?.isScheduled && toEvent?.isScheduled) {\n            const Type = DependencyBaseModel.Type;\n\n            let sourceDate,\n                targetDate;\n\n            switch (this.type) {\n                case Type.StartToStart:\n                    sourceDate = fromEvent.startDateMS;\n                    targetDate = toEvent.startDateMS;\n                    break;\n\n                case Type.StartToEnd:\n                    sourceDate = fromEvent.startDateMS;\n                    targetDate = toEvent.endDateMS;\n                    break;\n\n                case Type.EndToEnd:\n                    sourceDate = fromEvent.endDateMS;\n                    targetDate = toEvent.endDateMS;\n                    break;\n\n                case Type.EndToStart:\n                    sourceDate = fromEvent.endDateMS;\n                    targetDate = toEvent.startDateMS;\n                    break;\n\n                default:\n                    throw new Error('Invalid dependency type: ' + this.type);\n            }\n\n            return {\n                start : Math.min(sourceDate, targetDate),\n                end   : Math.max(sourceDate, targetDate)\n            };\n        }\n\n        return null;\n    }\n\n    /**\n     * Applies given CSS class to dependency, the value doesn't persist\n     *\n     * @param {String} cls\n     * @category Dependency\n     */\n    highlight(cls) {\n        const classes = this.highlighted?.split(' ') ?? [];\n\n        if (!classes.includes(cls)) {\n            this.highlighted = classes.concat(cls).join(' ');\n        }\n    }\n\n    /**\n     * Removes given CSS class from dependency if applied, the value doesn't persist\n     *\n     * @param {String} cls\n     * @category Dependency\n     */\n    unhighlight(cls) {\n        const { highlighted } = this;\n\n        if (highlighted) {\n            const\n                classes = highlighted.split(' '),\n                index   = classes.indexOf(cls);\n\n            if (index >= 0) {\n                classes.splice(index, 1);\n                this.highlighted = classes.join(' ');\n            }\n        }\n    }\n\n    /**\n     * Checks if the given CSS class is applied to dependency.\n     *\n     * @param {String} cls\n     * @returns {Boolean}\n     * @category Dependency\n     */\n    isHighlightedWith(cls) {\n        return this.highlighted && this.highlighted.split(' ').includes(cls);\n    }\n\n    getConnectorString(raw) {\n        const rawValue = canonicalDependencyTypes[this.type];\n\n        if (raw) {\n            return rawValue;\n        }\n\n        // FS => empty string; it's the default\n        if (this.type === DependencyBaseModel.Type.EndToStart) {\n            return '';\n        }\n\n        return rawValue;\n    }\n\n    // getConnectorStringFromType(type, raw) {\n    //     const rawValue = canonicalDependencyTypes[type];\n    //\n    //     if (raw) {\n    //         return rawValue;\n    //     }\n    //\n    //     // FS => empty string; it's the default\n    //     if (type === DependencyBaseModel.Type.EndToStart) {\n    //         return '';\n    //     }\n    //\n    //     const locale = LocaleManager.locale;\n    //\n    //     // See if there is a local version of SS, SF or FF\n    //     if (locale) {\n    //         const localized = locale.Scheduler && locale.Scheduler[rawValue];\n    //         if (localized) {\n    //             return localized;\n    //         }\n    //     }\n    //\n    //     return rawValue;\n    // }\n\n    // getConnectorString(raw) {\n    //     return this.getConnectorStringFromType(this.type);\n    // }\n\n    // * getConnectorStringGenerator(raw) {\n    //     return this.getConnectorStringFromType(yield this.$.type);\n    // }\n\n    toString() {\n        return `${this.from}${this.getConnectorString()}${this.getLag()}`;\n    }\n\n    /**\n     * Returns `true` if the dependency is valid. It is considered valid if it has a valid type and both from and to\n     * events are set and pointing to different events.\n     *\n     * @property {Boolean}\n     * @typings ignore\n     * @category Editing\n     */\n    get isValid() {\n        const { fromEvent, toEvent, type } = this;\n\n        return typeof type === 'number' && fromEvent && toEvent && fromEvent !== toEvent;\n    }\n\n    get fromEventName() {\n        return this.fromEvent?.name || '';\n    }\n\n    get toEventName() {\n        return this.toEvent?.name || '';\n    }\n\n    //region STM hooks\n\n    shouldRecordFieldChange(fieldName, oldValue, newValue) {\n        if (!super.shouldRecordFieldChange(fieldName, oldValue, newValue)) {\n            return false;\n        }\n\n        if (fieldName === 'from' || fieldName === 'to' || fieldName === 'fromEvent' || fieldName === 'toEvent') {\n\n            const eventStore = this.project?.eventStore;\n\n            if (eventStore && eventStore.oldIdMap[oldValue] === eventStore.getById(newValue)) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    //endregion\n}\n\nDependencyBaseModel.exposeProperties();\n","import DependencyBaseModel from './DependencyBaseModel.js';\nimport PartOfProject from '../data/mixin/PartOfProject.js';\n/* <remove-on-release> */\nimport { BaseDependencyMixin } from '../../Engine/quark/model/scheduler_basic/BaseDependencyMixin.js';\n/* </remove-on-release> */\nimport { CoreDependencyMixin } from '../../Engine/quark/model/scheduler_core/CoreDependencyMixin.js';\n\nconst EngineMixin = /* <remove-on-release> */globalThis.bryntum?.useBasicEngine ? BaseDependencyMixin : /* </remove-on-release> */CoreDependencyMixin;\n\n/**\n * @module Scheduler/model/DependencyModel\n */\n\n/**\n * This model represents a dependency between two events, usually added to a {@link Scheduler.data.DependencyStore}.\n *\n * It is a subclass of the {@link Scheduler.model.DependencyBaseModel} class, which in its turn subclasses\n * {@link Core.data.Model}. Please refer to documentation of those classes to become familiar with the base interface of\n * this class.\n *\n * ## Fields and references\n *\n * A Dependency has a few predefined fields, see Fields below.  The name of any fields data source can be customized in\n * the subclass, see the example below. Please also refer to {@link Core.data.Model} for details.\n *\n * ```javascript\n * class MyDependency extends DependencyModel {\n *   static get fields() {\n *     return [\n *       { name: 'to', dataSource: 'targetId' },\n *       { name: 'from', dataSource: 'sourceId' }\n *     ]);\n *   }\n * }\n * ```\n *\n * After load and project normalization, these references are accessible (assuming their respective stores are loaded):\n * - `fromEvent` - The event on the start side of the dependency\n * - `toEvent` - The event on the end side of the dependency\n *\n * ## Async resolving of references\n *\n * As described above, a dependency has links to events. These references are populated async, using the calculation\n * engine of the project that the resource via its store is a part of. Because of this asyncness, references cannot be\n * used immediately after modifications:\n *\n * ```javascript\n * dependency.from = 2;\n * // dependency.fromEvent is not yet up to date\n * ```\n *\n * To make sure references are updated, wait for calculations to finish:\n *\n * ```javascript\n * dependency.from = 2;\n * await dependency.project.commitAsync();\n * // dependency.fromEvent is up to date\n * ```\n *\n * As an alternative, you can also use `setAsync()` to trigger calculations directly after the change:\n *\n * ```javascript\n * await dependency.setAsync({ from : 2});\n * // dependency.fromEvent is up to date\n * ```\n *\n * @extends Scheduler/model/DependencyBaseModel\n * @uninherit Core/data/mixin/TreeNode\n */\nexport default class DependencyModel extends PartOfProject(EngineMixin.derive(DependencyBaseModel)) {\n    static get $name() {\n        return 'DependencyModel';\n    }\n\n    // Determines the type of dependency based on fromSide and toSide\n    getTypeFromSides(fromSide, toSide, rtl) {\n        const\n            types     = DependencyBaseModel.Type,\n            startSide = rtl ? 'right' : 'left',\n            endSide   = rtl ? 'left' : 'right';\n\n        if (fromSide === startSide) {\n            return (toSide === startSide) ? types.StartToStart : types.StartToEnd;\n        }\n\n        return (toSide === endSide) ? types.EndToEnd : types.EndToStart;\n    }\n}\n\nDependencyModel.exposeProperties();\n","import ArrayHelper from '../../../Core/helper/ArrayHelper.js';\nimport Model from '../../../Core/data/Model.js';\n\n/**\n * @module Scheduler/data/mixin/DependencyStoreMixin\n */\n\n/**\n * This is a mixin, containing functionality related to managing dependencies.\n *\n * It is consumed by the regular {@link Scheduler.data.DependencyStore} class and Scheduler Pros counterpart.\n *\n * @mixin\n */\nexport default Target => class DependencyStoreMixin extends Target {\n    static get $name() {\n        return 'DependencyStoreMixin';\n    }\n\n    /**\n     * Add dependencies to the store.\n     *\n     * NOTE: References (fromEvent, toEvent) on the dependencies are determined async by a calculation engine. Thus they\n     * cannot be directly accessed after using this function.\n     *\n     * For example:\n     *\n     * ```javascript\n     * const [dependency] = dependencyStore.add({ from, to });\n     * // dependency.fromEvent is not yet available\n     * ```\n     *\n     * To guarantee references are set up, wait for calculations for finish:\n     *\n     * ```javascript\n     * const [dependency] = dependencyStore.add({ from, to });\n     * await dependencyStore.project.commitAsync();\n     * // dependency.fromEvent is available (assuming EventStore is loaded and so on)\n     * ```\n     *\n     * Alternatively use `addAsync()` instead:\n     *\n     * ```javascript\n     * const [dependency] = await dependencyStore.addAsync({ from, to });\n     * // dependency.fromEvent is available (assuming EventStore is loaded and so on)\n     * ```\n     *\n     * @param {Scheduler.model.DependencyModel|Scheduler.model.DependencyModel[]|DependencyModelConfig|DependencyModelConfig[]} records\n     * Array of records/data or a single record/data to add to store\n     * @param {Boolean} [silent] Specify `true` to suppress events\n     * @returns {Scheduler.model.DependencyModel[]} Added records\n     * @function add\n     * @category CRUD\n     */\n\n    /**\n     * Add dependencies to the store and triggers calculations directly after. Await this function to have up to date\n     * references on the added dependencies.\n     *\n     * ```javascript\n     * const [dependency] = await dependencyStore.addAsync({ from, to });\n     * // dependency.fromEvent is available (assuming EventStore is loaded and so on)\n     * ```\n     *\n     * @param {Scheduler.model.DependencyModel|Scheduler.model.DependencyModel[]|DependencyModelConfig|DependencyModelConfig[]} records\n     * Array of records/data or a single record/data to add to store\n     * @param {Boolean} [silent] Specify `true` to suppress events\n     * @returns {Scheduler.model.DependencyModel[]} Added records\n     * @function addAsync\n     * @category CRUD\n     * @async\n     */\n\n    /**\n     * Applies a new dataset to the DependencyStore. Use it to plug externally fetched data into the store.\n     *\n     * NOTE: References (fromEvent, toEvent) on the dependencies are determined async by a calculation engine. Thus\n     * they cannot be directly accessed after assigning the new dataset.\n     *\n     * For example:\n     *\n     * ```javascript\n     * dependencyStore.data = [{ from, to }];\n     * // dependencyStore.first.fromEvent is not yet available\n     * ```\n     *\n     * To guarantee references are available, wait for calculations for finish:\n     *\n     * ```javascript\n     * dependencyStore.data = [{ from, to }];\n     * await dependencyStore.project.commitAsync();\n     * // dependencyStore.first.fromEvent is available\n     * ```\n     *\n     * Alternatively use `loadDataAsync()` instead:\n     *\n     * ```javascript\n     * await dependencyStore.loadDataAsync([{ from, to }]);\n     * // dependencyStore.first.fromEvent is available\n     * ```\n     *\n     * @member {DependencyModelConfig[]} data\n     * @category Records\n     */\n\n    /**\n     * Applies a new dataset to the DependencyStore and triggers calculations directly after. Use it to plug externally\n     * fetched data into the store.\n     *\n     * ```javascript\n     * await dependencyStore.loadDataAsync([{ from, to }]);\n     * // dependencyStore.first.fromEvent is available\n     * ```\n     *\n     * @param {DependencyModelConfig[]} data Array of DependencyModel data objects\n     * @function loadDataAsync\n     * @category CRUD\n     * @async\n     */\n\n    static get defaultConfig() {\n        return {\n            /**\n             * CrudManager must load stores in the correct order. Lowest first.\n             * @private\n             */\n            loadPriority : 400,\n            /**\n             * CrudManager must sync stores in the correct order. Lowest first.\n             * @private\n             */\n            syncPriority : 400,\n\n            storeId : 'dependencies'\n        };\n    }\n\n    // TODO: document\n    reduceEventDependencies(event, reduceFn, result, flat = true, depsGetterFn) {\n        depsGetterFn = depsGetterFn || (event => this.getEventDependencies(event));\n\n        event = ArrayHelper.asArray(event);\n\n        event.reduce((result, event) => {\n            if (event.children && !flat) {\n                event.traverse(evt => {\n                    result = depsGetterFn(evt).reduce(reduceFn, result);\n                });\n            }\n            else {\n                result = depsGetterFn(event).reduce(reduceFn, result);\n            }\n        }, result);\n\n        return result;\n    }\n\n    // TODO: document\n    mapEventDependencies(event, fn, filterFn, flat, depsGetterFn) {\n        return this.reduceEventDependencies(event, (result, dependency) => {\n            filterFn(dependency) && result.push(dependency);\n            return result;\n        }, [], flat, depsGetterFn);\n    }\n\n    // TODO: document\n    mapEventPredecessors(event, fn, filterFn, flat) {\n        return this.reduceEventPredecessors(event, (result, dependency) => {\n            filterFn(dependency) && result.push(dependency);\n            return result;\n        }, [], flat);\n    }\n\n    // TODO: document\n    mapEventSuccessors(event, fn, filterFn, flat) {\n        return this.reduceEventSuccessors(event, (result, dependency) => {\n            filterFn(dependency) && result.push(dependency);\n            return result;\n        }, [], flat);\n    }\n\n    /**\n     * Returns all dependencies for a certain event (both incoming and outgoing)\n     *\n     * @param {Scheduler.model.EventModel} event\n     * @returns {Scheduler.model.DependencyModel[]}\n     */\n    getEventDependencies(event) {\n        return [].concat(event.predecessors || [], event.successors || []);\n    }\n\n    // TODO: document\n    removeEventDependencies(event) {\n        this.remove(this.getEventDependencies(event));\n    }\n\n    // TODO: document\n    removeEventPredecessors(event) {\n        this.remove(event.predecessors);\n    }\n\n    // TODO: document\n    removeEventSuccessors(event, flat) {\n        this.remove(event.successors);\n    }\n\n    getBySourceTargetId(key) {\n        //TODO: in original code this uses a keymap\n        return this.records.find(r =>\n            key == this.constructor.makeDependencySourceTargetCompositeKey(r.from, r.to)\n        );\n    }\n\n    /**\n     * Returns dependency model instance linking tasks with given ids. The dependency can be forward (from 1st\n     * task to 2nd) or backward (from 2nd to 1st).\n     *\n     * @param {Scheduler.model.EventModel|String} sourceEvent 1st event\n     * @param {Scheduler.model.EventModel|String} targetEvent 2nd event\n     * @returns {Scheduler.model.DependencyModel}\n     */\n    getDependencyForSourceAndTargetEvents(sourceEvent, targetEvent) {\n        sourceEvent = Model.asId(sourceEvent);\n        targetEvent = Model.asId(targetEvent);\n\n        return this.getBySourceTargetId(this.constructor.makeDependencySourceTargetCompositeKey(sourceEvent, targetEvent));\n    }\n\n    /**\n     * Returns a dependency model instance linking given events if such dependency exists in the store.\n     * The dependency can be forward (from 1st event to 2nd) or backward (from 2nd to 1st).\n     *\n     * @param {Scheduler.model.EventModel|String} sourceEvent\n     * @param {Scheduler.model.EventModel|String} targetEvent\n     * @returns {Scheduler.model.DependencyModel}\n     */\n    getEventsLinkingDependency(sourceEvent, targetEvent) {\n        return this.getDependencyForSourceAndTargetEvents(sourceEvent, targetEvent) ||\n            this.getDependencyForSourceAndTargetEvents(targetEvent, sourceEvent);\n    }\n\n    /**\n     * Validation method used to validate a dependency. Override and return `true` to indicate that an\n     * existing dependency between two tasks is valid. For a new dependency being created please see\n     * {@link #function-isValidDependencyToCreate}.\n     *\n     * @param {Scheduler.model.DependencyModel|Scheduler.model.TimeSpan|Number|String} dependencyOrFromId The dependency\n     * model, the from task/event or the id of the from task/event\n     * @param {Scheduler.model.TimeSpan|Number|String} [toId] To task/event or id thereof if the first parameter is not\n     * a dependency record\n     * @param {Number} [type] Dependency {@link Scheduler.model.DependencyBaseModel#property-Type-static} if the first\n     * parameter is not a dependency model instance.\n     * @returns {Boolean}\n     */\n    async isValidDependency(dependencyOrFromId, toId, type) {\n        let fromEvent = dependencyOrFromId, toEvent = toId;\n\n        if (dependencyOrFromId == null) {\n            return false;\n        }\n\n        // Accept dependency model\n        if (dependencyOrFromId.isDependencyModel) {\n            ({ fromEvent, toEvent } = dependencyOrFromId);\n        }\n\n        // Accept from as id\n        fromEvent = this.eventStore.getById(fromEvent);\n\n        // Accept to as id\n        toEvent = this.eventStore.getById(toEvent);\n\n        // This condition is supposed to map all model instances to be validated by project. Lowest common ancestor\n        // for scheduler event, scheduler pro event and gantt task is TimeSpan\n        if (fromEvent && toEvent) {\n            // Block creating dependencies to display only tasks in Gantt\n            if (!fromEvent.project || !toEvent.project) {\n                return false;\n            }\n\n            // Not asserting dependency type here. Default value should normally suffice.\n            return this.project.isValidDependency(fromEvent, toEvent, type);\n        }\n\n        return dependencyOrFromId !== toId;\n    }\n\n    /**\n     * Validation method used to validate a dependency while creating. Override and return `true` to indicate that\n     * a new dependency is valid to be created.\n     *\n     * @param {Scheduler.model.TimeSpan|Number|String} fromId From event/task or id\n     * @param {Scheduler.model.TimeSpan|Number|String} toId To event/task or id\n     * @param {Number} type Dependency {@link Scheduler.model.DependencyBaseModel#property-Type-static}\n     * @returns {Boolean}\n     */\n    isValidDependencyToCreate(fromId, toId, type) {\n        return this.isValidDependency(fromId, toId, type);\n    }\n\n    /**\n     * Returns all dependencies highlighted with the given CSS class\n     *\n     * @param {String} cls\n     * @returns {Scheduler.model.DependencyBaseModel[]}\n     */\n    getHighlightedDependencies(cls) {\n        return this.records.reduce((result, dep) => {\n            if (dep.isHighlightedWith(cls)) result.push(dep);\n            return result;\n        }, []);\n    }\n\n    static makeDependencySourceTargetCompositeKey(from, to) {\n        return `source(${from})-target(${to})`;\n    }\n\n    //region Product neutral\n\n    getTimeSpanDependencies(record) {\n        return this.getEventDependencies(record);\n    }\n\n    //endregion\n};\n","import AjaxStore from '../../Core/data/AjaxStore.js';\nimport DependencyModel from '../model/DependencyModel.js';\nimport PartOfProject from './mixin/PartOfProject.js';\nimport DependencyStoreMixin from './mixin/DependencyStoreMixin.js';\n/* <remove-on-release> */\nimport { ChronoDependencyStoreMixin } from '../../Engine/quark/store/ChronoDependencyStoreMixin.js';\n/* </remove-on-release> */\nimport { CoreDependencyStoreMixin } from '../../Engine/quark/store/CoreDependencyStoreMixin.js';\nimport PartOfBaseProject from './mixin/PartOfBaseProject.js';\n\nconst EngineMixin = /* <remove-on-release> */ globalThis.bryntum?.useBasicEngine ? PartOfBaseProject(ChronoDependencyStoreMixin.derive(AjaxStore)) : /* </remove-on-release> */PartOfProject(CoreDependencyStoreMixin.derive(AjaxStore));\n\n/**\n * @module Scheduler/data/DependencyStore\n */\n\n/**\n * A store representing a collection of dependencies between events in the {@link Scheduler.data.EventStore}.\n *\n * This store only accepts a model class inheriting from {@link Scheduler.model.DependencyModel}.\n *\n * A DependencyStore is usually connected to a project, which binds it to other related stores (EventStore,\n * AssignmentStore and ResourceStore). The project also handles references (fromEvent, toEvent) to related records\n * for the records in the store.\n *\n * Resolving the references happens async, records are not guaranteed to have up to date references until calculations\n * are finished. To be certain that references are resolved, call `await project.commitAsync()` after store actions. Or\n * use one of the `xxAsync` functions, such as `loadDataAsync()`.\n *\n * Using `commitAsync()`:\n *\n * ```javascript\n * dependencyStore.data = [{ from, to }, ...];\n *\n * // references (fromEvent, toEvent) not resolved yet\n *\n * await dependencyStore.project.commitAsync();\n *\n * // now they are\n * ```\n *\n * Using `loadDataAsync()`:\n *\n * ```javascript\n * await dependencyStore.loadDataAsync([{ from, to }, ...]);\n *\n * // references (fromEvent, toEvent) are resolved\n * ```\n *\n * @mixes Scheduler/data/mixin/PartOfProject\n * @mixes Scheduler/data/mixin/DependencyStoreMixin\n * @extends Core/data/AjaxStore\n */\nexport default class DependencyStore extends DependencyStoreMixin(EngineMixin.derive(AjaxStore)) {\n\n    static get defaultConfig() {\n        return {\n            modelClass : DependencyModel\n        };\n    }\n\n}\n","import AbstractCrudManagerMixin from '../../../Scheduler/crud/AbstractCrudManagerMixin.js';\nimport StringHelper from '../../../Core/helper/StringHelper.js';\nimport Base from '../../../Core/Base.js';\nimport AjaxTransport from '../../crud/transport/AjaxTransport.js';\nimport JsonEncoder from '../../crud/encoder/JsonEncoder.js';\nimport ObjectHelper from '../../../Core/helper/ObjectHelper.js';\n\n/**\n * @module Scheduler/data/mixin/ProjectCrudManager\n */\n\n/**\n * This mixin provides Crud Manager functionality supporting loading of scheduling engine projects.\n *\n * @mixin\n * @mixes Scheduler/crud/AbstractCrudManagerMixin\n * @mixes Scheduler/crud/transport/AjaxTransport\n * @mixes Scheduler/crud/encoder/JsonEncoder\n */\nexport default Target => class ProjectCrudManager extends (Target || Base).mixin(AbstractCrudManagerMixin, AjaxTransport, JsonEncoder) {\n\n    //region Config\n\n    static get defaultConfig() {\n        return {\n            project : null\n        };\n    }\n\n    startConfigure(config) {\n        // process the project first which ingests any configured data sources,\n        this.getConfig('project');\n\n        super.startConfigure(config);\n\n        this._changesToClear = new Map();\n    }\n\n    async doAutoLoad() {\n        const { project } = this;\n\n        // Delay autoLoad to after projects initial commit if configured with a project\n        if (project) {\n            await project.commitAsync();\n        }\n\n        return super.doAutoLoad();\n    }\n\n    applyProjectResponse(response) {\n        const\n            me = this,\n            { project } = me;\n\n        me.applyingProjectResponse = true;\n\n        const\n            startDateField = project.fieldMap.startDate,\n            endDateField   = project.fieldMap.endDate,\n            startDate      = ObjectHelper.getPath(response, startDateField.dataSource),\n            endDate        = ObjectHelper.getPath(response, endDateField.dataSource);\n\n        // With early rendering engine won't convert project dates in time, do it manually first\n        if (typeof startDate === 'string') {\n            ObjectHelper.setPath(response, startDateField.dataSource, startDateField.convert(startDate));\n        }\n        if (typeof endDate === 'string') {\n            ObjectHelper.setPath(response, endDateField.dataSource, endDateField.convert(endDate));\n        }\n\n        Object.assign(project, response);\n\n        me._changesToClear.set(me, response);\n\n        me.applyingProjectResponse = false;\n    }\n\n    loadCrudManagerData(response, options = {}) {\n        const\n            me = this,\n            { project } = me;\n\n        // We don't want to react on store changes while loading them\n        me.suspendChangesTracking();\n\n        super.loadCrudManagerData(...arguments);\n\n        // If there is project data provided\n        if (response?.project) {\n            // If the project is delaying its linking to a new graph instance\n            // wait till it detaches all records from the old graph\n            // and then apply the project data.\n            // Otherwise the project changes we apply here will be overridden when detaching from the old graph.\n            // Since the code copies last identifier values from the graph when detaching.\n            if (project.delayEnteringReplica) {\n                project.ion({\n                    recordsUnlinked : () => {\n                        me.suspendChangesTracking();\n                        me.applyProjectResponse(response.project);\n                        me.resumeChangesTracking();\n                    },\n                    once : true\n                });\n            }\n            else {\n                me.applyProjectResponse(response.project);\n            }\n        }\n\n        me.resumeChangesTracking();\n    }\n\n    async sync() {\n        const { project } = this;\n\n        // Suspend Crud Manager autoSync to not react on changes during commitAsync() call\n        this.suspendAutoSync();\n\n        // Make sure data is in a calculated state before syncing\n        if (project) {\n            await project.commitAsync();\n        }\n\n        if (this.isDestroying) {\n            return;\n        }\n\n        // resume autoSync silently\n        this.resumeAutoSync(false);\n\n        return super.sync();\n    }\n\n    async applyResponse(request, response, options) {\n        const me = this;\n\n        if (me.isDestroyed || me.project?.isDestroyed) {\n            return;\n        }\n\n        me.trigger('startApplyResponse');\n\n        await super.applyResponse(request, response, options);\n\n        // If there is the project data provided or it's not provided but short responses are enabled\n        // in such cases we treat a successful response covering all sent changes as much as that's possible\n        // so responding `project : { ... }` should not be really needed\n        if (response?.project || (me.supportShortSyncResponse && request?.pack?.project)) {\n            // apply the responded changes (or accept the requested ones)\n            me.applyProjectResponse(response.project || request?.pack?.project);\n        }\n\n        // if we have a project\n        if (me.project) {\n            let requestType = request.type;\n\n            // response can force its type\n            if (me.trackResponseType) {\n                requestType = response.type || requestType;\n            }\n\n            // Make a boolean flag indicating what has triggered the propagation (\"propagatingLoadChanges\" or  \"propagatingSyncChanges\")\n            const propagationFlag = `propagating${StringHelper.capitalize(requestType)}Changes`;\n\n            me.suspendAutoSync();\n            me[propagationFlag] = true;\n\n            const loud = me.project.isInitialCommit && !me.project.silenceInitialCommit;\n\n            // Wait till calculation gets done\n            await me.project.commitAsync();\n\n            me[propagationFlag] = false;\n\n            // for initial commit we still trigger the sync, but not for following\n            me.resumeAutoSync?.(loud);\n\n            // Accept changes came from the server (might have been destroyed while waiting above)\n            me.commitRespondedChanges?.();\n        }\n    }\n\n    applySyncResponse(...args) {\n        const\n            me          = this,\n            stmDisabled = me.project?.stm.disabled;\n\n        if (stmDisabled === false && me.ignoreRemoteChangesInSTM) {\n            me.project.stm.disable();\n        }\n\n        super.applySyncResponse(...args);\n\n        if (stmDisabled === false) {\n            me.project.stm.enable();\n        }\n    }\n\n    shouldClearRecordFieldChange(record, field, value) {\n        const oldValue = record[field];\n\n        field = record.getFieldDefinition(field);\n\n        // If the field value matches the one responded from the server\n        // we silently accept it\n        return field?.isEqual ? field.isEqual(oldValue, value) : ObjectHelper.isEqual(oldValue, value);\n    }\n\n    commitRespondedChanges() {\n        // We silently accept changes came from the server\n        this._changesToClear.forEach((changes, record) => {\n            Object.entries(changes).forEach(([key, value]) => {\n                // If the field value matches the one responded from the server\n                // we silently accept it\n                if (this.shouldClearRecordFieldChange(record, key, value)) {\n                    delete record.meta.modified[key];\n                }\n            });\n        });\n\n        this._changesToClear.clear();\n    }\n\n    applyChangesToStore(storeDesc, storeResponse, storePack, ...rest) {\n        const changesMap = super.applyChangesToStore(storeDesc, storeResponse, storePack, ...rest);\n\n        // The changes enter graph first but not store until later, clearing changes in StoreChanges might still leave\n        // records modified. We need to clean up after the next propagation, so we store record changes in a map for now\n        if (changesMap.size && this.project) {\n            for (const [id, changes] of changesMap) {\n                const record = storeDesc.store.getById(id);\n                record && this._changesToClear.set(record, changes);\n            }\n        }\n\n        return changesMap;\n    }\n};\n","import Model from '../../../Core/data/Model.js';\n\n/**\n * @module Scheduler/model/mixin/ProjectModelCommon\n */\n\n/**\n * Mixin that provides helpful methods and properties for a `ProjectModel`. This mixin applies to all Bryntum products.\n * @mixin\n * @internal\n */\nexport default Target => class ProjectModelCommon extends (Target || Model) {\n    static $name = 'ProjectModelCommon';\n\n    static get configurable() {\n        return {\n            // TODO json : null,\n\n            // Documented in Gantt/Scheduler/SchedulerPro version of ./model/ProjectModel since types differ\n            assignments  : null,\n            dependencies : null,\n            resources    : null,\n            timeRanges   : null\n        };\n    }\n\n    //region Inline data\n\n    get assignments() {\n        return this.assignmentStore.records;\n    }\n\n    updateAssignments(assignments) {\n        this.assignmentStore.data = assignments;\n    }\n\n    get dependencies() {\n        return this.dependencyStore.records;\n    }\n\n    updateDependencies(dependencies) {\n        this.dependencyStore.data = dependencies;\n    }\n\n    get resources() {\n        return this.resourceStore.records;\n    }\n\n    updateResources(resources) {\n        this.resourceStore.data = resources;\n    }\n\n    get timeRanges() {\n        return this.timeRangeStore.records;\n    }\n\n    getTimeRanges(startDate, endDate) {\n        const\n            store = this.timeRangeStore,\n            ret = [];\n\n        for (const timeSpan of store) {\n            // Collect occurrences for the recurring events in the record set\n            if (timeSpan.isRecurring) {\n                ret.push(...timeSpan.getOccurrencesForDateRange(startDate, endDate));\n            }\n            else if (timeSpan.startDate < endDate && startDate < timeSpan.endDate) {\n                ret.push(timeSpan);\n            }\n        }\n\n        return ret;\n    }\n\n    updateTimeRanges(timeRanges) {\n        this.timeRangeStore.data = timeRanges;\n    }\n\n    getResourceTimeRanges(startDate, endDate) {\n        const\n            store = this.resourceTimeRangeStore,\n            ret = [];\n\n        for (const timeSpan of store) {\n            // Collect occurrences for the recurring events in the record set\n            if (timeSpan.isRecurring) {\n                ret.push(...timeSpan.getOccurrencesForDateRange(startDate, endDate));\n            }\n            else if (timeSpan.startDate < endDate && startDate < timeSpan.endDate) {\n                ret.push(timeSpan);\n            }\n        }\n\n        return ret;\n    }\n\n    //endregion\n};\n","import TimeSpan from './TimeSpan.js';\n/**\n * @module Scheduler/model/ResourceTimeRangeModel\n */\n\n/**\n * This class represent a single resource time range in your schedule.\n * To style the rendered elements, use {@link Scheduler.model.TimeSpan#field-cls} or {@link #field-timeRangeColor} field.\n * The class is used by the {@link Scheduler.feature.ResourceTimeRanges} feature.\n *\n * ## Recurring ranges support\n *\n * By default the class doesn't support recurrence.\n * In order to add its support please use {@link Scheduler/model/mixin/RecurringTimeSpan} mixin\n * (the store containing the model should in turn be mixed with {@link Scheduler.data.mixin.RecurringTimeSpansMixin} class):\n *\n * ```js\n * // Mix RecurringTimeSpan (which adds recurrence support) to ResourceTimeRangeModel\n * class MyResourceTimeRange extends RecurringTimeSpan(ResourceTimeRangeModel) {};\n *\n * // Mix RecurringTimeSpansMixin (which adds recurrence support) to ResourceTimeRangeStore\n * class MyResourceTimeRangeStore extends RecurringTimeSpansMixin(ResourceTimeRangeStore) {\n *     static get defaultConfig() {\n *         return {\n *             // use our new MyResourceTimeRange model\n *             modelClass : MyResourceTimeRange\n *         };\n *     }\n * };\n *\n * // Make new store that supports time ranges recurrence\n * const store = new MyResourceTimeRangeStore({\n *     data : [{        {\n *         id             : 1,\n *         resourceId     : 'r1',\n *         startDate      : '2019-01-01T11:00',\n *         endDate        : '2019-01-01T13:00',\n *         name           : 'Coffee break',\n *         // this time range should repeat every day\n *         recurrenceRule : 'FREQ=DAILY'\n *     }]\n * });\n * ```\n *\n * @extends Scheduler/model/TimeSpan\n */\nexport default class ResourceTimeRangeModel extends TimeSpan {\n    static $name = 'ResourceTimeRangeModel';\n\n    //region Fields\n\n    static fields = [\n        /**\n         * Id of the resource this time range is associated with\n         * @field {String|Number} resourceId\n         */\n        'resourceId',\n\n        /**\n         * Controls this time ranges primary color, defaults to using current themes default time range color.\n         * @field {String} timeRangeColor\n         */\n        'timeRangeColor'\n    ];\n\n    static relations = {\n        /**\n         * The associated resource, retrieved using a relation to a ResourceStore determined by the value assigned\n         * to `resourceId`. The relation also lets you access all time ranges on a resource through\n         * `ResourceModel#timeRanges`.\n         * @member {Scheduler.model.ResourceModel} resource\n         */\n        resource : {\n            foreignKey            : 'resourceId',\n            foreignStore          : 'resourceStore',\n            relatedCollectionName : 'timeRanges',\n            nullFieldOnRemove     : true\n        }\n    }\n\n    static domIdPrefix = 'resourcetimerange';\n\n    get domId() {\n        return `${this.constructor.domIdPrefix}-${this.id}`;\n    }\n\n    //endregion\n\n    // Used internally to differentiate between Event and ResourceTimeRange\n    get isResourceTimeRange() {\n        return true;\n    }\n\n    // To match EventModel API\n    get resources() {\n        return this.resource ? [this.resource] : [];\n    }\n\n    // To match EventModel API\n    get $linkedResources() {\n        return this.resources;\n    }\n}\n","import AjaxStore from '../../Core/data/AjaxStore.js';\nimport ResourceTimeRangeModel from '../model/ResourceTimeRangeModel.js';\n\n/**\n * @module Scheduler/data/ResourceTimeRangeStore\n */\n\n/**\n * A class representing a collection of resource time ranges.\n * Contains a collection of {@link Scheduler.model.ResourceTimeRangeModel ResourceTimeRangeModel} records.\n * The class is used by the {@link Scheduler.feature.ResourceTimeRanges ResourceTimeRanges} feature.\n *\n * ## Recurring ranges support\n *\n * By default, the class doesn't support recurrence. In order to add its support\n * please use {@link Scheduler.data.mixin.RecurringTimeSpansMixin RecurringTimeSpansMixin} mixin\n * (the store model in turn should be mixed with {@link Scheduler/model/mixin/RecurringTimeSpan RecurringTimeSpan} class):\n *\n * ```js\n * // Mix RecurringTimeSpan (which adds recurrence support) to ResourceTimeRangeModel\n * class MyResourceTimeRange extends RecurringTimeSpan(ResourceTimeRangeModel) {};\n *\n * // Mix RecurringTimeSpansMixin (which adds recurrence support) to ResourceTimeRangeStore\n * class MyResourceTimeRangeStore extends RecurringTimeSpansMixin(ResourceTimeRangeStore) {\n *     static get defaultConfig() {\n *         return {\n *             // use our new MyResourceTimeRange model\n *             modelClass : MyResourceTimeRange\n *         };\n *     }\n * };\n *\n * // Make new store that supports time ranges recurrence\n * const store = new MyResourceTimeRangeStore({\n *     data : [{        {\n *         id             : 1,\n *         resourceId     : 'r1',\n *         startDate      : '2019-01-01T11:00',\n *         endDate        : '2019-01-01T13:00',\n *         name           : 'Coffee break',\n *         // this time range should repeat every day\n *         recurrenceRule : 'FREQ=DAILY'\n *     }]\n * });\n * ```\n *\n * @extends Core/data/AjaxStore\n */\nexport default class ResourceTimeRangeStore extends AjaxStore {\n\n    static $name = 'ResourceTimeRangeStore';\n\n    static get defaultConfig() {\n        return {\n            /**\n             * CrudManager must load stores in the correct order. Lowest first.\n             * @private\n             */\n            loadPriority : 500,\n\n            /**\n             * CrudManager must sync stores in the correct order. Lowest first.\n             * @private\n             */\n            syncPriority : 500,\n\n            /**\n             * This store should be linked to a ResourceStore to link the time ranges to resources\n             * @config {Scheduler.data.ResourceStore}\n             */\n            resourceStore : null,\n\n            modelClass : ResourceTimeRangeModel,\n            storeId    : 'resourceTimeRanges'\n        };\n    }\n\n    set resourceStore(store) {\n        this._resourceStore = store;\n\n        // If store is assigned after configuration we need to init relations\n        if (!this.isConfiguring) {\n            this.initRelations(true);\n        }\n    }\n\n    get resourceStore() {\n        return this._resourceStore;\n    }\n\n    // Matching signature in EventStore to allow reusage of SchedulerStores#onInternalEventStoreChange()\n    getResourcesForEvent(resourceTimeRange) {\n        return [resourceTimeRange.resource];\n    }\n\n    /**\n     * Get resource time ranges intersecting the specified date range for a resource.\n     *\n     * The result is sorted by `startDate`.\n     *\n     * @param {Object} options Options\n     * @param {Scheduler.model.ResourceModel} options.resourceRecord Resource record\n     * @param {Date} options.startDate Start date of the range\n     * @param {Date} options.endDate End date of the range\n     * @returns {Scheduler.model.ResourceTimeRangeModel[]}\n     */\n    getRanges({ resourceRecord, startDate, endDate }) {\n        const rangesInDateRange = resourceRecord.timeRanges.flatMap(range => {\n            if (range.supportsRecurring) {\n                return range.getOccurrencesForDateRange(startDate, endDate);\n            }\n\n            if (range.intersectsRange(startDate, endDate)) {\n                return range;\n            }\n\n            return [];\n        });\n\n        return rangesInDateRange.sort((span1, span2) => span1.startDate - span2.startDate);\n    }\n}\n","import Model from '../../../Core/data/Model.js';\nimport TimeZoneHelper from '../../../Core/helper/TimeZoneHelper.js';\n\n/**\n * @module Scheduler/model/mixin/ProjectModelTimeZoneMixin\n */\n\n/**\n * Mixin that holds TimeZone functionality shared between projects in Scheduler, Scheduler Pro, Gantt and Calendar\n * @mixin\n */\nexport default Target => class ProjectModelTimeZoneMixin extends (Target || Model) {\n    static $name = 'ProjectModelTimeZoneMixin';\n\n    static configurable = {\n        /**\n         * Set to a IANA time zone (i.e. `Europe/Stockholm`) or a UTC offset in minutes (i.e. `-120`). This will\n         * convert all events, tasks and time ranges to the specified time zone or offset. It will also affect the\n         * displayed timeline's headers as well at the start and end date of it.\n         *\n         * There is currently no built-in time zone support in JavaScript which means that the converted dates\n         * technically still are in the local system time zone, but adjusted to match the configured time zone.\n         *\n         * ### DST\n         * If a IANA time zone is provided, there will be support for DST. But if local system time zone has DST that\n         * will affect the time zone conversion at the exact hour when the local system time zone switches DST on and\n         * off.\n         *\n         * *For example:*\n         * 1. The local system time zone is `Europe/Stockholm` (which is UTC+1 or UTC+2 when DST).\n         * 2. The date `2022-03-27T07:00:00Z` (which is UTC) is converted to `America/Chicago` (which is UTC-6 or UTC-5\n         *    when DST).\n         * 3. The converted JS date will be created from `2022-03-27T02:00:00` which is exactly the hour when\n         *    `Europe/Stockholm` adds an DST hour. This has the effect that the converted date shows up incorrectly as\n         *    `2022-03-27T03:00` instead.\n         *\n         * If a UTC offset is provided, there is no DST support at all.\n         *\n         * ### Editing\n         * If creating new records or editing existing record dates, the dates will be interpreted as in the selected\n         * time zone.\n         *\n         * ### Saving\n         * When saving or syncing data, the dates will be restored to local system time and converted to JSON\n         * ISO formatted.\n         *\n         * @prp {String|Number} [timeZone]\n         * @category Advanced\n         */\n        timeZone : {\n            // Don't ingest the config eagerly because it relies on project being present.\n            // Lazy means it waits for ingestion until timeZone property is referenced.\n            $config : 'lazy',\n            value   : null\n        }\n    }\n\n    afterConstruct() {\n        super.afterConstruct(...arguments);\n\n        this._storesWithDates =  [this.taskStore, this.timeRangeStore, this.resourceTimeRangeStore];\n    }\n\n    relayStoreChange({ source, action, records, replaced }) {\n        const me = this;\n\n        if (me.timeZone && me._storesWithDates.includes(source)) {\n            // When loading or changing dataset, de data is treated as local dates and need to be converted\n            if (action === 'dataset') {\n                me.convertStoresToTimeZone([source]);\n                me.ignoreRecordChanges = true;\n                me.commitAsync();\n            }\n            // New added records are treated as in current timezone\n            else if (['add', 'replace'].includes(action)) {\n                if (!records?.length && replaced?.length) {\n                    records = replaced;\n                }\n                if (records.length) {\n                    records.forEach(record => record._inTimeZone = me.timeZone);\n                }\n            }\n        }\n    }\n\n    convertStoresToTimeZone(stores) {\n        const\n            me            = this,\n            { timeZone }  = me,\n            stmAutoRecord = me.stm?.autoRecord;\n\n        // Disable STM while updating timezone values\n        if (stmAutoRecord) {\n            me.stm.autoRecord = false;\n        }\n\n        for (const store of stores) {\n            if (store) {\n\n                store.forEach(r => {\n                    r.$ignoreChange = true; // Used to ignore changes in NestedEvents feature\n                    // Convert baselines if exists\n                    if (r.baselines?.count) {\n                        for (const bl of r.baselines) {\n                            // The baseline records is not marked with a timezone when they are created\n                            if (r._inTimeZone !== bl._inTimeZone) {\n                                bl._inTimeZone = r._inTimeZone;\n                            }\n                            bl.convertToTimeZone(timeZone);\n                        }\n                    }\n\n                    r.convertToTimeZone(timeZone);\n\n                    delete r.$ignoreChange;\n                });\n            }\n        }\n\n        if (stmAutoRecord) {\n            // Restore original value\n            me.stmAutoRecord = stmAutoRecord;\n        }\n    }\n\n    updateTimeZone(timeZone, oldTimeZone) {\n        const\n            me            = this,\n            isConfiguring = me._isConfiguringTimeZone || me.isConfiguring;\n\n        me.calendarManagerStore.forEach(calendar => calendar.bumpVersion());\n\n        // Convert data to time zone\n        me.convertStoresToTimeZone(me._storesWithDates);\n\n        // Convert project startdate\n        if (me.startDate) {\n            const startDate = oldTimeZone ? TimeZoneHelper.fromTimeZone(me.startDate, oldTimeZone) : me.startDate;\n            me.startDate = timeZone ? TimeZoneHelper.toTimeZone(startDate, timeZone) : startDate;\n        }\n\n        me.ignoreRecordChanges = true;\n        me.commitAsync().then(() => {\n            if (!me.isDestroyed) {\n                me.trigger('timeZoneChange', {\n                    timeZone,\n                    oldTimeZone,\n                    isConfiguring\n                });\n            }\n            delete me._isConfiguringTimeZone;\n        });\n    }\n\n};\n","import Model from '../../../Core/data/Model.js';\nimport ProjectModelCommon from './ProjectModelCommon.js';\nimport ResourceTimeRangeModel from '../ResourceTimeRangeModel.js';\nimport TimeSpan from '../TimeSpan.js';\nimport Store from '../../../Core/data/Store.js';\nimport StringHelper from '../../../Core/helper/StringHelper.js';\nimport ResourceTimeRangeStore from '../../data/ResourceTimeRangeStore.js';\nimport ProjectModelTimeZoneMixin from './ProjectModelTimeZoneMixin.js';\n\n/**\n * @module Scheduler/model/mixin/ProjectModelMixin\n */\n\n/**\n * Mixin that holds configuration shared between projects in Scheduler and Scheduler Pro.\n * @mixes Scheduler/model/mixin/ProjectModelTimeZoneMixin\n * @mixin\n */\nexport default Target => class ProjectModelMixin extends (Target || Model).mixin(\n    ProjectModelCommon,\n    ProjectModelTimeZoneMixin\n) {\n    static get $name() {\n        return 'ProjectModelMixin';\n    }\n\n    //region Config\n\n    static get defaultConfig() {\n        return {\n            /**\n             * State tracking manager instance the project relies on\n             * @member {Core.data.stm.StateTrackingManager} stm\n             * @category Advanced\n             */\n            /**\n             * Configuration options to provide to the STM manager\n             *\n             * @config {StateTrackingManagerConfig|Core.data.stm.StateTrackingManager}\n             * @category Advanced\n             */\n            stm : {},\n\n            timeRangeModelClass         : TimeSpan,\n            resourceTimeRangeModelClass : ResourceTimeRangeModel,\n\n            /**\n             * The constructor to create a time range store instance with. Should be a class subclassing the\n             * {@link Core.data.Store}\n             * @config {Core.data.Store|Object}\n             * @typings {typeof Store|object}\n             * @category Models & Stores\n             */\n            timeRangeStoreClass : Store,\n\n            /**\n             * The constructor to create a resource time range store instance with. Should be a class subclassing the\n             * {@link Scheduler.data.ResourceTimeRangeStore}\n             * @config {Scheduler.data.ResourceTimeRangeStore|Object}\n             * @typings {typeof ResourceTimeRangeStore|object}\n             * @category Models & Stores\n             */\n            resourceTimeRangeStoreClass : ResourceTimeRangeStore,\n\n            /**\n             * The initial data, to fill the {@link #property-timeRangeStore timeRangeStore} with.\n             * Should be an array of {@link Scheduler.model.TimeSpan TimeSpan} or its configuration objects.\n             *\n             * @config {Scheduler.model.TimeSpan[]} [timeRangesData]\n             * @category Legacy inline data\n             */\n\n            /**\n             * The initial data, to fill the {@link #property-resourceTimeRangeStore resourceTimeRangeStore} with.\n             * Should be an array of {@link Scheduler.model.ResourceTimeRangeModel ResourceTimeRangeModel} or it's\n             * configuration objects.\n             *\n             * @config {Scheduler.model.ResourceTimeRangeModel[]} [resourceTimeRangesData]\n             * @category Legacy inline data\n             */\n\n            eventStore      : {},\n            assignmentStore : {},\n            dependencyStore : {},\n            resourceStore   : {},\n            timeRangesData  : null\n        };\n    }\n\n    static configurable = {\n        /**\n         * Project data as a JSON string, used to populate its stores.\n         *\n         * ```javascript\n         * const project = new ProjectModel({\n         *     json : '{\"eventsData\":[...],\"resourcesData\":[...],...}'\n         * }\n         * ```\n         *\n         * @config {String}\n         * @category Inline data\n         */\n        json : null,\n\n        /**\n         * The {@link Core.data.Store store} holding the time ranges information.\n         *\n         * See also {@link Scheduler.model.TimeSpan}\n         *\n         * @member {Core.data.Store} timeRangeStore\n         * @category Models & Stores\n         */\n        /**\n         * A {@link Core.data.Store} instance or a config object.\n         * @config {Core.data.Store|StoreConfig}\n         * @category Models & Stores\n         */\n        timeRangeStore : {\n            value : {\n                id         : 'timeRanges', // no-sanity\n                modelClass : TimeSpan\n            },\n            $config : 'nullify'\n        },\n\n        /**\n         * The {@link Scheduler.data.ResourceTimeRangeStore store} holding the resource time ranges information.\n         *\n         * See also {@link Scheduler.model.ResourceTimeRangeModel}\n         *\n         * @member {Scheduler.data.ResourceTimeRangeStore} resourceTimeRangeStore\n         * @category Models & Stores\n         */\n        /**\n         * A {@link Scheduler.data.ResourceTimeRangeStore} instance or a config object.\n         * @config {Scheduler.data.ResourceTimeRangeStore|ResourceTimeRangeStoreConfig}\n         * @category Models & Stores\n         */\n        resourceTimeRangeStore : {\n            value   : {},\n            $config : 'nullify'\n        },\n\n        // Documented in Scheduler/SchedulerPro versions of model/ProjectModel since types differ\n        events             : null,\n        resourceTimeRanges : null\n    }\n\n    //endregion\n\n    //region Properties\n\n    /**\n     * Returns current Project changes as an object consisting of added/modified/removed arrays of records for every\n     * managed store. Returns `null` if no changes exist. Format:\n     *\n     * ```javascript\n     * {\n     *     resources : {\n     *         added    : [{ name : 'New guy' }],\n     *         modified : [{ id : 2, name : 'Mike' }],\n     *         removed  : [{ id : 3 }]\n     *     },\n     *     events : {\n     *         modified : [{  id : 12, name : 'Cool task' }]\n     *     },\n     *     ...\n     * }\n     * ```\n     *\n     * @member {Object} changes\n     * @readonly\n     * @category Models & Stores\n     */\n\n    /**\n     * Get or set data of project stores. The returned data is identical to what\n     * {@link #function-toJSON} returns:\n     *\n     * ```javascript\n     *\n     * const data = scheduler.project.inlineData;\n     *\n     * // data:\n     * {\n     *     eventsData             : [...],\n     *     resourcesData          : [...],\n     *     dependenciesData       : [...],\n     *     assignmentsData        : [...],\n     *     resourceTimeRangesData : [...],\n     *     timeRangesData         : [...]\n     * }\n     *\n     *\n     * // Plug it back in later\n     * scheduler.project.inlineData = data;\n     * ```\n     *\n     * @property {Object}\n     * @category Inline data\n     */\n    get inlineData() {\n        return StringHelper.safeJsonParse(super.json);\n    }\n\n    set inlineData(inlineData) {\n        this.json = inlineData;\n    }\n\n    //endregion\n\n    //region Functions\n\n    /**\n     * Accepts a \"data package\" consisting of data for the projects stores, which is then loaded into the stores.\n     *\n     * The package can hold data for `EventStore`, `AssignmentStore`, `ResourceStore`, `DependencyStore`,\n     * `TimeRangeStore` and `ResourceTimeRangeStore`. It uses the same format as when creating a project with inline\n     * data:\n     *\n     * ```javascript\n     * await project.loadInlineData({\n     *     eventsData             : [...],\n     *     resourcesData          : [...],\n     *     assignmentsData        : [...],\n     *     dependenciesData       : [...],\n     *     resourceTimeRangesData : [...],\n     *     timeRangesData         : [...]\n     * });\n     * ```\n     *\n     * After populating the stores it commits the project, starting its calculations. By awaiting `loadInlineData()` you\n     * can be sure that project calculations are finished.\n     *\n     * @function loadInlineData\n     * @param {Object} dataPackage A data package as described above\n     * @fires load\n     * @async\n     * @category Inline data\n     */\n\n    /**\n     * Project changes (CRUD operations to records in its stores) are automatically committed on a buffer to the\n     * underlying graph based calculation engine. The engine performs it calculations async.\n     *\n     * By calling this function, the commit happens right away. And by awaiting it you are sure that project\n     * calculations are finished and that references between records are up to date.\n     *\n     * The returned promise is resolved with an object. If that object has `rejectedWith` set, there has been a conflict and the calculation failed.\n     *\n     * ```javascript\n     * // Move an event in time\n     * eventStore.first.shift(1);\n     *\n     * // Trigger calculations directly and wait for them to finish\n     * const result = await project.commitAsync();\n     *\n     * if (result.rejectedWith) {\n     *     // there was a conflict during the scheduling\n     * }\n     * ```\n     *\n     * @async\n     * @function commitAsync\n     * @category Common\n     */\n\n    //endregion\n\n    //region Init\n\n    construct(config = {}) {\n        super.construct(...arguments);\n\n        // These stores are not handled by engine, but still held on project\n\n        if (config.timeRangesData) {\n            this.timeRangeStore.data = config.timeRangesData;\n        }\n\n        if (config.resourceTimeRangesData) {\n            this.resourceTimeRangeStore.data = config.resourceTimeRangesData;\n        }\n    }\n\n    afterConstruct() {\n        super.afterConstruct();\n\n        const me = this;\n\n        !me.timeRangeStore.stm && me.stm.addStore(me.timeRangeStore);\n        !me.resourceTimeRangeStore.stm && me.stm.addStore(me.resourceTimeRangeStore);\n    }\n\n    //endregion\n\n    //region Attaching stores\n\n    // Attach to a store, relaying its change events\n    attachStore(store) {\n        store?.ion({\n            name    : store.$$name,\n            change  : 'relayStoreChange',\n            thisObj : this\n        });\n    }\n\n    // Detach a store, stop relaying its change events\n    detachStore(store) {\n        store && this.detachListeners(store.$$name);\n    }\n\n    relayStoreChange(event) {\n        super.relayStoreChange(event);\n        /**\n         * Fired when data in any of the projects stores changes.\n         *\n         * Basically a relayed version of each stores own change event, decorated with which store it originates from.\n         * See the {@link Core.data.Store#event-change store change event} documentation for more information.\n         *\n         * @event change\n         * @param {Scheduler.model.ProjectModel} source This project\n         * @param {Core.data.Store} store Affected store\n         * @param {'remove'|'removeAll'|'add'|'updatemultiple'|'clearchanges'|'filter'|'update'|'dataset'|'replace'} action\n         * Name of action which triggered the change. May be one of:\n         * * `'remove'`\n         * * `'removeAll'`\n         * * `'add'`\n         * * `'updatemultiple'`\n         * * `'clearchanges'`\n         * * `'filter'`\n         * * `'update'`\n         * * `'dataset'`\n         * * `'replace'`\n         * @param {Core.data.Model} record Changed record, for actions that affects exactly one record (`'update'`)\n         * @param {Core.data.Model[]} records Changed records, passed for all actions except `'removeAll'`\n         * @param {Object} changes Passed for the `'update'` action, info on which record fields changed\n         */\n        return this.trigger('change', { store : event.source, ...event, source : this });\n    }\n\n    updateTimeRangeStore(store, oldStore) {\n        this.detachStore(oldStore);\n        this.attachStore(store);\n    }\n\n    setTimeRangeStore(store) {\n        this.timeRangeStore = store;\n    }\n\n    changeTimeRangeStore(store) {\n        // If it's not being nullified, upgrade a config object to be a full store\n        if (store && !store.isStore) {\n            store = this.timeRangeStoreClass.new({\n                modelClass : this.timeRangeModelClass\n            }, store);\n        }\n        return store;\n    }\n\n    updateResourceTimeRangeStore(store, oldStore) {\n        this.detachStore(oldStore);\n        this.attachStore(store);\n    }\n\n    changeResourceTimeRangeStore(store) {\n        // If it's not being nullified, upgrade a config object to be a full store\n        if (store && !store.isStore) {\n            store = this.resourceTimeRangeStoreClass.new({\n                modelClass : this.resourceTimeRangeModelClass\n            }, store);\n        }\n        return store;\n    }\n\n    setResourceTimeRangeStore(store) {\n        this.resourceTimeRangeStore = store;\n    }\n\n    //endregion\n\n    //region Inline data\n\n    get events() {\n        return this.eventStore.records;\n    }\n\n    updateEvents(events) {\n        this.eventStore.data = events;\n    }\n\n    get resourceTimeRanges() {\n        return this.resourceTimeRangeStore.records;\n    }\n\n    updateResourceTimeRanges(resourceTimeRanges) {\n        this.resourceTimeRangeStore.data = resourceTimeRanges;\n    }\n\n    async loadInlineData(data) {\n        // Flag reset in super\n        this.isLoadingInlineData = true;\n\n        // Stores not handled by engine\n        if (data.resourceTimeRangesData) {\n            this.resourceTimeRangeStore.data = data.resourceTimeRangesData;\n        }\n\n        if (data.timeRangesData) {\n            this.timeRangeStore.data = data.timeRangesData;\n        }\n\n        return super.loadInlineData(data);\n    }\n\n    //endregion\n\n    //region JSON\n\n    /**\n     * Returns the data from the records of the projects stores, in a format that can be consumed by `loadInlineData()`.\n     *\n     * Used by JSON.stringify to correctly convert this record to json.\n     *\n     *\n     * ```javascript\n     * const project = new ProjectModel({\n     *     eventsData             : [...],\n     *     resourcesData          : [...],\n     *     assignmentsData        : [...],\n     *     dependenciesData       : [...],\n     *     resourceTimeRangesData : [...],\n     *     timeRangesData         : [...]\n     * });\n     *\n     * const json = project.toJSON();\n     *\n     * // json:\n     * {\n     *     eventsData             : [...],\n     *     resourcesData          : [...],\n     *     dependenciesData       : [...],\n     *     assignmentsData        : [...],\n     *     resourceTimeRangesData : [...],\n     *     timeRangesData         : [...]\n     * }\n     * ```\n     *\n     * Output can be consumed by `loadInlineData()`:\n     *\n     * ```javascript\n     * const json = project.toJSON();\n     *\n     * // Plug it back in later\n     * project.loadInlineData(json);\n     * ```\n     *\n     * @returns {Object}\n     * @category Inline data\n     */\n    toJSON() {\n        const\n            me = this,\n            result = {\n                eventsData             : me.eventStore.toJSON(),\n                resourcesData          : me.resourceStore.toJSON(),\n                dependenciesData       : me.dependencyStore.toJSON(),\n                timeRangesData         : me.timeRangeStore.toJSON(),\n                resourceTimeRangesData : me.resourceTimeRangeStore.toJSON()\n            };\n\n        if (!me.eventStore.usesSingleAssignment) {\n            result.assignmentsData = me.assignmentStore.toJSON();\n        }\n\n        return result;\n    }\n\n    /**\n     * Get or set project data (records from its stores) as a JSON string.\n     *\n     * Get a JSON string:\n     *\n     * ```javascript\n     * const project = new ProjectModel({\n     *     eventsData             : [...],\n     *     resourcesData          : [...],\n     *     assignmentsData        : [...],\n     *     dependenciesData       : [...],\n     *     resourceTimeRangesData : [...],\n     *     timeRangesData         : [...]\n     * });\n     *\n     * const jsonString = project.json;\n     *\n     * // jsonString:\n     * '{\"eventsData\":[...],\"resourcesData\":[...],...}'\n     * ```\n     *\n     * Set a JSON string (to populate the project stores):\n     *\n     * ```javascript\n     * project.json = '{\"eventsData\":[...],\"resourcesData\":[...],...}'\n     * ```\n     *\n     * @property {String}\n     * @category Inline data\n     */\n    get json() {\n        return super.json;\n    }\n\n    changeJson(json) {\n        if (typeof json === 'string') {\n            json = StringHelper.safeJsonParse(json);\n        }\n\n        return json;\n    }\n\n    updateJson(json) {\n        json && this.loadInlineData(json);\n    }\n\n    //endregion\n\n    afterChange(toSet, wasSet) {\n        super.afterChange(...arguments);\n\n        if (wasSet.calendar) {\n            this.trigger('calendarChange');\n        }\n    }\n\n    doDestroy() {\n        this.timeRangeStore.destroy();\n        this.resourceTimeRangeStore.destroy();\n\n        super.doDestroy();\n    }\n};\n","/**\n * @module Scheduler/model/mixin/ProjectCurrentConfig\n */\n\n/**\n * Mixin that makes sure current config for a project includes store data and is cleaned up properly.\n *\n * @mixin\n * @private\n */\nexport default Target => class ProjectCurrentConfig extends Target {\n\n    // This function is not meant to be called by any code other than Base#getCurrentConfig().\n    // It extracts the current configs/fields for the project, with special handling for inline data\n    getCurrentConfig(options) {\n        const\n            me     = this,\n            result = super.getCurrentConfig(options);\n\n        if (result) {\n            for (const storeName of ['eventStore', 'resourceStore', 'assignmentStore', 'dependencyStore', 'timeRangeStore', 'resourceTimeRangeStore']) {\n                const store = me[storeName];\n\n                if (store) {\n                    if (store.count) {\n                        result[store.id + 'Data'] = store.getInlineData(options);\n                    }\n\n                    // Get stores current state, in case it has filters etc added at runtime\n                    const storeState = store.getCurrentConfig(options);\n                    if (storeState && Object.keys(storeState).length > 0) {\n                        result[storeName] = Object.assign(result[storeName] || {}, storeState);\n                    }\n                    // Remove empty store configs\n                    else if (result[storeName] && Object.keys(result[storeName]).length === 0) {\n                        delete result[storeName];\n                    }\n                }\n            }\n\n            if (result.timeRangeStore) {\n                // Exclude default time range modelClass (it is a plain store), spam\n                if (me.timeRangeStore.originalModelClass === me.timeRangeModelClass || me.timeRangeStore.originalModelClass.$name === 'TimeSpan') {\n                    delete result.timeRangeStore.modelClass;\n                }\n\n                // Same for default storeId\n                if (result.timeRangeStore.storeId === 'timeRanges') {\n                    delete result.timeRangeStore.storeId;\n                }\n\n                // Since timeRangeStore is a plain store it is always configured with id, spam\n                if (Object.keys(result.timeRangeStore).length === 1) {\n                    delete result.timeRangeStore;\n                }\n            }\n\n            // Gantt specifics\n            if (me.taskStore.isTaskStore) {\n                delete result.eventModelClass;\n                delete result.eventStoreClass;\n                delete result.children;\n            }\n\n            return result;\n        }\n    }\n};\n","import Base from '../../../Core/Base.js';\n\n/**\n * @module Scheduler/data/util/ModelPersistencyManager\n */\n\n/**\n * This class manages model persistency, it listens to model stores' beforesync event and removes all non persistable\n * records from sync operation. The logic has meaning only for CRUD-less sync operations.\n *\n * @private\n */\nexport default class ModelPersistencyManager extends Base {\n    // region Event attachers\n\n    set eventStore(newEventStore) {\n        const me = this;\n\n        me.eventStoreDetacher && me.eventStoreDetacher();\n        me._eventStore = newEventStore;\n        if (newEventStore && newEventStore.autoCommit) {\n            me.eventStoreDetacher = newEventStore.ion({\n                beforecommit : me.onEventStoreBeforeSync,\n                thisObj      : me,\n                detachable   : true,\n                // Just in case\n                prio         : 100\n            });\n        }\n    }\n\n    get eventStore() {\n        return this._eventStore;\n    }\n\n    set resourceStore(newResourceStore) {\n        const me = this;\n\n        me.resourceStoreDetacher && me.resourceStoreDetacher();\n        me._resourceStore = newResourceStore;\n\n        if (newResourceStore && newResourceStore.autoCommit) {\n            me.resourceStoreDetacher = newResourceStore.ion({\n                beforecommit : me.onResourceStoreBeforeSync,\n                thisObj      : me,\n                detachable   : true,\n                // Just in case\n                prio         : 100\n            });\n        }\n    }\n\n    get resourceStore() {\n        return this._resourceStore;\n    }\n\n    set assignmentStore(newAssignmentStore) {\n        const me = this;\n\n        me.assignmentStoreDetacher && me.assignmentStoreDetacher();\n        me._assignmentStore = newAssignmentStore;\n\n        if (newAssignmentStore && newAssignmentStore.autoSync) {\n            me.assignmentStoreDetacher = newAssignmentStore.ion({\n                beforecommit : me.onAssignmentStoreBeforeSync,\n                thisObj      : me,\n                detachable   : true,\n                // Just in case\n                prio         : 100\n            });\n        }\n    }\n\n    get assignmentStore() {\n        return this._assignmentStore;\n    }\n\n    set dependencyStore(newDependencyStore) {\n        const me = this;\n\n        me.dependencyStoreDetacher && me.dependencyStoreDetacher();\n        me._dependencyStore = newDependencyStore;\n\n        if (newDependencyStore && newDependencyStore.autoSync) {\n            me.dependencyStoreDetacher = newDependencyStore.ion({\n                beforecommit : me.onDependencyStoreBeforeSync,\n                thisObj      : me,\n                detachable   : true,\n                // Just in case\n                prio         : 100\n            });\n        }\n    }\n\n    get dependencyStore() {\n        return this._dependencyStore;\n    }\n\n    // endregion\n\n    // region Event handlers\n\n    onEventStoreBeforeSync({ changes }) {\n        const me = this;\n        me.removeNonPersistableRecordsToCreate(changes);\n        return me.shallContinueSync(changes);\n    }\n\n    onResourceStoreBeforeSync({ changes }) {\n        const me = this;\n        me.removeNonPersistableRecordsToCreate(changes);\n        return me.shallContinueSync(changes);\n    }\n\n    onAssignmentStoreBeforeSync({ changes }) {\n        const me = this;\n        me.removeNonPersistableRecordsToCreate(changes);\n        return me.shallContinueSync(changes);\n    }\n\n    onDependencyStoreBeforeSync({ changes }) {\n        const me = this;\n        me.removeNonPersistableRecordsToCreate(changes);\n        return me.shallContinueSync(changes);\n    }\n\n    // endregion\n\n    // region Management rules\n\n    removeNonPersistableRecordsToCreate(changes) {\n        const recordsToCreate = changes.added || [];\n        let r, i;\n\n        // We remove from the array we iterate thus we iterate from end to start\n        for (i = recordsToCreate.length - 1; i >= 0; --i) {\n            r = recordsToCreate[i];\n            if (!r.isPersistable) {\n                recordsToCreate.splice(recordsToCreate.indexOf(r), 1);\n            }\n        }\n\n        // Prevent empty create request\n        if (recordsToCreate.length === 0) {\n            changes.added.length = 0;\n        }\n    }\n\n    shallContinueSync(options) {\n        return Boolean((options.added && options.added.length > 0) ||\n            (options.modified && options.modified.length > 0) ||\n            (options.removed && options.removed.length > 0));\n    }\n\n    // endregion\n}\n","import VersionHelper from '../../Core/helper/VersionHelper.js';\nimport ProjectModelMixin from './mixin/ProjectModelMixin.js';\nimport ProjectCurrentConfig from './mixin/ProjectCurrentConfig.js';\nimport ModelPersistencyManager from '../data/util/ModelPersistencyManager.js';\n/* <remove-on-release> */\nimport { SchedulerBasicProjectMixin } from '../../Engine/quark/model/scheduler_basic/SchedulerBasicProjectMixin.js';\n/* </remove-on-release> */\nimport { SchedulerCoreProjectMixin } from '../../Engine/quark/model/scheduler_core/SchedulerCoreProjectMixin.js';\nimport EventModel from './EventModel.js';\nimport DependencyModel from './DependencyModel.js';\nimport ResourceModel from './ResourceModel.js';\nimport AssignmentModel from './AssignmentModel.js';\nimport EventStore from '../data/EventStore.js';\nimport DependencyStore from '../data/DependencyStore.js';\nimport ResourceStore from '../data/ResourceStore.js';\nimport AssignmentStore from '../data/AssignmentStore.js';\n\nconst EngineMixin = /* <remove-on-release> */globalThis.bryntum?.useBasicEngine ? SchedulerBasicProjectMixin : /* </remove-on-release> */SchedulerCoreProjectMixin;\n\n/**\n * @module Scheduler/model/ProjectModel\n */\n\n/**\n * This class represents a global project of your Scheduler - a central place for all data.\n *\n * It holds and links the stores usually used by Scheduler:\n *\n * - {@link Scheduler.data.EventStore}\n * - {@link Scheduler.data.ResourceStore}\n * - {@link Scheduler.data.AssignmentStore}\n * - {@link Scheduler.data.DependencyStore}\n * - {@link #config-timeRangeStore TimeRangeStore}\n * - {@link Scheduler.data.ResourceTimeRangeStore}\n *\n * The project uses a calculation engine to normalize dates and durations. It is also responsible for\n * handling references between models, for example to link an event via an assignment to a resource. These operations\n * are asynchronous, a fact that is hidden when working in the Scheduler UI but which you must know about when performing\n * more advanced operations on the data level.\n *\n * When there is a change to data that requires something else to be recalculated, the project schedules a calculation (a\n * commit) which happens moments later. It is also possible to trigger these calculations directly. This snippet illustrate\n * the process:\n *\n 1. Something changes which requires the project to recalculate, for example adding a new task:\n *\n * ```javascript\n * const [event] = project.eventStore.add({ startDate, endDate });\n * ```\n *\n * 2. A recalculation is scheduled, thus:\n *\n * ```javascript\n * event.duration; // <- Not yet calculated\n * ```\n *\n * 3. Calculate now instead of waiting for the scheduled calculation\n *\n * ```javascript\n * await project.commitAsync();\n *\n * event.duration; // <- Now available\n * ```\n *\n * ## Using inline data\n *\n * The project provides settable property {@link Scheduler.crud.AbstractCrudManager#property-inlineData} that can\n * be used to get data from all its stores at once and to set this data as well. Populating the stores this way can\n * be useful if you cannot or you do not want to use CrudManager for server requests but you pull the data by other\n * means and have it ready outside of ProjectModel. Also, the data from all stores is available in a single\n * assignment statement.\n *\n * ### Getting data\n * ```javascript\n * const data = scheduler.project.inlineData;\n *\n * // use the data in your application\n * ```\n *\n * ### Setting data\n * ```javascript\n * const data = // your function to pull server data\n *\n * scheduler.project.inlineData = data;\n * ```\n *\n * ## Monitoring data changes\n *\n * While it is possible to listen for data changes on the projects individual stores, it is sometimes more convenient\n * to have a centralized place to handle all data changes. By listening for the {@link #event-change change event} your\n * code gets notified when data in any of the stores changes. Useful for example to keep an external data model up to\n * date:\n *\n * ```javascript\n * const scheduler = new Scheduler({\n *     project: {\n *         listeners : {\n *             change({ store, action, records }) {\n *                 const { $name } = store.constructor;\n *\n *                 if (action === 'add') {\n *                     externalDataModel.add($name, records);\n *                 }\n *\n *                 if (action === 'remove') {\n *                     externalDataModel.remove($name, records);\n *                 }\n *             }\n *         }\n *     }\n * });\n * ```\n *\n * ## Built in StateTrackingManager\n *\n * The project also has a built in {@link Core.data.stm.StateTrackingManager StateTrackingManager} (STM for short), that\n * handles undo/redo for the project stores (additional stores can also be added). You can enable it to track all\n * project store changes:\n *\n * ```javascript\n * // Turn on auto recording when you create your Scheduler:\n * const scheduler = new Scheduler({\n *    project : {\n *        stm : {\n *            autoRecord : true\n *        }\n *    }\n * });\n *\n * // Undo a transaction\n * project.stm.undo();\n *\n * // Redo\n * project.stm.redo();\n * ```\n *\n * Check out the `undoredo` demo to see it in action.\n *\n * @extends Core/data/Model\n * @mixes Scheduler/model/mixin/ProjectModelMixin\n * @uninherit Core/data/mixin/TreeNode\n */\nexport default class ProjectModel extends ProjectCurrentConfig(ProjectModelMixin(EngineMixin)) {\n    static get $name() {\n        return 'ProjectModel';\n    }\n\n    //region Inline data configs & properties\n\n    /**\n     * @hidefields id, readOnly, children, parentId, parentIndex\n     */\n\n    /**\n     * Get/set {@link #property-eventStore} data.\n     *\n     * Always returns an array of {@link Scheduler.model.EventModel EventModels} but also accepts an array of\n     * its configuration objects as input.\n     *\n     * @member {Scheduler.model.EventModel[]} events\n     * @accepts {Scheduler.model.EventModel[]|EventModelConfig[]}\n     * @category Inline data\n     */\n    /**\n     * Data use to fill the {@link #property-eventStore}. Should be an array of\n     * {@link Scheduler.model.EventModel EventModels} or its configuration objects.\n     *\n     * @config {Scheduler.model.EventModel[]|EventModelConfig[]} events\n     * @category Inline data\n     */\n\n    /**\n     * Get/set {@link #property-resourceStore} data.\n     *\n     * Always returns an array of {@link Scheduler.model.ResourceModel ResourceModels} but also accepts an array\n     * of its configuration objects as input.\n     *\n     * @member {Scheduler.model.ResourceModel[]} resources\n     * @accepts {Scheduler.model.ResourceModel[]|ResourceModelConfig[]}\n     * @category Inline data\n     */\n    /**\n     * Data use to fill the {@link #property-resourceStore}. Should be an array of\n     * {@link Scheduler.model.ResourceModel ResourceModels} or its configuration objects.\n     *\n     * @config {Scheduler.model.ResourceModel[]|ResourceModelConfig[]} resources\n     * @category Inline data\n     */\n\n    /**\n     * Get/set {@link #property-assignmentStore} data.\n     *\n     * Always returns an array of {@link Scheduler.model.AssignmentModel AssignmentModels} but also accepts an\n     * array of its configuration objects as input.\n     *\n     * @member {Scheduler.model.AssignmentModel[]} assignments\n     * @accepts {Scheduler.model.AssignmentModel[]|AssignmentModelConfig[]}\n     * @category Inline data\n     */\n    /**\n     * Data use to fill the {@link #property-assignmentStore}. Should be an array of\n     * {@link Scheduler.model.AssignmentModel AssignmentModels} or its configuration objects.\n     *\n     * @config {Scheduler.model.AssignmentModel[]|AssignmentModelConfig[]} assignments\n     * @category Inline data\n     */\n\n    /**\n     * Get/set {@link #property-dependencyStore} data.\n     *\n     * Always returns an array of {@link Scheduler.model.DependencyModel DependencyModels} but also accepts an\n     * array of its configuration objects as input.\n     *\n     * @member {Scheduler.model.DependencyModel[]} dependencies\n     * @accepts {Scheduler.model.DependencyModel[]|DependencyModelConfig[]}\n     * @category Inline data\n     */\n    /**\n     * Data use to fill the {@link #property-dependencyStore}. Should be an array of\n     * {@link Scheduler.model.DependencyModel DependencyModels} or its configuration objects.\n     *\n     * @config {Scheduler.model.DependencyModel[]|DependencyModelConfig[]} dependencies\n     * @category Inline data\n     */\n\n    /**\n     * Get/set {@link #property-timeRangeStore} data.\n     *\n     * Always returns an array of {@link Scheduler.model.TimeSpan TimeSpans} but also accepts an\n     * array of its configuration objects as input.\n     *\n     * @member {Scheduler.model.TimeSpan[]} timeRanges\n     * @accepts {Scheduler.model.TimeSpan[]|TimeSpanConfig[]}\n     * @category Inline data\n     */\n    /**\n     * Data use to fill the {@link #property-timeRangeStore}. Should be an array of\n     * {@link Scheduler.model.TimeSpan TimeSpans} or its configuration objects.\n     *\n     * @config {Scheduler.model.TimeSpan[]|TimeSpanConfig[]} timeRanges\n     * @category Inline data\n     */\n\n    /**\n     * Get/set {@link #property-resourceTimeRangeStore} data.\n     *\n     * Always returns an array of {@link Scheduler.model.ResourceTimeRangeModel ResourceTimeRangeModels} but\n     * also accepts an array of its configuration objects as input.\n     *\n     * @member {Scheduler.model.ResourceTimeRangeModel[]} resourceTimeRanges\n     * @accepts {Scheduler.model.ResourceTimeRangeModel[]|ResourceTimeRangeModelConfig[]}\n     * @category Inline data\n     */\n    /**\n     * Data use to fill the {@link #property-resourceTimeRangeStore}. Should be an array\n     * of {@link Scheduler.model.ResourceTimeRangeModel ResourceTimeRangeModels} or its configuration objects.\n     *\n     * @config {Scheduler.model.ResourceTimeRangeModel[]|ResourceTimeRangeModelConfig[]} resourceTimeRanges\n     * @category Inline data\n     */\n\n    //endregion\n\n    //region Legacy inline data configs & properties\n\n    /**\n     * The initial data, to fill the {@link #property-eventStore} with.\n     * Should be an array of {@link Scheduler.model.EventModel EventModels} or its configuration objects.\n     *\n     * @config {Scheduler.model.EventModel[]|EventModelConfig[]} eventsData\n     * @category Legacy inline data\n     */\n\n    /**\n     * The initial data, to fill the {@link #property-dependencyStore} with.\n     * Should be an array of {@link Scheduler.model.DependencyModel DependencyModels} or its configuration\n     * objects.\n     *\n     * @config {Scheduler.model.DependencyModel[]|DependencyModelConfig[]} [dependenciesData]\n     * @category Legacy inline data\n     */\n\n    /**\n     * The initial data, to fill the {@link #property-resourceStore} with.\n     * Should be an array of {@link Scheduler.model.ResourceModel ResourceModels} or its configuration objects.\n     *\n     * @config {Scheduler.model.ResourceModel[]|ResourceModelConfig[]} [resourcesData]\n     * @category Legacy inline data\n     */\n\n    /**\n     * The initial data, to fill the {@link #property-assignmentStore} with.\n     * Should be an array of {@link Scheduler.model.AssignmentModel AssignmentModels} or its configuration\n     * objects.\n     *\n     * @config {Scheduler.model.AssignmentModel[]|AssignmentModelConfig[]} [assignmentsData]\n     * @category Legacy inline data\n     */\n\n    //endregion\n\n    //region Store configs & properties\n\n    /**\n     * The {@link Scheduler.data.EventStore store} holding the events information.\n     *\n     * See also {@link Scheduler.model.EventModel}\n     *\n     * @member {Scheduler.data.EventStore} eventStore\n     * @category Models & Stores\n     */\n    /**\n     * An {@link Scheduler.data.EventStore} instance or a config object.\n     * @config {Scheduler.data.EventStore|EventStoreConfig} eventStore\n     * @category Models & Stores\n     */\n\n    /**\n     * The {@link Scheduler.data.DependencyStore store} holding the dependencies information.\n     *\n     * See also {@link Scheduler.model.DependencyModel}\n     *\n     * @member {Scheduler.data.DependencyStore} dependencyStore\n     * @category Models & Stores\n     */\n    /**\n     * A {@link Scheduler.data.DependencyStore} instance or a config object.\n     * @config {Scheduler.data.DependencyStore|DependencyStoreConfig} dependencyStore\n     * @category Models & Stores\n     */\n\n    /**\n     * The {@link Scheduler.data.ResourceStore store} holding the resources that can be assigned to the events in the event store.\n     *\n     * See also {@link Scheduler.model.ResourceModel}\n     *\n     * @member {Scheduler.data.ResourceStore} resourceStore\n     * @category Models & Stores\n     */\n    /**\n     * A {@link Scheduler.data.ResourceStore} instance or a config object.\n     * @config {Scheduler.data.ResourceStore|ResourceStoreConfig} resourceStore\n     * @category Models & Stores\n     */\n\n    /**\n     * The {@link Scheduler.data.AssignmentStore store} holding the assignments information.\n     *\n     * See also {@link Scheduler.model.AssignmentModel}\n     *\n     * @member {Scheduler.data.AssignmentStore} assignmentStore\n     * @category Models & Stores\n     */\n    /**\n     * An {@link Scheduler.data.AssignmentStore} instance or a config object.\n     * @config {Scheduler.data.AssignmentStore|AssignmentStoreConfig} assignmentStore\n     * @category Models & Stores\n     */\n\n    //endregion\n\n    //region Configs\n\n    static get defaultConfig() {\n        return {\n            /**\n             * The constructor of the event model class, to be used in the project. Will be set as the\n             * {@link Core.data.Store#config-modelClass modelClass} property of the {@link #property-eventStore}\n             *\n             * @config {Scheduler.model.EventModel}\n             * @typings {typeof EventModel}\n             * @category Models & Stores\n             */\n            eventModelClass : EventModel,\n\n            /**\n             * The constructor of the dependency model class, to be used in the project. Will be set as the\n             * {@link Core.data.Store#config-modelClass modelClass} property of the {@link #property-dependencyStore}\n             *\n             * @config {Scheduler.model.DependencyModel}\n             * @typings {typeof DependencyModel}\n             * @category Models & Stores\n             */\n            dependencyModelClass : DependencyModel,\n\n            /**\n             * The constructor of the resource model class, to be used in the project. Will be set as the\n             * {@link Core.data.Store#config-modelClass modelClass} property of the {@link #property-resourceStore}\n             *\n             * @config {Scheduler.model.ResourceModel}\n             * @typings {typeof ResourceModel}\n             * @category Models & Stores\n             */\n            resourceModelClass : ResourceModel,\n\n            /**\n             * The constructor of the assignment model class, to be used in the project. Will be set as the\n             * {@link Core.data.Store#config-modelClass modelClass} property of the {@link #property-assignmentStore}\n             *\n             * @config {Scheduler.model.AssignmentModel}\n             * @typings {typeof AssignmentModel}\n             * @category Models & Stores\n             */\n            assignmentModelClass : AssignmentModel,\n\n            /**\n             * The constructor to create an event store instance with. Should be a class, subclassing the\n             * {@link Scheduler.data.EventStore}\n             * @config {Scheduler.data.EventStore|Object}\n             * @typings {typeof EventStore|object}\n             * @category Models & Stores\n             */\n            eventStoreClass : EventStore,\n\n            /**\n             * The constructor to create a dependency store instance with. Should be a class, subclassing the\n             * {@link Scheduler.data.DependencyStore}\n             * @config {Scheduler.data.DependencyStore|Object}\n             * @typings {typeof DependencyStore|object}\n             * @category Models & Stores\n             */\n            dependencyStoreClass : DependencyStore,\n\n            /**\n             * The constructor to create a resource store instance with. Should be a class, subclassing the\n             * {@link Scheduler.data.ResourceStore}\n             * @config {Scheduler.data.ResourceStore|Object}\n             * @typings {typeof ResourceStore|object}\n             * @category Models & Stores\n             */\n            resourceStoreClass : ResourceStore,\n\n            /**\n             * The constructor to create an assignment store instance with. Should be a class, subclassing the\n             * {@link Scheduler.data.AssignmentStore}\n             * @config {Scheduler.data.AssignmentStore|Object}\n             * @typings {typeof AssignmentStore|object}\n             * @category Models & Stores\n             */\n            assignmentStoreClass : AssignmentStore\n        };\n    }\n\n    //endregion\n\n    //region Events\n\n    /**\n     * Fired when the engine has finished its calculations and the results has been written back to the records.\n     *\n     * ```javascript\n     * scheduler.project.on({\n     *     dataReady() {\n     *        console.log('Calculations finished');\n     *     }\n     * });\n     *\n     * scheduler.eventStore.first.duration = 10;\n     *\n     * // At some point a bit later it will log 'Calculations finished'\n     * ```\n     *\n     * @event dataReady\n     * @param {Scheduler.model.ProjectModel} source The project\n     */\n\n    //endregion\n\n    /**\n     * Silences propagations caused by the project loading.\n     *\n     * Applying the loaded data to the project occurs in two basic stages:\n     *\n     * 1. Data gets into the engine graph which triggers changes propagation\n     * 2. The changes caused by the propagation get written to related stores\n     *\n     * Setting this flag to `true` makes the component perform step 2 silently without triggering events causing reactions on those changes\n     * (like sending changes back to the server if `autoSync` is enabled) and keeping stores in unmodified state.\n     *\n     * This is safe if the loaded data is consistent so propagation doesn't really do any adjustments.\n     * By default the system treats the data as consistent so this option is `true`.\n     *\n     * ```js\n     * new Scheduler({\n     *     project : {\n     *         // We want scheduling engine to recalculate the data properly\n     *         // so then we could save it back to the server\n     *         silenceInitialCommit : false\n     *     }\n     *     ...\n     * })\n     * ```\n     *\n     * @config {Boolean} silenceInitialCommit\n     * @default true\n     * @category Advanced\n     */\n\n    construct(...args) {\n        super.construct(...args);\n\n        if (VersionHelper.isTestEnv) {\n            globalThis.bryntum.testProject = this;\n        }\n\n        // Moved here from EventStore, since project is now the container instead of it\n        this.modelPersistencyManager = this.createModelPersistencyManager();\n    }\n\n    /**\n     * Creates and returns model persistency manager\n     *\n     * @returns {Scheduler.data.util.ModelPersistencyManager}\n     * @internal\n     */\n    createModelPersistencyManager() {\n        return new ModelPersistencyManager({\n            eventStore      : this,\n            resourceStore   : this.resourceStore,\n            assignmentStore : this.assignmentStore,\n            dependencyStore : this.dependencyStore\n        });\n    }\n\n    doDestroy() {\n        this.modelPersistencyManager.destroy();\n        super.doDestroy();\n    }\n\n    // To comply with TaskBoards expectations\n    get taskStore() {\n        return this.eventStore;\n    }\n}\n\nProjectModel.applyConfigs = true;\n\nProjectModel.initClass();\n"],"names":["diffSecond","date","diff","Date","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","later","version","Array","prototype","indexOf","searchElement","TypeError","t","Object","len","length","n","arguments","Number","Infinity","Math","floor","abs","k","max","String","trim","replace","array","sort","arr","zeroIsLast","a","b","push","shift","next","val","values","extent","cur","zeroIsLargest","nextIdx","i","nextInvalid","min","zeroVal","start","undefined","prev","prevIdx","prevInvalid","day","D","name","range","d","call","isValid","DExtent","month","M","DAYS_IN_MONTH","dy","DStart","Y","end","DEnd","nextRollover","DMax","prevRollover","dayOfWeekCount","dc","dcExtent","ceil","dcStart","dcEnd","dcMax","getTime","dayOfWeek","dw","getDay","dayOfYear","DAY","year","dyExtent","dyMax","hour","h","getHour","hStart","hEnd","isUTC","minute","m","getMin","mStart","mEnd","s","inc","MIN","SEC","MStart","MEnd","second","getSec","cache","time","weekOfMonth","wm","wmExtent","wmStart","wmEnd","wmMax","weekOfYear","wy","wThur","YThur","WEEK","wyExtent","dwFirst","dwLast","wyStart","wyEnd","wyThur","wyMax","getYear","YStart","YEnd","NEVER","fullDate","fd","modifier","after","constraint","value","startDate","before","compile","schedDef","constraints","constraintsLen","tickConstraint","key","nameParts","split","mod","vals","ra","rb","compareFn","dir","nextVal","maxAttempts","done","curVal","newVal","result","compare","tick","tickSafe","tickStart","schedule","sched","Error","schedules","schedulesLen","exceptions","exceptionsLen","j","getInstances","count","endDate","isRange","loopCount","schedStarts","exceptStarts","results","isForward","lastResult","rStart","rEnd","setNextStarts","setRangeStarts","findNext","updateRangeStarts","calcRangeOverlap","updateNextStarts","maxEndDate","calcMaxEndDate","calcEnd","r","getStart","tickStarts","toString","cleanDate","isNaN","valueOf","schedArr","startsArr","rangesArr","nextStart","newStart","minEndDate","exceptsArr","nextRange","prevRange","setTimeout","fn","scheduleTimeout","now","isDone","clear","clearTimeout","setInterval","timezone","useLocalTime","build","UTC","get","localTime","HOUR","period","parse","cron","expr","hasSeconds","NAMES","JAN","FEB","MAR","APR","MAY","JUN","JUL","AUG","SEP","OCT","NOV","DEC","SUN","MON","TUE","WED","THU","FRI","SAT","REPLACEMENTS","FIELDS","getValue","offset","cloneSchedule","clone","field","slice","add","addHash","curSched","hash","addWeekday","except1","except2","addRange","item","incSplit","rangeSplit","isHash","itemSorter","parseExpr","components","f","component","items","prepareExpr","prepared","toUpperCase","e","recur","curArr","curName","every","applyMin","applyMax","last","x","c","on","first","dayOfMonth","onWeekend","onWeekday","customModifier","id","custom","customPeriod","startingOn","between","splice","and","except","text","str","pos","input","error","TOKENTYPES","eof","rank","dayName","monthName","yearIndex","dayInstance","weekday","weekend","at","also","of","onthe","through","jan","feb","mar","apr","may","jun","jul","aug","sep","oct","nov","dec","sun","mon","tue","wed","thu","fri","sat","fir","sec","thi","type","startPos","endPos","peek","expected","scanTokens","whiteSpace","token","curInput","scanToken","substring","exec","index","scan","expectedToken","parseThroughExpr","tokenType","parseTokenValue","checkAndParse","nums","parseRanges","concat","parseEvery","num","parseTimePeriod","parseToken","parseOnThe","parseScheduleExpr","timePeriod","found","convertString","output","parts","parseInt","toLowerCase","iterable","gen1Pending","gen2Pending","iterator","gen1","Symbol","gen2","inBatchesBySize","batchSize","runningBatch","el","filter","func","drop","howMany","some","map","reduce","initialAcc","acc","uniqueOnly","seen","Set","has","uniqueOnlyBy","uniqueBy","takeWhile","iterators","concatIterable","iteratorsProducer","ChainedIteratorClass","constructor","derive","copy","iter1","iter2","toArray","from","order","toSet","toMap","Map","flush","element","memoize","MemoizedIteratorClass","ChainedIterator","CI","elements","$iterator","$iterable","alreadyConsumed","MemoizedIterator","MI","MixinInstanceOfProperty","MixinStateProperty","MixinWalkDepthState","baseEl","sourceEl","$elementsByTopoLevel","$topoLevels","linearizedByTopoLevelsSource","linearizedByTopoLevels","new","props","me","assign","topoLevels","buildTopoLevels","elementsByTopoLevel","keys","level1","level2","buildElementsByTopoLevel","getOrCreateLevel","topoLevel","elementsAtLevel","set","maxTopoLevel","baseElements","walkDepthState","requirements","mixin","mixins","level","mixin1","mixin2","MIXIN_ID","identity","ZeroBaseClass","MixinState","baseClass","identitySymbol","mixinLambda","$minimalClass","getMixinState","symbol","mixinLambdaWrapper","base","extendedClass","defineProperty","hasInstance","isInstanceOfStatic","minimalClass","buildMinimalClass","getBaseClassMixinId","mixinId","baseClassesIds","newId","self","baseCls","minimalClassConstructor","cls","nextHash","fromCharCode","wrapperCls","minimalClassesByLinearHash","mix","Mixin","$","bind","isMixinClass","getPrototypeOf","hasOwnProperty","required","lastRequirement","forEach","requirement","mixinState","currentBaseClass","currentIsSub","isPrototypeOf","currentIsSuper","instance","Boolean","isInstanceOf","MixinAny","TimeUnit","ConstraintType","SchedulingMode","DependencyValidationResult","DependencyType","DependenciesCalendar","ProjectType","Direction","ConstraintIntervalSide","MIN_DATE","MAX_DATE","isDateFinite","EdgeInclusion","CalendarIteratorResult","CalendarCache","config","cacheFilledStartDate","cacheFilledEndDate","intervalsCachingChunkDuration","intervalsCachingChunkUnit","Day","maxCacheExtendCycles","maxRange","includeWrappingRangeFrom","ensureCacheFilledForInterval","intervalCache","includeWrappingRange","cacheFilledStartDateN","cacheFilledEndDateN","startDateN","endDateN","fillCache","_1","_2","forEachAvailabilityInterval","options","scope","_options$maxRange","cacheCursorDate","cursorDate","rangeStart","cycle","DateHelper","interval","getIntervalOf","Left","Right","intervalStartDate","intervalEndDate","FullRangeIterated","MaxRangeReached","countFrom","countTill","cacheInterval","StoppedByIterator","getNextInterval","getPrevInterval","MaxCacheExtendCyclesReached","stripDuplicates","CalendarCacheInterval","intervals","calendar","includeInterval","combineWith","getIsWorking","isWorking","normalizeIntervals","filtered","interval1","interval2","getPriorityField","binarySearch","comparator","left","right","mid","IndexPosition","SortedMap","search","insertAt","setValueAt","getEntryAt","getKeyAt","getValueAt","delete","deleteAt","size","indexOfKey","Exact","Next","getAllEntries","IntervalCache","points","leftInfinityKey","rightInfinityKey","emptyInterval","combineIntervalsFn","getDateAt","getPointAt","edgeInclusion","startDateIndex","getIntervalWithStartDateIndex","addInterval","extendInterval","curIndex","lastUpdatedPoint","inclusion","curDate","existingInterval","getSummary","label","CalendarCacheSingle","staticIntervalsCached","unspecifiedTimeInterval","_this$calendar$projec","cacheStaticIntervals","parentCache","timeZone","project","forEachRecurrentInterval","startSchedule","getStartDateSchedule","endSchedule","getEndDateSchedule","wrappingStartDate","wrappingEndDate","nextEndDate","getStartOfNextDay","wrappingStartDates","wrappingEndDates","startDates","endDates","recStartDate","recEndDate","TimeZoneHelper","toTimeZone","existingCacheInterval","forEachStaticInterval","_this$calendar$projec2","intervalStore","isStatic","isRecurrent","AbstractPartOfProjectGenericMixin","commitAsync","$project","calculateProject","setProject","getProject","getAssignmentStore","assignmentStore","getDependencyStore","dependencyStore","getEventStore","eventStore","getResourceStore","resourceStore","getCalendarManagerStore","calendarManagerStore","AbstractPartOfProjectStoreMixin","Store","superProto","isLoadingData","disableHasLoadedDataToCommitFlag","construct","asyncEvents","remove","removeAll","change","refresh","move","update","trigger","eventName","param","asyncEvent","asyncAction","action","_objectSpread","isEngineReady","isWritingData","eventsSuspended","dataReadyDetacher","queuedDataReadyEvents","ion","dataReady","once","setStoreData","data","_this$project","syncDataOnLoad","hasLoadedDataToCommit","store","doAutoCommit","suspendCount","addAsync","records","silent","insertAsync","insert","loadDataAsync","AbstractPartOfProjectModelMixin","Model","joinStore","joinedProject","isRepopulatingStores","joinProject","unjoinStore","isReplacing","isLeavingProjectStore","isDestroying","leaveProject","graph","stores","find","setAsync","fieldName","getAsync","_this$project2","isStmRestoring","isRestoringData","stm","isRestoring","CalendarIntervalMixin","fields","defaultValue","getCalendar","resetPriority","priorityField","getDepth","priority","recurrentStartDate","recurrentEndDate","parseDateSchedule","JSON","startDateSchedule","endDateSchedule","CalendarIntervalStore","defaultConfig","modelClass","UnspecifiedTimeIntervalModel","CorePartOfProjectGenericMixin","_this$project3","_this$project4","_this$project5","getEventById","_this$eventStore","getById","getDependencyById","_this$dependencyStore","getResourceById","_this$resourceStore","getAssignmentById","_this$assignmentStore","getCalendarById","_this$calendarManager","AbstractCalendarMixin","CalendarMixin","subStore","intervalStoreClass","meta","intervalsStore","initIntervalsStore","storeClass","getDefaultConfiguration","calendarIntervalModelClass","processIntervalsStoreData","bumpVersion","isDefault","defaultCalendar","childLevel","maxCalendarRange","calendarCache","accumulateWorkingTime","durationMs","finalDate","remainingDurationInMs","adjustDurationToDST","calendarCacheInterval","dstDiff","getTimezoneOffset","calculateDurationMs","allowNegative","duration","multiplier","calculateEndDate","res","calculateStartDate","skipNonWorkingTime","workingDate","addIntervals","removeInterval","removeIntervals","clearIntervals","clearCache","$calendarCache","unspecifiedTimeIsWorking","parent","isRoot","resetPriorityOfAllIntervals","traverse","insertChild","child","isArray","doDestroy","destroy","isDayHoliday","clearTime","getNext","hasWorkingTime","_intervalStartDate","_intervalEndDate","getDailyHolidaysRanges","getWorkingTimeRanges","entry","getNonWorkingTimeRanges","iconCls","isWorkingTime","fullyContained","workingTimeStart","AbstractHasAssignmentsMixin","HasAssignmentsMixin","getAssignmentFor","resource","assignment","_this$assigned","assigned","isAssignedTo","assignmentCls","addAssignment","event","unassign","removeAssignment","isInActiveTransaction","assignmentsForRemoval","afterEventRemoval","CorePartOfProjectModelMixin","$isCalculating","$changed","$beforeChange","invalidate","bufferedCommitAsync","getCurrentOrProposed","_this$get","hasCurrentOrProposed","propose","changes","_this$recurringTimeSp","recurringTimeSpan","setChanged","setData","calculateInvalidated","finalizeInvalidated","isNotNumber","CIFromSetOrArrayOrValue","delay","Promise","resolve","format","match","number","AbstractAssignmentStoreMixin","allAssignmentsForRemoval","AbstractCalendarManagerStoreMixin","_this$rootNode","rootNode","isDestroyed","record","AbstractDependencyStoreMixin","dependenciesForRemoval","allDependenciesForRemoval","dataAddRemoveActions","AbstractEventStoreMixin","onDataChange","_event$removed","isAddRemove","removed","onNodeRemoveChild","children","flags","toRemove","dependency","processRecord","eventRecord","isDataset","existingRecord","AbstractResourceStoreMixin","afterResourceRemoval","resourceRecord","CoreEventMixin","_startDate","_endDate","_duration","_ref","_this$_startDate","_ref2","_this$_endDate","_ref3","_this$_duration","proposeStartDate","proposeEndDate","proposeDuration","inSet","fromRelationUpdate","skipAccessors","getStartDate","keepDuration","_this$startDate","inSetting","setStartDate","getEndDate","_this$endDate","setEndDate","getDuration","unit","keepStart","durationUnit","setDuration","getDurationUnit","changed","_me$assignmentStore","unresolved","storage","findItem","_me$assignmentStore2","cachedAssignments","applyValue","useProp","afterChange","wasSet","changedStart","changedEnd","changedDuration","calculate","currentOrProposedStartDate","currentOrProposedEndDate","currentOrProposedDuration","currentOrProposedDurationUnit","hourDuration","targetDuration","as","CoreResourceMixin","getResourcesAssignments","query","skipAccessor","CoreAssignmentMixin","isEqual","persist","$master","isPerformingCommit","skipInvalidateIndices","invalidateIndices","resolved","_changed$resource","resourceId","isModel","_changed$event","eventId","CorePartOfProjectStoreMixin","onCommitAsync","emptySet","CoreAssignmentStoreMixin","extraKeys","property","unique","getEventsAssignments","$original","updateIndices","rebuildIndices","afterLoadData","linkAssignments","modelName","masterStore","unlinkAssignments","_assignment$modelName","_assignment$modelName2","getData","CoreCalendarMixin","CoreCalendarManagerStoreMixin","tree","CoreDependencyMixin","_this$dependencyStore2","fromEvent","toEvent","_this$eventStore2","_this$eventStore3","CoreDependencyStoreMixin","getIncomingDepsForEvent","getOutgoingDepsForEvent","CoreHasAssignmentsMixin","_this$project$assignm","$cachedAssignments","deep","ObjectHelper","isObject","skipFieldIdentifiers","CoreHasDependenciesMixin","outgoingDeps","incomingDeps","SchedulerCoreEvent","CoreEventStoreMixin","_this$assignmentStore2","CoreResourceStoreMixin","removing","_this$assignmentStore3","EventsWrapper","Events","DelayableWrapper","Delayable","AbstractProjectMixin","isInitialCommit","isInitialCommitPerformed","isLoadingInlineData","silenceInitialCommit","repopulateStore","repopulateReplica","deferUntilRepopulationIfNeeded","deferId","args","attachStore","detachStore","getStm","SchedulerCoreProjectMixin","configurable","eventModelClass","assignmentModelClass","resourceModelClass","dependencyModelClass","calendarModelClass","eventStoreClass","assignmentStoreClass","resourceStoreClass","dependencyStoreClass","calendarManagerStoreClass","assignmentsData","calendarsData","dependenciesData","eventsData","resourcesData","$invalidated","ongoing","_eventStore$assignmen","isAssignmentStore","isSharingAssignmentStore","hasInlineData","loadInlineData","_me$eventStore","_me$dependencyStore","_me$resourceStore","_me$calendarManagerSt","_me$stm","tasksData","commitLoad","joinStoreRecords","unJoinStoreRecords","node","resolveStoreAndModelClass","setEventStore","changeEventStore","oldStore","addStore","hasStore","removeStore","oldEvent","newEvent","updateEventStore","setAssignmentStore","changeAssignmentStore","updateAssignmentStore","setResourceStore","changeResourceStore","oldResource","newResource","updateResourceStore","setDependencyStore","changeDependencyStore","updateDependencyStore","setCalendarManagerStore","changeCalendarManagerStore","_calendarManagerStore","_calendarManagerStore2","updateCalendarManagerStore","$calendar","effectiveCalendar","addEvent","addResource","addDependency","hasPendingAutoCommit","hasTimeout","unScheduleAutoCommit","doCommitAsync","silenceCommit","_store$suspendAutoCom","suspendAutoCommit","isCalculated","beginBatch","endBatch","_store$resumeAutoComm","resumeAutoCommit","propagateAsync","isValidDependency","$stm","StateTrackingManager","disabled","restoringStop","disable","enable","applyConfigs","Target","AbstractCrudManagerValidation","$name","validateResponse","skipSuccessProperty","crudLoadValidationWarningPrefix","crudSyncValidationWarningPrefix","supportShortSyncResponseNote","disableValidationNote","crudLoadValidationMandatoryStores","getStoreLoadResponseWarnings","storeInfo","responded","expectedResponse","messages","storeId","mandatoryStores","rows","includes","getLoadResponseWarnings","response","success","forEachCrudStore","stringify","validateLoadResponse","console","warn","join","getStoreSyncResponseWarnings","requested","missingRows","missingRemoved","phantomIdField","idField","respondedRows","respondedRemoved","showSupportShortSyncResponseNote","added","row","missingIds","supportShortSyncResponse","updated","missingUpdatedRows","getSyncResponseWarnings","requestDesc","request","pack","warnings","validateSyncResponse","AbstractCrudManagerError","CrudManagerRequestError","cfg","_cfg$request","_this$request","message","StringHelper","capitalize","storeSortFn","lhs","rhs","sortProperty","storeLoadSortFn","storeSyncSortFn","_class","$$meta","$meta","isEvents","isDelayable","AbstractCrudManagerMixin","Base","crudRevision","crudStores","storeIdProperty","crudFilterParam","transport","trackResponseType","phantomParentIdField","autoLoad","autoSyncTimeout","autoSync","resetIdsBeforeSync","syncApplySequence","orderedCrudStores","writeAllFields","crudIgnoreUpdates","autoSyncSuspendCounter","crudLoaded","applyingLoadResponse","applyingSyncResponse","callOnFunctions","isCrudManager","_requestId","activeRequests","crudStoresIndex","afterConstruct","_autoLoadPromise","doAutoLoad","loadUrl","_this$transport","_this$transport$load","load","url","updateLoadUrl","setPath","syncUrl","_this$transport2","_this$transport2$sync","sync","updateSyncUrl","getStoreDescriptor","storeDesc","getStore","fillStoreDescriptor","descriptor","updateCrudStoreIndex","getCrudStore","storeDescriptor","thisObj","_crudStores","addCrudStore","loadPriority","syncPriority","_orderedCrudStores","_syncApplySequence","addStoreToApplySequence","internalAddCrudStore","setCrudManager","crudManager","pageSize","autoCommit","createUrl","updateUrl","deleteUrl","readUrl","bindCrudStoreListeners","position","fromStore","_store","ArrayHelper","asArray","addPrioritizedStore","hasCrudStore","findInsertionIndex","hasApplySequenceStore","_this$crudStores","removeCrudStore","foundStore","unbindCrudStoreListeners","removeStoreFromApplySequence","addConfirmed","detachListeners","collection","sequenceKeys","findIndex","onCrudStoreDestroy","source","onCrudStoreChange","crudStoreHasChanges","scheduleAutoSync","suspendAutoSync","resumeAutoSync","doSync","isAutoSyncSuspended","catch","triggerFailedRequestEvents","responseText","fetchOptions","requestType","responseOptions","internalOnResponse","decode","revision","applyResponse","emitCrudStoreEvents","suspendChangesTracking","resumeChangesTracking","skipChangeCheck","isBatchingChanges","isCrudStoreDirty","eventParams","getLoadPackage","requestId","optionsCopy","_store$store","opts","params","page","currentPage","loadCrudStore","append","loadDataToCrudStore","__loading","loadCrudManagerData","isCrudManagerLoading","isCrudManagerSyncing","isLoadingOrSyncing","reject","_options","cancelRequest","desc","Objects","encode","onCrudRequestSuccess","failure","onCrudRequestFailure","sendRequest","cancelled","getActiveCrudManagerRequest","prepareAddedRecordData","isTree","subStoreFields","allFields","persistableData","isPhantom","deletePath","allCount","dataSource","getRange","prepareAdded","list","prepareUpdated","recordData","modificationDataToWrite","getCrudStoreChanges","isEmpty","prepareRemoved","modified","getChangesetPackage","forceSync","getRowsToApplyChangesTo","storeResponse","storePack","_rows","_removed","idDataSource","requestUpdated","requestRemoved","remote","_storeResponse$rows","_storeResponse$remove","respondedIds","responseRecord","getPath","applyChangesToStore","getFieldDataSource","_data$phantomIdField","extraLogEntries","updateData","_updateData$phantomId","_storePack$added","_storePack$updated","recordRequest","extraLogInfo","log","applyChangeset","logEntry","applySyncResponse","applyingChangeset","_request$pack","applyLoadResponse","responseType","transformFn","logChanges","storeLog","activeSyncPromise","finally","rawResponse","_request","_fetchOptions$abortCo","signal","abortController","wasAborted","aborted","acceptChanges","revertChanges","revertCrudStoreChanges","_defineProperty","AjaxTransport","defaultMethod","requestPromise","_requestPromise$abort","abort","shouldUseBodyForRequestData","packCfg","method","paramName","transportConfig","requestConfig","body","headers","ajaxPromise","resultPromise","performSend","queryParams","AjaxHelper","fetch","_me$trigger","then","_me$trigger2","ok","callback","beforeSendResult","isPromise","_ajaxPromise$abort","_ajaxPromise","JsonEncoder","encoder","requestData","_this$encoder","safeJsonStringify","safeJsonParse","CrudManagerView","LoadMaskable","loadMask","onCrudManagerLoadStart","applySyncMask","syncMask","masked","Mask","mergeConfigs","loadMaskDefaults","bindCrudManager","loadStart","loadCanceled","syncStart","syncCanceled","requestFail","responseReceived","_this$toggleEmptyText","applyLoadMask","toggleEmptyText","onCrudManagerSyncStart","onCrudManagerRequestFinalize","successful","_me$toggleEmptyText","applyMaskError","L","onCrudManagerLoadCanceled","onCrudManagerSyncCanceled","onCrudManagerLoad","onCrudManagerSync","onCrudManagerRequestFail","onAjaxTransportResponseReceived","clearMaskDelay","widgetClass","testConfig","PartOfProject","AssignmentModelMixin","fieldMap","eventResourceKey","buildEventResourceKey","eventKey","resourceKey","internalId","buildIndexKey","fieldToKeys","_toSet$resource","isProAssignmentModel","_toSet$event","_me$resource","_me$project","propagatingSyncChanges","_this$resource","_this$event","_this$event2","resourceName","_this$resource2","getResource","isAssignment","isPersistable","_this$event3","unjoinedStores","hasGeneratedId","isCreating","round","units","shouldRecordFieldChange","oldValue","newValue","oldIdMap","EngineMixin","AssignmentModel","asId","exposeProperties","_$name","AssignmentStoreMixin","newAssignments","_assignment$event","createRecord","isSyncingDataOnLoad","includesAssignment","addIndex","dependentOn","_storage","getOccurrence","originalAssignment","occurrence","isOccurrence","isOccurrenceAssignment","instanceMeta","instanceOrId","occurrenceInstanceMeta","occurrenceAssignment","instanceId","occurrenceMeta","mapAssignmentsForEvent","filterFn","fnSet","filterFnSet","assignments","mapResult","mapAssignmentsForResource","getAssignmentsForEvent","removeAssignmentsForEvent","getAssignmentsForResource","removeAssignmentsForResource","getResourcesForEvent","resources","getEventsForResource","_resource","events","assignEventToResource","assignmentSetupFn","removeExistingAssignments","_r$$original","usesSingleAssignment","_event$assignments","isEventAssignedToResource","existingAssignment","getAssignmentForEventAndResource","_assignmentSetupFn","unassignEventFromResource","assignmentsToRemove","_a$resource","AjaxStore","AssignmentStore","ResourceStoreMixin","isResourceStore","autoTree","isResourceModel","onRecordIdChange","isFieldModified","isChangingId","updateAssignmentResourceIds","allResourceRecords","_allResourceRecords","getAllDataRecords","getAvailableResources","isDateRangeAvailable","ResourceModelMixin","syncId","getEvents","unassignAll","initials","names","firstInitial","lastInitial","_calendar$isWorkingTi","ResourceModel","GridRowModel","ResourceStore","EventStoreMixin","filtersFunction","FunctionHelper","returnTrue","getEventCounts","storeFilterFn","isFiltered","reapplyFilterOnAdd","dateMap","forEachScheduledEvent","getTotalTimeSpan","earliest","latest","lastTotalTimeSpan","isEventPersistable","excludeEvent","generatedParent","allEvents","currentEvent","eventToRemove","isScheduled","intersectSpans","filterEventsForResource","reassignEventFromResourceToResource","newResourceId","notRecurring","isRecurring","GetEventsMixin","startOnly","includeOccurrences","allowPartial","onlyAssigned","dayTime","getDateIndex","lastDateRange","passedFilter","ignoreFilters","setDate","dateFilter","eventStartDate","hasBatchedChange","eventEndDate","isMilestone","betweenLesserEqual","newDateRange","processConfiguredListeners","old","getEventsAsMap","getEventsAsArray","candidateEvents","dateIndex","useDayIndex","eventSet","indexName","recurringEvents","startOfDay","coincidingEvents","apply","getOccurrencesForDateRange","_dateMap","baseEventFilter","_me$recurringEvents","_coincidingEvents","occurrences","lastDate","bucket","lastInteresctingDate","allDay","dateKey","indexNameMap","indexProps","emptyArray","freeze","MILLIS_PER_DAY","DayTime","EventDayIndex","MIDNIGHT","users","_this$dayTime$startOf","dateMS","endDateMS","_eventRecord$endDate$","_eventRecord$endDate","create","returnKey","initialized","initialize","ret","allValues","matches","startShift","removeEvent","_this$dayTime$startOf2","_endDate$getTime","replaced","_wasSet$startDate","_wasSet$endDate","addedCount","removedCount","replacedCount","outgoingEvent","isParent","register","unregister","proto","DayIndexMixin","dayIndices","_super$afterLoadData","syncIndices","onDataReplaced","onModelChange","invalidateDayIndices","_this$dayIndices","dayIndex","registerDayIndex","_this$dayIndices2","unregisterDayIndex","SharedEventStoreMixin","removeUnassignedEvent","singleAssignment","isEventModel","_project$assignmentSt","attachToAssignmentStore","assignmentStoreChange","prio","isChained","_usesSingleAssignment","processRecords","eventRecords","_this$stm","assignmentsToAdd","reassignedFromReplace","generateId","joinRecordsToStore","skipEnforcingSingleAssignment","$processResourceIds","processResourceIds","useRawData","disableDefaultValue","disableDuplicateIdCheck","disableTypeConversion","verifyNoGeneratedIds","loadData","onBeforeRemoveAssignment","isRemoving","isSettingData","assignmentRecord","isRemoved","onProjectAssignmentStoreChange","addPreCommit","isAssigning","isEvent","beforeRemove","removePreCommit","_me$getById","removeAllPreCommit","allRecords","isAssign","RecurringTimeSpansMixin","globalOccurrences","refreshRecurringEventsCache","isRecurrenceRelatedFieldChange","removeOccurrences","timeSpan","getOccurrencesForTimeSpan","recurrence","forEachOccurrence","getRecurringTimeSpans","RecurringEventsMixin","getRecurringEvents","supportsRecurring","dateFieldsToConvert","constraintDate","deadlineDate","TimeZonedDatesMixin","TimeSpan","setLocalDate","_inTimeZone","getLocalDate","fromTimeZone","rawChanges","getFieldPersistentValue","_field$field","convertToTimeZone","metaModified","convertFields","isTask","manuallyScheduled","clearChanges","allowNull","internal","column","normalize","_eventStore","_me$stores","isEventStore","hasDuration","DH","updateInternalCls","_cls","DomClassList","internalCls","isDomClassList","endingDate","parseFloat","getDurationInUnit","doNotRound","starDate","fullDuration","Duration","magnitude","parseDuration","calcEndDate","calcStartDate","setStartEndDate","dates","startOf","startDateMS","batching","durationMS","asMilliseconds","inSetNormalize","getFieldDefinition","convert","fieldOrClone","isFrozen","validOnly","forEachDate","amount","u","wbsCode","_wbsCode","indexPath","fullCopy","intersects","intersectsRange","myStart","myEnd","splitPoint","oldDuration","cloneDuration","ownNewDuration","unitsChanged","clonedData","toICSString","icsEventConfig","timestamp","DTSTAMP","startEnd","DTSTART","DTEND","VersionHelper","scheduler","getVersion","icsWrapConfig","BEGIN","VERSION","CALSCALE","PRODID","END","eventConfig","UID","CLASS","SUMMARY","recurrenceRule","RRULE","icsItems","eventItems","exportToICS","blob","Blob","BrowserHelper","downloadBlob","isEditable","dayParseRegExp","days","RecurrenceDayRuleEncoder","decodeDay","rawDay","parsedDay","encodeDay","rawDays","frequencyToUnitRe","frequencyToUnit","frequency","counter","isFirst","buildOccurrence","captureLastOccurrence","lastOccurrenceDate","AbstractRecurrenceIterator","processIterationConfig","until","syncingStartDate","isSyncedWithRule","timeSpanStart","earliestVisibleDate","extraArgs","timeSpanStartMS","earliestVisibleDateMS","spansStart","getOccurrenceIndex","getNthDayInPeriod","sign","borderDate","delta","buildDate","dt","isValidPosition","forEachDateAtPositions","positions","datesLength","processed","isInView","occurrenceDate","hasException","isInViewMS","occurenceDate","occurrenceDateMS","DailyRecurrenceIterator","intervalDuration","delayInIntervals","MAX_OCCURRENCES_COUNT","inView","WeeklyRecurrenceIterator","_weekDays","weekStartDay","startHours","startMinutes","startSeconds","startMS","weekDays","DayRuleEncoder","weekStartDate","MonthlyRecurrenceIterator","getNthDayOfMonth","dayNum","daysInMonth","hasPositions","processedDate","monthDays","weekDayPosition","monthStartDate","monthEndDate","weekDay","till","copyTimeValues","sortedMonthDates","YearlyRecurrenceIterator","months","yearStartDate","yearEndDate","recurrenceIterators","it","convertStringOfIntegerItemsValue","convertStringOfItemsValue","isEqualAsString","value1","value2","convertInteger","RecurrenceModel","isRecurrenceModel","dateFormat","_dateFormat","recurrenceIterator","_timeSpan","rule","part","sanitize","_suspendedTimeSpanNotifying","suspendTimeSpanNotifying","resumeTimeSpanNotifying","_me$timeSpan","timeSpanStartDate","isSanitizing","_me$monthDays","sanitizeRecurrenceData","isTimeSpanNotifyingSuspended","onRecurrenceChanged","convertExceptionDatesValue","makeKey","serializeExceptionDatesValue","parseKey","RecurringTimeSpan","serialize","cancelBatch","detachFromRecurringEvent","_this$firstStore","recurringEvent","firstStore","isRecurringTimeSpansMixin","recurrenceModel","_recurrenceModel","model","setRecurrence","recurrenceEnd","_recurrence","_recurringTimeSpan","occurrenceMap","_occurrencesMap","removeOccurrence","dateOrTimeSpan","isTimeSpan","createRecurrenceKey","removeOccurrencesFrom","_this$recurrence","exceptionDates","exceptionDate","_this$meta$modified","occurrenceIndex","occurrenceKey","onStartDate","occurrenceEndDate","constraintType","creatingOccurrence","convertToRealEvent","_wasSet$resourceRecor","resourceRecords","newExceptionDate","addExceptionDate","_this$exceptionDates","oneDayMS","EventModelMixin","updateAssignmentEventIds","newResourceIds","existingResourceIds","onlyInA","toAdd","onlyInB","forEachResource","getAllDayStartDate","getAllDayEndDate","wrapStartDate","wrapEndDate","isDraggable","readOnly","draggable","isResizable","resizable","wasPersistable","batchChanges","postamble","preamble","updateModifiedBagForRecord","applyResourceId","$linkedResources","_this$resources$flatM","_this$resources","flatMap","$links","fromApplyValue","suspendEvents","resumeEvents","mapping","removingResource","reassign","oldResourceId","predecessors","_this$incomingDeps","successors","_this$outgoingDeps","dependencies","_this$incomingDeps2","_this$outgoingDeps2","isInterDay","eventStartMidnight","getAllDayDisplayStartDate","getAllDayDisplayEndDate","isLeaf","EventModel","EventStore","canonicalDependencyTypes","DependencyBaseModel","Type","StartToStart","StartToEnd","EndToStart","EndToEnd","to","_this$unjoinedStores$","hardType","getHardType","setHardType","fromSide","toSide","lag","setLag","lagUnit","getLag","getShortNameOfUnit","fullLag","getDateRange","sourceDate","targetDate","highlight","_this$highlighted$spl","_this$highlighted","classes","highlighted","unhighlight","isHighlightedWith","getConnectorString","raw","rawValue","fromEventName","_this$fromEvent","toEventName","_this$toEvent","DependencyModel","getTypeFromSides","rtl","types","startSide","endSide","DependencyStoreMixin","reduceEventDependencies","reduceFn","flat","depsGetterFn","getEventDependencies","evt","mapEventDependencies","mapEventPredecessors","reduceEventPredecessors","mapEventSuccessors","reduceEventSuccessors","removeEventDependencies","removeEventPredecessors","removeEventSuccessors","getBySourceTargetId","makeDependencySourceTargetCompositeKey","getDependencyForSourceAndTargetEvents","sourceEvent","targetEvent","getEventsLinkingDependency","dependencyOrFromId","toId","isDependencyModel","isValidDependencyToCreate","fromId","getHighlightedDependencies","dep","getTimeSpanDependencies","DependencyStore","ProjectCrudManager","startConfigure","getConfig","_changesToClear","applyProjectResponse","applyingProjectResponse","startDateField","endDateField","delayEnteringReplica","recordsUnlinked","_request$pack2","_me$resumeAutoSync","_me$commitRespondedCh","propagationFlag","loud","commitRespondedChanges","_me$project2","stmDisabled","ignoreRemoteChangesInSTM","shouldClearRecordFieldChange","_field","entries","rest","changesMap","ProjectModelCommon","timeRanges","updateAssignments","updateDependencies","updateResources","timeRangeStore","getTimeRanges","updateTimeRanges","getResourceTimeRanges","resourceTimeRangeStore","ResourceTimeRangeModel","domId","domIdPrefix","isResourceTimeRange","foreignKey","foreignStore","relatedCollectionName","nullFieldOnRemove","ResourceTimeRangeStore","_resourceStore","isConfiguring","initRelations","resourceTimeRange","getRanges","rangesInDateRange","span1","span2","ProjectModelTimeZoneMixin","_storesWithDates","taskStore","relayStoreChange","convertStoresToTimeZone","ignoreRecordChanges","_records","stmAutoRecord","autoRecord","_r$baselines","$ignoreChange","baselines","bl","updateTimeZone","oldTimeZone","_isConfiguringTimeZone","$config","ProjectModelMixin","timeRangeModelClass","resourceTimeRangeModelClass","timeRangeStoreClass","resourceTimeRangeStoreClass","timeRangesData","inlineData","json","resourceTimeRangesData","$$name","updateTimeRangeStore","setTimeRangeStore","changeTimeRangeStore","isStore","updateResourceTimeRangeStore","changeResourceTimeRangeStore","setResourceTimeRangeStore","updateEvents","resourceTimeRanges","updateResourceTimeRanges","toJSON","changeJson","updateJson","ProjectCurrentConfig","getCurrentConfig","storeName","getInlineData","storeState","originalModelClass","isTaskStore","ModelPersistencyManager","newEventStore","eventStoreDetacher","beforecommit","onEventStoreBeforeSync","detachable","newResourceStore","resourceStoreDetacher","onResourceStoreBeforeSync","newAssignmentStore","assignmentStoreDetacher","_assignmentStore","onAssignmentStoreBeforeSync","newDependencyStore","dependencyStoreDetacher","_dependencyStore","onDependencyStoreBeforeSync","removeNonPersistableRecordsToCreate","shallContinueSync","recordsToCreate","ProjectModel","isTestEnv","globalThis","bryntum","testProject","modelPersistencyManager","createModelPersistencyManager","initClass"],"mappings":"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AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACagE,KAAK,GAAGpC;AACrB;AACA;AACA;AACA;MACasD,QAAQ,GAAGtD;;AChfxB;AACA;AACA;IACWuD;AACX,CAAC,UAAUA,QAAQ,EAAE;EACjBA,QAAQ,CAAC,aAAa,CAAC,GAAG,aAAa;EACvCA,QAAQ,CAAC,QAAQ,CAAC,GAAG,QAAQ;EAC7BA,QAAQ,CAAC,QAAQ,CAAC,GAAG,QAAQ;EAC7BA,QAAQ,CAAC,MAAM,CAAC,GAAG,MAAM;EA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9B,SAAS,CAAC;;EAE1BjjB,MAAM,CAACza,IAAI,CAAC+jC,6BAA6B,CAAC;EAC1C,OAAA8D,MAAA,GAAO,MAAMK,wBAAwB,SAAS,CAACpE,MAAM,IAAIqE,IAAI,EAAE3tB,KAAK,CAAC,GAAGC,MAAM,CAAC,CAAC;;AAEpF;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;IACQ,WAAWupB,KAAKA,GAAG;MACf,OAAO,0BAA0B;;;IAGrC,WAAWpX,aAAaA,GAAG;MACvB,OAAO;;AAEnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBwb,YAAY,EAAG,IAAI;;AAEnC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBC,UAAU,EAAG,EAAE;;AAE/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBC,eAAe,EAAG,SAAS;;;;;;;QAO3BC,eAAe,EAAG,QAAQ;;AAE1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;QACgBC,SAAS,EAAG,EAAE;;AAE9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBC,iBAAiB,EAAG,KAAK;;AAEzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBnC,wBAAwB,EAAG,IAAI;;AAE/C;AACA;AACA;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Z,KAAKA,GAAG;IACf,OAAO,iBAAiB;;EAE5B,IAAI/R,QAAQA,GAAG;IACX,OAAO,KAAK,CAACA,QAAQ;;EAEzB,IAAIA,QAAQA,CAACA,QAAQ,EAAE;IACnB,KAAK,CAACA,QAAQ,GAAIA,QAAQ;IAC1B,IAAI,CAAC0B,UAAU,CAAC,YAAY,EAAE,IAAI,CAACtc,WAAW,CAACukC,IAAI,CAAC3pB,QAAQ,CAAC,CAAC;;AAEtE;AACA0pB,eAAe,CAACE,gBAAgB,EAAE;AAClCF,eAAe,CAACG,MAAM,GAAG,iBAAiB;;AC9F1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAAehY,MAAM,IAAI,MAAMiY,oBAAoB,SAASjY,MAAM,CAAC;EAC/D,WAAWE,KAAKA,GAAG;IACf,OAAO,sBAAsB;;;AAGrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI,WAAWpX,aAAaA,GAAG;IACvB,OAAO;;AAEf;AACA;AACA;MACY0e,YAAY,EAAG,GAAG;;AAE9B;AACA;AACA;MACYC,YAAY,EAAG,GAAG;MAClB1G,OAAO,EAAG;KACb;;EAELh3B,GAAGA,CAACmuC,cAAc,EAAE,GAAG5d,IAAI,EAAE;IACzB4d,cAAc,GAAGxP,WAAW,CAACC,OAAO,CAACuP,cAAc,CAAC;IACpD,KAAK,IAAIv7C,CAAC,GAAG,CAAC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A,WAAA,GAAAj/C,CAAC,CAACmyB,QAAQ,cAAA8sB,WAAA,uBAAVA,WAAA,CAAY/jB,SAAS,MAAK/I,QAAQ,CAAC+I,SAAS;MAAC,EAAExI,KAAK,CAAC;;;AAG7G,CAAC;;AClbD,MAAMkpB,aAAW,GAAGlC,aAAa,CAAC7e,wBAAwB,CAACrjB,MAAM,CAAC0nC,SAAS,CAAC,CAAC;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,MAAMC,eAAe,SAASlD,oBAAoB,CAACL,aAAW,CAAC,CAAC;EAE3E,WAAW9uB,aAAaA,GAAG;IACvB,OAAO;MACHC,UAAU,EAAG8uB;KAChB;;AAET;AAACzG,eAAA,CAPoB+J,eAAe,WACjB,iBAAiB;AAOpCA,eAAe,CAACnD,MAAM,GAAG,iBAAiB;;ACvD1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAAehY,MAAM,IAAI,MAAMob,kBAAkB,UAAUpb,MAAM,IAAIqE,IAAI,EAAE;EACvE,WAAWnE,KAAKA,GAAG;IACf,OAAO,oBAAoB;;EAE/B,IAAImb,eAAeA,GAAG;IAClB,OAAO,IAAI;;;AAGnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI,WAAWvyB,aAAaA,GAAG;IACvB,OAAO;;AAEf;AACA;AACA;MACY0e,YAAY,EAAG,GAAG;;AAE9B;AACA;AACA;MACYC,YAAY,EAAG,GAAG;MAClB1G,OAAO,EAAQ,WAAW;MAC1Bua,QAAQ,EAAO;KAClB;;EAELl3B,SAASA,CAACpJ,MAAM,EAAE;IACd,KAAK,CAACoJ,SAAS,CAACpJ,MAAM,CAAC;IACvB,IAAI,CAAC,IAAI,CAAC+N,UAAU,CAACwyB,eAAe,EAAE;MAClC,MAAM,IAAIn3C,KAAK,CAAC,qDAAqD,CAAC;;;EAG9EmgB,SAASA,GAAG;IACR,MAAM1gB,MAAM,GAAG,KAAK,CAAC0gB,SAAS,CAAC,GAAGtpB,SAAS,CAAC;;IAE5C4I,MAAM,IAAI,IAAI,CAACyf,eAAe,CAACiB,SAAS,EAAE;IAC1C,OAAO1gB,MAAM;;;;;;;;;EASjB23C,gBAAgBA,CAAC;IAAEzqB,MAAM;IAAE0mB,QAAQ;IAAEl1C;GAAO,EAAE;IAC1C,KAAK,CAACi5C,gBAAgB,CAAC;MAAEzqB,MAAM;MAAE0mB,QAAQ;MAAEl1C;KAAO,CAAC;IACnD,IAAIwuB,MAAM,CAAC0qB,eAAe,CAAC,IAAI,CAAC,EAAE;MAC9B,IAAI,CAACC,YAAY,GAAG,IAAI;MACxB3qB,MAAM,CAAC4qB,2BAA2B,EAAE;MACpC,IAAI,CAACD,YAAY,GAAG,KAAK;;;;EAIjC,IAAIE,kBAAkBA,GAAG;IACrB,OAAO,IAAI,CAACC,mBAAmB,KAAK,IAAI,CAACA,mBAAmB,GAAG,IAAI,CAACC,iBAAiB,EAAE,CAAC;;;AAGhG;AACA;AACA;AACA;AACA;EACIC,qBAAqBA,CAAC;IAAEv5C,SAAS;IAAEoC;GAAS,EAAE;IAC1C,OAAO,IAAI,CAAC+wB,KAAK,CAACxH,QAAQ,IAAI,IAAI,CAACzK,UAAU,CAACs4B,oBAAoB,CAACx5C,SAAS,EAAEoC,OAAO,EAAE,IAAI,EAAEupB,QAAQ,CAAC,CAAC;;AAE/G,CAAC;;ACzKD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAAe6R,MAAM,IAAI,MAAMic,kBAAkB,SAASjc,MAAM,CAAC;EAC7D,WAAWE,KAAKA,GAAG;IACf,OAAO,oBAAoB;;;EAG/B,WAAWqb,eAAeA,GAAG;IACzB,OAAO,IAAI;;;AAGnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEI,WAAWvzB,MAAMA,GAAG;IAChB,OAAO;;AAEf;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;IACY;MAAE1qB,IAAI,EAAG,MAAM;MAAE+R,IAAI,EAAG,QAAQ;MAAE0mB,OAAO,EAAG;KAAM;;AAE9D;AACA;AACA;AACA;AACA;AACA;AACA;IACY,YAAY;;AAExB;AACA;AACA;AACA;AACA;AACA;AACA;IACY,YAAY;;AAExB;AACA;AACA;AACA;AACA;IACY,UAAU;;AAEtB;AACA;AACA;AACA;AACA;AACA;IACY,OAAO;;AAEnB;AACA;AACA;AACA;IACY;MAAEz4B,IAAI,EAAG,gBAAgB;MAAE+R,IAAI,EAAG;KAAU;;AAExD;AACA;AACA;AACA;IACY;MAAE/R,IAAI,EAAG,WAAW;MAAE+R,IAAI,EAAG;KAAU;;AAEnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACY,aAAa,CAChB;;;;EAILssC,2BAA2BA,GAAG;IAC1B,IAAI,CAACrtB,QAAQ,CAAChV,OAAO,CAAC8U,UAAU,IAAI;MAChCA,UAAU,CAACkI,UAAU,GAAG,IAAI,CAAClqB,EAAE;KAClC,CAAC;;EAEN8vC,MAAMA,CAAC35C,KAAK,EAAE;IACV,KAAK,CAAC25C,MAAM,CAAC35C,KAAK,CAAC;IACnB,IAAI,CAACo5C,2BAA2B,EAAE;;;;;AAK1C;AACA;AACA;AACA;AACA;EACI,IAAIvB,MAAMA,GAAG;IACT,OAAO,IAAI,CAACX,WAAW,CAAChnC,MAAM,CAAC,CAAC2nC,MAAM,EAAEhsB,UAAU,KAAK;MACnD,IAAIA,UAAU,CAACM,KAAK,EAAE;QAClB0rB,MAAM,CAACl+C,IAAI,CAACkyB,UAAU,CAACM,KAAK,CAAC;;MAEjC,OAAO0rB,MAAM;KAChB,EAAE,EAAE,CAAC;;;AAGd;AACA;AACA;AACA;EACI,IAAIX,WAAWA,GAAG;IACd,OAAO,IAAI,CAACnrB,QAAQ,GAAG,CAAC,GAAG,IAAI,CAACA,QAAQ,CAAC,GAAG,EAAE;;EAElD,IAAImrB,WAAWA,CAACA,WAAW,EAAE;;IAEzBA,WAAW,CAACngC,OAAO,CAAC8U,UAAU,IAAI;MAC9BA,UAAU,CAACD,QAAQ,GAAG,IAAI;KAC7B,CAAC;;;AAGV;AACA;AACA;AACA;EACIguB,SAASA,GAAG;;IAER,OAAO,IAAI,CAAC/B,MAAM;;;AAG1B;AACA;AACA;AACA;AACA;AACA;AACA;EACI,IAAInD,aAAaA,GAAG;IAChB,OAAO,KAAK,CAACA,aAAa,KAAK,CAAC,IAAI,CAACxqB,MAAM,IAAI,IAAI,CAACA,MAAM,CAACwqB,aAAa,CAAC;;;;AAIjF;AACA;EACImF,WAAWA,GAAG;IACV,IAAI,CAAC3C,WAAW,IAAI,IAAI,CAACn2B,eAAe,CAACgB,MAAM,CAAC,IAAI,CAACm1B,WAAW,CAAC;;;AAGzE;AACA;AACA;AACA;AACA;AACA;EACI,IAAI4C,QAAQA,GAAG;IACX,MACI;MAAE/+C,IAAI,GAAG;KAAI,GAAG,IAAI;IACxB,IAAI,CAACA,IAAI,EAAE;MACP,OAAO,EAAE;;IAEb,MAAMg/C,KAAK,GAAWh/C,IAAI,CAAC2F,KAAK,CAAC,GAAG,CAAC;MACjCs5C,YAAY,GAAID,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MAC3BE,WAAW,GAAMF,KAAK,CAACvhD,MAAM,GAAG,CAAC,GAAGuhD,KAAK,CAACA,KAAK,CAACvhD,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,EAAG;IACxE,OAAOwhD,YAAY,GAAGC,WAAW;;EAErC3uB,aAAaA,CAACl0B,IAAI,EAAE;IAAA,IAAAksB,aAAA,EAAA42B,qBAAA;IAChB,MAAM3+B,QAAQ,GAAI,IAAI,CAACygB,iBAAiB,MAAA1Y,aAAA,GAAI,IAAI,CAACtE,OAAO,cAAAsE,aAAA,uBAAZA,aAAA,CAAc/H,QAAQ,CAAC;IACnE,OAAO,CAACA,QAAQ,MAAA2+B,qBAAA,GAAI3+B,QAAQ,CAAC+P,aAAa,cAAA4uB,qBAAA,uBAAtBA,qBAAA,CAAAh/C,IAAA,CAAAqgB,QAAQ,EAAiBnkB,IAAI,CAAC;;AAE1D,CAAC;;AC1ND,MAAMi+C,aAAW,GAAGniB,iBAAiB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,MAAMinB,aAAa,SAAST,kBAAkB,CAACvG,aAAa,CAACkC,aAAW,CAACpkC,MAAM,CAACmpC,YAAY,CAAC,CAAC,CAAC,CAAC;EAC3G,WAAWzc,KAAKA,GAAG;IACf,OAAO,eAAe;;AAE9B;AACAwc,aAAa,CAAC3E,gBAAgB,EAAE;AAChC2E,aAAa,CAAC1E,MAAM,GAAG,eAAe;;AC3EtC,MAAMJ,aAAW,GAAGlC,aAAa,CAACpc,sBAAsB,CAAC9lB,MAAM,CAAC0nC,SAAS,CAAC,CAAC;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A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C8jB,QAAQ,GAAGma,YAAY;QAC/B5yC,EAAE,CAAC4R,MAAM,CAAC/N,OAAO,CAAC0M,KAAK,IAAIA,KAAK,CAACkoB,QAAQ,CAACnkC,GAAG,CAAC0L,EAAE,CAAC,CAAC;;;GAG7D,EAAA27B,eAAA,CAAArN,MAAA,WApFkB,qBAAqB,GAAAA,MAAA;AAAA,CAoFvC;;AC/FD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,MAAM6jB,QAAQ,SAASlhC,KAAK,CAAChQ,KAAK,CAACixC,mBAAmB,CAAC,CAAC;EACnE,WAAWznB,KAAKA,GAAG;IACf,OAAO,UAAU;;;EAGrB,WAAWlY,MAAMA,GAAG;IAChB,OAAO;;AAEf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACY;MACI1qB,IAAI,EAAG,WAAW;MAClB+R,IAAI,EAAG;KACV;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACY;MACI/R,IAAI,EAAG,SAAS;MAChB+R,IAAI,EAAG;KACV;;AAEb;AACA;AACA;AACA;IACY;MACI/R,IAAI,EAAQ,UAAU;MACtB+R,IAAI,EAAQ,QAAQ;MACpBq5C,SAAS,EAAG,IAAI;MAChBC,QAAQ,EAAI;KACf;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACY;MACIt5C,IAAI,EAAW,cAAc;MAC7B/R,IAAI,EAAW,cAAc;MAC7B2qB,YAAY,EAAG,GAAG;MAClB0gC,QAAQ,EAAO;KAClB,EACD;MACIrrD,IAAI,EAAM,cAAc;MACxBy4B,OAAO,EAAG,KAAK;MACf6yB,MAAM,EAAI;QACNv5C,IAAI,EAAG;;KAEd;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACY;MACI/R,IAAI,EAAW,KAAK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A,GAAO,IAAI,CAACd,cAAc,cAAAc,oBAAA,uBAAnBA,oBAAA,CAAsBt6C,UAAU,CAAC83C,OAAO,CAAC96D,IAAI,CAAC,CAAC;;AAE9D,CAAC;;AC/oBD,MACIu9D,QAAQ,GAAG,IAAI,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAel3B,MAAM,IAAI,MAAMm3B,eAAe,SAASn3B,MAAM,CAAC;EAC1D,WAAWE,KAAKA,GAAG;IACf,OAAO,iBAAiB;;;EAG5B,WAAWmkB,YAAYA,GAAG;IACtB,OAAO,IAAI;;;AAGnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEI,WAAWr8B,MAAMA,GAAG;IAChB,OAAO;;;AAGf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;IACY;MACI1qB,IAAI,EAAO,YAAY;MACvBqrD,QAAQ,EAAG;KACd;;AAEb;AACA;AACA;AACA;IACY;MACIrrD,IAAI,EAAK,WAAW;MACpBsrD,MAAM,EAAG;QACLv5C,IAAI,EAAG;OACV;MACD0mB,OAAO,EAAI,KAAK;MAChB4yB,QAAQ,EAAG,IAAI;KAClB;;AAEb;AACA;AACA;AACA;AACA;IACY;MACIrrD,IAAI,EAAW,WAAW;MAC1B+R,IAAI,EAAW,SAAS;MACxB0mB,OAAO,EAAQ,KAAK;MACpB9N,YAAY,EAAG,IAAI;MACnB0gC,QAAQ,EAAO;KAClB;;AAEb;AACA;AACA;AACA;AACA;AACA;IACY;MACIrrD,IAAI,EAAW,WAAW;MAC1By4B,OAAO,EAAQ,KAAK;MACpB9N,YA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ACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,MAAM+gC,UAAU,SAAStiB,aAAW,CAACpkC,MAAM,CAACo0C,QAAQ,CAAC,CAAClxC,KAAK,CACtEk+C,iBAAiB,EACjBlf,aAAa,EACbyhB,eAAe,CAClB,CAAC;EACE,WAAWj3B,KAAKA,GAAG;IACf,OAAO,YAAY;;AAE3B;AACAg6B,UAAU,CAACniB,gBAAgB,EAAE;AAC7BmiB,UAAU,CAACliB,MAAM,GAAG,YAAY;;AC3FhC,MAAMJ,aAAW,GAAGlC,aAAa,CAACtc,mBAAmB,CAAC5lB,MAAM,CAAC0nC,SAAS,CAAC,CAAC;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,MAAMif,UAAU,SAASviB,aAAW,CAAClhC,KAAK,CACrDwtC,qBAAqB,EACrBmD,oBAAoB,EACpBxK,eAAe,EACfyG,aAAa,EACb9E,cAAc,CACjB,CAAC;EAEE,WAAW11B,aAAaA,GAAG;IACvB,OAAO;;AAEf;AACA;AACA;AACA;AACA;AACA;MACYC,UAAU,EAAGmxC;KAChB;;AAET;AAAC9oB,eAAA,CApBoB+oB,UAAU,WAOZ,YAAY;AAc/BA,UAAU,CAACniB,MAAM,GAAG,YAAY;;ACpFhC;AACA;AACA;AACA,MAAMoiB,wBAAwB,GAAG,CAC7B,IAAI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CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,MAAMykC,eAAe,SAAS/mB,aAAa,CAACkC,aAAW,CAACpkC,MAAM,CAAC6mD,mBAAmB,CAAC,CAAC,CAAC;EAChG,WAAWn6B,KAAKA,GAAG;IACf,OAAO,iBAAiB;;;EAG5Bw8B,gBAAgBA,CAAC1B,QAAQ,EAAEC,MAAM,EAAE0B,GAAG,EAAE;IACpC,MACIC,KAAK,GAAOvC,mBAAmB,CAACC,IAAI;MACpCuC,SAAS,GAAGF,GAAG,GAAG,OAAO,GAAG,MAAM;MAClCG,OAAO,GAAKH,GAAG,GAAG,MAAM,GAAG,OAAO;IACtC,IAAI3B,QAAQ,KAAK6B,SAAS,EAAE;MACxB,OAAQ5B,MAAM,KAAK4B,SAAS,GAAID,KAAK,CAACrC,YAAY,GAAGqC,KAAK,CAACpC,UAAU;;IAEzE,OAAQS,MAAM,KAAK6B,OAAO,GAAIF,KAAK,CAAClC,QAAQ,GAAGkC,KAAK,CAACnC,UAAU;;AAEvE;AACAgC,eAAe,CAAC1kB,gBAAgB,EAAE;AAClC0kB,eAAe,CAACzkB,MAAM,GAAG,iBAAiB;;AC9E1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAAehY,MAAM,IAAI,MAAM+8B,oBAAoB,SAAS/8B,MAAM,CAAC;EAC/D,WAAWE,KAAKA,GAAG;IACf,OAAO,sBAAsB;;;AAGrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;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e,EAAG,EAAE;QACpBE,eAAe,EAAG,EAAE;QACpBI,aAAa,EAAK,EAAE;QACpB0/C,cAAc,EAAI;OACrB;;;;;AA4DT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACI,IAAIC,UAAUA,GAAG;MACb,OAAOhgC,YAAY,CAAC+P,aAAa,CAAC,KAAK,CAACkwB,IAAI,CAAC;;IAEjD,IAAID,UAAUA,CAACA,UAAU,EAAE;MACvB,IAAI,CAACC,IAAI,GAAGD,UAAU;;;;;AAK9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;IAGIn/C,SAASA,CAACpJ,MAAM,GAAG,EAAE,EAAE;MACnB,KAAK,CAACoJ,SAAS,CAAC,GAAGnpB,SAAS,CAAC;;MAE7B,IAAI+f,MAAM,CAACsoD,cAAc,EAAE;QACvB,IAAI,CAAC5C,cAAc,CAAC96C,IAAI,GAAG5K,MAAM,CAACsoD,cAAc;;MAEpD,IAAItoD,MAAM,CAACyoD,sBAAsB,EAAE;QAC/B,IAAI,CAAC3C,sBAAsB,CAACl7C,IAAI,GAAG5K,MAAM,CAACyoD,sBAAsB;;;IAGxE39B,cAAcA,GAAG;MACb,KAAK,CAACA,cAAc,EAAE;MACtB,MAAMrwB,EAAE,GAAG,IAAI;MACf,CAACA,EAAE,CAACirD,cAAc,CAAC74C,GAAG,IAAIpS,EAAE,CAACoS,GAAG,CAACmV,QAAQ,CAACvnB,EAAE,CAACirD,cAAc,CAAC;M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AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;EAGI,WAAWpX,aAAaA,GAAG;IACvB,OAAO;;AAEf;AACA;AACA;AACA;AACA;AACA;AACA;MACY8R,eAAe,EAAGs/B,UAAU;;AAExC;AACA;AACA;AACA;AACA;AACA;AACA;MACYn/B,oBAAoB,EAAG0hC,eAAe;;AAElD;AACA;AACA;AACA;AACA;AACA;AACA;MACY3hC,kBAAkB,EAAG4hB,aAAa;;AAE9C;AACA;AACA;AACA;AACA;AACA;AACA;MACY7hB,oBAAoB,EAAGgd,eAAe;;AAElD;AACA;AACA;AACA;AACA;AACA;MACY5c,eAAe,EAAGk/B,UAAU;;AAExC;AACA;AACA;AACA;AACA;AACA;MACY/+B,oBAAoB,EAAGwjC,eAAe;;AAElD;AACA;AACA;AACA;AACA;AACA;MACYzjC,kBAAkB,EAAGyhB,aAAa;;AAE9C;AACA;AACA;AACA;AACA;AACA;MACY1hB,oBAAoB,EAAGigB;KAC1B;;;;;AAKT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI/2B,SAASA,CAAC,GAAGkW,IAAI,EAAE;IACf,KAAK,CAAClW,SAAS,CAAC,GAAGkW,IAAI,CAAC;IACxB,IAAIkyB,aAAa,CAAC4Z,SAAS,EAAE;MACzBC,UAAU,CAACC,OAAO,CAACC,WAAW,GAAG,IAAI;;;IAGzC,IAAI,CAACC,uBAAuB,GAAG,IAAI,CAACC,6BAA6B,EAAE;;;AAG3E;AACA;AACA;AACA;AACA;EACIA,6BAA6BA,GAAG;IAC5B,OAAO,IAAI1B,uBAAuB,CAAC;MAC/BrhD,UAAU,EAAQ,IAAI;MACtBE,aAAa,EAAK,IAAI,CAACA,aAAa;MACpCN,eAAe,EAAG,IAAI,CAACA,eAAe;MACtCE,eAAe,EAAG,IAAI,CAACA;KAC1B,CAAC;;EAENwJ,SAASA,GAAG;IACR,IAAI,CAACw5C,uBAAuB,CAACv5C,OAAO,EAAE;IACtC,KAAK,CAACD,SAAS,EAAE;;;EAGrB,IAAIk1C,SAASA,GAAG;IACZ,OAAO,IAAI,CAACx+C,UAAU;;AAE9B;AACAyiD,YAAY,CAACpmC,YAAY,GAAG,IAAI;AAChComC,YAAY,CAACO,SAAS,EAAE;AACxBP,YAAY,CAACnuB,MAAM,GAAG,cAAc;;;;"}