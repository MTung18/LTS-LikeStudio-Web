{"version":3,"file":"GridRowModel.js","sources":["../../../../Grid/lib/Grid/data/GridRowModel.js"],"sourcesContent":["import Model from '../../Core/data/Model.js';\n\n/**\n * @module Grid/data/GridRowModel\n */\n\n/**\n * Model extended with some fields related to grid rendering. Used as default model type in the grids store if nothing\n * else is specified.\n *\n * Using this model is optional. If you use a custom model instead and need the functionality of any of the fields\n * below, you just have to remember to add fields with the same name to your model.\n *\n * @extends Core/data/Model\n */\nexport default class GridRowModel extends Model {\n    static get fields() {\n        return [\n            /**\n             * Icon for row (used automatically in tree, feel free to use it in renderer in other cases)\n             * @field {String} iconCls\n             * @category Styling\n             */\n            {\n                name     : 'iconCls',\n                internal : true\n            },\n\n            /**\n             * Start expanded or not (only valid for tree data)\n             * @readonly\n             * @field {Boolean} expanded\n             * @category Tree\n             */\n            {\n                name     : 'expanded',\n                internal : true\n            },\n\n            /**\n             * CSS class (or several classes divided by space) to append to row elements\n             * @field {String} cls\n             * @category Styling\n             */\n            {\n                name     : 'cls',\n                internal : true\n            },\n\n            /**\n             * Used by the default implementation of {@link Grid.view.GridBase#config-getRowHeight} to determine row\n             * height. Set it to use another height than the default for a the records row.\n             * @field {Number} rowHeight\n             * @category Styling\n             */\n            {\n                name     : 'rowHeight',\n                internal : true\n            },\n\n            /**\n             * A link to use for this record when rendered into a {@link Grid.column.TreeColumn}.\n             * @field {String} href\n             * @category Tree\n             */\n            {\n                name     : 'href',\n                internal : true\n            },\n\n            /**\n             * The target to use if this tree node provides a value for the {@link #field-href} field.\n             * @field {'_self'|'_blank'|'_parent'|'_top'|null} target\n             * @category Tree\n             */\n            {\n                name     : 'target',\n                internal : true\n            }\n        ];\n    }\n}\n\nGridRowModel.exposeProperties();\n"],"names":["GridRowModel","Model","fields","name","internal","exposeProperties","_$name"],"mappings":"oCAae,MAAMA,UAAqBC,EACtCC,oBACI,MAAO,CAMH,CACIC,KAAW,UACXC,UAAW,GAQf,CACID,KAAW,WACXC,UAAW,GAOf,CACID,KAAW,MACXC,UAAW,GAQf,CACID,KAAW,YACXC,UAAW,GAOf,CACID,KAAW,OACXC,UAAW,GAOf,CACID,KAAW,SACXC,UAAW,KAK3BJ,EAAaK,mBACbL,EAAaM,OAAS"}