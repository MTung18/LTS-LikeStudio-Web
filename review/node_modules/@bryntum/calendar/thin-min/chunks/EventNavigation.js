/*!
 *
 * Bryntum Calendar 5.3.0
 *
 * Copyright(c) 2023 Bryntum AB
 * https://bryntum.com/contact
 * https://bryntum.com/license
 *
 */
import{LocaleHelper as e,Base as t,TimeZoneHelper as n,StringHelper as r,_objectSpread2 as o,DateHelper as i,BrowserHelper as s,ContextMenuBase as a,Popup as c,_defineProperty as l,Combo as u,ArrayHelper as d,Panel as g,DomHelper as h,Objects as m,ObjectHelper as v,Delayable as p,Navigator as y}from"./Editor.js";import{GridFeatureManager as f,Location as b}from"./GridBase.js";import{ProjectModel as C,RecurrenceDayRuleEncoder as S}from"./ProjectModel.js";import"./MessageDialog.js";import{ButtonGroup as E}from"./ButtonGroup.js";e.publishLocale({localeName:"En",localeDesc:"English (US)",localeCode:"en-US",Object:{newEvent:"New event"},ResourceInfoColumn:{eventCountText:e=>e+" event"+(1!==e?"s":"")},Dependencies:{from:"From",to:"To",valid:"Valid",invalid:"Invalid"},DependencyType:{SS:"SS",SF:"SF",FS:"FS",FF:"FF",StartToStart:"Start-to-Start",StartToEnd:"Start-to-Finish",EndToStart:"Finish-to-Start",EndToEnd:"Finish-to-Finish",short:["SS","SF","FS","FF"],long:["Start-to-Start","Start-to-Finish","Finish-to-Start","Finish-to-Finish"]},DependencyEdit:{From:"From",To:"To",Type:"Type",Lag:"Lag","Edit dependency":"Edit dependency",Save:"Save",Delete:"Delete",Cancel:"Cancel",StartToStart:"Start to Start",StartToEnd:"Start to End",EndToStart:"End to Start",EndToEnd:"End to End"},EventEdit:{Name:"Name",Resource:"Resource",Start:"Start",End:"End",Save:"Save",Delete:"Delete",Cancel:"Cancel","Edit event":"Edit event",Repeat:"Repeat"},EventDrag:{eventOverlapsExisting:"Event overlaps existing event for this resource",noDropOutsideTimeline:"Event may not be dropped completely outside the timeline"},SchedulerBase:{"Add event":"Add event","Delete event":"Delete event","Unassign event":"Unassign event"},TimeAxisHeaderMenu:{pickZoomLevel:"Zoom",activeDateRange:"Date range",startText:"Start date",endText:"End date",todayText:"Today"},EventCopyPaste:{copyEvent:"Copy event",cutEvent:"Cut event",pasteEvent:"Paste event"},EventFilter:{filterEvents:"Filter tasks",byName:"By name"},TimeRanges:{showCurrentTimeLine:"Show current timeline"},PresetManager:{secondAndMinute:{displayDateFormat:"ll LTS",name:"Seconds"},minuteAndHour:{topDateFormat:"ddd MM/DD, hA",displayDateFormat:"ll LST"},hourAndDay:{topDateFormat:"ddd MM/DD",middleDateFormat:"LST",displayDateFormat:"ll LST",name:"Day"},day:{name:"Day/hours"},week:{name:"Week/hours"},dayAndWeek:{displayDateFormat:"ll LST",name:"Week/days"},dayAndMonth:{name:"Month"},weekAndDay:{displayDateFormat:"ll LST",name:"Week"},weekAndMonth:{name:"Weeks"},weekAndDayLetter:{name:"Weeks/weekdays"},weekDateAndMonth:{name:"Months/weeks"},monthAndYear:{name:"Months"},year:{name:"Years"},manyYears:{name:"Multiple years"}},RecurrenceConfirmationPopup:{"delete-title":"You are deleting an event","delete-all-message":"Do you want to delete all occurrences of this event?","delete-further-message":"Do you want to delete this and all future occurrences of this event, or only the selected occurrence?","delete-further-btn-text":"Delete All Future Events","delete-only-this-btn-text":"Delete Only This Event","update-title":"You are changing a repeating event","update-all-message":"Do you want to change all occurrences of this event?","update-further-message":"Do you want to change only this occurrence of the event, or this and all future occurrences?","update-further-btn-text":"All Future Events","update-only-this-btn-text":"Only This Event",Yes:"Yes",Cancel:"Cancel",width:600},RecurrenceLegend:{" and ":" and ",Daily:"Daily","Weekly on {1}":({days:e})=>`Weekly on ${e}`,"Monthly on {1}":({days:e})=>`Monthly on ${e}`,"Yearly on {1} of {2}":({days:e,months:t})=>`Yearly on ${e} of ${t}`,"Every {0} days":({interval:e})=>`Every ${e} days`,"Every {0} weeks on {1}":({interval:e,days:t})=>`Every ${e} weeks on ${t}`,"Every {0} months on {1}":({interval:e,days:t})=>`Every ${e} months on ${t}`,"Every {0} years on {1} of {2}":({interval:e,days:t,months:n})=>`Every ${e} years on ${t} of ${n}`,position1:"the first",position2:"the second",position3:"the third",position4:"the fourth",position5:"the fifth","position-1":"the last",day:"day",weekday:"weekday","weekend day":"weekend day",daysFormat:({position:e,days:t})=>`${e} ${t}`},RecurrenceEditor:{"Repeat event":"Repeat event",Cancel:"Cancel",Save:"Save",Frequency:"Frequency",Every:"Every",DAILYintervalUnit:"day(s)",WEEKLYintervalUnit:"week(s)",MONTHLYintervalUnit:"month(s)",YEARLYintervalUnit:"year(s)",Each:"Each","On the":"On the","End repeat":"End repeat","time(s)":"time(s)"},RecurrenceDaysCombo:{day:"day",weekday:"weekday","weekend day":"weekend day"},RecurrencePositionsCombo:{position1:"first",position2:"second",position3:"third",position4:"fourth",position5:"fifth","position-1":"last"},RecurrenceStopConditionCombo:{Never:"Never",After:"After","On date":"On date"},RecurrenceFrequencyCombo:{None:"No repeat",Daily:"Daily",Weekly:"Weekly",Monthly:"Monthly",Yearly:"Yearly"},RecurrenceCombo:{None:"None",Custom:"Custom..."},Summary:{"Summary for":e=>`Summary for ${e}`},ScheduleRangeCombo:{completeview:"Complete schedule",currentview:"Visible schedule",daterange:"Date range",completedata:"Complete schedule (for all events)"},SchedulerExportDialog:{"Schedule range":"Schedule range","Export from":"From","Export to":"To"},ExcelExporter:{"No resource assigned":"No resource assigned"},CrudManagerView:{serverResponseLabel:"Server response:"},DurationColumn:{Duration:"Duration"}});var D=e=>class extends e{static get $name(){return"AttachToProjectMixin"}async afterConstruct(){super.afterConstruct();const e=this,t=e.client||e.grid,{project:n}=t;t.projectSubscribers.push(e),n&&(e.attachToProject(n),e.attachToResourceStore(n.resourceStore),e.attachToEventStore(n.eventStore),e.attachToAssignmentStore(n.assignmentStore),e.attachToDependencyStore(n.dependencyStore),e.attachToCalendarManagerStore(n.calendarManagerStore))}attachToProject(e){this.detachListeners("project"),this._project=e}attachToEventStore(e){this.detachListeners("eventStore")}attachToResourceStore(e){this.detachListeners("resourceStore")}attachToAssignmentStore(e){this.detachListeners("assignmentStore")}attachToDependencyStore(e){this.detachListeners("dependencyStore")}attachToCalendarManagerStore(e){this.detachListeners("calendarManagerStore")}get project(){return this._project}get calendarManagerStore(){return this.project.calendarManagerStore}get assignmentStore(){return this.project.assignmentStore}get resourceStore(){return this.project.resourceStore}get eventStore(){return this.project.eventStore}get dependencyStore(){return this.project.dependencyStore}};const R=["assignmentStore","dependencyStore","eventStore","resourceStore"];var F=e=>class extends(e||t){static get $name(){return"ProjectConsumer"}static get declarable(){return["projectStores"]}static get configurable(){return{projectModelClass:C,project:{},destroyStores:null,projectSubscribers:[]}}startConfigure(e){this.getConfig("project"),super.startConfigure(e)}changeProject(e,t){const n=this,{projectStoreNames:r,projectDataNames:o}=n.constructor;if(n.projectCallbacks=new Set,e){if(n.buildingProjectConfig=!0,!e.isModel){if(n.isConfiguring){n._project=e;const{crudManager:t}=n;if(t){const{isCrudManager:e}=t;for(const o of r)t[o]&&(n[o]=t[o],e||delete t[o])}n.getConfig("projectStores");for(const e of o)n.getConfig(e)}const{eventStore:t}=e;let{_sharedProject:i}=n;if(t&&!t.isEventStoreMixin&&t.autoLoad&&!t.count&&(t.autoLoad=!1,n.delayAutoLoad=!0),i&&R.some((t=>e[t]&&e[t]!==i[t]))){for(const t of R)e[t]&&e[t]===i[t]&&(e[t]=e[t].chain());i=null}e=i||new n.projectModelClass(e),delete n._project}n.buildingProjectConfig=!1}return e}updateProject(e,t){const n=this,{projectListeners:r,crudManager:o}=n;if(n.detachListeners("projectConsumer"),delete n._crudManager,e){r.thisObj=n,e.ion(r),e.isCrudManager?n.crudManager=e:o&&(o.project=e,n.crudManager=o),n.projectSubscribers.forEach((t=>t.attachToProject(e)));for(const t of n.constructor.projectStoreNames)n[t]=e[t];n.delayAutoLoad&&(e.eventStore.autoLoad=!0,e.eventStore.load())}n.trigger("projectChange",{project:e})}changeCrudManager(e){if(!this.buildingProjectConfig)return super.changeCrudManager(e);this._crudManager=e.isCrudManager?e:Object.assign({},e)}onProjectDataReady(){const e=this;e.whenVisible((()=>{e.projectCallbacks.size&&(e.projectCallbacks.forEach((e=>e())),e.projectCallbacks.clear())}),null,null,"onProjectDataReady")}onTimeZoneChange({timeZone:e,oldTimeZone:t}){const r=this;if(r.startDate){const o=t?n.fromTimeZone(r.startDate,t):r.startDate;r.startDate=e?n.toTimeZone(o,e):o}}whenProjectReady(e){this.isEngineReady?e():this.projectCallbacks.add(e)}get isEngineReady(){var e,t;return Boolean(null===(e=(t=this.project).isEngineReady)||void 0===e?void 0:e.call(t))}doDestroy(){super.doDestroy(),this.destroyStores&&!this.project.isDestroyed&&this.project.destroy()}get projectStores(){const{projectStoreNames:e}=this.constructor;return e.map((e=>this[e]))}static get projectStoreNames(){return Object.keys(this.projectStores)}static get projectDataNames(){return this.projectStoreNames.reduce(((e,t)=>{const{dataName:n}=this.projectStores[t];return n&&e.push(n),e}),[])}static setupProjectStores(e,t){const{projectStores:n}=e;if(n){const e={name:"projectConsumer",dataReady:"onProjectDataReady",change:"relayProjectDataChange",timeZoneChange:"onTimeZoneChange"},r={projectListeners:e};let o;for(const i in n){const{dataName:s}=n[i];r[i]=r[s]=null,s&&(Object.defineProperty(t.class.prototype,s,{configurable:!0,get(){var e;return null===(e=this.project[i])||void 0===e?void 0:e.records}}),this.createDataUpdater(i,s,o,t)),this.createStoreDescriptor(t,i,n[i],e),o=s}this.setupConfigs(t,r)}}static createDataUpdater(e,t,n,o){o.class.prototype[`update${r.capitalize(t)}`]=function(r){const{project:o}=this;n&&this.getConfig(n),this.buildingProjectConfig?o[`${t}Data`]=r:o[e].data=r}}static createStoreDescriptor(e,t,{listeners:n},o){const{prototype:i}=e.class,s=r.capitalize(t);o[`${t}Change`]=function({store:e}){this[t]=e},i[`change${s}`]=function(e,r){var o;const i=this,{project:a}=i,c=null===(o=e)||void 0===o?void 0:o.project;return i.buildingProjectConfig?(null!=c&&c.isProjectModel&&(i._sharedProject=c),void(a[t]=e)):(i.initializingProject||a[t]!==e&&(a[`set${s}`](e),e=a[t]),e!==r&&(n&&(n.thisObj=i,n.name=`${t}Listeners`,i.detachListeners(n.name),e.ion(n)),i[`_${t}`]=e,i.projectSubscribers.forEach((t=>{var n;null===(n=t[`attachTo${s}`])||void 0===n||n.call(t,e)})),i[`_${t}`]=null),e)}}relayProjectDataChange(e){return this.trigger("dataChange",o(o({project:e.source},e),{},{source:this}))}get widgetClass(){}};class w extends t{static get defaultConfig(){return{minuteHeight:8,minuteTop:2,hourHeight:8,hourTop:2,handLeft:10,div:document.createElement("div"),scheduler:null,template(e){return`<div class="b-sch-clockwrap b-sch-clock-${e.mode||this.mode} ${e.cls||""}">\n                    <div class="b-sch-clock">\n                        <div class="b-sch-hour-indicator">${i.format(e.date,"MMM")}</div>\n                        <div class="b-sch-minute-indicator">${i.format(e.date,"D")}</div>\n                        <div class="b-sch-clock-dot"></div>\n                    </div>\n                    <span class="b-sch-clock-text">${r.encodeHtml(e.text)}</span>\n                </div>`}}}generateContent(e){return this.div.innerHTML=this.template(e)}updateDateIndicator(e,t){const n=null==e?void 0:e.querySelector(".b-sch-hour-indicator"),r=null==e?void 0:e.querySelector(".b-sch-minute-indicator");t&&n&&r&&s.isBrowserEnv&&("hour"===this.mode?(n.style.transform=`rotate(${t.getHours()%12*30}deg)`,r.style.transform=`rotate(${6*t.getMinutes()}deg)`):(n.style.transform="none",r.style.transform="none"))}set mode(e){this._mode=e}get mode(){if(this._mode)return this._mode;const e=i.compareUnits(this.scheduler.timeAxisViewModel.timeResolution.unit,"day")<0,t=i.formatContainsHourInfo(this.scheduler.displayDateFormat);return e&&t?"hour":"day"}set template(e){this._template=e}get template(){return this._template}}w._$name="ClockTemplate";class x extends a{}x._$name="TimeSpanMenuBase";class A extends c{static get $name(){return"RecurrenceConfirmationPopup"}static get type(){return"recurrenceconfirmation"}static get defaultConfig(){return{localizableProperties:[],align:"b-t",autoShow:!1,autoClose:!1,closeAction:"onRecurrenceClose",modal:!0,centered:!0,scrollAction:"realign",constrainTo:globalThis,draggable:!0,closable:!0,floating:!0,eventRecord:null,cls:"b-sch-recurrenceconfirmation",bbar:{defaults:{localeClass:this},items:{changeSingleButton:{weight:100,cls:"b-raised",color:"b-blue",text:"L{update-only-this-btn-text}",onClick:"up.onChangeSingleButtonClick"},changeMultipleButton:{weight:200,color:"b-green",text:"L{Object.Yes}",onClick:"up.onChangeMultipleButtonClick"},cancelButton:{weight:300,color:"b-gray",text:"L{Object.Cancel}",onClick:"up.onCancelButtonClick"}}}}}get changeMultipleButton(){return this.widgetMap.changeMultipleButton}get changeSingleButton(){return this.widgetMap.changeSingleButton}get cancelButton(){return this.widgetMap.cancelButton}onChangeMultipleButtonClick(){this.processMultipleRecords(),this.hide()}onChangeSingleButtonClick(){this.processSingleRecord(),this.hide()}onCancelButtonClick(){this.cancelFn&&this.cancelFn.call(this.thisObj),this.hide()}onRecurrenceClose(){this.cancelFn&&this.cancelFn.call(this.thisObj),this.hide()}confirm(e={}){const t=this;return["actionType","eventRecord","title","html","changerFn","cancelFn","finalizerFn","thisObj"].forEach((n=>{n in e&&(t[n]=e[n])})),t.updatePopupContent(),super.show(e)}updatePopupContent(){const e=this,{changeMultipleButton:t,changeSingleButton:n,cancelButton:r}=e.widgetMap,{eventRecord:o,actionType:i="update"}=e;(null==o?void 0:o.isRecurring)?(t.text=e.L("L{Object.Yes}"),e.html=e.L(`${i}-all-message`)):(t.text=e.L(`${i}-further-btn-text`),e.html=e.L(`${i}-further-message`)),n.text=e.L(`${i}-only-this-btn-text`),r.text=e.L("L{Object.Cancel}"),e.width=e.L("L{width}"),e.title=e.L(`${i}-title`)}processMultipleRecords(){const{eventRecord:e,changerFn:t,thisObj:n,finalizerFn:r}=this;e.beginBatch(),t&&this.callback(t,n,[e]),e.endBatch(),r&&this.callback(r,n,[e])}processSingleRecord(){var e;const{eventRecord:t,changerFn:n,thisObj:r,finalizerFn:o}=this;let i;t.beginBatch(),null!=t&&t.isRecurring&&t.recurrence.forEachOccurrence(t.startDate,null,((e,t,n)=>{if(n>1)return i=e,!1})),null===(e=i)||void 0===e||e.convertToRealEvent(),t.recurrence=null,n&&this.callback(n,r,[t]),t.recurrenceRule=null,t.endBatch(),o&&this.callback(o,r,[t])}updateLocalization(){this.updatePopupContent(),super.updateLocalization()}}A.initClass(),A._$name="RecurrenceConfirmationPopup";class L extends u{buildItems(){return[...this.addNone?[{text:"L{None}",value:"NONE"}]:[],{value:"DAILY",text:"L{Daily}"},{value:"WEEKLY",text:"L{Weekly}"},{value:"MONTHLY",text:"L{Monthly}"},{value:"YEARLY",text:"L{Yearly}"}]}}l(L,"$name","RecurrenceFrequencyCombo"),l(L,"type","recurrencefrequencycombo"),l(L,"configurable",{editable:!1,displayField:"text",valueField:"value",localizeDisplayFields:!0,addNone:!1}),L.initClass(),L._$name="RecurrenceFrequencyCombo";class j extends u{static get $name(){return"RecurrenceDaysCombo"}static get type(){return"recurrencedayscombo"}static get defaultConfig(){const e=["SU","MO","TU","WE","TH","FR","SA"],t=e.join(",");return{allDaysValue:t,editable:!1,defaultValue:t,workingDaysValue:e.filter(((e,t)=>!i.nonWorkingDays[t])).join(","),nonWorkingDaysValue:e.filter(((e,t)=>i.nonWorkingDays[t])).join(","),splitCls:"b-recurrencedays-split",displayField:"text",valueField:"value"}}buildItems(){const e=this;return e._weekDays=null,e.weekDays.concat([{value:e.allDaysValue,text:e.L("L{day}"),cls:e.splitCls},{value:e.workingDaysValue,text:e.L("L{weekday}")},{value:e.nonWorkingDaysValue,text:e.L("L{weekend day}")}])}get weekDays(){const e=this;if(!e._weekDays){const t=i.weekStartDay,n=i.getDayNames().map(((e,t)=>({text:e,value:S.encodeDay(t)})));e._weekDays=n.slice(t).concat(n.slice(0,t))}return e._weekDays}set value(e){const t=this;e&&Array.isArray(e)&&(e=e.join(",")),e&&t.store.findRecord("value",e)||(e=t.defaultValue),super.value=e}get value(){let e=super.value;return e&&Array.isArray(e)&&(e=e.join(",")),e}}j.initClass(),j._$name="RecurrenceDaysCombo";class M extends E{static get $name(){return"RecurrenceDaysButtonGroup"}static get type(){return"recurrencedaysbuttongroup"}static get defaultConfig(){return{defaults:{cls:"b-raised",toggleable:!0}}}construct(e={}){e.columns=7,e.items=this.buildItems(),super.construct(e)}updateItemText(e){const t=S.decodeDay(e.value)[0];e.text=i.getDayName(t).substring(0,3)}buildItems(){const e=this;if(!e.__items){const t=i.weekStartDay,n=i.getDayNames().map(((e,t)=>({text:e.substring(0,3),value:S.encodeDay(t)})));e.__items=n.slice(t).concat(n.slice(0,t))}return e.__items}set value(e){e&&Array.isArray(e)&&(e=e.join(",")),super.value=e}get value(){let e=super.value;return e&&Array.isArray(e)&&(e=e.join(",")),e}onLocaleChange(){this.items.forEach(this.updateItemText,this)}updateLocalization(){this.onLocaleChange(),super.updateLocalization()}get widgetClassList(){const e=super.widgetClassList;return e.push("b-field"),e}}M.initClass(),M._$name="RecurrenceDaysButtonGroup";class T extends E{static get $name(){return"RecurrenceMonthDaysButtonGroup"}static get type(){return"recurrencemonthdaysbuttongroup"}static get defaultConfig(){return{defaults:{toggleable:!0,cls:"b-raised"}}}get minValue(){return 1}get maxValue(){return 31}construct(e={}){e.columns=7,e.items=this.buildItems(),super.construct(e)}buildItems(){const e=this,t=[];for(let n=e.minValue;n<=e.maxValue;n++)t.push({text:n+"",value:n});return t}get widgetClassList(){const e=super.widgetClassList;return e.push("b-field"),e}}T.initClass(),T._$name="RecurrenceMonthDaysButtonGroup";class k extends E{static get $name(){return"RecurrenceMonthsButtonGroup"}static get type(){return"recurrencemonthsbuttongroup"}static get defaultConfig(){return{defaults:{toggleable:!0,cls:"b-raised"}}}construct(e={}){e.columns=4,e.items=this.buildItems(),super.construct(e)}buildItems(){return i.getMonthNames().map(((e,t)=>({text:e.substring(0,3),value:t+1})))}updateItemText(e){e.text=i.getMonthName(e.value-1).substring(0,3)}onLocaleChange(){this.items.forEach(this.updateItemText,this)}updateLocalization(){this.onLocaleChange(),super.updateLocalization()}get widgetClassList(){const e=super.widgetClassList;return e.push("b-field"),e}}k.initClass(),k._$name="RecurrenceMonthsButtonGroup";class O extends u{static get $name(){return"RecurrenceStopConditionCombo"}static get type(){return"recurrencestopconditioncombo"}static get defaultConfig(){return{editable:!1,placeholder:"Never",displayField:"text",valueField:"value"}}buildItems(){return[{value:"never",text:this.L("L{Never}")},{value:"count",text:this.L("L{After}")},{value:"date",text:this.L("L{On date}")}]}set value(e){e=e||"never",super.value=e}get value(){return super.value}get recurrence(){return this._recurrence}set recurrence(e){let t=null;e.endDate?t="date":e.count&&(t="count"),this._recurrence=e,this.value=t}}O.initClass(),O._$name="RecurrenceStopConditionCombo";class $ extends u{static get $name(){return"RecurrencePositionsCombo"}static get type(){return"recurrencepositionscombo"}static get defaultConfig(){return{editable:!1,splitCls:"b-sch-recurrencepositions-split",displayField:"text",valueField:"value",defaultValue:1,maxPosition:5}}buildItems(){const e=this;return e.buildDayNumbers().concat([{value:"-1",text:e.L("L{position-1}"),cls:e.splitCls}])}buildDayNumbers(){const e=this;return d.populate(e.maxPosition,(t=>({value:t+1,text:e.L(`position${t+1}`)})))}set value(e){const t=this;e&&Array.isArray(e)&&(e=e.join(",")),e&&t.store.findRecord("value",e)||(e=t.defaultValue),super.value=e}get value(){const e=super.value;return e?`${e}`.split(",").map((e=>parseInt(e,10))):[]}}$.initClass(),$._$name="RecurrencePositionsCombo";class N extends g{updateRecord(e){super.updateRecord(e);const t=this,{frequencyField:n,daysButtonField:r,monthDaysButtonField:o,monthsButtonField:i,monthDaysRadioField:s,positionAndDayRadioField:a,stopRecurrenceField:c}=t.widgetMap;if(e){const n=e.timeSpan,l=null==n?void 0:n.startDate;l&&(e.days&&e.days.length||(r.value=[S.encodeDay(l.getDay())]),e.monthDays&&e.monthDays.length||(o.value=l.getDate()),e.months&&e.months.length||(i.value=l.getMonth()+1)),e.days&&e.positions?(a.check(),t.isPainted||s.uncheck()):(s.check(),t.isPainted||a.uncheck()),c.recurrence=e}else n.value="NONE"}syncEventRecord(e){const t=this.getValues((t=>t.name in e&&!t.disabled));"endDate"in t||(t.endDate=null),"count"in t||(t.count=null),e.set(t)}toggleStopFields(){const{countField:e,endDateField:t}=this.widgetMap;switch(this.widgetMap.stopRecurrenceField.value){case"count":e.show(),e.enable(),t.hide(),t.disable();break;case"date":e.hide(),e.disable(),t.show(),t.enable();break;default:e.hide(),t.hide(),e.disable(),t.disable()}}onMonthDaysRadioFieldChange({checked:e}){const{monthDaysButtonField:t}=this.widgetMap;t.disabled=!e||!this.isWidgetAvailableForFrequency(t)}onPositionAndDayRadioFieldChange({checked:e}){const{daysCombo:t,positionsCombo:n}=this.widgetMap;t.disabled=n.disabled=!e||!this.isWidgetAvailableForFrequency(t)}onStopRecurrenceFieldChange(){this.toggleStopFields()}isWidgetAvailableForFrequency(e,t=this.widgetMap.frequencyField.value){return!e.forFrequency||e.forFrequency.includes(t)}onFrequencyFieldChange({value:e,oldValue:t,valid:n}){const r=this,o=r.queryAll((e=>"forFrequency"in e)),{intervalField:i,stopRecurrenceField:s}=r.widgetMap;if(n&&e){for(let t=0;t<o.length;t++){const n=o[t];r.isWidgetAvailableForFrequency(n,e)?(n.show(),n.enable()):(n.hide(),n.disable())}i.hidden=s.hidden="NONE"===e,"NONE"!==e&&(i.hint=r.L(`L{RecurrenceEditor.${e}intervalUnit}`)),"NONE"===t&&null==i.value&&(i.value=1),r.toggleFieldsState()}}toggleFieldsState(){const e=this,{widgetMap:t}=e;e.onMonthDaysRadioFieldChange({checked:t.monthDaysRadioField.checked}),e.onPositionAndDayRadioFieldChange({checked:t.positionAndDayRadioField.checked}),e.onStopRecurrenceFieldChange()}updateLocalization(){const{countField:e,intervalField:t,frequencyField:n}=this.widgetMap;e.hint=this.L("L{RecurrenceEditor.time(s)}"),n.value&&"NONE"!==n.value&&(t.hint=this.L(`L{RecurrenceEditor.${n.value}intervalUnit}`)),super.updateLocalization()}}l(N,"$name","RecurrenceEditorPanel"),l(N,"type","recurrenceeditorpanel"),l(N,"configurable",{cls:"b-recurrenceeditor",record:!1,addNone:!1,items:{frequencyField:{type:"recurrencefrequencycombo",name:"frequency",label:"L{RecurrenceEditor.Frequency}",weight:10,onChange:"up.onFrequencyFieldChange",addNone:"up.addNone"},intervalField:{type:"numberfield",weight:15,name:"interval",label:"L{RecurrenceEditor.Every}",min:1,required:!0},daysButtonField:{type:"recurrencedaysbuttongroup",weight:20,name:"days",forFrequency:"WEEKLY"},monthDaysRadioField:{type:"checkbox",weight:30,toggleGroup:"radio",forFrequency:"MONTHLY",label:"L{RecurrenceEditor.Each}",checked:!0,onChange:"up.onMonthDaysRadioFieldChange"},monthDaysButtonField:{type:"recurrencemonthdaysbuttongroup",weight:40,name:"monthDays",forFrequency:"MONTHLY"},monthsButtonField:{type:"recurrencemonthsbuttongroup",weight:50,name:"months",forFrequency:"YEARLY"},positionAndDayRadioField:{type:"checkbox",weight:60,toggleGroup:"radio",forFrequency:"MONTHLY|YEARLY",label:"L{RecurrenceEditor.On the}",onChange:"up.onPositionAndDayRadioFieldChange"},positionsCombo:{type:"recurrencepositionscombo",weight:80,name:"positions",forFrequency:"MONTHLY|YEARLY"},daysCombo:{type:"recurrencedayscombo",weight:90,name:"days",forFrequency:"MONTHLY|YEARLY",flex:1},stopRecurrenceField:{type:"recurrencestopconditioncombo",weight:100,label:"L{RecurrenceEditor.End repeat}",onChange:"up.onStopRecurrenceFieldChange"},countField:{type:"numberfield",weight:110,name:"count",min:2,required:!0,disabled:!0,label:" "},endDateField:{type:"datefield",weight:120,name:"endDate",hidden:!0,disabled:!0,label:" ",required:!0}}}),N.initClass(),N._$name="RecurrenceEditorPanel";class B extends x{static get $name(){return"EventMenu"}static get configurable(){return{processItems:null,type:"event"}}static get pluginConfig(){const e=super.pluginConfig;return e.chain.push("populateEventMenu"),e}get resourceStore(){return this.client.isHorizontal?this.client.store:this.client.resourceStore}getDataFromEvent(e){var t;const n=super.getDataFromEvent(e),r=n.targetElement,{client:o}=this,i=o.resolveEventRecord(r),s=i&&(null===(t=o.resolveResourceRecord(r)||this.resourceStore.last)||void 0===t?void 0:t.$original),a=i&&o.resolveAssignmentRecord(r);return Object.assign(n,{eventElement:r,eventRecord:i,resourceRecord:s,assignmentRecord:a})}getTargetElementFromEvent({target:e}){return e.closest(this.client.eventSelector)||e}shouldShowMenu(e){return e.eventRecord}showContextMenuFor(e,{targetElement:t,event:n}={}){this.disabled||(t||(t=this.getElementFromRecord(e)))&&h.triggerMouseEvent(t,this.tiggerEvent)}getElementFromRecord(e){return this.client.getElementsFromEventRecord(e)[0]}populateEventMenu({items:e,eventRecord:t,assignmentRecord:n}){const{client:r}=this;e.deleteEvent={disabled:t.readOnly||(null==n?void 0:n.readOnly),hidden:r.readOnly},e.unassignEvent={disabled:t.readOnly||(null==n?void 0:n.readOnly),hidden:r.readOnly||r.eventStore.usesSingleAssignment}}changeItems(e){const{client:t}=this;return m.merge({deleteEvent:{text:"L{SchedulerBase.Delete event}",icon:"b-icon b-icon-trash",weight:200,onItem({menu:e,eventRecord:n}){var r;const o=null===(r=e.focusInEvent)||void 0===r?void 0:r.relatedTarget;o&&(o.focus(),t.navigator.activeItem=o),t.removeEvents(t.isEventSelected(n)?t.selectedEvents:[n])}},unassignEvent:{text:"L{SchedulerBase.Unassign event}",icon:"b-icon b-icon-unassign",weight:300,onItem({menu:e,eventRecord:n,resourceRecord:r}){var o;const i=null===(o=e.focusInEvent)||void 0===o?void 0:o.relatedTarget;i&&(i.focus(),t.navigator.activeItem=i),n.unassign(r)}}},e)}}B.featureClass="",B._$name="EventMenu",f.registerFeature(B,!0,"Scheduler"),f.registerFeature(B,!1,"ResourceHistogram");class I extends x{static get $name(){return"ScheduleMenu"}static get defaultConfig(){return{type:"schedule",items:null,processItems:null}}static get pluginConfig(){const e=super.pluginConfig;return e.chain.push("populateScheduleMenu"),e}shouldShowMenu(e){const{client:t}=this,{targetElement:n,resourceRecord:r}=e,o=t.timeAxisSubGridElement.contains(n);return!n.closest(t.eventSelector)&&o&&!(r&&r.isSpecialRow)}getDataFromEvent(e){if(h.isDOMEvent(e)){var t,n;const{client:r}=this,o=null===(t=r.getCellDataFromEvent)||void 0===t?void 0:t.call(r,e),i=null===(n=r.getDateFromDomEvent)||void 0===n?void 0:n.call(r,e,"floor"),s=r.resolveResourceRecord(e)||r.isVertical&&r.resourceStore.last;return v.assign(super.getDataFromEvent(e),o,{date:i,resourceRecord:s})}return e}populateScheduleMenu({items:e,resourceRecord:t,date:n}){const{client:r}=this;!r.readOnly&&r.eventStore&&(e.addEvent={text:"L{SchedulerBase.Add event}",icon:"b-icon b-icon-add",disabled:!t||t.readOnly||!t.isWorkingTime(n),weight:100,onItem(){r.createEvent(n,t,r.getRowFor(t))}})}}I.featureClass="",I._$name="ScheduleMenu",f.registerFeature(I,!0,"Scheduler");var P=e=>{var n;return l(n=class extends(e||t){construct(e){super.construct(e),this.ion({beforeEventDropFinalize:"onRecurrableBeforeEventDropFinalize",beforeEventResizeFinalize:"onRecurrableBeforeEventResizeFinalize",beforeAssignmentDelete:"onRecurrableAssignmentBeforeDelete"})}changeRecurrenceConfirmationPopup(e,t){const n=this.constructor.reconfigure(t,e,"recurrenceconfirmation");return n.owner=this,n}findRecurringEventToConfirmDelete(e){return e.find((e=>e.supportsRecurring&&(e.isRecurring||e.isOccurrence)))}onRecurrableAssignmentBeforeDelete({assignmentRecords:e,context:t}){const n=e.map((e=>e.event)),r=this.findRecurringEventToConfirmDelete(n);if(this.enableRecurringEvents&&r)return this.recurrenceConfirmationPopup.confirm({actionType:"delete",eventRecord:r,changerFn(){t.finalize(!0)},cancelFn(){t.finalize(!1)}}),!1}onRecurrableBeforeEventDropFinalize({context:e}){if(this.enableRecurringEvents){const{eventRecords:t}=e,n=t.filter((e=>e.supportsRecurring&&(e.isRecurring||e.isOccurrence)));n.length&&(e.async=!0,this.recurrenceConfirmationPopup.confirm({actionType:"update",eventRecord:n[0],changerFn(){e.finalize(!0)},cancelFn(){e.finalize(!1)}}))}}onRecurrableBeforeEventResizeFinalize({context:e}){if(this.enableRecurringEvents){const{eventRecord:t}=e;t.supportsRecurring&&(t.isRecurring||t.isOccurrence)&&(e.async=!0,this.recurrenceConfirmationPopup.confirm({actionType:"update",eventRecord:t,changerFn(){e.finalize(!0)},cancelFn(){e.finalize(!1)}}))}}onAssignmentChange({action:e,records:t}){if("dataset"!==e&&Array.isArray(t))for(const e of t){var n;null!==(n=e.event)&&void 0!==n&&n.isRecurring&&!e.event.isBatchUpdating&&e.event.removeOccurrences()}}getOccurrencesFor(e){return this.eventStore.getOccurrencesForTimeSpan(e,this.timeAxis.startDate,this.timeAxis.endDate)}async removeEvents(e,t=null,n=this){const r=this;if(!r.readOnly&&e.length){const o={finalize(n=!0){if(t&&t(n),!1!==n)if(e.some((e=>{var t;return e.isOccurrence||(null===(t=e.event)||void 0===t?void 0:t.isOccurrence)})))e.forEach((e=>e.isOccurrenceAssignment?e.event.remove():e.remove()));else{(e[0].isAssignment?r.assignmentStore:r.eventStore).remove(e)}}};let i;if(i=e[0].isAssignment?r.trigger("beforeAssignmentDelete",{assignmentRecords:e,context:o}):r.trigger("beforeEventDelete",{eventRecords:e,context:o}),!1!==i){const t=e.find((e=>e.isRecurring||e.isOccurrence));return t?(r.recurrenceConfirmationPopup.owner=n,r.recurrenceConfirmationPopup.confirm({actionType:"delete",eventRecord:t,changerFn(){o.finalize(!0)},cancelFn(){o.finalize(!1)}})):o.finalize(!0),!0}}return!1}get widgetClass(){}},"$name","RecurringEvents"),l(n,"configurable",{enableRecurringEvents:!1,recurrenceConfirmationPopup:{$config:["lazy"],value:{type:"recurrenceconfirmation"}}}),n};const z=["eventStore","taskStore","assignmentStore","resourceStore","dependencyStore","timeRangeStore","resourceTimeRangeStore"],_=["events","tasks","resources","assignments","dependencies","timeRanges","resourceTimeRanges"];var Y=e=>class extends e{static get $name(){return"CurrentConfig"}preProcessCurrentConfigs(e){for(const t of _)delete e[t];super.preProcessCurrentConfigs(e)}getCurrentConfig(e){const t=this.project.getCurrentConfig(e),n=super.getCurrentConfig(e);if(t){n.project=t;const{crudManager:e}=n;if(e)for(const n of z)e[n]&&(t[n]=e[n]);0===Object.keys(t).length&&delete n.project}return delete n.data,delete n.crudManager,n}get widgetClass(){}};const q=e=>e.preventDefault(),V={ArrowRight:1,ArrowLeft:1,ArrowUp:1,ArrowDown:1},K={animate:100},W=Object.freeze({});var U=e=>class extends(p(e||t)){static get $name(){return"EventNavigation"}static get configurable(){return{navigator:{allowCtrlKey:!0,scrollSilently:!0,keys:{Space:"onEventSpaceKey",Enter:"onEventEnterKey",Delete:"onDeleteKey",Backspace:"onDeleteKey",ArrowUp:"onArrowUpKey",ArrowDown:"onArrowDownKey",Escape:"onEscapeKey",Tab:"onTab","SHIFT+Tab":"onShiftTab"}},isNavigationKey:{ArrowDown:1,ArrowUp:1,ArrowLeft:1,ArrowRight:1}}}static get defaultConfig(){return{focusCls:"b-active",enableDeleteKey:!0,onDeleteKeyBuffer:500,navigatePreviousBuffer:200,navigateNextBuffer:200,testConfig:{onDeleteKeyBuffer:1}}}construct(e){const t=this;t.isInTimeAxis=t.isInTimeAxis.bind(t),t.onDeleteKey=t.throttle(t.onDeleteKey,t.onDeleteKeyBuffer,t),super.construct(e)}changeNavigator(e){const t=this;return t.getConfig("subGridConfigs"),new y(t.constructor.mergeConfigs({ownerCmp:t,target:t.timeAxisSubGridElement,processEvent:t.processEvent,itemSelector:`.${t.eventCls}-wrap`,focusCls:t.focusCls,navigatePrevious:t.throttle(t.navigatePrevious,{delay:t.navigatePreviousBuffer,throttled:q}),navigateNext:t.throttle(t.navigateNext,{delay:t.navigateNextBuffer,throttled:q})},e))}doDestroy(){this.navigator.destroy(),super.doDestroy()}isInTimeAxis(e){return!e.instanceMeta(this).excluded&&this.timeAxis.isTimeSpanInAxis(e)}onElementKeyDown(e){var t,n;const r=this,{navigator:o}=r;if(-1===(null===(t=r.focusedCell)||void 0===t?void 0:t.rowIndex)||(null===(n=r.focusedCell)||void 0===n?void 0:n.column)!==r.timeAxisColumn||e.target.closest(o.itemSelector)||"Enter"!==e.key){var i;null===(i=super.onElementKeyDown)||void 0===i||i.call(this,e)}else{const t=r.getFirstVisibleAssignment();if(t)return r.navigateTo(t,{uiEvent:e}),!1}}getFirstVisibleAssignment(e=this.focusedCell){const{currentOrientation:t,rowManager:n,eventStore:r}=this;if(this.isHorizontal){var o;let l=t.rowMap.get(n.getRow(e.rowIndex));var i,s,a,c;if(null!==(o=l)&&void 0!==o&&o.length)return null===(i=l[0])||void 0===i?void 0:i.elementData.assignmentRecord;if(l=null===(s=t.resourceMap.get(e.id))||void 0===s?void 0:s.eventsData,null!==(a=l)&&void 0!==a&&a.length)return null===(c=l.filter((e=>r.isAvailable(e.eventRecord)))[0])||void 0===c?void 0:c.assignmentRecord}else{const e=[...t.resourceMap.values()][0],n=e&&Object.values(e);if(null!=n&&n.length)return n.filter((e=>r.isAvailable(e.renderData.eventRecord)))[0].renderData.assignmentRecord}}onGridBodyFocusIn(e){const t=e.target.closest(this.focusableSelector);if(this.timeAxisSubGridElement.contains(e.target)){const r=this,{navigationEvent:o}=r,{target:i}=e,s=i.closest(r.navigator.itemSelector),a=s?r.normalizeCellContext({rowIndex:r.isVertical?0:r.resourceStore.indexOf(r.resolveResourceRecord(i)),column:r.timeAxisColumn,target:i}):new b(i);if(s){var n;const{_focusedCell:e}=r;return r._focusedCell=a,void(null===(n=r.onCellNavigate)||void 0===n||n.call(r,r,e,a,o,!0))}if(t&&(!o||V[o.key])){const t=r.getFirstVisibleAssignment(a);if(t)return void r.navigateTo(t,{scrollIntoView:Boolean(o&&"mousedown"!==o.type),uiEvent:o||e})}}t&&super.onGridBodyFocusIn(e)}accessibleFocusCell(e,t){if((e=this.normalizeCellContext(e)).columnId!==this.timeAxisColumn.id)return super.focusCell(e,t)}normalizeTarget(e){return e.assignmentRecord}getPrevious(e,t){const n=this,{resourceStore:r}=n,{eventSorter:o}=n.currentOrientation,{startDate:i,endDate:s}=n.timeAxis,a=e.event,c=n.eventStore.getEvents({resourceRecord:e.resource,startDate:i,endDate:s}).filter(this.isInTimeAxis).sort(o);let l=e.resource,u=c[c.indexOf(a)-1];if(!u)for(let e=r.indexOf(l)-1;(!u||t&&u===a)&&e>=0;e--){l=r.getAt(e);const t=n.eventStore.getEvents({resourceRecord:l,startDate:i,endDate:s}).filter(n.isInTimeAxis).sort(o);u=t.length&&t[t.length-1]}return n.assignmentStore.getAssignmentForEventAndResource(u,l)}navigatePrevious(e){const t=this,n=t.getPrevious(t.normalizeTarget(e));return e.preventDefault(),n?(e.ctrlKey||t.clearEventSelection(),t.navigateTo(n,{uiEvent:e})):t.doGridNavigation(e)}getNext(e,t){const n=this,{resourceStore:r}=n,{eventSorter:o}=n.currentOrientation,{startDate:i,endDate:s}=n.timeAxis,a=e.event,c=n.eventStore.getEvents({resourceRecord:e.resource,startDate:i,endDate:s}).filter(this.isInTimeAxis).sort(o);let l=e.resource,u=c[c.indexOf(a)+1];if(!u)for(let e=r.indexOf(l)+1;(!u||t&&u===a)&&e<r.count;e++){l=r.getAt(e);u=n.eventStore.getEvents({resourceRecord:l,startDate:i,endDate:s}).filter(n.isInTimeAxis).sort(o)[0]}return n.assignmentStore.getAssignmentForEventAndResource(u,l)}navigateNext(e){const t=this,n=t.getNext(t.normalizeTarget(e));return e.preventDefault(),n?(e.ctrlKey||t.clearEventSelection(),t.navigateTo(n,{uiEvent:e})):t.doGridNavigation(e)}doGridNavigation(e){e.handled||0!==e.key.indexOf("Arrow")||this[`navigate${e.key.substring(5)}ByKey`](e)}async navigateTo(e,{scrollIntoView:t=!0,uiEvent:n={}}=W){const r=this,{navigator:o}=r,{skipScrollIntoView:i}=o;e&&(t?(o.disabled=!0,await r.scrollAssignmentIntoView(e,K),o.disabled=!1):o.skipScrollIntoView=!0,!r.isDestroyed&&this.getElementFromAssignmentRecord(e)&&(r.activeAssignment=e,o.skipScrollIntoView=i,o.trigger("navigate",{event:n,item:r.getElementFromAssignmentRecord(e).closest(o.itemSelector)})))}set activeAssignment(e){const t=this.getElementFromAssignmentRecord(e,!0);t&&(this.navigator.activeItem=t)}get activeAssignment(){const{activeItem:e}=this.navigator;if(e)return this.resolveAssignmentRecord(e)}get previousActiveEvent(){const{previousActiveItem:e}=this.navigator;if(e)return this.resolveEventRecord(e)}processEvent(e){const t=this,n=e.target.closest(t.eventSelector);return!t.navigator.disabled&&n&&(e.assignmentRecord=t.resolveAssignmentRecord(n),e.eventRecord=t.resolveEventRecord(n),e.resourceRecord=t.resolveResourceRecord(n)),e}onDeleteKey(e){const t=this;if(!t.readOnly&&t.enableDeleteKey){const e=t.eventStore.usesSingleAssignment?t.selectedEvents:t.selectedAssignments;t.removeEvents(e.filter((e=>!e.readOnly)))}}onArrowUpKey(e){this.focusCell({rowIndex:this.focusedCell.rowIndex-1,column:this.timeAxisColumn}),e.handled=!0}onArrowDownKey(e){this.focusedCell.rowIndex<this.resourceStore.count-1&&(this.focusCell({rowIndex:this.focusedCell.rowIndex+1,column:this.timeAxisColumn}),e.handled=!0)}onEscapeKey(e){e.target.closest(".b-dragging")||(this.focusCell({rowIndex:this.focusedCell.rowIndex,column:this.timeAxisColumn}),e.handled=!0)}onEventSpaceKey(e){}onEventEnterKey(e){}get isActionableLocation(){if(!this.navigator.activeItem)return super.isActionableLocation}get widgetClass(){}};export{D as AttachToProjectMixin,w as ClockTemplate,Y as CurrentConfig,B as EventMenu,F as ProjectConsumer,A as RecurrenceConfirmationPopup,M as RecurrenceDaysButtonGroup,j as RecurrenceDaysCombo,N as RecurrenceEditorPanel,L as RecurrenceFrequencyCombo,T as RecurrenceMonthDaysButtonGroup,k as RecurrenceMonthsButtonGroup,$ as RecurrencePositionsCombo,O as RecurrenceStopConditionCombo,P as RecurringEvents,I as ScheduleMenu,U as SchedulerEventNavigation,x as TimeSpanMenuBase};
//# sourceMappingURL=EventNavigation.js.map
