/*!
 *
 * Bryntum Calendar 5.3.0
 *
 * Copyright(c) 2023 Bryntum AB
 * https://bryntum.com/contact
 * https://bryntum.com/license
 *
 */
import{_defineProperty as t,ObjectHelper as e,InstancePlugin as i,EventHelper as n}from"./Editor.js";import{ColumnStore as o,Column as r,GridFeatureManager as l}from"./GridBase.js";import{NumberFormat as s}from"./MessageDialog.js";class a extends r{static get defaults(){return{filterType:"number",format:""}}get defaultEditor(){const{format:t,name:i,max:n,min:o,step:r,largeStep:l,align:s}=this;return e.cleanupProperties({type:"numberfield",format:t,name:i,max:n,min:o,step:r,largeStep:l,textAlign:s})}get formatter(){const t=this,{format:e}=t;let i=t._formatter;return i&&t._lastFormat===e||(t._formatter=i=s.get(t._lastFormat=e)),i}formatValue(t){var e;return null!=t&&(t=this.formatter.format(t),this.unit&&(t=`${t}${this.unit}`)),null!==(e=t)&&void 0!==e?e:""}defaultRenderer({value:t}){return this.formatValue(t)}}t(a,"type","number"),t(a,"fieldType","number"),t(a,"fields",["format","min","max","step","largeStep","unit"]),o.registerColumnType(a,!0),a.exposeProperties(),a._$name="NumberColumn";class d extends i{static get pluginConfig(){return{chain:["onElementPointerDown","onElementDblClick","onElementTouchMove","onSubGridCollapse","onSubGridExpand","render"]}}onElementDblClick(t){const e=this,{client:i}=e,n=t.target.closest(".b-grid-splitter-collapsed");if(n&&!e.expanding){e.expanding=!0;let t=n.dataset.region,o=i.getSubGrid(t);o.collapsed||(t=i.getLastRegions()[1],o=i.getSubGrid(t)),o.expand().then((()=>e.expanding=!1))}}startMove(t,e){const i=this,{client:o}=i,r=t.dataset.region,l=o.element,s=o.regions[o.regions.indexOf(r)+1],a=o.getSubGrid(s),d=o.getSubGrid(r);let g=d,p=1;if(null!=g.flex&&null==a.flex&&(g=a,p=-1),o.rtl&&(p*=-1),t.classList.contains("b-grid-splitter-collapsed"))return;const c=g.element.offsetWidth+a.element.offsetWidth;i.dragContext={element:t,headerEl:g.header.element,subGridEl:g.element,subGrid:g,splitterSubGrid:d,originalWidth:g.element.offsetWidth,originalX:e,minWidth:g.minWidth||0,maxWidth:Math.min(c,g.maxWidth||c),flip:p},l.classList.add("b-moving-splitter"),d.toggleSplitterCls("b-moving"),i.pointerDetacher=n.on({element:document,pointermove:"onPointerMove",pointerup:"onPointerUp",thisObj:i})}endMove(){const t=this,{dragContext:e}=t;e&&(t.pointerDetacher(),t.client.element.classList.remove("b-moving-splitter"),e.splitterSubGrid.toggleSplitterCls("b-moving",!1),t.dragContext=null)}onCollapseClick(t,e){const{client:i}=this,n=e.dataset.region,o=i.getLastRegions();if(o[0]===n){const t=i.getSubGrid(o[1]);if(t.collapsed)return void t.expand()}t.collapse()}onExpandClick(t,e){const{client:i}=this,n=e.dataset.region,o=i.getLastRegions();if(o[0]!==n||t.collapsed)t.expand();else{i.getSubGrid(o[1]).collapse()}}updateMove(t){const{dragContext:e}=this;if(e){const i=t-e.originalX,n=Math.max(Math.min(e.maxWidth,e.originalWidth+i*e.flip),0);e.subGrid.width=Math.max(n,e.minWidth)}}onElementPointerDown(t){const e=this,{target:i}=t,n=0===t.button&&i.closest(":not(.b-row-reordering):not(.b-dragging-event):not(.b-dragging-task):not(.b-dragging-header):not(.b-dragselecting) .b-grid-splitter"),o=n&&e.client.getSubGrid(n.dataset.region);let r;n&&(i.closest(".b-grid-splitter-button-collapse")?e.onCollapseClick(o,n):i.closest(".b-grid-splitter-button-expand")?e.onExpandClick(o,n):(e.startMove(n,t.clientX),r=n)),"touch"===t.pointerType&&e.toggleTouchSplitter(r)}onPointerMove(t){this.dragContext&&(this.updateMove(t.clientX),t.preventDefault())}onElementTouchMove(t){this.dragContext&&t.preventDefault()}onPointerUp(t){this.dragContext&&(this.endMove(),t.preventDefault())}onSubGridCollapse({subGrid:t}){const e=this.client.resolveSplitter(t);this.client.getLastRegions()[1]===t.region&&e.classList.add("b-grid-splitter-allow-collapse")}onSubGridExpand({subGrid:t}){this.client.resolveSplitter(t).classList.remove("b-grid-splitter-allow-collapse")}toggleTouchSplitter(t){const e=this,{touchedSplitter:i}=e;t&&i&&t.dataset.region!==i.dataset.region&&e.toggleTouchSplitter();const n=e.client.getSubGrid(t?t.dataset.region:null==i?void 0:i.dataset.region);n&&(n.toggleSplitterCls("b-touching",Boolean(t)),t?n.startSplitterButtonSyncing():n.stopSplitterButtonSyncing()),e.touchedSplitter=t}render(){const{regions:t,subGrids:e}=this.client;t.length>2&&(e[t[0]].splitterElement.classList.add("b-left-only"),e[t[1]].splitterElement.classList.add("b-right-only"))}}t(d,"$name","RegionResize"),d.featureClass="b-split",d._$name="RegionResize",l.registerFeature(d);export{a as NumberColumn,d as RegionResize};
//# sourceMappingURL=RegionResize.js.map
