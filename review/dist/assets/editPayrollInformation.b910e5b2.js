import{c as D}from"./commonModal.7c7715d3.js";import{e as $}from"./employeeHeader.c061ea79.js";import{I as g}from"./IntegrationFunction.c3156a3a.js";import{u as j,a as Q,P as n}from"./employeePayrollInformationStore.31ed636f.js";import{u as w}from"./foundationIntegrationFactory.460aee6e.js";import{d as W,Q as z,at as G,y as J,j as u,b as K,s as X,e as Z,aW as ee,r as s,o as ae,c as oe,g as a,u as te,w as o,I as y,ax as le,ay as re,a as h,_ as ne}from"./index.611fe570.js";const N=f=>(le("data-v-455dfa5d"),f=f(),re(),f),ue={class:"hq-pg d-flex flex-column"},se=N(()=>h("h2",{class:"hq-pg__title"},"Edit Payroll Information",-1)),de=N(()=>h("div",{class:"message-content"}," Are you sure you want to close this payroll form? Any unsaved changes will be lost. ",-1)),ie=W({__name:"editPayrollInformation",setup(f){const I=z(),k=G(),v=J(),P=u(""),_=u(!0),i=K(()=>k.params?.id?.toString()),T=j(),{payrollInformation:S}=X(T),{fetchPayrollInformation:q,editPayrollInformation:F}=T,M=w(g.EarnCode)(),U=w(g.PayPeriod)(),x=u(null),l=u(new Q),A=[{id:n.Hourly,payTypeName:n[n.Hourly]},{id:n.Salary,payTypeName:n[n.Salary]}],b=u([]),E=u([]),c=u(!1);function L(){c.value=!0}function H(){c.value=!1}function Y(){_.value=!1,P.value?v.push(P.value):v.push({name:"payrollAndTaxes",params:{id:i.value}})}async function O(){if(!(await x.value.validate()).valid)return;const e=l.value,r={employeeId:+i.value,payTypeId:+e.payType?.id||null,earnCodeId:+e.earnCode?.id||null,payPeriodId:+e.payPeriod?.id||null,payRate:e.payRate,payPeriodsPerYear:e.payPeriodsPerYear,isHoursRequiredforSalary:e.isHoursRequiredforSalary,isCertifiedPayroll:e.isCertifiedPayroll,isFutaSutaExempt:e.isFutaSutaExempt};await F(r)?(_.value=!1,v.push({name:"payrollAndTaxes",params:{id:i.value}}),I.notifyError("Edit Successful! Your changes have been saved.")):I.notifyError("Failed to save changes. Please try again later.")}return Z(async()=>{const d=await Promise.all([M.getData(!0),U.getData(!0)]);b.value=d[0].map(r=>({id:r.id,earnCodeName:r.earnCodeName})),E.value=d[1].map(r=>({id:r.id,payPeriodName:r.payPeriodName})),await q(i.value);const e=S.value.payTypeId;l.value={...S.value,payType:e?{id:e,payTypeName:n[e]}:void 0}}),ee(async d=>_.value?(P.value=d.fullPath,c.value=!0,!1):!0),(d,e)=>{const r=s("fs-col"),C=s("fs-button"),p=s("fs-row"),R=s("fs-container"),m=s("fs-input"),V=s("fs-form-checkbox"),B=s("VeeForm");return ae(),oe("div",ue,[a($,{employeeId:te(i),class:"position-relative"},null,8,["employeeId"]),a(B,{ref_key:"form",ref:x},{default:o(()=>[a(R,{fluid:"",class:"contain hq-pg__header"},{default:o(()=>[a(p,{"align-v":"center"},{default:o(()=>[a(r,null,{default:o(()=>[se]),_:1}),a(r,{cols:"auto",class:"ms-auto"},{default:o(()=>[a(C,{variant:"outline-secondary",onClick:e[0]||(e[0]=t=>L())},{default:o(()=>[y("Cancel")]),_:1}),a(C,{variant:"primary",onClick:e[1]||(e[1]=t=>O())},{default:o(()=>[y("Save")]),_:1})]),_:1})]),_:1}),a(D,{showModal:c.value,title:"CLOSE PAYROLL FORM",okText:"CLOSE",cancelText:"CANCEL",okTextVariant:"primary",onEmitParent:e[2]||(e[2]=t=>Y()),onEmitCloseParent:e[3]||(e[3]=t=>H())},{content:o(()=>[de]),_:1},8,["showModal"])]),_:1}),a(R,{fluid:"",class:"contain mt-4"},{default:o(()=>[a(p,null,{default:o(()=>[a(r,{md:"4"},{default:o(()=>[a(m,{type:"fsMultiselectList",name:"payType",label:"Pay Type",modelValue:l.value.payType,"onUpdate:modelValue":e[4]||(e[4]=t=>l.value.payType=t),typeaheaddata:A,typeaheadvalueattribute:"id",typeaheadkey:"payTypeName",rules:{required:!0}},null,8,["modelValue"])]),_:1}),a(r,{md:"4"},{default:o(()=>[a(m,{type:"fsMultiselectList",name:"earnCode",label:"Earn Code",modelValue:l.value.earnCode,"onUpdate:modelValue":e[5]||(e[5]=t=>l.value.earnCode=t),typeaheaddata:b.value,typeaheadvalueattribute:"id",typeaheadkey:"earnCodeName",rules:{required:!0}},null,8,["modelValue","typeaheaddata"])]),_:1})]),_:1}),a(p,null,{default:o(()=>[a(r,{md:"4"},{default:o(()=>[a(m,{type:"fsMultiselectList",name:"payPeriod",label:"Pay Period",modelValue:l.value.payPeriod,"onUpdate:modelValue":e[6]||(e[6]=t=>l.value.payPeriod=t),typeaheaddata:E.value,typeaheadvalueattribute:"id",typeaheadkey:"payPeriodName",rules:{required:!0}},null,8,["modelValue","typeaheaddata"])]),_:1}),a(r,{md:"4"},{default:o(()=>[a(m,{type:"fsCurrencyInput",name:"payRate",label:"Pay Rate Per Pay Period",modelValue:l.value.payRate,"onUpdate:modelValue":e[7]||(e[7]=t=>l.value.payRate=t),rules:{required:!0}},null,8,["modelValue"])]),_:1})]),_:1}),a(p,null,{default:o(()=>[a(r,{md:"4"},{default:o(()=>[a(m,{type:"fsTextInput",inputType:"number",name:"PayPeriodsPerYear",label:"Pay Periods Per Year",modelValue:l.value.payPeriodsPerYear,"onUpdate:modelValue":e[8]||(e[8]=t=>l.value.payPeriodsPerYear=t),rules:{required:!0,min_value:0}},null,8,["modelValue"])]),_:1})]),_:1}),a(p,null,{default:o(()=>[a(r,{md:"4"},{default:o(()=>[a(V,{modelValue:l.value.isHoursRequiredforSalary,"onUpdate:modelValue":e[9]||(e[9]=t=>l.value.isHoursRequiredforSalary=t),class:"mb-2"},{default:o(()=>[y("Hours Required for Salary")]),_:1},8,["modelValue"]),a(V,{modelValue:l.value.isCertifiedPayroll,"onUpdate:modelValue":e[10]||(e[10]=t=>l.value.isCertifiedPayroll=t),class:"mb-2"},{default:o(()=>[y("Certified Payroll")]),_:1},8,["modelValue"]),a(V,{modelValue:l.value.isFutaSutaExempt,"onUpdate:modelValue":e[11]||(e[11]=t=>l.value.isFutaSutaExempt=t),class:"mb-2"},{default:o(()=>[y("FUTA/SUTA Exempt")]),_:1},8,["modelValue"])]),_:1})]),_:1})]),_:1})]),_:1},512)])}}});const Pe=ne(ie,[["__scopeId","data-v-455dfa5d"]]);export{Pe as default};
