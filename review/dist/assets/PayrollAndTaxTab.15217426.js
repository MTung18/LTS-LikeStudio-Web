import{J as S,K as $,L as x,N as L,O as l,R as k,j as p,Q as C,b2 as W,b3 as j,aZ as D}from"./index.611fe570.js";class m{employeeDirectDepositId;pHQClientId;employeeId;bankRoutingNumber;bankAccountNumber;accountTypeId;distributionMethodId;accountTypeName;distributionMethodName;distributionAmount;ordinalPosition;isPrenoteRequired;voidedCheckFilePath;status;isActive;isDeleted;updateEmployeeId;description;employeeDirectDepositFsNo;approvalStatusId;approvalStatusName;constructor(t){Object.assign(this,t)}}class y extends m{file;isNew;isValid;constructor(t){super(),Object.assign(this,t)}}class d{distributionMethodList=[];accountTypeList=[];approvalStatusList=[];constructor(t){Object.assign(this,t)}}class H extends x{constructor(t){const s=L().ClientSide.WorkforceEmployeeManagement+"/api/v1";super(t,s,"direct deposit account")}async submitEmployeeDirectDeposit(t,s){try{return await this.PerformPut(`/employees/${s}/directDeposit`,t)}catch(e){throw console.error(this.errormessage(l.Create),e),e}}async fetchDirectDeposit(t=null){let s=[];try{const e=`/employees/${t}/directDeposit?IsDeleted=false`;s=(await this.PerformFetch(e)).map(u=>new m(u))}catch(e){console.error(this.errormessage(l.Fetch),e)}return s}async deleteDirectDeposit(t,s,e=!1){try{return await this.PerformDelete(`/employees/${t}/directDeposit/${s}`)}catch(c){if(console.error(this.errormessage(l.Delete),c),e)throw c}return!1}async getDirectDepositMasterData(t){let s=new d;try{const e=`/employees/${t}/directDeposit/masterdata`;s=await this.PerformFetch(e)}catch(e){console.error(this.errormessage(l.Fetch),e)}return s}async getPaymentMethod(t){let s;try{const e=`/employees/${t}/directDeposit/paymentMethod`;s=await this.PerformFetch(e)}catch(e){console.error(this.errormessage(l.Fetch),e)}return s}async editPaymentMethod(t){let s;try{const e=`/employees/${t}/directDeposit/paymentMethod`,c=await this.axiosInstance.patch(e);if(c&&c.data&&c.status===200)s=c.data;else throw new Error("Failed to payment method change")}catch(e){console.error("An unexpected error occurred attempting to retrieve the payment method change.",e)}return s}}const n=new H([S,$]),q=k("employeeDirectDepositStore",()=>{const i=p(new Array),t=p(new Array),s=p(new Array),e=p([]),c=p(new d),u=p(),{notifyError:h}=C();async function f(r){e.value?.length<=0&&(e.value=s.value.map(a=>new y(a))),w(r)}function v(r){e.value=r}function w(r){if(r){var a=e.value.findIndex(o=>o.employeeDirectDepositId===r.employeeDirectDepositId);a>-1?e.value[a]=r:e.value.push(r)}}async function g(r){var a=e.value.findIndex(o=>o.employeeDirectDepositId===r);a>-1&&e.value.splice(a,1)}async function E(){e.value=[]}async function P(r,a=!1){if(!a)i.value=await n.fetchDirectDeposit(r);else if(e.value.length>0)t.value=e.value;else{const o=await n.fetchDirectDeposit(r);t.value=o.map(N=>new y(N)),s.value=W.cloneDeep(t.value)}}async function I(r,a){try{return await n.deleteDirectDeposit(r,a,!0)}catch(o){o instanceof j&&h(o?.failureItems[0]?.failureReason)}}async function M(r,a){try{return r.forEach(o=>{o.voidedCheckFilePath=D(o.voidedCheckFilePath),o.description=D(o.description)}),await n.submitEmployeeDirectDeposit(r,a)}catch(o){return u.value=o,!1}}async function b(r){c.value=await n.getDirectDepositMasterData(r)}async function A(r){return await n.getPaymentMethod(r)}async function F(r){return await n.editPaymentMethod(r)}return{fetchEmployeeDirectDeposits:P,deleteEmployeeDirectDeposits:I,employeeDirectDeposit:i,getEmployeeDirectDepositsMasterData:b,masterData:c,employeeAccountList:t,originalAccountList:s,submitDirectDeposit:M,assignEmployeeDirectDeposits:v,upsertEmployeeDirectDeposits:f,removeDirectDepositData:g,clearUpsertEmployeeDirectDeposits:E,directDepositsToSubmit:e,getPaymentMethod:A,editPaymentMethod:F,submitAPIError:u}});var O=(i=>(i.Payroll="Payroll",i.PayHistory="PayHistory",i.DirectDeposit="DirectDeposit",i.TaxInfo="TaxInfo",i.W2="W-2",i))(O||{});export{y as E,O as P,q as u};
