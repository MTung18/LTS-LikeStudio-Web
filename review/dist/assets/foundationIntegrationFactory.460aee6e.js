import{L as E,Q as P,N as f,O as m,R as C,J as w,K as g,aZ as v}from"./index.611fe570.js";import{I as o}from"./IntegrationFunction.c3156a3a.js";class S extends E{_foundationIntegrationProvider=1;alerts=P();_resourceName;get resourceName(){return this._resourceName}set resourceName(e){this._resourceName=e}_overRideEndpoints;get overRideEndpoints(){return this._overRideEndpoints}set overRideEndpoints(e){this._overRideEndpoints=e}constructor(e,n,r){const d=f().ClientSide.WorkforceManagement;super(e,d,n),this.resourceName=n,this.overRideEndpoints=r}async fetch(e){let n=[];try{let r=`/v1/foundationIntegration/${this.resourceName}?IsSynced=${e}`;this.overRideEndpoints&&this.overRideEndpoints.fetch&&(r=`/v1/foundationIntegration/${this.overRideEndpoints.fetch}?IsSynced=${e}`),n=await this.PerformFetch(r)}catch(r){this.alerts.notifyError(`An error occurred attempting to fetch ${this.resourceName}`),console.error(this.errormessage(m.Fetch),r)}return n}async import(e){try{let n=`/v1/${this.resourceName}?integrationProvider=${this._foundationIntegrationProvider}`;return this.overRideEndpoints&&this.overRideEndpoints.import&&(n=`/v1/${this.overRideEndpoints.import}?integrationProvider=${this._foundationIntegrationProvider}`),await this.PerformPost(n,e,!0)}catch(n){console.error(this.errormessage(m.Create),n)}return!1}async sync(e){try{let n=`/v1/${this.resourceName}?integrationProvider=${this._foundationIntegrationProvider}`;return this.overRideEndpoints&&this.overRideEndpoints.sync&&(n=`/v1/${this.overRideEndpoints.sync}?integrationProvider=${this._foundationIntegrationProvider}`),this.overRideEndpoints.isSyncUseHttpPost?await this.PerformPost(n,e,!0):await this.PerformPut(n,e,!0)}catch(n){console.error(this.errormessage(m.Create),n)}return!1}}class t{id;name;endpointName;overRideEachEndpointName;toEncodeProperties;constructor(e){Object.assign(this,e)}}class F{fetch;import;sync;isSyncUseHttpPost=!1;constructor(e){Object.assign(this,e)}}function I(i){switch(i){case o.AccrualCode:return new t({id:"accrualCodeFsNo",name:"accrualCodeName",endpointName:"accrualcodes",toEncodeProperties:["accrualCodeName","accrualCodeShortName"]});case o.AccrualPlan:return new t({id:"displayName",name:"displayName",endpointName:"accrualplans",toEncodeProperties:["accrualPlanName"]});case o.CostCode:return new t({id:"costCodeFsNo",name:"costCodeName",endpointName:"costcodes",toEncodeProperties:["costCodeName"]});case o.Crew:return new t({id:"crewFsNo",name:"crewName",endpointName:"crews",toEncodeProperties:["crewName"]});case o.Department:return new t({id:"departmentFsNo",name:"departmentName",endpointName:"departments",toEncodeProperties:["departmentName"]});case o.EarnCode:return new t({id:"earnCodeFsNo",name:"earnCodeName",endpointName:"earncodes",toEncodeProperties:["earnCodeName","earnCodeShortName"]});case o.Employee:return new t({id:"employeeFsNo",name:"fullName",endpointName:"employees",overRideEachEndpointName:new F({fetch:"employees",import:"employee/importFSemployees",sync:"employee/importFSemployees",isSyncUseHttpPost:!0}),toEncodeProperties:[]});case o.GeneralLiabilityClass:return new t({id:"displayName",name:"displayName",endpointName:"generalliabilityclasses",toEncodeProperties:["generalLiabilityClassName"]});case o.GeneralLiabilityState:return new t({id:"generalLiabilityStateFsNo",name:"generalLiabilityStateName",endpointName:"generalliabilitystates",toEncodeProperties:["generalLiabilityStateName"]});case o.LocalTaxAuthority:return new t({id:"payrollLocalTaxCodeFsNo",name:"displayName",endpointName:"payrollLocalTaxCodes",toEncodeProperties:["payrollLocalTaxCodeName"]});case o.Minority:return new t({id:"minorityCodeFsNo",name:"minorityCodeName",endpointName:"minorityCodes",toEncodeProperties:["minorityCodeName"]});case o.MiscDeduction:return new t({id:"deductionFsNo",name:"deductionName",endpointName:"deductions",toEncodeProperties:["deductionName","customizedName"]});case o.MiscDeductionCycle:return new t({id:"miscellaneousDeductionCycleFsNo",name:"miscellaneousDeductionCycleName",endpointName:"miscellaneousDeductionCycles",toEncodeProperties:["miscellaneousDeductionCycleName"]});case o.PayPeriod:return new t({id:"payPeriodFsNo",name:"payPeriodName",endpointName:"payperiods",toEncodeProperties:["payPeriodName"]});case o.Shift:return new t({id:"shiftFsNo",name:"shiftName",endpointName:"shifts",toEncodeProperties:["shiftName"]});case o.TaxGroup:return new t({id:"payrollLocalTaxGroupFsNo",name:"payrollLocalTaxGroupName",endpointName:"payrolllocaltaxgroups",toEncodeProperties:["payrollLocalTaxGroupName"]});case o.TaxState:return new t({id:"payrollStateTaxCodeFsNo",name:"payrollStateTaxCodeName",endpointName:"payrollstatetaxcodes",toEncodeProperties:["payrollStateTaxCodeName"]});case o.Trade:return new t({id:"tradeFsNo",name:"tradeName",endpointName:"trades",toEncodeProperties:["tradeName"]});case o.Union:return new t({id:"unionFsNo",name:"unionName",endpointName:"unions",toEncodeProperties:["unionName"]});case o.WorkersCompClass:return new t({id:"workersCompClassFsNo",name:"displayName",endpointName:"workersCompClasses",toEncodeProperties:["workersCompClassName"]});case o.WorkersCompState:return new t({id:"workersCompStateFsNo",name:"workersCompStateName",endpointName:"workersCompStates",toEncodeProperties:["workersCompStateName"]})}}function L(i){const e=I(i),n=[w,g],r=new S(n,e?.endpointName,e?.overRideEachEndpointName),d=`foundationIntegration${i}`;return C(d,()=>{async function N(a){return await r.fetch(a)}async function y(a){return p(a),await r.import(a)}async function h(a){return p(a),await r.sync(a)}function p(a){a.forEach(s=>{if(delete s.key,delete s.name,delete s.isDeleted,delete s.isSelected,e.toEncodeProperties!=null&&e.toEncodeProperties.length>0)for(let c=0;c<e.toEncodeProperties.length;c++){const l=e.toEncodeProperties[c],u=s[l];u&&(s[l]=v(u))}})}return{propKey:e,getData:N,importData:y,syncData:h}})}export{L as u};
