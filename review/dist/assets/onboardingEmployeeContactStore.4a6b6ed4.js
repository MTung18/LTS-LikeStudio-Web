import{J as u,K as m,L as h,N as f,R as D,j as r,d2 as d}from"./index.611fe570.js";class N extends h{constructor(t){const e=`${f().ClientSide.WorkforceManagement}/v1`;super(t,e)}async getEmployeeContacts(t){let e;try{const a=await this.axiosInstance.get(`Employee/${t}/contact`);a&&a.data&&a.data.length>0&&a.status===200&&(a.data.map(o=>{o.contactPerson=`${o.prefix??""} ${o.firstName} ${o.middleName??""} ${o.lastName} ${o.suffix??""}`}),e=a.data)}catch(a){console.error("An unexpected error occurred attempting to retrieve the Employees Contact list.",a)}return e}async addEmployeeContact(t){try{return await this.axiosInstance.post("/Employee/contact",t),{success:!0,apiMessage:"Employee contact added."}}catch(e){console.error("An unexpected error occurred attempting to retrieve the Employees Contact list.",e)}}async deleteEmployeeContact(t){try{return await this.axiosInstance.delete(`/Employee/contact/${t}`),{success:!0,apiMessage:"Employee contact deleted."}}catch(e){console.error("Delete error.",e)}}async updateEmployeeContactDetail(t){try{return await this.axiosInstance.put("/Employee/contact",t),{success:!0,apiMessage:"Employee contact updated."}}catch(e){console.error("An unexpected error occurred attempting to retrieve the Employees Contact list.",e)}}async fetchEmployeeContactDetail(t,e){let a;try{const o=await this.axiosInstance.get(`/Employee/${t}/contact/${e}`);if(o&&o.data&&o.status===200)a=o.data;else throw new Error("Failed to get employee contact detail")}catch(o){console.error("An unexpected error occurred attempting to retrieve the Employees Contact list.",o)}return a}async fetchEmployeeContactSsn(t){let e;try{const a=await this.axiosInstance.get(`/Employee/contact/${t}/ssn`);if(a&&a.status===200)e=a.data;else throw new Error("Failed to retrieve employee SSN")}catch(a){console.error("Error retrieving employee SSN.",a)}return e}}const s=new N([u,m]);class P extends h{constructor(t){const e=`${f().ClientSide.WorkforceEmployeeManagement}/api/v1`;super(t,e)}async fetchRelationshipList(){let t;try{const e=await this.axiosInstance.get("/employeeContact/relationshipType");if(e&&e.data&&e.status===200)t=e.data;else throw new Error("Failed to get relationship list")}catch(e){console.error("An unexpected error occurred attempting to retrieve the Relationship list.",e)}return t}async fetchPrefixList(){let t;try{const e=await this.axiosInstance.get("/employeeContact/namePrefix");if(e&&e.data&&e.status===200)t=e.data;else throw new Error("Failed to get Prefix list")}catch(e){console.error("An unexpected error occurred attempting to retrieve the Prefix list.",e)}return t}async fetchGenderList(){let t;try{const e=await this.axiosInstance.get("/employeeContact/gender");if(e&&e.data&&e.status===200)t=e.data;else throw new Error("Failed to get Gender list")}catch(e){console.error("An unexpected error occurred attempting to retrieve the Gender list.",e)}return t}}const i=new P([u,m]),G=D("onboardingEmployeeContact",()=>{const c=r(new Array),t=r({}),e=r(),a=r(),o=r(new Array),l=r(new Array),p=r(new Array),y=r("");async function E(n){c.value=await s.getEmployeeContacts(n)}async function C(n){e.value=await d.getEmployeeStatusId(n)}async function g(n){a.value=await d.getEmployeeSubmitStatusId(n)}async function w(n,b){t.value=await s.fetchEmployeeContactDetail(n,b)}async function x(n){await s.deleteEmployeeContact(n)}async function S(n){await s.updateEmployeeContactDetail(n)}async function v(n){await s.addEmployeeContact(n)}async function L(){o.value=await i.fetchRelationshipList(),o.value=o.value.map(n=>({id:n.id,name:n.relationshipTypeName}))}async function A(){l.value=await i.fetchPrefixList()}async function I(){p.value=await i.fetchGenderList()}async function $(n){y.value=await s.fetchEmployeeContactSsn(n)}return{fetchEmployeeContactList:E,employeeContactList:c,fetchEmployeeContactDetail:w,employeeContactDetail:t,deleteEmployeeContactById:x,updateEmployeeContactDetail:S,addEmployeeContact:v,fetchRelationshipList:L,relationshipOfEmployeeContact:o,fetchPrefixList:A,prefixOfEmployeeContact:l,fetchGenderList:I,genderListOfEmployeeContact:p,fetchEmployeeStatusId:C,employeeStatusId:e,fetchEmployeeSubmitStatusId:g,employeeSubmitStatusId:a,employeeContactSSNById:y,fetchEmployeeContactSsnById:$}});export{G as u};
